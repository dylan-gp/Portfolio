!function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s="sjB+")}({"/OLF":function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."),t.name="Invariant Violation",t.framesToPop=1,t}function i(e,t){return(e&t)===t}function a(e,t){if(Pn.hasOwnProperty(e)||2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1]))return!1;if(null===t)return!0;switch(typeof t){case"boolean":return Pn.hasOwnProperty(e)?e=!0:(t=o(e))?e=t.hasBooleanValue||t.hasStringBooleanValue||t.hasOverloadedBooleanValue:(e=e.toLowerCase().slice(0,5),e="data-"===e||"aria-"===e),e;case"undefined":case"number":case"string":case"object":return!0;default:return!1}}function o(e){return Rn.hasOwnProperty(e)?Rn[e]:null}function s(e){return e[1].toUpperCase()}function l(e,t,n,r,i,a,o,s,l){Vn._hasCaughtError=!1,Vn._caughtError=null;var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){Vn._caughtError=e,Vn._hasCaughtError=!0}}function c(){if(Vn._hasRethrowError){var e=Vn._rethrowError;throw Vn._rethrowError=null,Vn._hasRethrowError=!1,e}}function u(){if(Wn)for(var e in Xn){var t=Xn[e],n=Wn.indexOf(e);if(-1<n||r("96",e),!qn[n]){t.extractEvents||r("97",e),qn[n]=t,n=t.eventTypes;for(var i in n){var a=void 0,o=n[i],s=t,l=i;Yn.hasOwnProperty(l)&&r("99",l),Yn[l]=o;var c=o.phasedRegistrationNames;if(c){for(a in c)c.hasOwnProperty(a)&&h(c[a],s,l);a=!0}else o.registrationName?(h(o.registrationName,s,l),a=!0):a=!1;a||r("98",i,e)}}}}function h(e,t,n){Zn[e]&&r("100",e),Zn[e]=t,Kn[e]=t.eventTypes[n].dependencies}function p(e){Wn&&r("101"),Wn=Array.prototype.slice.call(e),u()}function d(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var i=e[t];Xn.hasOwnProperty(t)&&Xn[t]===i||(Xn[t]&&r("102",t),Xn[t]=i,n=!0)}n&&u()}function f(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=er(r),Vn.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function m(e,t){return null==t&&r("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function v(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}function g(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var i=0;i<n.length&&!e.isPropagationStopped();i++)f(e,t,n[i],r[i]);else n&&f(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function y(e){return g(e,!0)}function b(e){return g(e,!1)}function x(e,t){var n=e.stateNode;if(!n)return null;var i=Qn(n);if(!i)return null;n=i[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(i=!i.disabled)||(e=e.type,i=!("button"===e||"input"===e||"select"===e||"textarea"===e)),e=!i;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&r("231",t,typeof n),n)}function w(e,t,n,r){for(var i,a=0;a<qn.length;a++){var o=qn[a];o&&(o=o.extractEvents(e,t,n,r))&&(i=m(i,o))}return i}function _(e){e&&(tr=m(tr,e))}function E(e){var t=tr;tr=null,t&&(e?v(t,y):v(t,b),tr&&r("95"),Vn.rethrowCaughtError())}function M(e){if(e[ar])return e[ar];for(var t=[];!e[ar];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}var n=void 0,r=e[ar];if(5===r.tag||6===r.tag)return r;for(;e&&(r=e[ar]);e=t.pop())n=r;return n}function T(e){if(5===e.tag||6===e.tag)return e.stateNode;r("33")}function S(e){return e[or]||null}function A(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function C(e,t,n){for(var r=[];e;)r.push(e),e=A(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function P(e,t,n){(t=x(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=m(n._dispatchListeners,t),n._dispatchInstances=m(n._dispatchInstances,e))}function L(e){e&&e.dispatchConfig.phasedRegistrationNames&&C(e._targetInst,P,e)}function R(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;t=t?A(t):null,C(t,P,e)}}function O(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=x(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=m(n._dispatchListeners,t),n._dispatchInstances=m(n._dispatchInstances,e))}function I(e){e&&e.dispatchConfig.registrationName&&O(e._targetInst,null,e)}function N(e){v(e,L)}function k(e,t,n,r){if(n&&r)e:{for(var i=n,a=r,o=0,s=i;s;s=A(s))o++;s=0;for(var l=a;l;l=A(l))s++;for(;0<o-s;)i=A(i),o--;for(;0<s-o;)a=A(a),s--;for(;o--;){if(i===a||i===a.alternate)break e;i=A(i),a=A(a)}i=null}else i=null;for(a=i,i=[];n&&n!==a&&(null===(o=n.alternate)||o!==a);)i.push(n),n=A(n);for(n=[];r&&r!==a&&(null===(o=r.alternate)||o!==a);)n.push(r),r=A(r);for(r=0;r<i.length;r++)O(i[r],"bubbled",e);for(e=n.length;0<e--;)O(n[e],"captured",t)}function D(){return!cr&&xn.canUseDOM&&(cr="textContent"in document.documentElement?"textContent":"innerText"),cr}function U(){if(ur._fallbackText)return ur._fallbackText;var e,t,n=ur._startText,r=n.length,i=F(),a=i.length;for(e=0;e<r&&n[e]===i[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===i[a-t];t++);return ur._fallbackText=i.slice(e,1<t?1-t:void 0),ur._fallbackText}function F(){return"value"in ur._root?ur._root.value:ur._root[D()]}function z(e,t,n,r){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface;for(var i in e)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?_n.thatReturnsTrue:_n.thatReturnsFalse,this.isPropagationStopped=_n.thatReturnsFalse,this}function B(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function j(e){e instanceof this||r("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function G(e){e.eventPool=[],e.getPooled=B,e.release=j}function H(e,t,n,r){return z.call(this,e,t,n,r)}function V(e,t,n,r){return z.call(this,e,t,n,r)}function W(e,t){switch(e){case"topKeyUp":return-1!==dr.indexOf(t.keyCode);case"topKeyDown":return 229!==t.keyCode;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function X(e){return e=e.detail,"object"==typeof e&&"data"in e?e.data:null}function q(e,t){switch(e){case"topCompositionEnd":return X(t);case"topKeyPress":return 32!==t.which?null:(Er=!0,wr);case"topTextInput":return e=t.data,e===wr&&Er?null:e;default:return null}}function Y(e,t){if(Mr)return"topCompositionEnd"===e||!fr&&W(e,t)?(e=U(),ur._root=null,ur._startText=null,ur._fallbackText=null,Mr=!1,e):null;switch(e){case"topPaste":return null;case"topKeyPress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"topCompositionEnd":return xr?null:t.data;default:return null}}function Z(e){if(e=$n(e)){Sr&&"function"==typeof Sr.restoreControlledState||r("194");var t=Qn(e.stateNode);Sr.restoreControlledState(e.stateNode,e.type,t)}}function K(e){Ar?Cr?Cr.push(e):Cr=[e]:Ar=e}function J(){if(Ar){var e=Ar,t=Cr;if(Cr=Ar=null,Z(e),t)for(e=0;e<t.length;e++)Z(t[e])}}function Q(e,t){return e(t)}function $(e,t){if(Rr)return Q(e,t);Rr=!0;try{return Q(e,t)}finally{Rr=!1,J()}}function ee(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Or[e.type]:"textarea"===t}function te(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ne(e,t){if(!xn.canUseDOM||t&&!("addEventListener"in document))return!1;t="on"+e;var n=t in document;return n||(n=document.createElement("div"),n.setAttribute(t,"return;"),n="function"==typeof n[t]),!n&&yr&&"wheel"===e&&(n=document.implementation.hasFeature("Events.wheel","3.0")),n}function re(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function ie(e){var t=re(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"function"==typeof n.get&&"function"==typeof n.set)return Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:!0,get:function(){return n.get.call(this)},set:function(e){r=""+e,n.set.call(this,e)}}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}function ae(e){e._valueTracker||(e._valueTracker=ie(e))}function oe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=re(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function se(e,t,n){return e=z.getPooled(Ir.change,e,t,n),e.type="change",K(n),N(e),e}function le(e){_(e),E(!1)}function ce(e){if(oe(T(e)))return e}function ue(e,t){if("topChange"===e)return t}function he(){Nr&&(Nr.detachEvent("onpropertychange",pe),kr=Nr=null)}function pe(e){"value"===e.propertyName&&ce(kr)&&(e=se(kr,e,te(e)),$(le,e))}function de(e,t,n){"topFocus"===e?(he(),Nr=t,kr=n,Nr.attachEvent("onpropertychange",pe)):"topBlur"===e&&he()}function fe(e){if("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)return ce(kr)}function me(e,t){if("topClick"===e)return ce(t)}function ve(e,t){if("topInput"===e||"topChange"===e)return ce(t)}function ge(e,t,n,r){return z.call(this,e,t,n,r)}function ye(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Fr[e])&&!!t[e]}function be(){return ye}function xe(e,t,n,r){return z.call(this,e,t,n,r)}function we(e){return e=e.type,"string"==typeof e?e:"function"==typeof e?e.displayName||e.name:null}function _e(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(t=t.return,0!=(2&t.effectTag))return 1}return 3===t.tag?2:3}function Ee(e){return!!(e=e._reactInternalFiber)&&2===_e(e)}function Me(e){2!==_e(e)&&r("188")}function Te(e){var t=e.alternate;if(!t)return t=_e(e),3===t&&r("188"),1===t?null:e;for(var n=e,i=t;;){var a=n.return,o=a?a.alternate:null;if(!a||!o)break;if(a.child===o.child){for(var s=a.child;s;){if(s===n)return Me(a),e;if(s===i)return Me(a),t;s=s.sibling}r("188")}if(n.return!==i.return)n=a,i=o;else{s=!1;for(var l=a.child;l;){if(l===n){s=!0,n=a,i=o;break}if(l===i){s=!0,i=a,n=o;break}l=l.sibling}if(!s){for(l=o.child;l;){if(l===n){s=!0,n=o,i=a;break}if(l===i){s=!0,i=o,n=a;break}l=l.sibling}s||r("189")}}n.alternate!==i&&r("190")}return 3!==n.tag&&r("188"),n.stateNode.current===n?e:t}function Se(e){if(!(e=Te(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ae(e){if(!(e=Te(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child&&4!==t.tag)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ce(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=M(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],Vr(e.topLevelType,t,e.nativeEvent,te(e.nativeEvent))}function Pe(e){Hr=!!e}function Le(e,t,n){return n?En.listen(n,t,Oe.bind(null,e)):null}function Re(e,t,n){return n?En.capture(n,t,Oe.bind(null,e)):null}function Oe(e,t){if(Hr){var n=te(t);if(n=M(n),null===n||"number"!=typeof n.tag||2===_e(n)||(n=null),Gr.length){var r=Gr.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{$(Ce,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Gr.length&&Gr.push(e)}}}function Ie(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}function Ne(e){if(qr[e])return qr[e];if(!Xr[e])return e;var t,n=Xr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Yr)return qr[e]=n[t];return""}function ke(e){return Object.prototype.hasOwnProperty.call(e,Qr)||(e[Qr]=Jr++,Kr[e[Qr]]={}),Kr[e[Qr]]}function De(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Ue(e,t){var n=De(e);e=0;for(var r;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=De(n)}}function Fe(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}function ze(e,t){if(ii||null==ti||ti!==Mn())return null;var n=ti;return"selectionStart"in n&&Fe(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?(n=window.getSelection(),n={anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}):n=void 0,ri&&Tn(ri,n)?null:(ri=n,e=z.getPooled(ei.select,ni,e,t),e.type="select",e.target=ti,N(e),e)}function Be(e,t,n,r){return z.call(this,e,t,n,r)}function je(e,t,n,r){return z.call(this,e,t,n,r)}function Ge(e,t,n,r){return z.call(this,e,t,n,r)}function He(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,32<=e||13===e?e:0}function Ve(e,t,n,r){return z.call(this,e,t,n,r)}function We(e,t,n,r){return z.call(this,e,t,n,r)}function Xe(e,t,n,r){return z.call(this,e,t,n,r)}function qe(e,t,n,r){return z.call(this,e,t,n,r)}function Ye(e,t,n,r){return z.call(this,e,t,n,r)}function Ze(e){0>pi||(e.current=hi[pi],hi[pi]=null,pi--)}function Ke(e,t){pi++,hi[pi]=e.current,e.current=t}function Je(e){return $e(e)?mi:di.current}function Qe(e,t){var n=e.type.contextTypes;if(!n)return Cn;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,a={};for(i in n)a[i]=t[i];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function $e(e){return 2===e.tag&&null!=e.type.childContextTypes}function et(e){$e(e)&&(Ze(fi,e),Ze(di,e))}function tt(e,t,n){null!=di.cursor&&r("168"),Ke(di,t,e),Ke(fi,n,e)}function nt(e,t){var n=e.stateNode,i=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;n=n.getChildContext();for(var a in n)a in i||r("108",we(e)||"Unknown",a);return wn({},t,n)}function rt(e){if(!$e(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Cn,mi=di.current,Ke(di,t,e),Ke(fi,fi.current,e),!0}function it(e,t){var n=e.stateNode;if(n||r("169"),t){var i=nt(e,mi);n.__reactInternalMemoizedMergedChildContext=i,Ze(fi,e),Ze(di,e),Ke(di,i,e)}else Ze(fi,e);Ke(fi,t,e)}function at(e,t,n){this.tag=e,this.key=t,this.stateNode=this.type=null,this.sibling=this.child=this.return=null,this.index=0,this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null,this.internalContextTag=n,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function ot(e,t,n){var r=e.alternate;return null===r?(r=new at(e.tag,e.key,e.internalContextTag),r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.pendingProps=t,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function st(e,t,n){var i=void 0,a=e.type,o=e.key;return"function"==typeof a?(i=a.prototype&&a.prototype.isReactComponent?new at(2,o,t):new at(0,o,t),i.type=a,i.pendingProps=e.props):"string"==typeof a?(i=new at(5,o,t),i.type=a,i.pendingProps=e.props):"object"==typeof a&&null!==a&&"number"==typeof a.tag?(i=a,i.pendingProps=e.props):r("130",null==a?a:typeof a,""),i.expirationTime=n,i}function lt(e,t,n,r){return t=new at(10,r,t),t.pendingProps=e,t.expirationTime=n,t}function ct(e,t,n){return t=new at(6,null,t),t.pendingProps=e,t.expirationTime=n,t}function ut(e,t,n){return t=new at(7,e.key,t),t.type=e.handler,t.pendingProps=e,t.expirationTime=n,t}function ht(e,t,n){return e=new at(9,null,t),e.expirationTime=n,e}function pt(e,t,n){return t=new at(4,e.key,t),t.pendingProps=e.children||[],t.expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function dt(e){return function(t){try{return e(t)}catch(e){}}}function ft(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);vi=dt(function(e){return t.onCommitFiberRoot(n,e)}),gi=dt(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}function mt(e){"function"==typeof vi&&vi(e)}function vt(e){"function"==typeof gi&&gi(e)}function gt(e){return{baseState:e,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function yt(e,t){null===e.last?e.first=e.last=t:(e.last.next=t,e.last=t),(0===e.expirationTime||e.expirationTime>t.expirationTime)&&(e.expirationTime=t.expirationTime)}function bt(e,t){var n=e.alternate,r=e.updateQueue;null===r&&(r=e.updateQueue=gt(null)),null!==n?null===(e=n.updateQueue)&&(e=n.updateQueue=gt(null)):e=null,e=e!==r?e:null,null===e?yt(r,t):null===r.last||null===e.last?(yt(r,t),yt(e,t)):(yt(r,t),e.last=t)}function xt(e,t,n,r){return e=e.partialState,"function"==typeof e?e.call(t,n,r):e}function wt(e,t,n,r,i,a){null!==e&&e.updateQueue===n&&(n=t.updateQueue={baseState:n.baseState,expirationTime:n.expirationTime,first:n.first,last:n.last,isInitialized:n.isInitialized,callbackList:null,hasForceUpdate:!1}),n.expirationTime=0,n.isInitialized?e=n.baseState:(e=n.baseState=t.memoizedState,n.isInitialized=!0);for(var o=!0,s=n.first,l=!1;null!==s;){var c=s.expirationTime;if(c>a){var u=n.expirationTime;(0===u||u>c)&&(n.expirationTime=c),l||(l=!0,n.baseState=e)}else l||(n.first=s.next,null===n.first&&(n.last=null)),s.isReplace?(e=xt(s,r,e,i),o=!0):(c=xt(s,r,e,i))&&(e=o?wn({},e,c):wn(e,c),o=!1),s.isForced&&(n.hasForceUpdate=!0),null!==s.callback&&(c=n.callbackList,null===c&&(c=n.callbackList=[]),c.push(s));s=s.next}return null!==n.callbackList?t.effectTag|=32:null!==n.first||n.hasForceUpdate||(t.updateQueue=null),l||(n.baseState=e),e}function _t(e,t){var n=e.callbackList;if(null!==n)for(e.callbackList=null,e=0;e<n.length;e++){var i=n[e],a=i.callback;i.callback=null,"function"!=typeof a&&r("191",a),a.call(t)}}function Et(e,t,n,i){function a(e,t){t.updater=o,e.stateNode=t,t._reactInternalFiber=e}var o={isMounted:Ee,enqueueSetState:function(n,r,i){n=n._reactInternalFiber,i=void 0===i?null:i;var a=t(n);bt(n,{expirationTime:a,partialState:r,callback:i,isReplace:!1,isForced:!1,nextCallback:null,next:null}),e(n,a)},enqueueReplaceState:function(n,r,i){n=n._reactInternalFiber,i=void 0===i?null:i;var a=t(n);bt(n,{expirationTime:a,partialState:r,callback:i,isReplace:!0,isForced:!1,nextCallback:null,next:null}),e(n,a)},enqueueForceUpdate:function(n,r){n=n._reactInternalFiber,r=void 0===r?null:r;var i=t(n);bt(n,{expirationTime:i,partialState:null,callback:r,isReplace:!1,isForced:!0,nextCallback:null,next:null}),e(n,i)}};return{adoptClassInstance:a,constructClassInstance:function(e,t){var n=e.type,r=Je(e),i=2===e.tag&&null!=e.type.contextTypes,o=i?Qe(e,r):Cn;return t=new n(t,o),a(e,t),i&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=o),t},mountClassInstance:function(e,t){var n=e.alternate,i=e.stateNode,a=i.state||null,s=e.pendingProps;s||r("158");var l=Je(e);i.props=s,i.state=e.memoizedState=a,i.refs=Cn,i.context=Qe(e,l),null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent&&(e.internalContextTag|=1),"function"==typeof i.componentWillMount&&(a=i.state,i.componentWillMount(),a!==i.state&&o.enqueueReplaceState(i,i.state,null),null!==(a=e.updateQueue)&&(i.state=wt(n,e,a,i,s,t))),"function"==typeof i.componentDidMount&&(e.effectTag|=4)},updateClassInstance:function(e,t,a){var s=t.stateNode;s.props=t.memoizedProps,s.state=t.memoizedState;var l=t.memoizedProps,c=t.pendingProps;c||null==(c=l)&&r("159");var u=s.context,h=Je(t);if(h=Qe(t,h),"function"!=typeof s.componentWillReceiveProps||l===c&&u===h||(u=s.state,s.componentWillReceiveProps(c,h),s.state!==u&&o.enqueueReplaceState(s,s.state,null)),u=t.memoizedState,a=null!==t.updateQueue?wt(e,t,t.updateQueue,s,c,a):u,!(l!==c||u!==a||fi.current||null!==t.updateQueue&&t.updateQueue.hasForceUpdate))return"function"!=typeof s.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),!1;var p=c;if(null===l||null!==t.updateQueue&&t.updateQueue.hasForceUpdate)p=!0;else{var d=t.stateNode,f=t.type;p="function"==typeof d.shouldComponentUpdate?d.shouldComponentUpdate(p,a,h):!f.prototype||!f.prototype.isPureReactComponent||(!Tn(l,p)||!Tn(u,a))}return p?("function"==typeof s.componentWillUpdate&&s.componentWillUpdate(c,a,h),"function"==typeof s.componentDidUpdate&&(t.effectTag|=4)):("function"!=typeof s.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),n(t,c),i(t,a)),s.props=c,s.state=a,s.context=h,p}}}function Mt(e){return null===e||void 0===e?null:(e=Mi&&e[Mi]||e["@@iterator"],"function"==typeof e?e:null)}function Tt(e,t){var n=t.ref;if(null!==n&&"function"!=typeof n){if(t._owner){t=t._owner;var i=void 0;t&&(2!==t.tag&&r("110"),i=t.stateNode),i||r("147",n);var a=""+n;return null!==e&&null!==e.ref&&e.ref._stringRef===a?e.ref:(e=function(e){var t=i.refs===Cn?i.refs={}:i.refs;null===e?delete t[a]:t[a]=e},e._stringRef=a,e)}"string"!=typeof n&&r("148"),t._owner||r("149",n)}return n}function St(e,t){"textarea"!==e.type&&r("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function At(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t,n){return e=ot(e,t,n),e.index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index,r<n?(t.effectTag=2,n):r):(t.effectTag=2,n):n}function s(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?(t=ct(n,e.internalContextTag,r),t.return=e,t):(t=a(t,n,r),t.return=e,t)}function c(e,t,n,r){return null!==t&&t.type===n.type?(r=a(t,n.props,r),r.ref=Tt(t,n),r.return=e,r):(r=st(n,e.internalContextTag,r),r.ref=Tt(t,n),r.return=e,r)}function u(e,t,n,r){return null===t||7!==t.tag?(t=ut(n,e.internalContextTag,r),t.return=e,t):(t=a(t,n,r),t.return=e,t)}function h(e,t,n,r){return null===t||9!==t.tag?(t=ht(n,e.internalContextTag,r),t.type=n.value,t.return=e,t):(t=a(t,null,r),t.type=n.value,t.return=e,t)}function p(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?(t=pt(n,e.internalContextTag,r),t.return=e,t):(t=a(t,n.children||[],r),t.return=e,t)}function d(e,t,n,r,i){return null===t||10!==t.tag?(t=lt(n,e.internalContextTag,r,i),t.return=e,t):(t=a(t,n,r),t.return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return t=ct(""+t,e.internalContextTag,n),t.return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case bi:return t.type===Ei?(t=lt(t.props.children,e.internalContextTag,n,t.key),t.return=e,t):(n=st(t,e.internalContextTag,n),n.ref=Tt(null,t),n.return=e,n);case xi:return t=ut(t,e.internalContextTag,n),t.return=e,t;case wi:return n=ht(t,e.internalContextTag,n),n.type=t.value,n.return=e,n;case _i:return t=pt(t,e.internalContextTag,n),t.return=e,t}if(Ti(t)||Mt(t))return t=lt(t,e.internalContextTag,n,null),t.return=e,t;St(e,t)}return null}function m(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case bi:return n.key===i?n.type===Ei?d(e,t,n.props.children,r,i):c(e,t,n,r):null;case xi:return n.key===i?u(e,t,n,r):null;case wi:return null===i?h(e,t,n,r):null;case _i:return n.key===i?p(e,t,n,r):null}if(Ti(n)||Mt(n))return null!==i?null:d(e,t,n,r,null);St(e,n)}return null}function v(e,t,n,r,i){if("string"==typeof r||"number"==typeof r)return e=e.get(n)||null,l(t,e,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case bi:return e=e.get(null===r.key?n:r.key)||null,r.type===Ei?d(t,e,r.props.children,i,r.key):c(t,e,r,i);case xi:return e=e.get(null===r.key?n:r.key)||null,u(t,e,r,i);case wi:return e=e.get(n)||null,h(t,e,r,i);case _i:return e=e.get(null===r.key?n:r.key)||null,p(t,e,r,i)}if(Ti(r)||Mt(r))return e=e.get(n)||null,d(t,e,r,i,null);St(t,r)}return null}function g(r,a,s,l){for(var c=null,u=null,h=a,p=a=0,d=null;null!==h&&p<s.length;p++){h.index>p?(d=h,h=null):d=h.sibling;var g=m(r,h,s[p],l);if(null===g){null===h&&(h=d);break}e&&h&&null===g.alternate&&t(r,h),a=o(g,a,p),null===u?c=g:u.sibling=g,u=g,h=d}if(p===s.length)return n(r,h),c;if(null===h){for(;p<s.length;p++)(h=f(r,s[p],l))&&(a=o(h,a,p),null===u?c=h:u.sibling=h,u=h);return c}for(h=i(r,h);p<s.length;p++)(d=v(h,r,p,s[p],l))&&(e&&null!==d.alternate&&h.delete(null===d.key?p:d.key),a=o(d,a,p),null===u?c=d:u.sibling=d,u=d);return e&&h.forEach(function(e){return t(r,e)}),c}function y(a,s,l,c){var u=Mt(l);"function"!=typeof u&&r("150"),null==(l=u.call(l))&&r("151");for(var h=u=null,p=s,d=s=0,g=null,y=l.next();null!==p&&!y.done;d++,y=l.next()){p.index>d?(g=p,p=null):g=p.sibling;var b=m(a,p,y.value,c);if(null===b){p||(p=g);break}e&&p&&null===b.alternate&&t(a,p),s=o(b,s,d),null===h?u=b:h.sibling=b,h=b,p=g}if(y.done)return n(a,p),u;if(null===p){for(;!y.done;d++,y=l.next())null!==(y=f(a,y.value,c))&&(s=o(y,s,d),null===h?u=y:h.sibling=y,h=y);return u}for(p=i(a,p);!y.done;d++,y=l.next())null!==(y=v(p,a,d,y.value,c))&&(e&&null!==y.alternate&&p.delete(null===y.key?d:y.key),s=o(y,s,d),null===h?u=y:h.sibling=y,h=y);return e&&p.forEach(function(e){return t(a,e)}),u}return function(e,i,o,l){"object"==typeof o&&null!==o&&o.type===Ei&&null===o.key&&(o=o.props.children);var c="object"==typeof o&&null!==o;if(c)switch(o.$$typeof){case bi:e:{var u=o.key;for(c=i;null!==c;){if(c.key===u){if(10===c.tag?o.type===Ei:c.type===o.type){n(e,c.sibling),i=a(c,o.type===Ei?o.props.children:o.props,l),i.ref=Tt(c,o),i.return=e,e=i;break e}n(e,c);break}t(e,c),c=c.sibling}o.type===Ei?(i=lt(o.props.children,e.internalContextTag,l,o.key),i.return=e,e=i):(l=st(o,e.internalContextTag,l),l.ref=Tt(i,o),l.return=e,e=l)}return s(e);case xi:e:{for(c=o.key;null!==i;){if(i.key===c){if(7===i.tag){n(e,i.sibling),i=a(i,o,l),i.return=e,e=i;break e}n(e,i);break}t(e,i),i=i.sibling}i=ut(o,e.internalContextTag,l),i.return=e,e=i}return s(e);case wi:e:{if(null!==i){if(9===i.tag){n(e,i.sibling),i=a(i,null,l),i.type=o.value,i.return=e,e=i;break e}n(e,i)}i=ht(o,e.internalContextTag,l),i.type=o.value,i.return=e,e=i}return s(e);case _i:e:{for(c=o.key;null!==i;){if(i.key===c){if(4===i.tag&&i.stateNode.containerInfo===o.containerInfo&&i.stateNode.implementation===o.implementation){n(e,i.sibling),i=a(i,o.children||[],l),i.return=e,e=i;break e}n(e,i);break}t(e,i),i=i.sibling}i=pt(o,e.internalContextTag,l),i.return=e,e=i}return s(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==i&&6===i.tag?(n(e,i.sibling),i=a(i,o,l)):(n(e,i),i=ct(o,e.internalContextTag,l)),i.return=e,e=i,s(e);if(Ti(o))return g(e,i,o,l);if(Mt(o))return y(e,i,o,l);if(c&&St(e,o),void 0===o)switch(e.tag){case 2:case 1:l=e.type,r("152",l.displayName||l.name||"Component")}return n(e,i)}}function Ct(e,t,n,i,a){function o(e,t,n){var r=t.expirationTime;t.child=null===e?Ai(t,null,n,r):Si(t,e.child,n,r)}function s(e,t){var n=t.ref;null===n||e&&e.ref===n||(t.effectTag|=128)}function l(e,t,n,r){if(s(e,t),!n)return r&&it(t,!1),u(e,t);n=t.stateNode,jr.current=t;var i=n.render();return t.effectTag|=1,o(e,t,i),t.memoizedState=n.state,t.memoizedProps=n.props,r&&it(t,!0),t.child}function c(e){var t=e.stateNode;t.pendingContext?tt(e,t.pendingContext,t.pendingContext!==t.context):t.context&&tt(e,t.context,!1),v(e,t.containerInfo)}function u(e,t){if(null!==e&&t.child!==e.child&&r("153"),null!==t.child){e=t.child;var n=ot(e,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,n=n.sibling=ot(e,e.pendingProps,e.expirationTime),n.return=t;n.sibling=null}return t.child}function h(e,t){switch(t.tag){case 3:c(t);break;case 2:rt(t);break;case 4:v(t,t.stateNode.containerInfo)}return null}var p=e.shouldSetTextContent,d=e.useSyncScheduling,f=e.shouldDeprioritizeSubtree,m=t.pushHostContext,v=t.pushHostContainer,g=n.enterHydrationState,y=n.resetHydrationState,b=n.tryToClaimNextHydratableInstance;e=Et(i,a,function(e,t){e.memoizedProps=t},function(e,t){e.memoizedState=t});var x=e.adoptClassInstance,w=e.constructClassInstance,_=e.mountClassInstance,E=e.updateClassInstance;return{beginWork:function(e,t,n){if(0===t.expirationTime||t.expirationTime>n)return h(e,t);switch(t.tag){case 0:null!==e&&r("155");var i=t.type,a=t.pendingProps,M=Je(t);return M=Qe(t,M),i=i(a,M),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render?(t.tag=2,a=rt(t),x(t,i),_(t,n),t=l(e,t,!0,a)):(t.tag=1,o(e,t,i),t.memoizedProps=a,t=t.child),t;case 1:e:{if(a=t.type,n=t.pendingProps,i=t.memoizedProps,fi.current)null===n&&(n=i);else if(null===n||i===n){t=u(e,t);break e}i=Je(t),i=Qe(t,i),a=a(n,i),t.effectTag|=1,o(e,t,a),t.memoizedProps=n,t=t.child}return t;case 2:return a=rt(t),i=void 0,null===e?t.stateNode?r("153"):(w(t,t.pendingProps),_(t,n),i=!0):i=E(e,t,n),l(e,t,i,a);case 3:return c(t),a=t.updateQueue,null!==a?(i=t.memoizedState,a=wt(e,t,a,null,null,n),i===a?(y(),t=u(e,t)):(i=a.element,M=t.stateNode,(null===e||null===e.child)&&M.hydrate&&g(t)?(t.effectTag|=2,t.child=Ai(t,null,i,n)):(y(),o(e,t,i)),t.memoizedState=a,t=t.child)):(y(),t=u(e,t)),t;case 5:m(t),null===e&&b(t),a=t.type;var T=t.memoizedProps;return i=t.pendingProps,null===i&&null===(i=T)&&r("154"),M=null!==e?e.memoizedProps:null,fi.current||null!==i&&T!==i?(T=i.children,p(a,i)?T=null:M&&p(a,M)&&(t.effectTag|=16),s(e,t),2147483647!==n&&!d&&f(a,i)?(t.expirationTime=2147483647,t=null):(o(e,t,T),t.memoizedProps=i,t=t.child)):t=u(e,t),t;case 6:return null===e&&b(t),e=t.pendingProps,null===e&&(e=t.memoizedProps),t.memoizedProps=e,null;case 8:t.tag=7;case 7:return a=t.pendingProps,fi.current?null===a&&null===(a=e&&e.memoizedProps)&&r("154"):null!==a&&t.memoizedProps!==a||(a=t.memoizedProps),i=a.children,t.stateNode=null===e?Ai(t,t.stateNode,i,n):Si(t,t.stateNode,i,n),t.memoizedProps=a,t.stateNode;case 9:return null;case 4:e:{if(v(t,t.stateNode.containerInfo),a=t.pendingProps,fi.current)null===a&&null==(a=e&&e.memoizedProps)&&r("154");else if(null===a||t.memoizedProps===a){t=u(e,t);break e}null===e?t.child=Si(t,null,a,n):o(e,t,a),t.memoizedProps=a,t=t.child}return t;case 10:e:{if(n=t.pendingProps,fi.current)null===n&&(n=t.memoizedProps);else if(null===n||t.memoizedProps===n){t=u(e,t);break e}o(e,t,n),t.memoizedProps=n,t=t.child}return t;default:r("156")}},beginFailedWork:function(e,t,n){switch(t.tag){case 2:rt(t);break;case 3:c(t);break;default:r("157")}return t.effectTag|=64,null===e?t.child=null:t.child!==e.child&&(t.child=e.child),0===t.expirationTime||t.expirationTime>n?h(e,t):(t.firstEffect=null,t.lastEffect=null,t.child=null===e?Ai(t,null,null,n):Si(t,e.child,null,n),2===t.tag&&(e=t.stateNode,t.memoizedProps=e.props,t.memoizedState=e.state),t.child)}}}function Pt(e,t,n){function i(e){e.effectTag|=4}var a=e.createInstance,o=e.createTextInstance,s=e.appendInitialChild,l=e.finalizeInitialChildren,c=e.prepareUpdate,u=e.persistence,h=t.getRootHostContainer,p=t.popHostContext,d=t.getHostContext,f=t.popHostContainer,m=n.prepareToHydrateHostInstance,v=n.prepareToHydrateHostTextInstance,g=n.popHydrationState,y=void 0,b=void 0,x=void 0;return e.mutation?(y=function(){},b=function(e,t,n){(t.updateQueue=n)&&i(t)},x=function(e,t,n,r){n!==r&&i(t)}):r(u?"235":"236"),{completeWork:function(e,t,n){var u=t.pendingProps;switch(null===u?u=t.memoizedProps:2147483647===t.expirationTime&&2147483647!==n||(t.pendingProps=null),t.tag){case 1:return null;case 2:return et(t),null;case 3:return f(t),Ze(fi,t),Ze(di,t),u=t.stateNode,u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==e&&null!==e.child||(g(t),t.effectTag&=-3),y(t),null;case 5:p(t),n=h();var w=t.type;if(null!==e&&null!=t.stateNode){var _=e.memoizedProps,E=t.stateNode,M=d();E=c(E,w,_,u,n,M),b(e,t,E,w,_,u,n),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!u)return null===t.stateNode&&r("166"),null;if(e=d(),g(t))m(t,n,e)&&i(t);else{e=a(w,u,n,e,t);e:for(_=t.child;null!==_;){if(5===_.tag||6===_.tag)s(e,_.stateNode);else if(4!==_.tag&&null!==_.child){_.child.return=_,_=_.child;continue}if(_===t)break;for(;null===_.sibling;){if(null===_.return||_.return===t)break e;_=_.return}_.sibling.return=_.return,_=_.sibling}l(e,w,u,n)&&i(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)x(e,t,e.memoizedProps,u);else{if("string"!=typeof u)return null===t.stateNode&&r("166"),null;e=h(),n=d(),g(t)?v(t)&&i(t):t.stateNode=o(u,e,n,t)}return null;case 7:(u=t.memoizedProps)||r("165"),t.tag=8,w=[];e:for((_=t.stateNode)&&(_.return=t);null!==_;){if(5===_.tag||6===_.tag||4===_.tag)r("247");else if(9===_.tag)w.push(_.type);else if(null!==_.child){_.child.return=_,_=_.child;continue}for(;null===_.sibling;){if(null===_.return||_.return===t)break e;_=_.return}_.sibling.return=_.return,_=_.sibling}return _=u.handler,u=_(u.props,w),t.child=Si(t,null!==e?e.child:null,u,n),t.child;case 8:return t.tag=7,null;case 9:case 10:return null;case 4:return f(t),y(t),null;case 0:r("167");default:r("156")}}}}function Lt(e,t){function n(e){var n=e.ref;if(null!==n)try{n(null)}catch(n){t(e,n)}}function i(e){switch("function"==typeof vt&&vt(e),e.tag){case 2:n(e);var r=e.stateNode;if("function"==typeof r.componentWillUnmount)try{r.props=e.memoizedProps,r.state=e.memoizedState,r.componentWillUnmount()}catch(n){t(e,n)}break;case 5:n(e);break;case 7:a(e.stateNode);break;case 4:c&&s(e)}}function a(e){for(var t=e;;)if(i(t),null===t.child||c&&4===t.tag){if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}else t.child.return=t,t=t.child}function o(e){return 5===e.tag||3===e.tag||4===e.tag}function s(e){for(var t=e,n=!1,o=void 0,s=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&r("160"),n.tag){case 5:o=n.stateNode,s=!1;break e;case 3:case 4:o=n.stateNode.containerInfo,s=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag)a(t),s?b(o,t.stateNode):y(o,t.stateNode);else if(4===t.tag?o=t.stateNode.containerInfo:i(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return,4===t.tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}var l=e.getPublicInstance,c=e.mutation;e=e.persistence,c||r(e?"235":"236");var u=c.commitMount,h=c.commitUpdate,p=c.resetTextContent,d=c.commitTextUpdate,f=c.appendChild,m=c.appendChildToContainer,v=c.insertBefore,g=c.insertInContainerBefore,y=c.removeChild,b=c.removeChildFromContainer;return{commitResetTextContent:function(e){p(e.stateNode)},commitPlacement:function(e){e:{for(var t=e.return;null!==t;){if(o(t)){var n=t;break e}t=t.return}r("160"),n=void 0}var i=t=void 0;switch(n.tag){case 5:t=n.stateNode,i=!1;break;case 3:case 4:t=n.stateNode.containerInfo,i=!0;break;default:r("161")}16&n.effectTag&&(p(t),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||o(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var a=e;;){if(5===a.tag||6===a.tag)n?i?g(t,a.stateNode,n):v(t,a.stateNode,n):i?m(t,a.stateNode):f(t,a.stateNode);else if(4!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===e)break;for(;null===a.sibling;){if(null===a.return||a.return===e)return;a=a.return}a.sibling.return=a.return,a=a.sibling}},commitDeletion:function(e){s(e),e.return=null,e.child=null,e.alternate&&(e.alternate.child=null,e.alternate.return=null)},commitWork:function(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var i=t.memoizedProps;e=null!==e?e.memoizedProps:i;var a=t.type,o=t.updateQueue;t.updateQueue=null,null!==o&&h(n,o,a,e,i,t)}break;case 6:null===t.stateNode&&r("162"),n=t.memoizedProps,d(t.stateNode,null!==e?e.memoizedProps:n,n);break;case 3:break;default:r("163")}},commitLifeCycles:function(e,t){switch(t.tag){case 2:var n=t.stateNode;if(4&t.effectTag)if(null===e)n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidMount();else{var i=e.memoizedProps;e=e.memoizedState,n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidUpdate(i,e)}t=t.updateQueue,null!==t&&_t(t,n);break;case 3:n=t.updateQueue,null!==n&&_t(n,null!==t.child?t.child.stateNode:null);break;case 5:n=t.stateNode,null===e&&4&t.effectTag&&u(n,t.type,t.memoizedProps,t);break;case 6:case 4:break;default:r("163")}},commitAttachRef:function(e){var t=e.ref;if(null!==t){var n=e.stateNode;switch(e.tag){case 5:t(l(n));break;default:t(n)}}},commitDetachRef:function(e){null!==(e=e.ref)&&e(null)}}}function Rt(e){function t(e){return e===Ci&&r("174"),e}var n=e.getChildHostContext,i=e.getRootHostContext,a={current:Ci},o={current:Ci},s={current:Ci};return{getHostContext:function(){return t(a.current)},getRootHostContainer:function(){return t(s.current)},popHostContainer:function(e){Ze(a,e),Ze(o,e),Ze(s,e)},popHostContext:function(e){o.current===e&&(Ze(a,e),Ze(o,e))},pushHostContainer:function(e,t){Ke(s,t,e),t=i(t),Ke(o,e,e),Ke(a,t,e)},pushHostContext:function(e){var r=t(s.current),i=t(a.current);r=n(i,e.type,r),i!==r&&(Ke(o,e,e),Ke(a,r,e))},resetHostContainer:function(){a.current=Ci,s.current=Ci}}}function Ot(e){function t(e,t){var n=new at(5,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function n(e,t){switch(e.tag){case 5:return null!==(t=o(t,e.type,e.pendingProps))&&(e.stateNode=t,!0);case 6:return null!==(t=s(t,e.pendingProps))&&(e.stateNode=t,!0);default:return!1}}function i(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;p=e}var a=e.shouldSetTextContent;if(!(e=e.hydration))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){r("175")},prepareToHydrateHostTextInstance:function(){r("176")},popHydrationState:function(){return!1}};var o=e.canHydrateInstance,s=e.canHydrateTextInstance,l=e.getNextHydratableSibling,c=e.getFirstHydratableChild,u=e.hydrateInstance,h=e.hydrateTextInstance,p=null,d=null,f=!1;return{enterHydrationState:function(e){return d=c(e.stateNode.containerInfo),p=e,f=!0},resetHydrationState:function(){d=p=null,f=!1},tryToClaimNextHydratableInstance:function(e){if(f){var r=d;if(r){if(!n(e,r)){if(!(r=l(r))||!n(e,r))return e.effectTag|=2,f=!1,void(p=e);t(p,d)}p=e,d=c(r)}else e.effectTag|=2,f=!1,p=e}},prepareToHydrateHostInstance:function(e,t,n){return t=u(e.stateNode,e.type,e.memoizedProps,t,n,e),e.updateQueue=t,null!==t},prepareToHydrateHostTextInstance:function(e){return h(e.stateNode,e.memoizedProps,e)},popHydrationState:function(e){if(e!==p)return!1;if(!f)return i(e),f=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!a(n,e.memoizedProps))for(n=d;n;)t(e,n),n=l(n);return i(e),d=p?l(e.stateNode):null,!0}}}function It(e){function t(e){ae=Z=!0;var t=e.stateNode;if(t.current===e&&r("177"),t.isReadyForCommit=!1,jr.current=null,1<e.effectTag)if(null!==e.lastEffect){e.lastEffect.nextEffect=e;var n=e.firstEffect}else n=e;else n=e.firstEffect;for(V(),$=n;null!==$;){var i=!1,a=void 0;try{for(;null!==$;){var o=$.effectTag;if(16&o&&I($),128&o){var s=$.alternate;null!==s&&z(s)}switch(-242&o){case 2:N($),$.effectTag&=-3;break;case 6:N($),$.effectTag&=-3,D($.alternate,$);break;case 4:D($.alternate,$);break;case 8:oe=!0,k($),oe=!1}$=$.nextEffect}}catch(e){i=!0,a=e}i&&(null===$&&r("178"),l($,a),null!==$&&($=$.nextEffect))}for(W(),t.current=e,$=n;null!==$;){n=!1,i=void 0;try{for(;null!==$;){var c=$.effectTag;if(36&c&&U($.alternate,$),128&c&&F($),64&c)switch(a=$,o=void 0,null!==ee&&(o=ee.get(a),ee.delete(a),null==o&&null!==a.alternate&&(a=a.alternate,o=ee.get(a),ee.delete(a))),null==o&&r("184"),a.tag){case 2:a.stateNode.componentDidCatch(o.error,{componentStack:o.componentStack});break;case 3:null===re&&(re=o.error);break;default:r("157")}var u=$.nextEffect;$.nextEffect=null,$=u}}catch(e){n=!0,i=e}n&&(null===$&&r("178"),l($,i),null!==$&&($=$.nextEffect))}return Z=ae=!1,"function"==typeof mt&&mt(e.stateNode),ne&&(ne.forEach(m),ne=null),null!==re&&(e=re,re=null,E(e)),t=t.current.expirationTime,0===t&&(te=ee=null),t}function n(e){for(;;){var t=O(e.alternate,e,Q),n=e.return,r=e.sibling,i=e;if(2147483647===Q||2147483647!==i.expirationTime){if(2!==i.tag&&3!==i.tag)var a=0;else a=i.updateQueue,a=null===a?0:a.expirationTime;for(var o=i.child;null!==o;)0!==o.expirationTime&&(0===a||a>o.expirationTime)&&(a=o.expirationTime),o=o.sibling;i.expirationTime=a}if(null!==t)return t;if(null!==n&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){e.stateNode.isReadyForCommit=!0;break}e=n}return null}function i(e){var t=L(e.alternate,e,Q);return null===t&&(t=n(e)),jr.current=null,t}function a(e){var t=R(e.alternate,e,Q);return null===t&&(t=n(e)),jr.current=null,t}function o(e){if(null!==ee){if(!(0===Q||Q>e))if(Q<=q)for(;null!==K;)K=c(K)?a(K):i(K);else for(;null!==K&&!_();)K=c(K)?a(K):i(K)}else if(!(0===Q||Q>e))if(Q<=q)for(;null!==K;)K=i(K);else for(;null!==K&&!_();)K=i(K)}function s(e,t){if(Z&&r("243"),Z=!0,e.isReadyForCommit=!1,e!==J||t!==Q||null===K){for(;-1<pi;)hi[pi]=null,pi--;mi=Cn,di.current=Cn,fi.current=!1,C(),J=e,Q=t,K=ot(J.current,null,t)}var n=!1,i=null;try{o(t)}catch(e){n=!0,i=e}for(;n;){if(ie){re=i;break}var s=K;if(null===s)ie=!0;else{var c=l(s,i);if(null===c&&r("183"),!ie){try{for(n=c,i=t,c=n;null!==s;){switch(s.tag){case 2:et(s);break;case 5:A(s);break;case 3:S(s);break;case 4:S(s)}if(s===c||s.alternate===c)break;s=s.return}K=a(n),o(i)}catch(e){n=!0,i=e;continue}break}}}return t=re,ie=Z=!1,re=null,null!==t&&E(t),e.isReadyForCommit?e.current.alternate:null}function l(e,t){var n=jr.current=null,r=!1,i=!1,a=null;if(3===e.tag)n=e,u(e)&&(ie=!0);else for(var o=e.return;null!==o&&null===n;){if(2===o.tag?"function"==typeof o.stateNode.componentDidCatch&&(r=!0,a=we(o),n=o,i=!0):3===o.tag&&(n=o),u(o)){if(oe||null!==ne&&(ne.has(o)||null!==o.alternate&&ne.has(o.alternate)))return null;n=null,i=!1}o=o.return}if(null!==n){null===te&&(te=new Set),te.add(n);var s="";o=e;do{e:switch(o.tag){case 0:case 1:case 2:case 5:var l=o._debugOwner,c=o._debugSource,h=we(o),p=null;l&&(p=we(l)),l=c,h="\n    in "+(h||"Unknown")+(l?" (at "+l.fileName.replace(/^.*[\\\/]/,"")+":"+l.lineNumber+")":p?" (created by "+p+")":"");break e;default:h=""}s+=h,o=o.return}while(o);o=s,e=we(e),null===ee&&(ee=new Map),t={componentName:e,componentStack:o,error:t,errorBoundary:r?n.stateNode:null,errorBoundaryFound:r,errorBoundaryName:a,willRetry:i},ee.set(n,t);try{var d=t.error;d&&d.suppressReactErrorLogging||console.error(d)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}return ae?(null===ne&&(ne=new Set),ne.add(n)):m(n),n}return null===re&&(re=t),null}function c(e){return null!==ee&&(ee.has(e)||null!==e.alternate&&ee.has(e.alternate))}function u(e){return null!==te&&(te.has(e)||null!==e.alternate&&te.has(e.alternate))}function h(){return 20*(1+((v()+100)/20|0))}function p(e){return 0!==Y?Y:Z?ae?1:Q:!H||1&e.internalContextTag?h():1}function d(e,t){return f(e,t,!1)}function f(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!Z&&n===J&&t<Q&&(K=J=null,Q=0);var i=n,a=t;if(_e>xe&&r("185"),null===i.nextScheduledRoot)i.remainingExpirationTime=a,null===le?(se=le=i,i.nextScheduledRoot=i):(le=le.nextScheduledRoot=i,le.nextScheduledRoot=se);else{var o=i.remainingExpirationTime;(0===o||a<o)&&(i.remainingExpirationTime=a)}he||(ye?be&&(pe=i,de=1,w(pe,de)):1===a?x(1,null):g(a)),!Z&&n===J&&t<Q&&(K=J=null,Q=0)}e=e.return}}function m(e){f(e,1,!0)}function v(){return q=2+((B()-X)/10|0)}function g(e){if(0!==ce){if(e>ce)return;G(ue)}var t=B()-X;ce=e,ue=j(b,{timeout:10*(e-2)-t})}function y(){var e=0,t=null;if(null!==le)for(var n=le,i=se;null!==i;){var a=i.remainingExpirationTime;if(0===a){if((null===n||null===le)&&r("244"),i===i.nextScheduledRoot){se=le=i.nextScheduledRoot=null;break}if(i===se)se=a=i.nextScheduledRoot,le.nextScheduledRoot=a,i.nextScheduledRoot=null;else{if(i===le){le=n,le.nextScheduledRoot=se,i.nextScheduledRoot=null;break}n.nextScheduledRoot=i.nextScheduledRoot,i.nextScheduledRoot=null}i=n.nextScheduledRoot}else{if((0===e||a<e)&&(e=a,t=i),i===le)break;n=i,i=i.nextScheduledRoot}}n=pe,null!==n&&n===t?_e++:_e=0,pe=t,de=e}function b(e){x(0,e)}function x(e,t){for(ge=t,y();null!==pe&&0!==de&&(0===e||de<=e)&&!fe;)w(pe,de),y();if(null!==ge&&(ce=0,ue=-1),0!==de&&g(de),ge=null,fe=!1,_e=0,me)throw e=ve,ve=null,me=!1,e}function w(e,n){if(he&&r("245"),he=!0,n<=v()){var i=e.finishedWork;null!==i?(e.finishedWork=null,e.remainingExpirationTime=t(i)):(e.finishedWork=null,null!==(i=s(e,n))&&(e.remainingExpirationTime=t(i)))}else i=e.finishedWork,null!==i?(e.finishedWork=null,e.remainingExpirationTime=t(i)):(e.finishedWork=null,null!==(i=s(e,n))&&(_()?e.finishedWork=i:e.remainingExpirationTime=t(i)));he=!1}function _(){return!(null===ge||ge.timeRemaining()>Ee)&&(fe=!0)}function E(e){null===pe&&r("246"),pe.remainingExpirationTime=0,me||(me=!0,ve=e)}var M=Rt(e),T=Ot(e),S=M.popHostContainer,A=M.popHostContext,C=M.resetHostContainer,P=Ct(e,M,T,d,p),L=P.beginWork,R=P.beginFailedWork,O=Pt(e,M,T).completeWork;M=Lt(e,l);var I=M.commitResetTextContent,N=M.commitPlacement,k=M.commitDeletion,D=M.commitWork,U=M.commitLifeCycles,F=M.commitAttachRef,z=M.commitDetachRef,B=e.now,j=e.scheduleDeferredCallback,G=e.cancelDeferredCallback,H=e.useSyncScheduling,V=e.prepareForCommit,W=e.resetAfterCommit,X=B(),q=2,Y=0,Z=!1,K=null,J=null,Q=0,$=null,ee=null,te=null,ne=null,re=null,ie=!1,ae=!1,oe=!1,se=null,le=null,ce=0,ue=-1,he=!1,pe=null,de=0,fe=!1,me=!1,ve=null,ge=null,ye=!1,be=!1,xe=1e3,_e=0,Ee=1;return{computeAsyncExpiration:h,computeExpirationForFiber:p,scheduleWork:d,batchedUpdates:function(e,t){var n=ye;ye=!0;try{return e(t)}finally{(ye=n)||he||x(1,null)}},unbatchedUpdates:function(e){if(ye&&!be){be=!0;try{return e()}finally{be=!1}}return e()},flushSync:function(e){var t=ye;ye=!0;try{e:{var n=Y;Y=1;try{var i=e();break e}finally{Y=n}i=void 0}return i}finally{ye=t,he&&r("187"),x(1,null)}},deferredUpdates:function(e){var t=Y;Y=h();try{return e()}finally{Y=t}}}}function Nt(e){function t(e){return e=Se(e),null===e?null:e.stateNode}var n=e.getPublicInstance;e=It(e);var i=e.computeAsyncExpiration,a=e.computeExpirationForFiber,o=e.scheduleWork;return{createContainer:function(e,t){var n=new at(3,null,0);return e={current:n,containerInfo:e,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:t,nextScheduledRoot:null},n.stateNode=e},updateContainer:function(e,t,n,s){var l=t.current;if(n){n=n._reactInternalFiber;var c;e:{for(2===_e(n)&&2===n.tag||r("170"),c=n;3!==c.tag;){if($e(c)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break e}(c=c.return)||r("171")}c=c.stateNode.context}n=$e(n)?nt(n,c):c}else n=Cn;null===t.context?t.context=n:t.pendingContext=n,t=s,t=void 0===t?null:t,s=null!=e&&null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent?i():a(l),bt(l,{expirationTime:s,partialState:{element:e},callback:t,isReplace:!1,isForced:!1,nextCallback:null,next:null}),o(l,s)},batchedUpdates:e.batchedUpdates,unbatchedUpdates:e.unbatchedUpdates,deferredUpdates:e.deferredUpdates,flushSync:e.flushSync,getPublicRootInstance:function(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return n(e.child.stateNode);default:return e.child.stateNode}},findHostInstance:t,findHostInstanceWithNoPortals:function(e){return e=Ae(e),null===e?null:e.stateNode},injectIntoDevTools:function(e){var n=e.findFiberByHostInstance;return ft(wn({},e,{findHostInstanceByFiber:function(e){return t(e)},findFiberByHostInstance:function(e){return n?n(e):null}}))}}}function kt(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:_i,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Dt(e){return!!Yi.hasOwnProperty(e)||!qi.hasOwnProperty(e)&&(Xi.test(e)?Yi[e]=!0:(qi[e]=!0,!1))}function Ut(e,t,n){var r=o(t);if(r&&a(t,n)){var i=r.mutationMethod;i?i(e,n):null==n||r.hasBooleanValue&&!n||r.hasNumericValue&&isNaN(n)||r.hasPositiveNumericValue&&1>n||r.hasOverloadedBooleanValue&&!1===n?zt(e,t):r.mustUseProperty?e[r.propertyName]=n:(t=r.attributeName,(i=r.attributeNamespace)?e.setAttributeNS(i,t,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&!0===n?e.setAttribute(t,""):e.setAttribute(t,""+n))}else Ft(e,t,a(t,n)?n:null)}function Ft(e,t,n){Dt(t)&&(null==n?e.removeAttribute(t):e.setAttribute(t,""+n))}function zt(e,t){var n=o(t);n?(t=n.mutationMethod)?t(e,void 0):n.mustUseProperty?e[n.propertyName]=!n.hasBooleanValue&&"":e.removeAttribute(n.attributeName):e.removeAttribute(t)}function Bt(e,t){var n=t.value,r=t.checked;return wn({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked})}function jt(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Gt(e,t){null!=(t=t.checked)&&Ut(e,"checked",t)}function Ht(e,t){Gt(e,t);var n=t.value;null!=n?0===n&&""===e.value?e.value="0":"number"===t.type?(t=parseFloat(e.value)||0,(n!=t||n==t&&e.value!=n)&&(e.value=""+n)):e.value!==""+n&&(e.value=""+n):(null==t.value&&null!=t.defaultValue&&e.defaultValue!==""+t.defaultValue&&(e.defaultValue=""+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked))}function Vt(e,t){switch(t.type){case"submit":case"reset":break;case"color":case"date":case"datetime":case"datetime-local":case"month":case"time":case"week":e.value="",e.value=e.defaultValue;break;default:e.value=e.value}t=e.name,""!==t&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function Wt(e){var t="";return bn.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}function Xt(e,t){return e=wn({children:void 0},t),(t=Wt(t.children))&&(e.children=t),e}function qt(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function Yt(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function Zt(e,t){return null!=t.dangerouslySetInnerHTML&&r("91"),wn({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Kt(e,t){var n=t.value;null==n&&(n=t.defaultValue,t=t.children,null!=t&&(null!=n&&r("92"),Array.isArray(t)&&(1>=t.length||r("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function Jt(e,t){var n=t.value;null!=n&&(n=""+n,n!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function Qt(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}function $t(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function en(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?$t(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}function tn(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function nn(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=n,a=t[n];i=null==a||"boolean"==typeof a||""===a?"":r||"number"!=typeof a||0===a||Qi.hasOwnProperty(i)&&Qi[i]?(""+a).trim():a+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}function rn(e,t,n){t&&(ea[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&r("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&r("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||r("61")),null!=t.style&&"object"!=typeof t.style&&r("62",n()))}function an(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function on(e,t){e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument;var n=ke(e);t=Kn[t];for(var r=0;r<t.length;r++){var i=t[r];n.hasOwnProperty(i)&&n[i]||("topScroll"===i?Re("topScroll","scroll",e):"topFocus"===i||"topBlur"===i?(Re("topFocus","focus",e),Re("topBlur","blur",e),n.topBlur=!0,n.topFocus=!0):"topCancel"===i?(ne("cancel",!0)&&Re("topCancel","cancel",e),n.topCancel=!0):"topClose"===i?(ne("close",!0)&&Re("topClose","close",e),n.topClose=!0):Zr.hasOwnProperty(i)&&Le(i,Zr[i],e),n[i]=!0)}}function sn(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===ta&&(r=$t(e)),r===ta?"script"===e?(e=n.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function ln(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function cn(e,t,n,r){var i=an(t,n);switch(t){case"iframe":case"object":Le("topLoad","load",e);var a=n;break;case"video":case"audio":for(a in ra)ra.hasOwnProperty(a)&&Le(a,ra[a],e);a=n;break;case"source":Le("topError","error",e),a=n;break;case"img":case"image":Le("topError","error",e),Le("topLoad","load",e),a=n;break;case"form":Le("topReset","reset",e),Le("topSubmit","submit",e),a=n;break;case"details":Le("topToggle","toggle",e),a=n;break;case"input":jt(e,n),a=Bt(e,n),Le("topInvalid","invalid",e),on(r,"onChange");break;case"option":a=Xt(e,n);break;case"select":Yt(e,n),a=wn({},n,{value:void 0}),Le("topInvalid","invalid",e),on(r,"onChange");break;case"textarea":Kt(e,n),a=Zt(e,n),Le("topInvalid","invalid",e),on(r,"onChange");break;default:a=n}rn(t,a,na);var o,s=a;for(o in s)if(s.hasOwnProperty(o)){var l=s[o];"style"===o?nn(e,l,na):"dangerouslySetInnerHTML"===o?null!=(l=l?l.__html:void 0)&&Ji(e,l):"children"===o?"string"==typeof l?("textarea"!==t||""!==l)&&tn(e,l):"number"==typeof l&&tn(e,""+l):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(Zn.hasOwnProperty(o)?null!=l&&on(r,o):i?Ft(e,o,l):null!=l&&Ut(e,o,l))}switch(t){case"input":ae(e),Vt(e,n);break;case"textarea":ae(e),Qt(e,n);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,t=n.value,null!=t?qt(e,!!n.multiple,t,!1):null!=n.defaultValue&&qt(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=_n)}}function un(e,t,n,r,i){var a=null;switch(t){case"input":n=Bt(e,n),r=Bt(e,r),a=[];break;case"option":n=Xt(e,n),r=Xt(e,r),a=[];break;case"select":n=wn({},n,{value:void 0}),r=wn({},r,{value:void 0}),a=[];break;case"textarea":n=Zt(e,n),r=Zt(e,r),a=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=_n)}rn(t,r,na);var o,s;e=null;for(o in n)if(!r.hasOwnProperty(o)&&n.hasOwnProperty(o)&&null!=n[o])if("style"===o)for(s in t=n[o])t.hasOwnProperty(s)&&(e||(e={}),e[s]="");else"dangerouslySetInnerHTML"!==o&&"children"!==o&&"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(Zn.hasOwnProperty(o)?a||(a=[]):(a=a||[]).push(o,null));for(o in r){var l=r[o];if(t=null!=n?n[o]:void 0,r.hasOwnProperty(o)&&l!==t&&(null!=l||null!=t))if("style"===o)if(t){for(s in t)!t.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(e||(e={}),e[s]="");for(s in l)l.hasOwnProperty(s)&&t[s]!==l[s]&&(e||(e={}),e[s]=l[s])}else e||(a||(a=[]),a.push(o,e)),e=l;else"dangerouslySetInnerHTML"===o?(l=l?l.__html:void 0,t=t?t.__html:void 0,null!=l&&t!==l&&(a=a||[]).push(o,""+l)):"children"===o?t===l||"string"!=typeof l&&"number"!=typeof l||(a=a||[]).push(o,""+l):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&(Zn.hasOwnProperty(o)?(null!=l&&on(i,o),a||t===l||(a=[])):(a=a||[]).push(o,l))}return e&&(a=a||[]).push("style",e),a}function hn(e,t,n,r,i){"input"===n&&"radio"===i.type&&null!=i.name&&Gt(e,i),an(n,r),r=an(n,i);for(var a=0;a<t.length;a+=2){var o=t[a],s=t[a+1];"style"===o?nn(e,s,na):"dangerouslySetInnerHTML"===o?Ji(e,s):"children"===o?tn(e,s):r?null!=s?Ft(e,o,s):e.removeAttribute(o):null!=s?Ut(e,o,s):zt(e,o)}switch(n){case"input":Ht(e,i);break;case"textarea":Jt(e,i);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!i.multiple,n=i.value,null!=n?qt(e,!!i.multiple,n,!1):t!==!!i.multiple&&(null!=i.defaultValue?qt(e,!!i.multiple,i.defaultValue,!0):qt(e,!!i.multiple,i.multiple?[]:"",!1))}}function pn(e,t,n,r,i){switch(t){case"iframe":case"object":Le("topLoad","load",e);break;case"video":case"audio":for(var a in ra)ra.hasOwnProperty(a)&&Le(a,ra[a],e);break;case"source":Le("topError","error",e);break;case"img":case"image":Le("topError","error",e),Le("topLoad","load",e);break;case"form":Le("topReset","reset",e),Le("topSubmit","submit",e);break;case"details":Le("topToggle","toggle",e);break;case"input":jt(e,n),Le("topInvalid","invalid",e),on(i,"onChange");break;case"select":Yt(e,n),Le("topInvalid","invalid",e),on(i,"onChange");break;case"textarea":Kt(e,n),Le("topInvalid","invalid",e),on(i,"onChange")}rn(t,n,na),r=null;for(var o in n)n.hasOwnProperty(o)&&(a=n[o],"children"===o?"string"==typeof a?e.textContent!==a&&(r=["children",a]):"number"==typeof a&&e.textContent!==""+a&&(r=["children",""+a]):Zn.hasOwnProperty(o)&&null!=a&&on(i,o));switch(t){case"input":ae(e),Vt(e,n);break;case"textarea":ae(e),Qt(e,n);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=_n)}return r}function dn(e,t){return e.nodeValue!==t}function fn(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function mn(e){return!(!(e=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))}function vn(e,t,n,i,a){fn(n)||r("200");var o=n._reactRootContainer;if(o)sa.updateContainer(t,o,e,a);else{if(!(i=i||mn(n)))for(o=void 0;o=n.lastChild;)n.removeChild(o);var s=sa.createContainer(n,i);o=n._reactRootContainer=s,sa.unbatchedUpdates(function(){sa.updateContainer(t,s,e,a)})}return sa.getPublicRootInstance(o)}function gn(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return fn(t)||r("200"),kt(e,t,null,n)}function yn(e,t){this._reactRootContainer=sa.createContainer(e,t)}var bn=n("GiK3"),xn=n("czSA"),wn=n("BEQ0"),_n=n("e6+Q"),En=n("o+pC"),Mn=n("9U7y"),Tn=n("sgb3"),Sn=n("2B9T"),An=n("JTgD"),Cn=n("TJez");bn||r("227");var Pn={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0},Ln={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=Ln,n=e.Properties||{},a=e.DOMAttributeNamespaces||{},o=e.DOMAttributeNames||{};e=e.DOMMutationMethods||{};for(var s in n){Rn.hasOwnProperty(s)&&r("48",s);var l=s.toLowerCase(),c=n[s];l={attributeName:l,attributeNamespace:null,propertyName:s,mutationMethod:null,mustUseProperty:i(c,t.MUST_USE_PROPERTY),hasBooleanValue:i(c,t.HAS_BOOLEAN_VALUE),hasNumericValue:i(c,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:i(c,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:i(c,t.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:i(c,t.HAS_STRING_BOOLEAN_VALUE)},1>=l.hasBooleanValue+l.hasNumericValue+l.hasOverloadedBooleanValue||r("50",s),o.hasOwnProperty(s)&&(l.attributeName=o[s]),a.hasOwnProperty(s)&&(l.attributeNamespace=a[s]),e.hasOwnProperty(s)&&(l.mutationMethod=e[s]),Rn[s]=l}}},Rn={},On=Ln,In=On.MUST_USE_PROPERTY,Nn=On.HAS_BOOLEAN_VALUE,kn=On.HAS_NUMERIC_VALUE,Dn=On.HAS_POSITIVE_NUMERIC_VALUE,Un=On.HAS_OVERLOADED_BOOLEAN_VALUE,Fn=On.HAS_STRING_BOOLEAN_VALUE,zn={Properties:{allowFullScreen:Nn,async:Nn,autoFocus:Nn,autoPlay:Nn,capture:Un,checked:In|Nn,cols:Dn,contentEditable:Fn,controls:Nn,default:Nn,defer:Nn,disabled:Nn,download:Un,draggable:Fn,formNoValidate:Nn,hidden:Nn,loop:Nn,multiple:In|Nn,muted:In|Nn,noValidate:Nn,open:Nn,playsInline:Nn,readOnly:Nn,required:Nn,reversed:Nn,rows:Dn,rowSpan:kn,scoped:Nn,seamless:Nn,selected:In|Nn,size:Dn,start:kn,span:Dn,spellCheck:Fn,style:0,tabIndex:0,itemScope:Nn,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Fn},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(e,t){if(null==t)return e.removeAttribute("value");"number"!==e.type||!1===e.hasAttribute("value")?e.setAttribute("value",""+t):e.validity&&!e.validity.badInput&&e.ownerDocument.activeElement!==e&&e.setAttribute("value",""+t)}}},Bn=On.HAS_STRING_BOOLEAN_VALUE,jn={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},Gn={Properties:{autoReverse:Bn,externalResourcesRequired:Bn,preserveAlpha:Bn},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:jn.xlink,xlinkArcrole:jn.xlink,xlinkHref:jn.xlink,xlinkRole:jn.xlink,xlinkShow:jn.xlink,xlinkTitle:jn.xlink,xlinkType:jn.xlink,xmlBase:jn.xml,xmlLang:jn.xml,xmlSpace:jn.xml}},Hn=/[\-\:]([a-z])/g;"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(e){var t=e.replace(Hn,s);Gn.Properties[t]=0,Gn.DOMAttributeNames[t]=e}),On.injectDOMPropertyConfig(zn),On.injectDOMPropertyConfig(Gn);var Vn={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(e){"function"!=typeof e.invokeGuardedCallback&&r("197"),l=e.invokeGuardedCallback}},invokeGuardedCallback:function(e,t,n,r,i,a,o,s,c){l.apply(Vn,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,i,a,o,s,l){if(Vn.invokeGuardedCallback.apply(this,arguments),Vn.hasCaughtError()){var c=Vn.clearCaughtError();Vn._hasRethrowError||(Vn._hasRethrowError=!0,Vn._rethrowError=c)}},rethrowCaughtError:function(){return c.apply(Vn,arguments)},hasCaughtError:function(){return Vn._hasCaughtError},clearCaughtError:function(){if(Vn._hasCaughtError){var e=Vn._caughtError;return Vn._caughtError=null,Vn._hasCaughtError=!1,e}r("198")}},Wn=null,Xn={},qn=[],Yn={},Zn={},Kn={},Jn=Object.freeze({plugins:qn,eventNameDispatchConfigs:Yn,registrationNameModules:Zn,registrationNameDependencies:Kn,possibleRegistrationNames:null,injectEventPluginOrder:p,injectEventPluginsByName:d}),Qn=null,$n=null,er=null,tr=null,nr={injectEventPluginOrder:p,injectEventPluginsByName:d},rr=Object.freeze({injection:nr,getListener:x,extractEvents:w,enqueueEvents:_,processEventQueue:E}),ir=Math.random().toString(36).slice(2),ar="__reactInternalInstance$"+ir,or="__reactEventHandlers$"+ir,sr=Object.freeze({precacheFiberNode:function(e,t){t[ar]=e},getClosestInstanceFromNode:M,getInstanceFromNode:function(e){return e=e[ar],!e||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:T,getFiberCurrentPropsFromNode:S,updateFiberProps:function(e,t){e[or]=t}}),lr=Object.freeze({accumulateTwoPhaseDispatches:N,accumulateTwoPhaseDispatchesSkipTarget:function(e){v(e,R)},accumulateEnterLeaveDispatches:k,accumulateDirectDispatches:function(e){v(e,I)}}),cr=null,ur={_root:null,_startText:null,_fallbackText:null},hr="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),pr={type:null,target:null,currentTarget:_n.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};wn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=_n.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=_n.thatReturnsTrue)},persist:function(){this.isPersistent=_n.thatReturnsTrue},isPersistent:_n.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<hr.length;t++)this[hr[t]]=null}}),z.Interface=pr,z.augmentClass=function(e,t){function n(){}n.prototype=this.prototype;var r=new n;wn(r,e.prototype),e.prototype=r,e.prototype.constructor=e,e.Interface=wn({},this.Interface,t),e.augmentClass=this.augmentClass,G(e)},G(z),z.augmentClass(H,{data:null}),z.augmentClass(V,{data:null});var dr=[9,13,27,32],fr=xn.canUseDOM&&"CompositionEvent"in window,mr=null;xn.canUseDOM&&"documentMode"in document&&(mr=document.documentMode);var vr;if(vr=xn.canUseDOM&&"TextEvent"in window&&!mr){var gr=window.opera;vr=!("object"==typeof gr&&"function"==typeof gr.version&&12>=parseInt(gr.version(),10))}var yr,br=vr,xr=xn.canUseDOM&&(!fr||mr&&8<mr&&11>=mr),wr=String.fromCharCode(32),_r={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},Er=!1,Mr=!1,Tr={eventTypes:_r,extractEvents:function(e,t,n,r){var i;if(fr)e:{switch(e){case"topCompositionStart":var a=_r.compositionStart;break e;case"topCompositionEnd":a=_r.compositionEnd;break e;case"topCompositionUpdate":a=_r.compositionUpdate;break e}a=void 0}else Mr?W(e,n)&&(a=_r.compositionEnd):"topKeyDown"===e&&229===n.keyCode&&(a=_r.compositionStart);return a?(xr&&(Mr||a!==_r.compositionStart?a===_r.compositionEnd&&Mr&&(i=U()):(ur._root=r,ur._startText=F(),Mr=!0)),a=H.getPooled(a,t,n,r),i?a.data=i:null!==(i=X(n))&&(a.data=i),N(a),i=a):i=null,(e=br?q(e,n):Y(e,n))?(t=V.getPooled(_r.beforeInput,t,n,r),t.data=e,N(t)):t=null,[i,t]}},Sr=null,Ar=null,Cr=null,Pr={injectFiberControlledHostComponent:function(e){Sr=e}},Lr=Object.freeze({injection:Pr,enqueueStateRestore:K,restoreStateIfNeeded:J}),Rr=!1,Or={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};xn.canUseDOM&&(yr=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));var Ir={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}},Nr=null,kr=null,Dr=!1;xn.canUseDOM&&(Dr=ne("input")&&(!document.documentMode||9<document.documentMode));var Ur={eventTypes:Ir,_isInputEventSupported:Dr,extractEvents:function(e,t,n,r){var i=t?T(t):window,a=i.nodeName&&i.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===i.type)var o=ue;else if(ee(i))if(Dr)o=ve;else{o=fe;var s=de}else!(a=i.nodeName)||"input"!==a.toLowerCase()||"checkbox"!==i.type&&"radio"!==i.type||(o=me);if(o&&(o=o(e,t)))return se(o,n,r);s&&s(e,i,t),"topBlur"===e&&null!=t&&(e=t._wrapperState||i._wrapperState)&&e.controlled&&"number"===i.type&&(e=""+i.value,i.getAttribute("value")!==e&&i.setAttribute("value",e))}};z.augmentClass(ge,{view:null,detail:null});var Fr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};ge.augmentClass(xe,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:be,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}});var zr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},Br={eventTypes:zr,extractEvents:function(e,t,n,r){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement)||"topMouseOut"!==e&&"topMouseOver"!==e)return null;var i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window;if("topMouseOut"===e?(e=t,t=(t=n.relatedTarget||n.toElement)?M(t):null):e=null,e===t)return null;var a=null==e?i:T(e);i=null==t?i:T(t);var o=xe.getPooled(zr.mouseLeave,e,n,r);return o.type="mouseleave",o.target=a,o.relatedTarget=i,n=xe.getPooled(zr.mouseEnter,t,n,r),n.type="mouseenter",n.target=i,n.relatedTarget=a,k(o,n,e,t),[o,n]}},jr=bn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,Gr=[],Hr=!0,Vr=void 0,Wr=Object.freeze({get _enabled(){return Hr},get _handleTopLevel(){return Vr},setHandleTopLevel:function(e){Vr=e},setEnabled:Pe,isEnabled:function(){return Hr},trapBubbledEvent:Le,trapCapturedEvent:Re,dispatchEvent:Oe}),Xr={animationend:Ie("Animation","AnimationEnd"),animationiteration:Ie("Animation","AnimationIteration"),animationstart:Ie("Animation","AnimationStart"),transitionend:Ie("Transition","TransitionEnd")},qr={},Yr={};xn.canUseDOM&&(Yr=document.createElement("div").style,"AnimationEvent"in window||(delete Xr.animationend.animation,delete Xr.animationiteration.animation,delete Xr.animationstart.animation),"TransitionEvent"in window||delete Xr.transitionend.transition);var Zr={topAbort:"abort",topAnimationEnd:Ne("animationend")||"animationend",topAnimationIteration:Ne("animationiteration")||"animationiteration",topAnimationStart:Ne("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:Ne("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},Kr={},Jr=0,Qr="_reactListenersID"+(""+Math.random()).slice(2),$r=xn.canUseDOM&&"documentMode"in document&&11>=document.documentMode,ei={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},ti=null,ni=null,ri=null,ii=!1,ai={eventTypes:ei,extractEvents:function(e,t,n,r){var i,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(i=!a)){e:{a=ke(a),i=Kn.onSelect;for(var o=0;o<i.length;o++){var s=i[o];if(!a.hasOwnProperty(s)||!a[s]){a=!1;break e}}a=!0}i=!a}if(i)return null;switch(a=t?T(t):window,e){case"topFocus":(ee(a)||"true"===a.contentEditable)&&(ti=a,ni=t,ri=null);break;case"topBlur":ri=ni=ti=null;break;case"topMouseDown":ii=!0;break;case"topContextMenu":case"topMouseUp":return ii=!1,ze(n,r);case"topSelectionChange":if($r)break;case"topKeyDown":case"topKeyUp":return ze(n,r)}return null}};z.augmentClass(Be,{animationName:null,elapsedTime:null,pseudoElement:null}),z.augmentClass(je,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ge.augmentClass(Ge,{relatedTarget:null});var oi={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},si={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};ge.augmentClass(Ve,{key:function(e){if(e.key){var t=oi[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?(e=He(e),13===e?"Enter":String.fromCharCode(e)):"keydown"===e.type||"keyup"===e.type?si[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:be,charCode:function(e){return"keypress"===e.type?He(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?He(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),xe.augmentClass(We,{dataTransfer:null}),ge.augmentClass(Xe,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:be}),z.augmentClass(qe,{propertyName:null,elapsedTime:null,pseudoElement:null}),xe.augmentClass(Ye,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null});var li={},ci={};"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n="on"+t;t="top"+t,n={phasedRegistrationNames:{bubbled:n,captured:n+"Capture"},dependencies:[t]},li[e]=n,ci[t]=n});var ui={eventTypes:li,extractEvents:function(e,t,n,r){var i=ci[e];if(!i)return null;switch(e){case"topKeyPress":if(0===He(n))return null;case"topKeyDown":case"topKeyUp":e=Ve;break;case"topBlur":case"topFocus":e=Ge;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":e=xe;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":e=We;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":e=Xe;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":e=Be;break;case"topTransitionEnd":e=qe;break;case"topScroll":e=ge;break;case"topWheel":e=Ye;break;case"topCopy":case"topCut":case"topPaste":e=je;break;default:e=z}return t=e.getPooled(i,t,n,r),N(t),t}};Vr=function(e,t,n,r){e=w(e,t,n,r),_(e),E(!1)},nr.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),Qn=sr.getFiberCurrentPropsFromNode,$n=sr.getInstanceFromNode,er=sr.getNodeFromInstance,nr.injectEventPluginsByName({SimpleEventPlugin:ui,EnterLeaveEventPlugin:Br,ChangeEventPlugin:Ur,SelectEventPlugin:ai,BeforeInputEventPlugin:Tr});var hi=[],pi=-1;new Set;var di={current:Cn},fi={current:!1},mi=Cn,vi=null,gi=null,yi="function"==typeof Symbol&&Symbol.for,bi=yi?Symbol.for("react.element"):60103,xi=yi?Symbol.for("react.call"):60104,wi=yi?Symbol.for("react.return"):60105,_i=yi?Symbol.for("react.portal"):60106,Ei=yi?Symbol.for("react.fragment"):60107,Mi="function"==typeof Symbol&&Symbol.iterator,Ti=Array.isArray,Si=At(!0),Ai=At(!1),Ci={},Pi=Object.freeze({default:Nt}),Li=Pi&&Nt||Pi,Ri=Li.default?Li.default:Li,Oi="object"==typeof performance&&"function"==typeof performance.now,Ii=void 0;Ii=Oi?function(){return performance.now()}:function(){return Date.now()};var Ni=void 0,ki=void 0;if(xn.canUseDOM)if("function"!=typeof requestIdleCallback||"function"!=typeof cancelIdleCallback){var Di,Ui=null,Fi=!1,zi=-1,Bi=!1,ji=0,Gi=33,Hi=33;Di=Oi?{didTimeout:!1,timeRemaining:function(){var e=ji-performance.now();return 0<e?e:0}}:{didTimeout:!1,timeRemaining:function(){var e=ji-Date.now();return 0<e?e:0}};var Vi="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===Vi){if(Fi=!1,e=Ii(),0>=ji-e){if(!(-1!==zi&&zi<=e))return void(Bi||(Bi=!0,requestAnimationFrame(Wi)));Di.didTimeout=!0}else Di.didTimeout=!1;zi=-1,e=Ui,Ui=null,null!==e&&e(Di)}},!1);var Wi=function(e){Bi=!1;var t=e-ji+Hi;t<Hi&&Gi<Hi?(8>t&&(t=8),Hi=t<Gi?Gi:t):Gi=t,ji=e+Hi,Fi||(Fi=!0,window.postMessage(Vi,"*"))};Ni=function(e,t){return Ui=e,null!=t&&"number"==typeof t.timeout&&(zi=Ii()+t.timeout),Bi||(Bi=!0,requestAnimationFrame(Wi)),0},ki=function(){Ui=null,Fi=!1,zi=-1}}else Ni=window.requestIdleCallback,ki=window.cancelIdleCallback;else Ni=function(e){return setTimeout(function(){e({timeRemaining:function(){return 1/0}})})},ki=function(e){clearTimeout(e)};var Xi=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,qi={},Yi={},Zi={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"},Ki=void 0,Ji=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Zi.svg||"innerHTML"in e)e.innerHTML=t;else{for(Ki=Ki||document.createElement("div"),Ki.innerHTML="<svg>"+t+"</svg>",t=Ki.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}),Qi={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},$i=["Webkit","ms","Moz","O"];Object.keys(Qi).forEach(function(e){$i.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Qi[t]=Qi[e]})});var ea=wn({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}),ta=Zi.html,na=_n.thatReturns(""),ra={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},ia=Object.freeze({createElement:sn,createTextNode:ln,setInitialProperties:cn,diffProperties:un,updateProperties:hn,diffHydratedProperties:pn,diffHydratedText:dn,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(Ht(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var i=n[t];if(i!==e&&i.form===e.form){var a=S(i);a||r("90"),oe(i),Ht(i,a)}}}break;case"textarea":Jt(e,n);break;case"select":null!=(t=n.value)&&qt(e,!!n.multiple,t,!1)}}});Pr.injectFiberControlledHostComponent(ia);var aa=null,oa=null,sa=Ri({getRootHostContext:function(e){var t=e.nodeType;switch(t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:en(null,"");break;default:t=8===t?e.parentNode:e,e=t.namespaceURI||null,t=t.tagName,e=en(e,t)}return e},getChildHostContext:function(e,t){return en(e,t)},getPublicInstance:function(e){return e},prepareForCommit:function(){aa=Hr;var e=Mn();if(Fe(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=window.getSelection&&window.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,i=n.focusNode;n=n.focusOffset;try{t.nodeType,i.nodeType}catch(e){t=null;break e}var a=0,o=-1,s=-1,l=0,c=0,u=e,h=null;t:for(;;){for(var p;u!==t||0!==r&&3!==u.nodeType||(o=a+r),u!==i||0!==n&&3!==u.nodeType||(s=a+n),3===u.nodeType&&(a+=u.nodeValue.length),null!==(p=u.firstChild);)h=u,u=p;for(;;){if(u===e)break t;if(h===t&&++l===r&&(o=a),h===i&&++c===n&&(s=a),null!==(p=u.nextSibling))break;u=h,h=u.parentNode}u=p}t=-1===o||-1===s?null:{start:o,end:s}}else t=null}t=t||{start:0,end:0}}else t=null;oa={focusedElem:e,selectionRange:t},Pe(!1)},resetAfterCommit:function(){var e=oa,t=Mn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&Sn(document.documentElement,n)){if(Fe(n))if(t=r.start,e=r.end,void 0===e&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(window.getSelection){t=window.getSelection();var i=n[D()].length;e=Math.min(r.start,i),r=void 0===r.end?e:Math.min(r.end,i),!t.extend&&e>r&&(i=r,r=e,e=i),i=Ue(n,e);var a=Ue(n,r);if(i&&a&&(1!==t.rangeCount||t.anchorNode!==i.node||t.anchorOffset!==i.offset||t.focusNode!==a.node||t.focusOffset!==a.offset)){var o=document.createRange();o.setStart(i.node,i.offset),t.removeAllRanges(),e>r?(t.addRange(o),t.extend(a.node,a.offset)):(o.setEnd(a.node,a.offset),t.addRange(o))}}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(An(n),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}oa=null,Pe(aa),aa=null},createInstance:function(e,t,n,r,i){return e=sn(e,t,n,r),e[ar]=i,e[or]=t,e},appendInitialChild:function(e,t){e.appendChild(t)},finalizeInitialChildren:function(e,t,n,r){cn(e,t,n,r);e:{switch(t){case"button":case"input":case"select":case"textarea":e=!!n.autoFocus;break e}e=!1}return e},prepareUpdate:function(e,t,n,r,i){return un(e,t,n,r,i)},shouldSetTextContent:function(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(e,t){return!!t.hidden},createTextInstance:function(e,t,n,r){return e=ln(e,t),e[ar]=r,e},now:Ii,mutation:{commitMount:function(e){e.focus()},commitUpdate:function(e,t,n,r,i){e[or]=i,hn(e,t,n,r,i)},resetTextContent:function(e){e.textContent=""},commitTextUpdate:function(e,t,n){e.nodeValue=n},appendChild:function(e,t){e.appendChild(t)},appendChildToContainer:function(e,t){8===e.nodeType?e.parentNode.insertBefore(t,e):e.appendChild(t)},insertBefore:function(e,t,n){e.insertBefore(t,n)},insertInContainerBefore:function(e,t,n){8===e.nodeType?e.parentNode.insertBefore(t,n):e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},removeChildFromContainer:function(e,t){8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)}},hydration:{canHydrateInstance:function(e,t){return 1!==e.nodeType||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e},canHydrateTextInstance:function(e,t){return""===t||3!==e.nodeType?null:e},getNextHydratableSibling:function(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},getFirstHydratableChild:function(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},hydrateInstance:function(e,t,n,r,i,a){return e[ar]=a,e[or]=n,pn(e,t,n,i,r)},hydrateTextInstance:function(e,t,n){return e[ar]=n,dn(e,t)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:Ni,cancelDeferredCallback:ki,useSyncScheduling:!0});Q=sa.batchedUpdates,yn.prototype.render=function(e,t){sa.updateContainer(e,this._reactRootContainer,null,t)},yn.prototype.unmount=function(e){sa.updateContainer(null,this._reactRootContainer,null,e)};var la={createPortal:gn,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(t)return sa.findHostInstance(t);"function"==typeof e.render?r("188"):r("213",Object.keys(e))},hydrate:function(e,t,n){return vn(null,e,t,!0,n)},render:function(e,t,n){return vn(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,i){return(null==e||void 0===e._reactInternalFiber)&&r("38"),vn(e,t,n,!1,i)},unmountComponentAtNode:function(e){return fn(e)||r("40"),!!e._reactRootContainer&&(sa.unbatchedUpdates(function(){vn(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:gn,unstable_batchedUpdates:$,unstable_deferredUpdates:sa.deferredUpdates,flushSync:sa.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:rr,EventPluginRegistry:Jn,EventPropagators:lr,ReactControlledComponent:Lr,ReactDOMComponentTree:sr,ReactDOMEventListener:Wr}};sa.injectIntoDevTools({findFiberByHostInstance:M,bundleType:0,version:"16.2.0",rendererPackageName:"react-dom"});var ca=Object.freeze({default:la}),ua=ca&&la||ca;e.exports=ua.default?ua.default:ua},"0Bcf":function(e,t){e.exports="/media/GitHub-Mark-Light-120px-plus.png"},"21It":function(e,t,n){"use strict";var r=n("FtD3");e.exports=function(e,t,n){var i=n.config.validateStatus;n.status&&i&&!i(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},"29pa":function(e,t,n){"use strict";(function(e){Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))}).call(t,n("W2nU"))},"2B9T":function(e,t,n){"use strict";function r(e,t){return!(!e||!t)&&(e===t||!i(e)&&(i(t)?r(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}var i=n("uO0E");e.exports=r},"2skk":function(e,t){},"5VQ+":function(e,t,n){"use strict";var r=n("cGG2");e.exports=function(e,t){r.forEach(e,function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])})}},"74qc":function(e,t){e.exports="/media/59691.png"},"7GwW":function(e,t,n){"use strict";var r=n("cGG2"),i=n("21It"),a=n("DQCr"),o=n("oJlt"),s=n("GHBc"),l=n("FtD3"),c="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||n("thJu");e.exports=function(e){return new Promise(function(t,u){var h=e.data,p=e.headers;r.isFormData(h)&&delete p["Content-Type"];var d=new XMLHttpRequest,f="onreadystatechange",m=!1;if("undefined"==typeof window||!window.XDomainRequest||"withCredentials"in d||s(e.url)||(d=new window.XDomainRequest,f="onload",m=!0,d.onprogress=function(){},d.ontimeout=function(){}),e.auth){var v=e.auth.username||"",g=e.auth.password||"";p.Authorization="Basic "+c(v+":"+g)}if(d.open(e.method.toUpperCase(),a(e.url,e.params,e.paramsSerializer),!0),d.timeout=e.timeout,d[f]=function(){if(d&&(4===d.readyState||m)&&(0!==d.status||d.responseURL&&0===d.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in d?o(d.getAllResponseHeaders()):null,r=e.responseType&&"text"!==e.responseType?d.response:d.responseText,a={data:r,status:1223===d.status?204:d.status,statusText:1223===d.status?"No Content":d.statusText,headers:n,config:e,request:d};i(t,u,a),d=null}},d.onerror=function(){u(l("Network Error",e,null,d)),d=null},d.ontimeout=function(){u(l("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",d)),d=null},r.isStandardBrowserEnv()){var y=n("p1b6"),b=(e.withCredentials||s(e.url))&&e.xsrfCookieName?y.read(e.xsrfCookieName):void 0;b&&(p[e.xsrfHeaderName]=b)}if("setRequestHeader"in d&&r.forEach(p,function(e,t){void 0===h&&"content-type"===t.toLowerCase()?delete p[t]:d.setRequestHeader(t,e)}),e.withCredentials&&(d.withCredentials=!0),e.responseType)try{d.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&d.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&d.upload&&d.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){d&&(d.abort(),u(e),d=null)}),void 0===h&&(h=null),d.send(h)})}},"9U7y":function(e,t,n){"use strict";function r(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}e.exports=r},BEQ0:function(e,t,n){"use strict";function r(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}var i=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,s,l=r(e),c=1;c<arguments.length;c++){n=Object(arguments[c]);for(var u in n)a.call(n,u)&&(l[u]=n[u]);if(i){s=i(n);for(var h=0;h<s.length;h++)o.call(n,s[h])&&(l[s[h]]=n[s[h]])}}return l}},DQCr:function(e,t,n){"use strict";function r(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var i=n("cGG2");e.exports=function(e,t,n){if(!t)return e;var a;if(n)a=n(t);else if(i.isURLSearchParams(t))a=t.toString();else{var o=[];i.forEach(t,function(e,t){null!==e&&void 0!==e&&(i.isArray(e)&&(t+="[]"),i.isArray(e)||(e=[e]),i.forEach(e,function(e){i.isDate(e)?e=e.toISOString():i.isObject(e)&&(e=JSON.stringify(e)),o.push(r(t)+"="+r(e))}))}),a=o.join("&")}return a&&(e+=(-1===e.indexOf("?")?"?":"&")+a),e}},EpBy:function(e,t){e.exports="/media/ZoomToYoutube.png"},FtD3:function(e,t,n){"use strict";var r=n("t8qj");e.exports=function(e,t,n,i,a){var o=new Error(e);return r(o,t,n,i,a)}},GHBc:function(e,t,n){"use strict";var r=n("cGG2");e.exports=r.isStandardBrowserEnv()?function(){function e(e){var t=e;return n&&(i.setAttribute("href",t),t=i.href),i.setAttribute("href",t),{href:i.href,protocol:i.protocol?i.protocol.replace(/:$/,""):"",host:i.host,search:i.search?i.search.replace(/^\?/,""):"",hash:i.hash?i.hash.replace(/^#/,""):"",hostname:i.hostname,port:i.port,pathname:"/"===i.pathname.charAt(0)?i.pathname:"/"+i.pathname}}var t,n=/(msie|trident)/i.test(navigator.userAgent),i=document.createElement("a");return t=e(window.location.href),function(n){var i=r.isString(n)?e(n):n;return i.protocol===t.protocol&&i.host===t.host}}():function(){return function(){return!0}}()},"GNr/":function(e,t){e.exports={materials:[{colorDiffuse:[.0284811,.00483907,971287e-9],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"Wood",depthWrite:!0,DbgIndex:0,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:15658734,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0},{colorDiffuse:[.0175835,.0175835,.0175835],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"BlackPlastic",depthWrite:!0,DbgIndex:1,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:15597568,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0}],metadata:{generator:"io_three",version:3,vertices:886,faces:844,uvs:0,type:"Geometry",materials:2,normals:204},vertices:[1.47736,.349054,1.31497,1.47736,.349054,-1.31497,1.47736,4.6238,-1.31497,1.47736,4.6238,1.31497,1.47736,.375562,1.28847,1.47736,.375562,-1.28847,1.47736,4.59729,-1.28847,1.47736,4.59729,1.28847,1.47736,.797244,-.881727,1.47736,.642169,-.692769,1.47736,.526939,-.477188,1.47736,.45598,-.243269,1.47736,.43202,-168781e-11,1.47736,.455979,.243266,1.47736,.526938,.477185,1.47736,.642168,.692766,1.47736,.797242,.881724,1.47736,.9862,1.0368,1.47736,1.20178,1.15203,1.47736,1.4357,1.22299,1.47736,1.67897,1.24695,1.47736,1.92224,1.22299,1.47736,2.15615,1.15203,1.47736,2.37174,1.0368,1.47736,2.56069,.881725,1.47736,2.71577,.692767,1.47736,2.831,.477186,1.47736,2.90196,.243267,1.47736,2.92592,-7.23942e-7,1.47736,2.90196,-.243268,1.47736,2.831,-.477187,1.47736,2.71577,-.692768,1.47736,2.56069,-.881726,1.47736,2.37174,-1.0368,1.47736,2.15615,-1.15203,1.47736,1.92224,-1.22299,1.47736,1.67897,-1.24695,1.47736,1.4357,-1.22299,1.47736,1.20178,-1.15203,1.47736,.986202,-1.0368,1.47737,3.13792,-6.06549e-7,1.47737,3.19148,.270299,1.47736,3.34401,.499449,1.47736,3.57229,.652561,1.47737,3.84156,.706327,1.47736,4.11083,.652562,1.47736,4.33911,.499448,1.47736,4.49164,.270299,1.47736,4.5452,-6.2336e-7,1.47736,4.49164,-.2703,1.47736,4.33911,-.49945,1.47736,4.11083,-.652562,1.47736,3.84156,-.706328,1.47736,3.57229,-.652562,1.47736,3.34401,-.49945,1.47736,3.19148,-.270301,1.47736,4.5238,-1.31497,1.47736,4.49729,-1.28847,1.47736,4.6238,-1.21497,1.47736,4.59729,-1.18847,1.47736,4.6238,1.21497,1.47736,4.59729,1.18847,1.47736,4.5238,1.31497,1.47736,4.49729,1.28847,1.47736,.449054,1.31497,1.47736,.475562,1.28847,1.47736,.349054,1.21497,1.47736,.375562,1.18847,1.47736,.349054,-1.21497,1.47736,.375562,-1.18847,1.47736,.449054,-1.31497,1.47736,.475562,-1.28847,1.47736,4.6238,-3.21322e-7,1.47736,4.59729,-3.20163e-7,1.47736,.349054,-1.34467e-7,1.47736,.375562,-1.35626e-7,1.47736,4.6238,.6,1.47736,4.59729,.6,1.47736,4.6238,-.6,1.47736,4.59729,-.6,1.47736,3.16901,-1.31497,1.47736,3.16901,-1.28847,1.47736,3.16901,1.31497,1.47736,3.16901,1.28847,1.47736,2.96901,-1.31497,1.47736,2.96901,-1.28847,1.47736,2.96901,1.31497,1.47736,2.96901,1.28847,1.47736,.349054,.8,1.47736,.375562,.8,1.47736,.349054,.4,1.47736,.375562,.4,1.47736,.349054,-.7,1.47736,.375562,-.7,1.47736,.349054,-.4,1.47736,.375562,-.4,1.47736,.969008,-1.31497,1.47736,.969008,-1.28847,1.47736,.969008,1.31497,1.47736,.969008,1.28847,1.47736,1.25472,-1.31497,1.47736,1.54044,-1.31497,1.47736,1.82615,-1.31497,1.47736,2.11187,-1.31497,1.47736,2.39758,-1.31497,1.47736,2.68329,-1.31497,1.47736,1.25472,-1.28847,1.47736,1.54044,-1.28847,1.47736,1.82615,-1.28847,1.47736,2.11187,-1.28847,1.47736,2.39758,-1.28847,1.47736,2.68329,-1.28847,1.47736,2.68329,1.31497,1.47736,2.39758,1.31497,1.47736,2.11187,1.31497,1.47736,1.82615,1.31497,1.47736,1.54044,1.31497,1.47736,1.25472,1.31497,1.47736,2.68329,1.28847,1.47736,2.39758,1.28847,1.47736,2.11187,1.28847,1.47736,1.82615,1.28847,1.47736,1.54044,1.28847,1.47736,1.25472,1.28847,1.47736,.810456,-.868515,1.47736,.657705,-.682389,1.47736,.544201,-.470038,1.47736,.474306,-.239624,1.47736,.450704,-167671e-11,1.47736,.474305,.239621,1.47736,.5442,.470035,1.47736,.657704,.682386,1.47736,.810454,.868512,1.47736,.996581,1.02126,1.47736,1.20893,1.13477,1.47736,1.43935,1.20466,1.47736,1.67897,1.22826,1.47736,1.91859,1.20466,1.47736,2.149,1.13477,1.47736,2.36136,1.02126,1.47736,2.54748,.868513,1.47736,2.70023,.682386,1.47736,2.81374,.470035,1.47736,2.88363,.239622,1.47736,2.90723,-7.27284e-7,1.47736,2.88363,-.239623,1.47736,2.81374,-.470037,1.47736,2.70023,-.682387,1.47736,2.54748,-.868514,1.47736,2.36135,-1.02126,1.47736,2.149,-1.13477,1.47736,1.91859,-1.20466,1.47736,1.67897,-1.22826,1.47736,1.43935,-1.20466,1.47736,1.20893,-1.13477,1.47736,.996583,-1.02127,1.47737,3.14878,-6.06133e-7,1.47737,3.20151,.266129,1.47736,3.35169,.491743,1.47736,3.57644,.642494,1.47737,3.84156,.69543,1.47736,4.10668,.642495,1.47736,4.33143,.491743,1.47736,4.48161,.266129,1.47736,4.53434,-6.22684e-7,1.47736,4.48161,-.26613,1.47736,4.33143,-.491744,1.47736,4.10668,-.642495,1.47736,3.84156,-.695431,1.47736,3.57644,-.642495,1.47736,3.35169,-.491745,1.47736,3.20151,-.266131,1.4581,.810456,-.868515,1.4581,.657705,-.682389,1.4581,.544201,-.470038,1.4581,.474306,-.239624,1.4581,.450704,-167671e-11,1.4581,.474305,.239621,1.4581,.5442,.470035,1.4581,.657704,.682386,1.4581,.810454,.868512,1.4581,.996581,1.02126,1.4581,1.20893,1.13477,1.4581,1.43935,1.20466,1.4581,1.67897,1.22826,1.4581,1.91859,1.20466,1.4581,2.149,1.13477,1.4581,2.36136,1.02126,1.4581,2.54748,.868513,1.4581,2.70023,.682386,1.4581,2.81374,.470035,1.4581,2.88363,.239622,1.4581,2.90723,-7.27284e-7,1.4581,2.88363,-.239623,1.4581,2.81374,-.470037,1.4581,2.70023,-.682387,1.4581,2.54748,-.868514,1.4581,2.36135,-1.02126,1.4581,2.149,-1.13477,1.4581,1.91859,-1.20466,1.4581,1.67897,-1.22826,1.4581,1.43935,-1.20466,1.4581,1.20893,-1.13477,1.4581,.996583,-1.02127,1.4581,3.14878,-6.06133e-7,1.4581,3.20151,.266129,1.45809,3.35169,.491743,1.45809,3.57644,.642494,1.4581,3.84156,.69543,1.4581,4.10668,.642495,1.45809,4.33143,.491743,1.45809,4.48161,.266129,1.45809,4.53434,-6.22684e-7,1.45809,4.48161,-.26613,1.45809,4.33143,-.491744,1.45809,4.10668,-.642495,1.45809,3.84156,-.695431,1.45809,3.57644,-.642495,1.45809,3.35169,-.491745,1.4581,3.20151,-.266131,1.43823,.810456,-.868515,1.43823,.657705,-.682389,1.43823,.544201,-.470038,1.43823,.474306,-.239624,1.43823,.450704,-167671e-11,1.43823,.474305,.239621,1.43823,.5442,.470035,1.43823,.657704,.682386,1.43823,.810454,.868512,1.43823,.996581,1.02126,1.43823,1.20893,1.13477,1.43823,1.43935,1.20466,1.43823,1.67897,1.22826,1.43823,1.91859,1.20466,1.43823,2.149,1.13477,1.43823,2.36136,1.02126,1.43823,2.54748,.868513,1.43823,2.70023,.682386,1.43823,2.81374,.470035,1.43823,2.88363,.239622,1.43823,2.90723,-7.27284e-7,1.43823,2.88363,-.239623,1.43823,2.81374,-.470037,1.43823,2.70023,-.682387,1.43823,2.54748,-.868514,1.43823,2.36135,-1.02126,1.43823,2.149,-1.13477,1.43823,1.91859,-1.20466,1.43823,1.67897,-1.22826,1.43823,1.43935,-1.20466,1.43823,1.20893,-1.13477,1.43823,.996583,-1.02127,1.4003,3.14878,-6.06133e-7,1.4003,3.20151,.266129,1.40029,3.35169,.491743,1.40029,3.57644,.642494,1.4003,3.84156,.69543,1.4003,4.10668,.642495,1.40029,4.33143,.491743,1.40029,4.48161,.266129,1.40029,4.53434,-6.22684e-7,1.40029,4.48161,-.26613,1.40029,4.33143,-.491744,1.40029,4.10668,-.642495,1.40029,3.84156,-.695431,1.40029,3.57644,-.642495,1.40029,3.35169,-.491745,1.4003,3.20151,-.266131,1.43823,.9142,-.76477,1.43823,.779696,-.600877,1.43823,.67975,-.413892,1.43823,.618203,-.211001,1.43823,.597421,-159237e-11,1.43823,.618203,.210998,1.43823,.679749,.413889,1.43823,.779694,.600874,1.43823,.914199,.764768,1.43823,1.07809,.899272,1.43823,1.26508,.999218,1.43823,1.46797,1.06076,1.43823,1.67897,1.08155,1.43823,1.88997,1.06076,1.43823,2.09286,.999218,1.43823,2.27984,.899272,1.43823,2.44374,.764768,1.43823,2.57824,.600874,1.43823,2.67819,.413889,1.43823,2.73973,.210999,1.43823,2.76051,-7.56346e-7,1.43823,2.73973,-.211,1.43823,2.67819,-.413891,1.43823,2.57824,-.600876,1.43823,2.44374,-.76477,1.43823,2.27984,-.899274,1.43823,2.09286,-.999219,1.43823,1.88997,-1.06077,1.43823,1.67897,-1.08155,1.43823,1.46797,-1.06077,1.43823,1.26508,-.99922,1.43823,1.07809,-.899275,1.4003,3.19116,-6.01545e-7,1.4003,3.24067,.249849,1.40029,3.38166,.461661,1.40029,3.59266,.603189,1.4003,3.84156,.652887,1.40029,4.09046,.60319,1.40029,4.30146,.461661,1.40029,4.44245,.249849,1.40029,4.49196,-6.17084e-7,1.40029,4.44245,-.24985,1.40029,4.30146,-.461662,1.40029,4.09046,-.60319,1.40029,3.84156,-.652889,1.40029,3.59266,-.60319,1.40029,3.38166,-.461662,1.40029,3.24067,-.24985,1.24528,.206286,1.46774,1.24528,.206285,-1.46774,1.24528,4.87811,-1.46774,1.24528,4.87811,1.46774,1.24528,4.77811,-1.46774,1.24528,4.87811,-1.36774,1.24528,4.87811,1.36774,1.24528,4.77811,1.46774,1.24528,.306286,1.46774,1.24528,.206286,1.36774,1.24528,.206285,-1.36774,1.24528,.306285,-1.46774,1.24528,4.87811,-3.32438e-7,1.24528,.206285,-1.28226e-7,1.24528,4.87811,.6,1.24528,4.87811,-.6,1.24528,3.16901,-1.46774,1.24528,3.16901,1.46774,1.24528,2.96901,-1.46774,1.24528,2.96901,1.46774,1.24528,.206285,.8,1.24528,.206285,.4,1.24528,.206285,-.7,1.24528,.206285,-.4,1.24528,.969008,-1.46774,1.24528,.969008,1.46774,1.24528,1.25472,-1.46774,1.24528,1.54044,-1.46774,1.24528,1.82615,-1.46774,1.24528,2.11187,-1.46774,1.24528,2.39758,-1.46774,1.24528,2.68329,-1.46774,1.24528,2.68329,1.46774,1.24528,2.39758,1.46774,1.24528,2.11187,1.46774,1.24528,1.82615,1.46774,1.24528,1.54044,1.46774,1.24528,1.25472,1.46774,1.2057,.206286,1.46774,1.2057,.206285,-1.46774,1.2057,4.87811,-1.46774,1.2057,4.87811,1.46774,1.2057,4.77811,-1.46774,1.2057,4.87811,-1.36774,1.2057,4.87811,1.36774,1.2057,4.77811,1.46774,1.2057,.306286,1.46774,1.2057,.206286,1.36774,1.2057,.206285,-1.36774,1.2057,.306285,-1.46774,1.2057,4.87811,-3.32438e-7,1.2057,.206285,-1.28226e-7,1.2057,4.87811,.6,1.2057,4.87811,-.6,1.2057,3.16901,-1.46774,1.2057,3.16901,1.46774,1.2057,2.96901,-1.46774,1.2057,2.96901,1.46774,1.2057,.206285,.8,1.2057,.206285,.4,1.2057,.206285,-.7,1.2057,.206285,-.4,1.2057,.969008,-1.46774,1.2057,.969008,1.46774,1.2057,1.25472,-1.46774,1.2057,1.54044,-1.46774,1.2057,1.82615,-1.46774,1.2057,2.11187,-1.46774,1.2057,2.39758,-1.46774,1.2057,2.68329,-1.46774,1.2057,2.68329,1.46774,1.2057,2.39758,1.46774,1.2057,2.11187,1.46774,1.2057,1.82615,1.46774,1.2057,1.54044,1.46774,1.2057,1.25472,1.46774,-.863966,.206286,1.46774,-.863966,.206285,-1.46774,-.863966,4.87811,-1.46774,-.863966,4.87811,1.46774,-.863966,4.77811,-1.46774,-.863966,4.87811,-1.36774,-.863966,4.87811,1.36774,-.863966,4.77811,1.46774,-.863966,.306286,1.46774,-.863966,.206286,1.36774,-.863966,.206285,-1.36774,-.863966,.306285,-1.46774,-.863966,4.87811,-3.32438e-7,-.863966,.206285,-1.28226e-7,-.863966,4.87811,.6,-.863966,4.87811,-.6,-.863966,3.16901,-1.46774,-.863966,3.16901,1.46774,-.863966,2.96901,-1.46774,-.863966,2.96901,1.46774,-.863966,.206285,.8,-.863966,.206285,.4,-.863966,.206285,-.7,-.863966,.206285,-.4,-.863966,.969008,-1.46774,-.863966,.969008,1.46774,-.863966,1.25472,-1.46774,-.863966,1.54044,-1.46774,-.863966,1.82615,-1.46774,-.863966,2.11187,-1.46774,-.863966,2.39758,-1.46774,-.863966,2.68329,-1.46774,-.863966,2.68329,1.46774,-.863966,2.39758,1.46774,-.863966,2.11187,1.46774,-.863966,1.82615,1.46774,-.863966,1.54044,1.46774,-.863966,1.25472,1.46774,-.863966,.246689,-1.36774,-.863966,.246689,-1.42734,-.863966,4.8377,1.36774,-.863966,4.8377,1.42734,-.863966,.306286,1.42734,-.863966,.24669,1.42734,-.863966,4.77811,-1.42734,-.863966,4.8377,-1.42734,-.863966,3.16901,-1.42734,-.863966,4.8377,-1.36774,-.863966,4.8377,.6,-.863966,4.77811,1.42734,-.863966,.969008,1.42734,-.863966,.24669,1.36774,-.863966,.24669,-.7,-.863966,.306285,-1.42734,-.863966,4.8377,-.6,-.863966,4.8377,-3.30672e-7,-.863966,.24669,.4,-.863966,.24669,-1.29992e-7,-.863966,2.96901,-1.42734,-.863966,3.16901,1.42734,-.863966,2.68329,-1.42734,-.863966,2.96901,1.42734,-.863966,.24669,.8,-.863966,.24669,-.4,-.863966,.969008,-1.42734,-.863966,1.25472,-1.42734,-.863966,1.54044,-1.42734,-.863966,1.82615,-1.42734,-.863966,2.11187,-1.42734,-.863966,2.39758,-1.42734,-.863966,1.25472,1.42734,-.863966,2.68329,1.42734,-.863966,2.39758,1.42734,-.863966,2.11187,1.42734,-.863966,1.82615,1.42734,-.863966,1.54044,1.42734,-.809275,.246689,-1.36774,-.809275,.246689,-1.42734,-.809275,4.8377,1.36774,-.809275,4.8377,1.42734,-.809275,.306286,1.42734,-.809275,.24669,1.42734,-.809275,4.77811,-1.42734,-.809275,4.8377,-1.42734,-.809275,3.16901,-1.42734,-.809275,4.8377,-1.36774,-.809275,4.8377,.6,-.809275,4.77811,1.42734,-.809275,.969008,1.42734,-.809275,.24669,1.36774,-.809275,.24669,-.7,-.809275,.306285,-1.42734,-.809275,4.8377,-.6,-.809275,4.8377,-3.30672e-7,-.809275,.24669,.4,-.809275,.24669,-1.29992e-7,-.809275,2.96901,-1.42734,-.809275,3.16901,1.42734,-.809275,2.68329,-1.42734,-.809275,2.96901,1.42734,-.809275,.24669,.8,-.809275,.24669,-.4,-.809275,.969008,-1.42734,-.809275,1.25472,-1.42734,-.809275,1.54044,-1.42734,-.809275,1.82615,-1.42734,-.809275,2.11187,-1.42734,-.809275,2.39758,-1.42734,-.809275,1.25472,1.42734,-.809275,2.68329,1.42734,-.809275,2.39758,1.42734,-.809275,2.11187,1.42734,-.809275,1.82615,1.42734,-.809275,1.54044,1.42734,-.806078,.306286,1.46774,-.806078,.969008,1.46774,-.806078,1.25472,-1.46774,-.806078,.969008,-1.46774,-.806078,4.87811,-.6,-.806078,4.87811,-1.36774,-.806078,2.68329,1.46774,-.806078,2.96901,1.46774,-.806078,.206285,-.7,-.806078,.206285,-.4,-.806078,4.87811,-1.46774,-.806078,2.39758,-1.46774,-.806078,2.11187,-1.46774,-.806078,4.87811,-3.32438e-7,-.806078,1.54044,1.46774,-.806078,1.82615,1.46774,-.806078,.206286,1.46774,-.806078,3.16901,1.46774,-.806078,.206286,1.36774,-.806078,1.54044,-1.46774,-.806078,2.39758,1.46774,-.806078,3.16901,-1.46774,-.806078,2.96901,-1.46774,-.806078,4.87811,1.36774,-.806078,4.87811,.6,-.806078,.206285,-1.28226e-7,-.806078,.206285,.4,-.806078,2.68329,-1.46774,-.806078,1.25472,1.46774,-.806078,.206285,.8,-.806078,4.77811,-1.46774,-.806078,.206285,-1.36774,-.806078,1.82615,-1.46774,-.806078,2.11187,1.46774,-.806078,.206285,-1.46774,-.806078,4.77811,1.46774,-.806078,4.87811,1.46774,-.806078,.306285,-1.46774,1.24528,.246285,-1.36774,1.24528,.246285,-1.42774,1.24528,4.83811,1.36774,1.24528,4.83811,1.42774,1.24528,.306286,1.42774,1.24528,.246286,1.42774,1.24528,4.77811,-1.42774,1.24528,4.83811,-1.42774,1.24528,3.16901,-1.42774,1.24528,4.83811,-1.36774,1.24528,4.83811,.6,1.24528,4.77811,1.42774,1.24528,.969008,1.42774,1.24528,.246286,1.36774,1.24528,.246285,-.7,1.24528,.306285,-1.42774,1.24528,4.83811,-.6,1.24528,4.83811,-3.3069e-7,1.24528,.246285,.4,1.24528,.246285,-1.29975e-7,1.24528,2.96901,-1.42774,1.24528,3.16901,1.42774,1.24528,2.68329,-1.42774,1.24528,2.96901,1.42774,1.24528,.246285,.8,1.24528,.246285,-.4,1.24528,.969008,-1.42774,1.24528,1.25472,-1.42774,1.24528,1.54044,-1.42774,1.24528,1.82615,-1.42774,1.24528,2.11187,-1.42774,1.24528,2.39758,-1.42774,1.24528,1.25472,1.42774,1.24528,2.68329,1.42774,1.24528,2.39758,1.42774,1.24528,2.11187,1.42774,1.24528,1.82615,1.42774,1.24528,1.54044,1.42774,1.2057,.246285,-1.36774,1.2057,.246285,-1.42774,1.2057,4.83811,1.36774,1.2057,4.83811,1.42774,1.2057,.306286,1.42774,1.2057,.246286,1.42774,1.2057,4.77811,-1.42774,1.2057,4.83811,-1.42774,1.2057,3.16901,-1.42774,1.2057,4.83811,-1.36774,1.2057,4.83811,.6,1.2057,4.77811,1.42774,1.2057,.969008,1.42774,1.2057,.246286,1.36774,1.2057,.246285,-.7,1.2057,.306285,-1.42774,1.2057,4.83811,-.6,1.2057,4.83811,-3.3069e-7,1.2057,.246285,.4,1.2057,.246285,-1.29975e-7,1.2057,2.96901,-1.42774,1.2057,3.16901,1.42774,1.2057,2.68329,-1.42774,1.2057,2.96901,1.42774,1.2057,.246285,.8,1.2057,.246285,-.4,1.2057,.969008,-1.42774,1.2057,1.25472,-1.42774,1.2057,1.54044,-1.42774,1.2057,1.82615,-1.42774,1.2057,2.11187,-1.42774,1.2057,2.39758,-1.42774,1.2057,1.25472,1.42774,1.2057,2.68329,1.42774,1.2057,2.39758,1.42774,1.2057,2.11187,1.42774,1.2057,1.82615,1.42774,1.2057,1.54044,1.42774,1.24528,.226285,-1.36774,1.24528,.226285,-1.44774,1.24528,4.85811,1.36774,1.24528,4.85811,1.44774,1.24528,.306286,1.44774,1.24528,.226286,1.44774,1.24528,4.77811,-1.44774,1.24528,4.85811,-1.44774,1.24528,3.16901,-1.44774,1.24528,4.85811,-1.36774,1.24528,4.85811,.6,1.24528,4.77811,1.44774,1.24528,.969008,1.44774,1.24528,.226286,1.36774,1.24528,.226285,-.7,1.24528,.306285,-1.44774,1.24528,4.85811,-.6,1.24528,4.85811,-3.31564e-7,1.24528,.226285,.4,1.24528,.226285,-1.29101e-7,1.24528,2.96901,-1.44774,1.24528,3.16901,1.44774,1.24528,2.68329,-1.44774,1.24528,2.96901,1.44774,1.24528,.226285,.8,1.24528,.226285,-.4,1.24528,.969008,-1.44774,1.24528,1.25472,-1.44774,1.24528,1.54044,-1.44774,1.24528,1.82615,-1.44774,1.24528,2.11187,-1.44774,1.24528,2.39758,-1.44774,1.24528,1.25472,1.44774,1.24528,2.68329,1.44774,1.24528,2.39758,1.44774,1.24528,2.11187,1.44774,1.24528,1.82615,1.44774,1.24528,1.54044,1.44774,1.22549,3.16901,-1.42774,1.22549,2.96901,-1.42774,1.22549,2.39758,1.42774,1.22549,2.68329,1.42774,1.22549,4.83811,1.36774,1.22549,4.83811,.6,1.22549,.246285,-.4,1.22549,.246285,-1.29975e-7,1.22549,2.68329,-1.42774,1.22549,2.39758,-1.42774,1.22549,.246285,.4,1.22549,1.25472,1.42774,1.22549,1.54044,1.42774,1.22549,4.83811,-1.42774,1.22549,4.77811,-1.42774,1.22549,.246285,.8,1.22549,.246286,1.36774,1.22549,.246285,-1.36774,1.22549,.246285,-.7,1.22549,1.82615,-1.42774,1.22549,1.54044,-1.42774,1.22549,2.11187,1.42774,1.22549,3.16901,1.42774,1.22549,4.77811,1.42774,1.22549,.246285,-1.42774,1.22549,4.83811,1.42774,1.22549,.969008,-1.42774,1.22549,.306285,-1.42774,1.22549,4.83811,-3.3069e-7,1.22549,.969008,1.42774,1.22549,2.11187,-1.42774,1.22549,1.82615,1.42774,1.22549,.306286,1.42774,1.22549,1.25472,-1.42774,1.22549,2.96901,1.42774,1.22549,4.83811,-.6,1.22549,4.83811,-1.36774,1.22549,.246286,1.42774,1.2057,.226285,-1.44774,1.2057,.226285,-1.36774,1.2057,4.85811,1.44774,1.2057,4.85811,1.36774,1.2057,.226286,1.44774,1.2057,.306286,1.44774,1.2057,4.85811,-1.44774,1.2057,4.77811,-1.44774,1.2057,3.16901,-1.44774,1.2057,4.85811,-1.36774,1.2057,4.85811,.6,1.2057,4.77811,1.44774,1.2057,.969008,1.44774,1.2057,.226286,1.36774,1.2057,.226285,-.7,1.2057,.306285,-1.44774,1.2057,4.85811,-3.31564e-7,1.2057,4.85811,-.6,1.2057,.226285,-1.29101e-7,1.2057,.226285,.4,1.2057,2.96901,-1.44774,1.2057,3.16901,1.44774,1.2057,2.68329,-1.44774,1.2057,2.96901,1.44774,1.2057,.226285,.8,1.2057,.226285,-.4,1.2057,.969008,-1.44774,1.2057,1.25472,-1.44774,1.2057,1.54044,-1.44774,1.2057,1.82615,-1.44774,1.2057,2.11187,-1.44774,1.2057,2.39758,-1.44774,1.2057,1.25472,1.44774,1.2057,2.68329,1.44774,1.2057,2.39758,1.44774,1.2057,2.11187,1.44774,1.2057,1.82615,1.44774,1.2057,1.54044,1.44774,1.17672,.306286,1.46774,1.17672,1.25472,-1.46774,1.17672,4.87811,-.6,1.17672,2.68329,1.46774,1.17672,.206285,-.7,1.17672,2.39758,-1.46774,1.17672,4.87811,-3.32438e-7,1.17672,1.54044,1.46774,1.17672,.206286,1.46774,1.17672,.206286,1.36774,1.17672,1.54044,-1.46774,1.17672,2.39758,1.46774,1.17672,3.16901,-1.46774,1.17672,4.87811,1.36774,1.17672,2.68329,-1.46774,1.17672,1.25472,1.46774,1.17672,.206285,.8,1.17672,.206285,-1.36774,1.17672,1.82615,-1.46774,1.17672,2.11187,1.46774,1.17672,.206285,-1.46774,1.17672,.969008,1.46774,1.17672,.969008,-1.46774,1.17672,4.87811,-1.36774,1.17672,2.96901,1.46774,1.17672,.206285,-.4,1.17672,4.87811,-1.46774,1.17672,2.11187,-1.46774,1.17672,1.82615,1.46774,1.17672,3.16901,1.46774,1.17672,2.96901,-1.46774,1.17672,4.87811,.6,1.17672,.206285,-1.28226e-7,1.17672,.206285,.4,1.17672,4.77811,-1.46774,1.17672,4.77811,1.46774,1.17672,4.87811,1.46774,1.17672,.306285,-1.46774,1.26313,.206285,-1.36774,1.26313,.206285,-.7,1.26313,1.82615,-1.46774,1.26313,1.54044,-1.46774,1.26313,4.87811,1.36774,1.26313,4.87811,.6,1.26313,1.25472,1.46774,1.26313,1.54044,1.46774,1.26313,.206285,.8,1.26313,.206286,1.36774,1.26313,4.87811,-1.46774,1.26313,4.77811,-1.46774,1.26313,4.87811,-3.32438e-7,1.26313,2.11187,1.46774,1.26313,2.39758,1.46774,1.26313,.969008,-1.46774,1.26313,.306285,-1.46774,1.26313,.206285,-1.46774,1.26313,3.16901,-1.46774,1.26313,2.96901,-1.46774,1.26313,2.11187,-1.46774,1.26313,4.77811,1.46774,1.26313,4.87811,1.46774,1.26313,2.68329,-1.46774,1.26313,.206285,.4,1.26313,4.87811,-.6,1.26313,.969008,1.46774,1.26313,4.87811,-1.36774,1.26313,1.25472,-1.46774,1.26313,3.16901,1.46774,1.26313,1.82615,1.46774,1.26313,.306286,1.46774,1.26313,2.96901,1.46774,1.26313,.206285,-.4,1.26313,.206285,-1.28226e-7,1.26313,2.39758,-1.46774,1.26313,2.68329,1.46774,1.26313,.206286,1.46774,1.35909,.206285,-.7,1.35909,1.54044,-1.46274,1.35909,4.86934,.6,1.35909,1.54044,1.46274,1.35909,.206285,1.36274,1.35909,4.72234,-1.46274,1.35909,4.86934,-3.32055e-7,1.35909,2.39758,1.46274,1.35909,.306285,-1.46274,1.35909,.206285,-1.46274,1.35909,2.96901,-1.46274,1.35909,4.86934,1.46274,1.35909,2.68329,-1.46274,1.35909,4.86934,-.6,1.35909,4.86934,-1.36274,1.35909,.206285,-.4,1.35909,.206286,1.46274,1.35909,.206285,-1.36274,1.35909,1.82615,-1.46274,1.35909,4.86934,1.36274,1.35909,1.25472,1.46274,1.35909,.206285,.8,1.35909,4.86934,-1.46274,1.35909,2.11187,1.46274,1.35909,.969008,-1.46274,1.35909,3.16901,-1.46274,1.35909,2.11187,-1.46274,1.35909,4.72234,1.46274,1.35909,.206285,.4,1.35909,.969008,1.46274,1.35909,1.25472,-1.46274,1.35909,3.16901,1.46274,1.35909,1.82615,1.46274,1.35909,.306286,1.46274,1.35909,2.96901,1.46274,1.35909,.206285,-1.28226e-7,1.35909,2.39758,-1.46274,1.35909,2.68329,1.46274,1.34763,.206285,-.7,1.34763,1.54044,-1.46334,1.34763,4.87039,.6,1.34763,1.54044,1.46334,1.34763,.206285,1.36334,1.34763,4.729,-1.46334,1.34763,4.87039,-3.32101e-7,1.34763,2.39758,1.46334,1.34763,.306285,-1.46334,1.34763,.206285,-1.46334,1.34763,2.96901,-1.46334,1.34763,4.87039,1.46334,1.34763,2.68329,-1.46334,1.34763,4.87039,-.6,1.34763,4.87039,-1.36334,1.34763,.206285,-.4,1.34763,.206286,1.46334,1.34763,.206285,-1.36334,1.34763,1.82615,-1.46334,1.34763,4.87039,1.36334,1.34763,1.25472,1.46334,1.34763,.206285,.8,1.34763,4.87039,-1.46334,1.34763,2.11187,1.46334,1.34763,.969008,-1.46334,1.34763,3.16901,-1.46334,1.34763,2.11187,-1.46334,1.34763,4.729,1.46334,1.34763,.206285,.4,1.34763,.969008,1.46334,1.34763,1.25472,-1.46334,1.34763,3.16901,1.46334,1.34763,1.82615,1.46334,1.34763,.306286,1.46334,1.34763,2.96901,1.46334,1.34763,.206285,-1.28226e-7,1.34763,2.39758,-1.46334,1.34763,2.68329,1.46334],faces:[35,0,66,67,4,1,0,1,2,2,35,59,6,2,58,1,2,2,3,4,35,63,7,3,62,1,2,2,5,6,35,71,5,1,70,1,7,2,8,9,35,92,810,827,68,1,1,10,10,1,35,76,812,829,60,1,4,11,12,4,35,98,839,843,64,1,13,14,14,13,35,78,823,816,72,1,4,12,11,4,35,60,829,821,3,1,4,12,15,5,35,31,53,54,30,1,2,2,2,2,35,55,40,28,29,1,2,2,2,2,35,55,29,30,54,1,2,2,2,2,35,6,57,56,2,1,2,2,9,3,35,2,832,824,58,1,3,16,12,4,35,79,59,58,78,1,2,2,4,4,35,84,820,835,80,1,9,17,17,18,35,3,821,837,62,1,5,15,14,6,35,56,815,832,2,1,9,17,16,3,35,7,61,60,3,1,2,2,4,5,35,83,63,62,82,1,2,2,6,13,35,105,822,820,84,1,9,17,17,9,35,0,826,814,66,1,0,19,10,1,35,80,835,815,56,1,18,17,17,9,35,64,0,4,65,1,13,0,2,2,35,89,67,66,88,1,2,2,1,1,35,88,831,838,90,1,1,10,10,1,35,1,819,818,70,1,8,20,17,9,35,826,0,64,843,1,19,0,13,14,35,5,69,68,1,1,2,2,1,8,35,97,71,70,96,1,2,7,9,18,35,96,834,840,100,1,18,17,17,18,35,41,27,28,40,1,2,2,2,2,35,41,42,26,27,1,2,2,2,2,35,26,42,43,25,1,2,2,2,7,35,77,73,72,76,1,2,2,4,4,35,58,824,823,78,1,4,12,12,4,35,90,838,845,74,1,1,10,10,1,35,95,75,74,94,1,2,2,1,1,35,70,818,834,96,1,9,17,17,18,35,72,816,812,76,1,4,11,11,4,35,6,51,52,57,1,2,2,2,2,35,50,51,6,59,1,2,2,2,2,35,7,45,46,61,1,2,2,2,2,35,44,45,7,63,1,2,2,2,2,35,61,77,76,60,1,2,2,4,4,35,73,79,78,72,1,2,2,4,4,35,49,50,59,79,1,2,2,2,2,35,48,49,79,73,1,2,2,2,2,35,47,48,73,77,1,2,2,2,2,35,46,47,77,61,1,2,2,2,2,35,62,837,841,82,1,6,14,14,13,35,57,81,80,56,1,2,2,18,9,35,87,83,82,86,1,2,2,13,13,35,66,814,831,88,1,1,10,10,1,35,52,53,81,57,1,2,2,2,2,35,43,44,63,83,1,2,2,2,2,35,81,85,84,80,1,2,2,9,18,35,82,841,844,86,1,13,14,14,13,35,25,43,83,87,1,7,2,2,2,35,53,31,85,81,1,2,2,2,2,35,5,8,9,69,1,2,2,2,2,35,39,8,5,71,1,2,2,2,7,35,15,16,4,67,1,2,2,2,2,35,4,16,17,65,1,2,2,2,2,35,91,89,88,90,1,2,2,1,1,35,94,825,810,92,1,1,10,10,1,35,75,91,90,74,1,2,2,1,1,35,74,845,825,94,1,1,10,10,1,35,69,93,92,68,1,2,2,1,1,35,93,95,94,92,1,2,2,1,1,35,9,10,93,69,1,2,2,2,2,35,10,11,95,93,1,2,2,2,2,35,11,12,75,95,1,2,2,2,2,35,12,13,91,75,1,2,2,2,2,35,13,14,89,91,1,2,2,2,2,35,14,15,67,89,1,2,2,2,2,35,101,811,828,102,1,18,17,17,18,35,106,97,96,100,1,7,2,18,18,35,65,99,98,64,1,2,2,13,13,35,100,840,811,101,1,18,17,17,18,35,117,830,839,98,1,13,14,14,13,35,104,846,822,105,1,18,17,17,9,35,103,836,846,104,1,18,17,17,18,35,102,828,836,103,1,18,17,17,18,35,85,111,105,84,1,2,2,9,9,35,111,110,104,105,1,2,2,18,9,35,110,109,103,104,1,2,2,18,18,35,109,108,102,103,1,2,2,18,18,35,108,107,101,102,1,2,2,18,18,35,107,106,100,101,1,2,7,18,18,35,113,817,833,114,1,13,14,14,13,35,118,87,86,112,1,2,2,13,6,35,86,844,847,112,1,13,14,14,6,35,38,39,71,97,1,2,2,7,2,35,37,38,97,106,1,2,2,2,7,35,36,37,106,107,1,2,2,7,2,35,35,36,107,108,1,2,2,2,2,35,34,35,108,109,1,2,2,2,2,35,33,34,109,110,1,2,2,2,2,35,32,33,110,111,1,2,2,2,2,35,116,813,830,117,1,13,14,14,13,35,115,842,813,116,1,13,14,14,13,35,114,833,842,115,1,13,14,14,13,35,99,123,117,98,1,2,2,13,13,35,123,122,116,117,1,2,2,13,13,35,122,121,115,116,1,2,2,13,13,35,121,120,114,115,1,2,2,13,13,35,120,119,113,114,1,2,2,13,13,35,119,118,112,113,1,2,2,6,13,35,112,847,817,113,1,6,14,14,13,35,31,32,111,85,1,2,2,2,2,35,17,18,99,65,1,2,2,2,2,35,18,19,123,99,1,2,2,2,2,35,19,20,122,123,1,2,2,2,2,35,20,21,121,122,1,2,7,2,2,35,21,22,120,121,1,7,2,2,2,35,22,23,119,120,1,2,2,2,2,35,24,25,87,118,1,2,7,2,2,35,23,24,118,119,1,2,2,2,2,35,8,39,155,124,1,2,2,21,22,35,29,28,144,145,1,2,2,23,24,35,19,18,134,135,1,2,2,25,26,35,38,37,153,154,1,2,2,27,28,35,27,26,142,143,1,2,2,29,30,35,17,16,132,133,1,2,2,31,32,35,36,35,151,152,1,2,2,33,34,35,25,24,140,141,1,7,2,35,36,35,15,14,130,131,1,2,2,37,38,35,34,33,149,150,1,2,2,39,40,35,13,12,128,129,1,2,2,41,42,35,24,23,139,140,1,2,2,43,35,35,32,31,147,148,1,2,2,44,45,35,11,10,126,127,1,2,2,46,47,35,22,21,137,138,1,2,7,48,49,35,30,29,145,146,1,2,2,24,50,35,9,8,124,125,1,2,2,22,51,35,20,19,135,136,1,2,2,26,52,35,39,38,154,155,1,2,2,28,21,35,28,27,143,144,1,2,2,30,23,35,18,17,133,134,1,2,2,32,25,35,37,36,152,153,1,2,2,34,27,35,26,25,141,142,1,2,7,36,29,35,16,15,131,132,1,2,2,38,31,35,35,34,150,151,1,2,2,40,33,35,14,13,129,130,1,2,2,42,37,35,33,32,148,149,1,2,2,45,39,35,12,11,127,128,1,2,2,47,41,35,23,22,138,139,1,2,2,49,43,35,31,30,146,147,1,2,2,50,44,35,10,9,125,126,1,2,2,51,46,35,21,20,136,137,1,7,2,52,48,35,49,48,164,165,1,2,2,53,54,35,48,47,163,164,1,2,2,55,53,35,46,45,161,162,1,2,2,56,57,35,40,55,171,156,1,2,2,58,59,35,44,43,159,160,1,2,2,60,61,35,54,53,169,170,1,2,2,62,63,35,42,41,157,158,1,2,2,64,65,35,52,51,167,168,1,2,2,66,67,35,50,49,165,166,1,2,2,54,68,35,47,46,162,163,1,2,2,57,55,35,45,44,160,161,1,2,2,61,56,35,55,54,170,171,1,2,2,63,58,35,43,42,158,159,1,2,2,65,60,35,53,52,168,169,1,2,2,67,62,35,41,40,156,157,1,2,2,59,64,35,51,50,166,167,1,2,2,68,66,35,168,167,215,216,1,67,66,69,70,35,132,131,179,180,1,31,38,71,72,35,149,148,196,197,1,39,45,73,74,35,158,157,205,206,1,65,64,75,76,35,139,138,186,187,1,43,49,77,78,35,124,155,203,172,1,22,21,79,80,35,165,164,212,213,1,54,53,81,82,35,146,145,193,194,1,50,24,83,84,35,129,128,176,177,1,42,41,85,86,35,156,171,219,204,1,59,58,87,88,35,136,135,183,184,1,52,26,89,90,35,153,152,200,201,1,27,34,70,91,35,162,161,209,210,1,57,56,92,93,35,126,125,173,174,1,46,51,94,95,35,143,142,190,191,1,30,29,96,97,35,169,168,216,217,1,62,67,70,98,35,133,132,180,181,1,32,31,72,99,35,150,149,197,198,1,40,39,74,100,35,159,158,206,207,1,60,65,76,101,35,140,139,187,188,1,35,43,78,102,35,166,165,213,214,1,68,54,82,103,35,130,129,177,178,1,37,42,86,104,35,147,146,194,195,1,44,50,84,105,35,137,136,184,185,1,48,52,90,106,35,154,153,201,202,1,28,27,91,107,35,163,162,210,211,1,55,57,93,108,35,144,143,191,192,1,23,30,97,81,35,127,126,174,175,1,47,46,95,109,35,170,169,217,218,1,63,62,98,110,35,134,133,181,182,1,25,32,99,111,35,151,150,198,199,1,33,40,100,112,35,160,159,207,208,1,61,60,101,90,35,141,140,188,189,1,36,35,102,113,35,167,166,214,215,1,66,68,103,69,35,148,147,195,196,1,45,44,105,73,35,131,130,178,179,1,38,37,104,71,35,155,154,202,203,1,21,28,107,79,35,157,156,204,205,1,64,59,88,75,35,138,137,185,186,1,49,48,106,77,35,164,163,211,212,1,53,55,108,81,35,128,127,175,176,1,41,47,109,85,35,145,144,192,193,1,24,23,81,83,35,171,170,218,219,1,58,63,110,87,35,135,134,182,183,1,26,25,111,89,35,152,151,199,200,1,34,33,112,70,35,161,160,208,209,1,56,61,90,92,35,125,124,172,173,1,51,22,80,94,35,142,141,189,190,1,29,36,113,96,35,204,219,267,252,1,88,87,114,115,35,186,185,233,234,1,77,106,116,117,35,203,202,250,251,1,79,107,118,119,35,210,209,257,258,1,93,92,120,121,35,176,175,223,224,1,85,109,122,123,35,193,192,240,241,1,83,81,124,125,35,217,216,264,265,1,98,70,126,127,35,183,182,230,231,1,89,111,128,129,35,200,199,247,248,1,70,112,130,131,35,207,206,254,255,1,101,76,132,133,35,173,172,220,221,1,94,80,134,135,35,190,189,237,238,1,96,113,136,137,35,214,213,261,262,1,103,82,138,139,35,197,196,244,245,1,74,73,140,141,35,180,179,227,228,1,72,71,142,143,35,187,186,234,235,1,78,77,117,144,35,172,203,251,220,1,80,79,119,134,35,211,210,258,259,1,108,93,121,145,35,177,176,224,225,1,86,85,123,146,35,194,193,241,242,1,84,83,125,147,35,218,217,265,266,1,110,98,127,148,35,184,183,231,232,1,90,89,129,149,35,201,200,248,249,1,91,70,131,150,35,208,207,255,256,1,90,101,133,151,35,174,173,221,222,1,95,94,135,152,35,191,190,238,239,1,97,96,137,153,35,215,214,262,263,1,69,103,139,154,35,181,180,228,229,1,99,72,143,155,35,198,197,245,246,1,100,74,141,156,35,188,187,235,236,1,102,78,144,157,35,205,204,252,253,1,75,88,115,158,35,212,211,259,260,1,81,108,145,159,35,195,194,242,243,1,105,84,147,160,35,178,177,225,226,1,104,86,146,161,35,219,218,266,267,1,87,110,148,114,35,185,184,232,233,1,106,90,149,116,35,202,201,249,250,1,107,91,150,118,35,209,208,256,257,1,92,90,151,120,35,175,174,222,223,1,109,95,152,122,35,192,191,239,240,1,81,97,153,124,35,216,215,263,264,1,70,69,154,126,35,199,198,246,247,1,112,100,156,130,35,182,181,229,230,1,111,99,155,128,35,206,205,253,254,1,76,75,158,132,35,189,188,236,237,1,113,102,157,136,35,213,212,260,261,1,82,81,159,138,35,179,178,226,227,1,71,104,161,142,35,196,195,243,244,1,73,105,160,140,35,257,256,304,305,1,120,151,2,2,35,223,222,270,271,1,122,152,2,7,35,240,239,287,288,1,124,153,2,2,35,264,263,311,312,1,126,154,2,2,35,230,229,277,278,1,128,155,2,7,35,247,246,294,295,1,130,156,2,7,35,237,236,284,285,1,136,157,2,2,35,254,253,301,302,1,132,158,2,7,35,261,260,308,309,1,138,159,2,2,35,227,226,274,275,1,142,161,7,2,35,244,243,291,292,1,140,160,2,7,35,252,267,315,300,1,115,114,2,2,35,234,233,281,282,1,117,116,2,2,35,251,250,298,299,1,119,118,2,2,35,258,257,305,306,1,121,120,2,7,35,224,223,271,272,1,123,122,7,2,35,241,240,288,289,1,125,124,2,2,35,265,264,312,313,1,127,126,2,2,35,248,247,295,296,1,131,130,7,2,35,231,230,278,279,1,129,128,7,7,35,255,254,302,303,1,133,132,7,2,35,221,220,268,269,1,135,134,2,2,35,238,237,285,286,1,137,136,2,2,35,262,261,309,310,1,139,138,2,2,35,228,227,275,276,1,143,142,2,2,35,245,244,292,293,1,141,140,7,7,35,235,234,282,283,1,144,117,2,2,35,220,251,299,268,1,134,119,2,2,35,259,258,306,307,1,145,121,7,7,35,225,224,272,273,1,146,123,2,2,35,242,241,289,290,1,147,125,2,2,35,266,265,313,314,1,148,127,2,2,35,232,231,279,280,1,149,129,7,2,35,249,248,296,297,1,150,131,2,2,35,256,255,303,304,1,151,133,2,2,35,239,238,286,287,1,153,137,2,2,35,222,221,269,270,1,152,135,2,2,35,263,262,310,311,1,154,139,2,2,35,246,245,293,294,1,156,141,7,2,35,229,228,276,277,1,155,143,2,2,35,236,235,283,284,1,157,144,2,2,35,253,252,300,301,1,158,115,2,2,35,260,259,307,308,1,159,145,7,2,35,226,225,273,274,1,161,146,2,7,35,243,242,290,291,1,160,147,2,2,35,267,266,314,315,1,114,148,2,2,35,250,249,297,298,1,118,150,2,2,35,233,232,280,281,1,116,149,2,2,35,772,773,338,326,1,81,81,162,162,35,774,775,343,344,1,163,163,164,164,35,776,777,330,322,1,165,165,166,166,35,778,779,352,353,1,167,167,168,168,35,780,781,325,336,1,81,81,162,162,35,782,783,320,318,1,169,163,164,170,35,777,784,328,330,1,165,165,166,166,35,785,786,349,350,1,167,167,168,168,35,787,788,327,340,1,163,163,164,164,35,788,789,317,327,1,163,171,172,164,35,790,791,334,332,1,163,163,164,164,35,789,772,326,317,1,171,81,162,172,35,792,774,344,345,1,163,163,164,164,35,793,794,319,323,1,167,173,174,168,35,791,795,347,334,1,163,163,164,164,35,796,780,336,337,1,81,81,162,162,35,784,797,331,328,1,165,165,166,166,35,798,778,353,341,1,167,167,168,168,35,797,799,321,331,1,165,165,166,166,35,800,787,340,342,1,163,163,164,164,35,801,793,323,333,1,167,167,168,168,35,802,785,350,351,1,167,167,168,168,35,794,776,322,319,1,173,165,166,174,35,803,798,341,324,1,167,167,168,168,35,804,801,333,335,1,167,167,168,168,35,773,805,339,338,1,81,81,162,162,35,806,796,337,329,1,81,81,162,162,35,783,790,332,320,1,163,163,164,164,35,807,792,345,346,1,163,163,164,164,35,808,804,335,348,1,167,167,168,168,35,775,800,342,343,1,163,163,164,164,35,781,809,316,325,1,81,175,176,162,35,779,802,351,352,1,167,167,168,168,35,805,806,329,339,1,81,81,162,162,35,799,782,318,321,1,165,169,170,166,35,809,803,324,316,1,175,167,168,176,35,795,807,346,347,1,163,163,164,164,35,786,808,348,349,1,167,167,168,168,35,658,659,602,590,0,90,90,177,177,35,660,661,615,616,0,70,70,178,178,35,662,663,592,584,0,88,88,179,179,35,664,665,601,607,0,81,81,180,180,35,666,667,613,604,0,90,90,177,177,35,665,668,600,601,0,81,81,180,180,35,669,670,619,614,0,70,70,178,178,35,671,672,588,589,0,72,90,177,181,35,673,674,595,606,0,81,81,180,180,35,675,676,596,582,0,81,81,180,180,35,677,678,610,611,0,90,90,177,177,35,679,660,616,617,0,70,70,178,178,35,680,681,593,603,0,70,70,178,178,35,682,675,582,583,0,102,81,180,182,35,681,683,585,593,0,70,80,183,178,35,684,685,597,608,0,90,90,177,177,35,663,686,599,592,0,88,88,179,179,35,687,669,614,594,0,70,70,178,178,35,668,673,606,600,0,81,81,180,180,35,672,658,590,588,0,90,90,177,177,35,688,677,611,612,0,90,90,177,177,35,685,682,583,597,0,90,102,182,177,35,689,679,617,618,0,70,70,178,178,35,683,662,584,585,0,80,88,179,183,35,659,666,604,602,0,90,90,177,177,35,690,687,594,586,0,70,70,178,178,35,691,684,608,609,0,90,90,177,177,35,661,692,605,615,0,70,70,178,178,35,693,694,591,598,0,88,88,179,179,35,694,671,589,591,0,88,72,181,179,35,676,664,607,596,0,81,81,180,180,35,686,693,598,599,0,88,88,179,179,35,667,688,612,613,0,90,90,177,177,35,670,689,618,619,0,70,70,178,178,35,692,680,603,605,0,70,70,178,178,35,695,690,586,587,0,73,70,178,184,35,674,695,587,595,0,81,73,184,180,35,678,691,609,610,0,90,90,177,177,35,506,507,417,400,0,70,70,168,168,35,508,509,416,418,0,90,90,164,164,35,510,511,397,407,0,88,88,166,166,35,512,513,411,424,0,70,70,168,168,35,514,515,415,414,0,81,81,162,162,35,511,516,394,397,0,88,72,170,166,35,517,518,421,422,0,90,90,164,164,35,519,510,407,404,0,88,88,166,166,35,520,521,427,428,0,70,70,168,168,35,522,506,400,392,0,73,70,168,176,35,513,523,409,411,0,70,70,168,168,35,524,522,392,401,0,81,73,176,162,35,525,508,418,419,0,90,90,164,164,35,526,512,424,425,0,70,70,168,168,35,527,528,410,408,0,90,90,164,164,35,529,530,406,398,0,88,88,166,166,35,515,531,405,415,0,81,81,162,162,35,531,532,413,405,0,81,81,162,162,35,533,517,422,423,0,90,90,164,164,35,534,520,428,429,0,70,70,168,168,35,535,524,401,412,0,81,81,162,162,35,516,536,396,394,0,72,90,164,170,35,537,514,414,402,0,81,81,162,162,35,538,525,419,420,0,90,90,164,164,35,539,526,425,426,0,70,70,168,168,35,540,537,402,393,0,102,81,162,172,35,523,541,399,409,0,70,70,168,168,35,541,542,395,399,0,70,80,174,168,35,509,543,403,416,0,90,90,164,164,35,507,534,429,417,0,70,70,168,168,35,530,519,404,406,0,88,88,166,166,35,536,527,408,396,0,90,90,164,164,35,532,535,412,413,0,81,81,162,162,35,543,540,393,403,0,90,102,172,164,35,518,538,420,421,0,90,90,164,164,35,521,539,426,427,0,70,70,168,168,35,528,533,423,410,0,90,90,164,164,35,542,529,398,395,0,80,88,166,174,35,462,467,505,500,0,164,164,90,90,35,430,431,393,402,0,166,185,172,162,35,432,433,395,398,0,162,186,174,166,35,434,435,392,400,0,164,187,176,168,35,436,437,394,396,0,168,188,170,164,35,438,436,396,408,0,168,168,164,164,35,437,439,397,394,0,188,162,166,170,35,440,432,398,406,0,162,162,166,166,35,433,441,399,395,0,186,164,168,174,35,442,434,400,417,0,164,164,168,168,35,435,443,401,392,0,187,166,162,176,35,444,430,402,414,0,166,166,162,162,35,431,445,403,393,0,185,168,164,172,35,446,447,404,407,0,162,162,166,166,35,448,449,405,413,0,166,166,162,162,35,447,440,406,404,0,162,162,166,166,35,439,446,407,397,0,162,162,166,166,35,450,438,408,410,0,168,168,164,164,35,441,451,409,399,0,164,164,168,168,35,452,450,410,423,0,168,168,164,164,35,451,453,411,409,0,164,164,168,168,35,443,454,412,401,0,166,166,162,162,35,454,448,413,412,0,166,166,162,162,35,455,444,414,415,0,166,166,162,162,35,449,455,415,405,0,166,166,162,162,35,445,456,416,403,0,168,168,164,164,35,456,457,418,416,0,168,168,164,164,35,457,458,419,418,0,168,168,164,164,35,458,459,420,419,0,168,168,164,164,35,459,460,421,420,0,168,168,164,164,35,460,461,422,421,0,168,168,164,164,35,461,452,423,422,0,168,168,164,164,35,462,442,417,429,0,164,164,168,168,35,453,463,424,411,0,164,164,168,168,35,463,464,425,424,0,164,164,168,168,35,464,465,426,425,0,164,164,168,168,35,465,466,427,426,0,164,164,168,168,35,466,467,428,427,0,164,164,168,168,35,467,462,429,428,0,164,164,168,168,35,437,436,474,475,0,188,168,70,73,35,454,443,481,492,0,166,166,88,88,35,430,444,482,468,0,166,166,88,88,35,459,458,496,497,0,168,168,70,70,35,465,464,502,503,0,164,164,90,90,35,431,430,468,469,0,185,166,88,80,35,451,441,479,489,0,164,164,90,90,35,441,433,471,479,0,164,186,102,90,35,456,445,483,494,0,168,168,70,70,35,440,447,485,478,0,162,162,81,81,35,442,462,500,480,0,164,164,90,90,35,448,454,492,486,0,166,166,88,88,35,436,438,476,474,0,168,168,70,70,35,445,431,469,483,0,168,185,80,70,35,460,459,497,498,0,168,168,70,70,35,466,465,503,504,0,164,164,90,90,35,433,432,470,471,0,186,162,81,102,35,450,452,490,488,0,168,168,70,70,35,434,442,480,472,0,164,164,90,90,35,457,456,494,495,0,168,168,70,70,35,463,453,491,501,0,164,164,90,90,35,446,439,477,484,0,162,162,81,81,35,439,437,475,477,0,162,188,73,81,35,444,455,493,482,0,166,166,88,88,35,447,446,484,485,0,162,162,81,81,35,461,460,498,499,0,168,168,70,70,35,467,466,504,505,0,164,164,90,90,35,453,451,489,491,0,164,164,90,90,35,435,434,472,473,0,187,164,90,72,35,443,435,473,481,0,166,187,72,88,35,458,457,495,496,0,168,168,70,70,35,438,450,488,476,0,168,168,70,70,35,464,463,501,502,0,164,164,90,90,35,455,449,487,493,0,166,166,88,88,35,432,440,478,470,0,162,162,81,81,35,452,461,499,490,0,168,168,70,70,35,449,448,486,487,0,166,166,88,88,35,734,755,507,506,0,70,70,70,70,35,735,756,509,508,0,90,90,90,90,35,736,757,511,510,0,88,88,88,88,35,737,758,513,512,0,70,70,70,70,35,738,759,515,514,0,81,81,81,81,35,757,760,516,511,0,88,72,72,88,35,739,761,518,517,0,90,90,90,90,35,740,736,510,519,0,88,88,88,88,35,741,762,521,520,0,70,70,70,70,35,742,734,506,522,0,73,70,70,73,35,758,763,523,513,0,70,70,70,70,35,743,742,522,524,0,81,73,73,81,35,744,735,508,525,0,90,90,90,90,35,745,737,512,526,0,70,70,70,70,35,746,764,528,527,0,90,90,90,90,35,747,765,530,529,0,88,88,88,88,35,759,766,531,515,0,81,81,81,81,35,766,767,532,531,0,81,81,81,81,35,748,739,517,533,0,90,90,90,90,35,749,741,520,534,0,70,70,70,70,35,750,743,524,535,0,81,81,81,81,35,760,768,536,516,0,72,90,90,72,35,751,738,514,537,0,81,81,81,81,35,752,744,525,538,0,90,90,90,90,35,753,745,526,539,0,70,70,70,70,35,754,751,537,540,0,102,81,81,102,35,763,769,541,523,0,70,70,70,70,35,769,770,542,541,0,70,80,80,70,35,756,771,543,509,0,90,90,90,90,35,755,749,534,507,0,70,70,70,70,35,765,740,519,530,0,88,88,88,88,35,768,746,527,536,0,90,90,90,90,35,767,750,535,532,0,81,81,81,81,35,771,754,540,543,0,90,102,102,90,35,761,752,538,518,0,90,90,90,90,35,762,753,539,521,0,70,70,70,70,35,764,748,533,528,0,90,90,90,90,35,770,747,529,542,0,80,88,88,80,35,620,621,317,326,1,189,189,172,162,35,622,623,319,322,1,189,189,174,166,35,624,625,316,324,1,189,189,176,168,35,626,627,318,320,1,189,189,170,164,35,628,626,320,332,1,190,189,164,164,35,627,629,321,318,1,189,189,166,170,35,630,622,322,330,1,189,189,166,166,35,623,631,323,319,1,189,189,168,174,35,632,624,324,341,1,189,189,168,168,35,625,633,325,316,1,189,189,162,176,35,634,620,326,338,1,189,189,162,162,35,621,635,327,317,1,189,189,164,172,35,636,637,328,331,1,189,189,166,166,35,638,639,329,337,1,189,189,162,162,35,637,630,330,328,1,189,189,166,166,35,629,636,331,321,1,189,189,166,166,35,640,628,332,334,1,189,190,164,164,35,631,641,333,323,1,189,189,168,168,35,642,640,334,347,1,189,189,164,164,35,641,643,335,333,1,189,189,168,168,35,633,644,336,325,1,189,189,162,162,35,644,638,337,336,1,189,189,162,162,35,645,634,338,339,1,189,189,162,162,35,639,645,339,329,1,189,189,162,162,35,635,646,340,327,1,189,189,164,164,35,646,647,342,340,1,189,189,164,164,35,647,648,343,342,1,189,189,164,164,35,648,649,344,343,1,189,189,164,164,35,649,650,345,344,1,189,189,164,164,35,650,651,346,345,1,189,189,164,164,35,651,642,347,346,1,189,189,164,164,35,652,632,341,353,1,189,189,168,168,35,643,653,348,335,1,189,189,168,168,35,653,654,349,348,1,189,189,168,168,35,654,655,350,349,1,189,189,168,168,35,655,656,351,350,1,189,189,168,168,35,656,657,352,351,1,189,189,168,168,35,657,652,353,352,1,189,189,168,168,35,696,697,364,355,0,2,2,180,191,35,698,699,360,357,0,2,2,179,192,35,700,701,362,354,0,2,2,178,193,35,702,703,358,356,0,2,2,177,194,35,703,704,370,358,0,2,7,177,177,35,705,702,356,359,0,2,2,194,179,35,699,706,368,360,0,2,2,179,179,35,707,698,357,361,0,2,2,192,178,35,701,708,379,362,0,2,2,178,178,35,709,700,354,363,0,2,2,193,180,35,697,710,376,364,0,2,2,180,180,35,711,696,355,365,0,2,2,191,177,35,712,713,369,366,0,2,2,179,179,35,714,715,375,367,0,2,2,180,180,35,706,712,366,368,0,2,2,179,179,35,713,705,359,369,0,2,2,179,179,35,704,716,372,370,0,7,2,177,177,35,717,707,361,371,0,2,2,178,178,35,716,718,385,372,0,2,2,177,177,35,719,717,371,373,0,2,2,178,178,35,720,709,363,374,0,2,2,180,180,35,715,720,374,375,0,2,2,180,180,35,710,721,377,376,0,2,2,180,180,35,721,714,367,377,0,2,2,180,180,35,722,711,365,378,0,2,2,177,177,35,723,722,378,380,0,2,2,177,177,35,724,723,380,381,0,2,2,177,177,35,725,724,381,382,0,2,2,177,177,35,726,725,382,383,0,2,2,177,177,35,727,726,383,384,0,2,2,177,177,35,718,727,384,385,0,2,2,177,177,35,708,728,391,379,0,2,2,178,178,35,729,719,373,386,0,2,2,178,178,35,730,729,386,387,0,2,2,178,178,35,731,730,387,388,0,2,2,178,178,35,732,731,388,389,0,2,2,178,178,35,733,732,389,390,0,2,2,178,178,35,728,733,390,391,0,2,2,178,178,35,544,545,621,620,1,162,186,189,189,35,546,547,623,622,1,166,185,189,189,35,548,549,625,624,1,168,188,189,189,35,550,551,627,626,1,164,187,189,189,35,552,550,626,628,1,164,164,189,190,35,551,553,629,627,1,187,166,189,189,35,554,546,622,630,1,166,166,189,189,35,547,555,631,623,1,185,168,189,189,35,556,548,624,632,1,168,168,189,189,35,549,557,633,625,1,188,162,189,189,35,558,544,620,634,1,162,162,189,189,35,545,559,635,621,1,186,164,189,189,35,560,561,637,636,1,166,166,189,189,35,562,563,639,638,1,162,162,189,189,35,561,554,630,637,1,166,166,189,189,35,553,560,636,629,1,166,166,189,189,35,564,552,628,640,1,164,164,190,189,35,555,565,641,631,1,168,168,189,189,35,566,564,640,642,1,164,164,189,189,35,565,567,643,641,1,168,168,189,189,35,557,568,644,633,1,162,162,189,189,35,568,562,638,644,1,162,162,189,189,35,569,558,634,645,1,162,162,189,189,35,563,569,645,639,1,162,162,189,189,35,559,570,646,635,1,164,164,189,189,35,570,571,647,646,1,164,164,189,189,35,571,572,648,647,1,164,164,189,189,35,572,573,649,648,1,164,164,189,189,35,573,574,650,649,1,164,164,189,189,35,574,575,651,650,1,164,164,189,189,35,575,566,642,651,1,164,164,189,189,35,576,556,632,652,1,168,168,189,189,35,567,577,653,643,1,168,168,189,189,35,577,578,654,653,1,168,168,189,189,35,578,579,655,654,1,168,168,189,189,35,579,580,656,655,1,168,168,189,189,35,580,581,657,656,1,168,168,189,189,35,581,576,652,657,1,168,168,189,189,35,552,564,659,658,0,164,164,90,90,35,578,577,661,660,0,168,168,70,70,35,546,554,663,662,0,166,166,88,88,35,569,563,665,664,0,162,162,81,81,35,566,575,667,666,0,164,164,90,90,35,563,562,668,665,0,162,162,81,81,35,576,581,670,669,0,168,168,70,70,35,551,550,672,671,0,187,164,90,72,35,568,557,674,673,0,162,162,81,81,35,544,558,676,675,0,162,162,81,81,35,573,572,678,677,0,164,164,90,90,35,579,578,660,679,0,168,168,70,70,35,565,555,681,680,0,168,168,70,70,35,545,544,675,682,0,186,162,81,102,35,555,547,683,681,0,168,185,80,70,35,570,559,685,684,0,164,164,90,90,35,554,561,686,663,0,166,166,88,88,35,556,576,669,687,0,168,168,70,70,35,562,568,673,668,0,162,162,81,81,35,550,552,658,672,0,164,164,90,90,35,574,573,677,688,0,164,164,90,90,35,559,545,682,685,0,164,186,102,90,35,580,579,679,689,0,168,168,70,70,35,547,546,662,683,0,185,166,88,80,35,564,566,666,659,0,164,164,90,90,35,548,556,687,690,0,168,168,70,70,35,571,570,684,691,0,164,164,90,90,35,577,567,692,661,0,168,168,70,70,35,560,553,694,693,0,166,166,88,88,35,553,551,671,694,0,166,187,72,88,35,558,569,664,676,0,162,162,81,81,35,561,560,693,686,0,166,166,88,88,35,575,574,688,667,0,164,164,90,90,35,581,580,689,670,0,168,168,70,70,35,567,565,680,692,0,168,168,70,70,35,549,548,690,695,0,188,168,70,73,35,557,549,695,674,0,162,188,73,81,35,572,571,691,678,0,164,164,90,90,35,583,582,697,696,0,182,180,2,2,35,585,584,699,698,0,183,179,2,2,35,587,586,701,700,0,184,178,2,2,35,589,588,703,702,0,181,177,2,2,35,588,590,704,703,0,177,177,7,2,35,591,589,702,705,0,179,181,2,2,35,584,592,706,699,0,179,179,2,2,35,593,585,698,707,0,178,183,2,2,35,586,594,708,701,0,178,178,2,2,35,595,587,700,709,0,180,184,2,2,35,582,596,710,697,0,180,180,2,2,35,597,583,696,711,0,177,182,2,2,35,599,598,713,712,0,179,179,2,2,35,601,600,715,714,0,180,180,2,2,35,592,599,712,706,0,179,179,2,2,35,598,591,705,713,0,179,179,2,2,35,590,602,716,704,0,177,177,2,7,35,603,593,707,717,0,178,178,2,2,35,602,604,718,716,0,177,177,2,2,35,605,603,717,719,0,178,178,2,2,35,606,595,709,720,0,180,180,2,2,35,600,606,720,715,0,180,180,2,2,35,596,607,721,710,0,180,180,2,2,35,607,601,714,721,0,180,180,2,2,35,608,597,711,722,0,177,177,2,2,35,609,608,722,723,0,177,177,2,2,35,610,609,723,724,0,177,177,2,2,35,611,610,724,725,0,177,177,2,2,35,612,611,725,726,0,177,177,2,2,35,613,612,726,727,0,177,177,2,2,35,604,613,727,718,0,177,177,2,2,35,594,614,728,708,0,178,178,2,2,35,615,605,719,729,0,178,178,2,2,35,616,615,729,730,0,178,178,2,2,35,617,616,730,731,0,178,178,2,2,35,618,617,731,732,0,178,178,2,2,35,619,618,732,733,0,178,178,2,2,35,614,619,733,728,0,178,178,2,2,35,362,379,755,734,0,178,178,70,70,35,380,378,756,735,0,177,177,90,90,35,369,359,757,736,0,179,179,88,88,35,386,373,758,737,0,178,178,70,70,35,376,377,759,738,0,180,180,81,81,35,359,356,760,757,0,179,194,72,88,35,384,383,761,739,0,177,177,90,90,35,366,369,736,740,0,179,179,88,88,35,390,389,762,741,0,178,178,70,70,35,354,362,734,742,0,193,178,70,73,35,373,371,763,758,0,178,178,70,70,35,363,354,742,743,0,180,193,73,81,35,381,380,735,744,0,177,177,90,90,35,387,386,737,745,0,178,178,70,70,35,370,372,764,746,0,177,177,90,90,35,360,368,765,747,0,179,179,88,88,35,377,367,766,759,0,180,180,81,81,35,367,375,767,766,0,180,180,81,81,35,385,384,739,748,0,177,177,90,90,35,391,390,741,749,0,178,178,70,70,35,374,363,743,750,0,180,180,81,81,35,356,358,768,760,0,194,177,90,72,35,364,376,738,751,0,180,180,81,81,35,382,381,744,752,0,177,177,90,90,35,388,387,745,753,0,178,178,70,70,35,355,364,751,754,0,191,180,81,102,35,371,361,769,763,0,178,178,70,70,35,361,357,770,769,0,178,192,80,70,35,378,365,771,756,0,177,177,90,90,35,379,391,749,755,0,178,178,70,70,35,368,366,740,765,0,179,179,88,88,35,358,370,746,768,0,177,177,90,90,35,375,374,750,767,0,180,180,81,81,35,365,355,754,771,0,177,191,102,90,35,383,382,752,761,0,177,177,90,90,35,389,388,753,762,0,178,178,70,70,35,372,385,748,764,0,177,177,90,90,35,357,360,747,770,0,192,179,88,80,35,865,848,773,772,1,81,81,81,81,35,866,849,775,774,1,195,195,163,163,35,867,850,777,776,1,196,196,165,165,35,868,851,779,778,1,197,197,167,167,35,869,852,781,780,1,81,81,81,81,35,870,853,783,782,1,198,195,163,169,35,850,854,784,777,1,196,196,165,165,35,871,855,786,785,1,199,199,167,167,35,872,856,788,787,1,200,200,163,163,35,856,857,789,788,1,200,201,171,163,35,873,858,791,790,1,195,195,163,163,35,857,865,772,789,1,201,81,81,171,35,874,866,774,792,1,195,195,163,163,35,875,859,794,793,1,199,202,173,167,35,858,860,795,791,1,195,200,163,163,35,876,869,780,796,1,81,81,81,81,35,854,861,797,784,1,196,196,165,165,35,877,868,778,798,1,199,197,167,167,35,861,862,799,797,1,196,196,165,165,35,878,872,787,800,1,195,200,163,163,35,879,875,793,801,1,197,199,167,167,35,880,871,785,802,1,199,199,167,167,35,859,867,776,794,1,202,196,165,173,35,881,877,798,803,1,199,199,167,167,35,882,879,801,804,1,199,197,167,167,35,848,863,805,773,1,81,81,81,81,35,883,876,796,806,1,81,81,81,81,35,853,873,790,783,1,195,195,163,163,35,884,874,792,807,1,200,195,163,163,35,885,882,804,808,1,199,199,167,167,35,849,878,800,775,1,195,195,163,163,35,852,864,809,781,1,81,203,175,81,35,851,880,802,779,1,197,199,167,167,35,863,883,806,805,1,81,81,81,81,35,862,870,782,799,1,196,198,169,165,35,864,881,803,809,1,203,199,167,175,35,860,884,807,795,1,200,200,163,163,35,855,885,808,786,1,199,199,167,167,35,68,827,819,1,1,1,10,20,8,35,827,810,848,865,1,10,10,81,81,35,828,811,849,866,1,17,17,195,195,35,829,812,850,867,1,12,11,196,196,35,830,813,851,868,1,14,14,197,197,35,831,814,852,869,1,10,10,81,81,35,832,815,853,870,1,16,17,195,198,35,812,816,854,850,1,11,11,196,196,35,833,817,855,871,1,14,14,199,199,35,834,818,856,872,1,17,17,200,200,35,818,819,857,856,1,17,20,201,200,35,835,820,858,873,1,17,17,195,195,35,819,827,865,857,1,20,10,81,201,35,836,828,866,874,1,17,17,195,195,35,837,821,859,875,1,14,15,202,199,35,820,822,860,858,1,17,17,200,195,35,838,831,869,876,1,10,10,81,81,35,816,823,861,854,1,11,12,196,196,35,839,830,868,877,1,14,14,197,199,35,823,824,862,861,1,12,12,196,196,35,840,834,872,878,1,17,17,200,195,35,841,837,875,879,1,14,14,199,197,35,842,833,871,880,1,14,14,199,199,35,821,829,867,859,1,15,12,196,202,35,843,839,877,881,1,14,14,199,199,35,844,841,879,882,1,14,14,197,199,35,810,825,863,848,1,10,10,81,81,35,845,838,876,883,1,10,10,81,81,35,815,835,873,853,1,17,17,195,195,35,846,836,874,884,1,17,17,195,200,35,847,844,882,885,1,14,14,199,199,35,811,840,878,849,1,17,17,195,195,35,814,826,864,852,1,10,19,203,81,35,813,842,880,851,1,14,14,199,197,35,825,845,883,863,1,10,10,81,81,35,824,832,870,862,1,12,16,198,196,35,826,843,881,864,1,19,14,199,203,35,822,846,884,860,1,17,17,200,200,35,817,847,885,855,1,14,14,199,199],normals:[.929716,-.264595,.256081,.940733,-.339061,0,1,0,0,.948546,.158391,-.274087,.974914,.222541,0,.948546,.158391,.274087,.943571,0,.331126,.999969,0,0,.929716,-.264595,-.256081,.943571,0,-.331095,.425459,-.904965,0,.569964,.821619,0,.569994,.821619,0,.943571,0,.331095,.456374,0,.889767,.504257,.612384,.608814,.504257,.612384,-.608814,.456374,0,-.889767,.943571,0,-.331126,.437727,-.642903,.628498,.437727,-.642903,-.628498,.72982,.379772,.568377,.72982,.483383,.483383,.72982,-.683584,0,.72982,-.670461,.133335,.72982,.261605,-.63155,.72982,.133335,-.670461,.72982,.133335,.670461,.72982,.261605,.63155,.72982,-.63155,-.261605,.72982,-.670461,-.133335,.72982,.483383,-.483383,.72982,.379772,-.568377,.72982,-.133335,.670461,.72982,0,.683584,.72982,-.483383,-.483383,.72982,-.568377,-.379772,.72982,.63155,-.261605,.72982,.568377,-.379772,.72982,-.379772,.568377,.72982,-.261605,.63155,.72982,.683584,0,.72982,.670461,-.133335,.72982,-.379772,-.568377,.72982,-.568377,.379772,.72982,-.483383,.483383,.72982,.63155,.261605,.72982,.670461,.133366,.72982,-.133335,-.670461,.72982,-.261605,-.63155,.72982,-.63155,.261605,.72982,.568377,.379772,.72982,0,-.683584,.753563,-.657338,0,.753624,-.607562,.250771,.753624,-.607562,-.250771,.753868,-.252144,-.606647,.753746,-.465468,-.463851,.753624,.607562,.25074,.753563,.657338,0,.753868,.252144,-.606647,.753929,0,-.656911,.753868,.252174,.606647,.753746,.465468,.46382,.753624,.607562,-.250771,.753746,.465468,-.46382,.753868,-.252174,.606647,.753929,0,.656911,.753746,-.465468,.46382,0,-.383831,.923399,0,0,1,0,.831446,-.555559,0,.707083,-.707083,0,-.707083,.707083,0,-.555559,.831446,0,.924345,-.381512,0,.708335,-.705832,0,-.382672,-.923856,0,-.555559,-.831446,0,.555559,.831446,0,.707083,.707083,0,-1,0,0,-.924345,.381512,0,-.980773,.195074,0,-.923856,.382672,0,.999969,0,0,.980773,-.195074,0,.924345,.381512,0,1,0,0,.195074,-.980773,0,0,-1,0,.195074,.980773,0,-.383831,-.923399,0,-.708335,-.705832,0,.831446,.555559,0,.923856,.382672,0,-.923856,-.382672,0,-.980773,-.195074,0,.383831,.923399,0,.555559,-.831446,0,-.382672,.923856,0,.383831,-.923399,0,-.707083,-.707083,0,-.708335,.705832,0,.923856,-.382672,0,-.831446,.555559,0,-.195074,-.980773,0,.382672,.923856,0,-.924345,-.381512,0,.980773,.195074,0,.708335,.705832,0,.382672,-.923856,0,-.195074,.980773,0,-.831446,-.555559,.665792,.689657,.284646,.665853,.746055,0,.68569,-.142003,-.713889,.68569,-.278542,-.672475,.68569,.278542,.672475,.68569,.40437,.605213,.665609,-.286447,-.689108,.6657,-.52855,-.526688,.68569,.713889,.142003,.68569,.727866,0,.68569,-.727866,0,.68569,-.713889,.142003,.665548,0,.7463,.665609,.286447,.689108,.68569,.278542,-.672475,.68569,.142003,-.713889,.68569,-.142003,.713889,.68569,0,.727866,.6657,.52855,-.526688,.665609,.286447,-.689108,.68569,.514664,.514695,.68569,.605213,.40437,.68569,-.605213,-.40437,.68569,-.672475,-.278542,.665792,-.689657,.284646,.6657,-.52855,.526688,.68569,-.514695,.514664,.68569,-.40437,.605213,.68569,.605213,-.40437,.68569,.514664,-.514664,.68569,-.40437,-.605213,.665792,-.689657,-.284646,.68569,.713889,-.142003,.68569,-.672475,.278542,.6657,.52855,.526688,.68569,0,-.727866,.68569,.142003,.713889,.665548,0,-.74633,.68569,.672475,.278542,.68569,-.713889,-.142003,.665609,-.286447,.689108,.68569,.40437,-.605213,.68569,-.278542,.672475,.68569,-.514695,-.514664,.665792,.689657,-.284646,.665853,-.746055,0,.68569,-.605213,.40437,.68569,.672475,-.278542,-.707083,-.707083,0,.0260018,0,-.999634,-.707083,0,-.707083,.0455031,.998962,0,-.707083,.707083,0,.0260018,0,.999634,-.707083,0,.707083,.0495315,.710227,-.7022,-.577349,.577349,-.577349,.0185247,-.701285,-.712607,-.577349,-.577349,-.577349,.0495315,.710227,.7022,-.577349,.577349,.577349,.0185247,-.701285,.712607,-.577349,-.577349,.577349,.707083,0,-.707083,.707083,0,.707083,.707083,.707083,0,.707083,-.707083,0,.904508,.301492,-.301492,.904508,-.301492,-.301492,.904508,.301492,.301492,.904508,-.301492,.301492,-.904508,.301492,.301492,-.904508,-.301492,-.301492,-.904508,.301492,-.301492,-.904508,-.301492,.301492,-1,0,0,-.999969,0,0,.577349,-.577349,-.577349,.577349,.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.0520341,0,-.998627,.0909452,.995849,0,.0520341,0,.998627,.100864,.702506,-.704459,.0520035,0,.998627,.0520035,0,-.998627,.0367748,-.707083,-.706137,.100864,.702506,.704459,.0367748,-.707083,.706137],uvs:[]}},GiK3:function(e,t,n){"use strict";e.exports=n("vttU")},Hfh7:function(e,t){e.exports="/media/CodersCode.png"},IUwE:function(e,t){e.exports={materials:[{colorDiffuse:[.64,.64,.64],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"Aluminium",depthWrite:!0,DbgIndex:0,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:15658734,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0},{colorDiffuse:[.8,.8,.8],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"BoltSteel",depthWrite:!0,DbgIndex:1,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:15597568,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0},{colorDiffuse:[.462434,.66488,.8],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"Chrome",depthWrite:!0,DbgIndex:2,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:60928,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0},{colorDiffuse:[.14309,.14309,.14309],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"Cloth",depthWrite:!0,DbgIndex:3,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:238,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0},{colorDiffuse:[.0117357,.0117357,.0117357],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"MattePlastic",depthWrite:!0,DbgIndex:4,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:15658496,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0}],metadata:{generator:"io_three",version:3,vertices:3085,faces:3024,uvs:1,type:"Geometry",materials:5,normals:1790},vertices:[1.54008,3.38435,-.406665,1.54095,3.37854,-.407751,1.54095,3.38435,-.40826,1.54095,3.3729,-.40624,1.54095,3.36761,-.403773,1.54008,3.35673,-.390718,1.54095,3.36283,-.400425,1.54095,3.3587,-.396297,1.54095,3.35535,-.391515,1.54095,3.35288,-.386225,1.54095,3.35137,-.380586,1.54095,3.35086,-.374771,1.54008,3.35673,-.358823,1.54095,3.35137,-.368955,1.54095,3.35288,-.363317,1.54095,3.35535,-.358026,1.54095,3.3587,-.353244,1.54095,3.36283,-.349116,1.54095,3.36761,-.345768,1.54008,3.38435,-.342876,1.54095,3.3729,-.343301,1.54095,3.37854,-.34179,1.54095,3.38435,-.341281,1.50484,3.38435,-.406665,1.50484,3.35673,-.390718,1.50484,3.35673,-.358823,1.50484,3.38435,-.342876,1.54095,3.39017,-.407751,1.54095,3.39581,-.40624,1.54095,3.4011,-.403773,1.54008,3.41198,-.390718,1.54095,3.40588,-.400425,1.54095,3.41001,-.396297,1.54095,3.41336,-.391515,1.54095,3.41582,-.386225,1.54095,3.41733,-.380586,1.54095,3.41784,-.374771,1.54008,3.41198,-.358823,1.54095,3.41733,-.368955,1.54095,3.41582,-.363317,1.54095,3.41336,-.358026,1.54095,3.41001,-.353244,1.54095,3.40588,-.349116,1.54095,3.4011,-.345768,1.54095,3.39581,-.343301,1.54095,3.39017,-.34179,1.50484,3.41198,-.390718,1.50484,3.41198,-.358823,1.54095,3.37707,-.41607,1.54095,3.38435,-.416707,1.54095,3.37001,-.414178,1.54095,3.36339,-.411088,1.53951,3.37691,-.41697,1.54053,3.38435,-.41697,1.53629,3.36899,-.41697,1.53029,3.35999,-.41697,1.53029,3.37691,-.41697,1.53029,3.38435,-.41697,1.53029,3.36899,-.41697,1.49363,3.37691,-.41697,1.49363,3.38435,-.41697,1.49363,3.36899,-.41697,1.49363,3.35999,-.41697,1.49363,3.37703,-.416329,1.49363,3.36992,-.414425,1.49363,3.36325,-.411317,1.49322,3.37703,-.416329,1.49322,3.38435,-.41697,1.49322,3.36992,-.414425,1.49322,3.36325,-.411317,1.49322,3.38031,-.397699,1.49322,3.38435,-.398052,1.49322,3.37639,-.396648,1.49322,3.37271,-.394933,1.4928,3.38036,-.397439,1.4928,3.38435,-.397789,1.4928,3.37648,-.396401,1.4928,3.37284,-.394705,1.54095,3.39164,-.41607,1.54095,3.3987,-.414178,1.54095,3.40532,-.411088,1.53951,3.39179,-.41697,1.53629,3.39971,-.41697,1.53029,3.40872,-.41697,1.53029,3.39179,-.41697,1.53029,3.39971,-.41697,1.49363,3.39179,-.41697,1.49363,3.39971,-.41697,1.49363,3.40872,-.41697,1.49363,3.39168,-.416329,1.49363,3.39879,-.414425,1.49363,3.40545,-.411317,1.49322,3.39168,-.416329,1.49322,3.39879,-.414425,1.49322,3.40545,-.411317,1.49322,3.3884,-.397699,1.49322,3.39232,-.396648,1.49322,3.39599,-.394933,1.4928,3.38835,-.397439,1.4928,3.39223,-.396401,1.4928,3.39586,-.394705,1.54095,3.41648,-.401727,1.54095,3.42067,-.395739,1.54095,3.41131,-.406896,1.53951,3.41718,-.402315,1.54053,3.4209,-.395871,1.53629,3.41322,-.409172,1.53029,3.41718,-.402315,1.53029,3.4209,-.395871,1.53029,3.41322,-.409172,1.49363,3.41718,-.402315,1.49363,3.4209,-.395871,1.49363,3.41322,-.409172,1.49363,3.41668,-.401896,1.49363,3.41148,-.407098,1.49322,3.41668,-.401896,1.49322,3.4209,-.395871,1.49322,3.41148,-.407098,1.49322,3.40219,-.389736,1.49322,3.40452,-.386412,1.49322,3.39932,-.392606,1.4928,3.40199,-.389566,1.4928,3.40429,-.38628,1.4928,3.39915,-.392404,1.54095,3.42376,-.389114,1.54095,3.42565,-.382053,1.54095,3.42629,-.374771,1.53951,3.42462,-.389426,1.53629,3.42858,-.382569,1.53029,3.43308,-.374771,1.53029,3.42462,-.389426,1.53029,3.42858,-.382569,1.49363,3.42462,-.389426,1.49363,3.42858,-.382569,1.49363,3.43308,-.374771,1.49363,3.42401,-.389204,1.49363,3.42591,-.382099,1.49363,3.42655,-.374771,1.49322,3.42401,-.389204,1.49322,3.42591,-.382099,1.49322,3.42655,-.374771,1.49322,3.40623,-.382734,1.49322,3.40728,-.378814,1.49322,3.40764,-.374771,1.4928,3.40598,-.382643,1.4928,3.40702,-.378768,1.4928,3.40737,-.374771,1.54095,3.42376,-.360428,1.54095,3.42067,-.353803,1.54095,3.42565,-.367489,1.53951,3.42462,-.360115,1.54053,3.4209,-.353671,1.53629,3.42858,-.366973,1.53029,3.42462,-.360115,1.53029,3.4209,-.353671,1.53029,3.42858,-.366973,1.49363,3.42462,-.360115,1.49363,3.4209,-.353671,1.49363,3.42858,-.366973,1.49363,3.42401,-.360338,1.49363,3.42591,-.367443,1.49322,3.42401,-.360338,1.49322,3.4209,-.353671,1.49322,3.42591,-.367443,1.49322,3.40623,-.366808,1.49322,3.40452,-.36313,1.49322,3.40728,-.370728,1.4928,3.40598,-.366898,1.4928,3.40429,-.363262,1.4928,3.40702,-.370774,1.54095,3.41648,-.347815,1.54095,3.41131,-.342646,1.54095,3.40532,-.338453,1.53951,3.41718,-.347227,1.53629,3.41322,-.340369,1.53029,3.40872,-.332571,1.53029,3.41718,-.347227,1.53029,3.41322,-.340369,1.49363,3.41718,-.347227,1.49363,3.41322,-.340369,1.49363,3.40872,-.332571,1.49363,3.41668,-.347645,1.49363,3.41148,-.342444,1.49363,3.40545,-.338225,1.49322,3.41668,-.347645,1.49322,3.41148,-.342444,1.49322,3.40545,-.338225,1.49322,3.40219,-.359806,1.49322,3.39932,-.356936,1.49322,3.39599,-.354608,1.4928,3.40199,-.359975,1.4928,3.39915,-.357138,1.4928,3.39586,-.354837,1.54095,3.39164,-.333472,1.54095,3.38435,-.332835,1.54095,3.3987,-.335364,1.53951,3.39179,-.332571,1.54053,3.38435,-.332571,1.53629,3.39971,-.332571,1.53029,3.39179,-.332571,1.53029,3.38435,-.332571,1.53029,3.39971,-.332571,1.49363,3.39179,-.332571,1.49363,3.38435,-.332571,1.49363,3.39971,-.332571,1.49363,3.39168,-.333212,1.49363,3.39879,-.335116,1.49322,3.39168,-.333212,1.49322,3.38435,-.332571,1.49322,3.39879,-.335116,1.49322,3.3884,-.351843,1.49322,3.38435,-.351489,1.49322,3.39232,-.352893,1.4928,3.38835,-.352103,1.4928,3.38435,-.351753,1.4928,3.39223,-.353141,1.54095,3.37707,-.333472,1.54095,3.37001,-.335364,1.54095,3.36339,-.338453,1.53951,3.37691,-.332571,1.53629,3.36899,-.332571,1.53029,3.35999,-.332571,1.53029,3.37691,-.332571,1.53029,3.36899,-.332571,1.49363,3.37691,-.332571,1.49363,3.36899,-.332571,1.49363,3.35999,-.332571,1.49363,3.37703,-.333212,1.49363,3.36992,-.335116,1.49363,3.36325,-.338225,1.49322,3.37703,-.333212,1.49322,3.36992,-.335116,1.49322,3.36325,-.338225,1.49322,3.38031,-.351843,1.49322,3.37639,-.352893,1.49322,3.37271,-.354608,1.4928,3.38036,-.352103,1.4928,3.37648,-.353141,1.4928,3.37284,-.354837,1.54095,3.35223,-.347815,1.54095,3.34804,-.353803,1.54095,3.3574,-.342646,1.53951,3.35153,-.347227,1.54053,3.34781,-.353671,1.53629,3.35549,-.340369,1.53029,3.35153,-.347227,1.53029,3.34781,-.353671,1.53029,3.35549,-.340369,1.49363,3.35153,-.347227,1.49363,3.34781,-.353671,1.49363,3.35549,-.340369,1.49363,3.35203,-.347645,1.49363,3.35723,-.342444,1.49322,3.35203,-.347645,1.49322,3.34781,-.353671,1.49322,3.35723,-.342444,1.49322,3.36652,-.359806,1.49322,3.36419,-.36313,1.49322,3.36939,-.356936,1.4928,3.36672,-.359975,1.4928,3.36442,-.363262,1.4928,3.36956,-.357138,1.54095,3.34495,-.360428,1.54095,3.34306,-.367489,1.54095,3.34242,-.374771,1.53951,3.34409,-.360115,1.53629,3.34013,-.366973,1.53029,3.33563,-.374771,1.53029,3.34409,-.360115,1.53029,3.34013,-.366973,1.49363,3.34409,-.360115,1.49363,3.34013,-.366973,1.49363,3.33563,-.374771,1.49363,3.3447,-.360338,1.49363,3.3428,-.367443,1.49363,3.34215,-.374771,1.49322,3.3447,-.360338,1.49322,3.3428,-.367443,1.49322,3.34215,-.374771,1.49322,3.36248,-.366808,1.49322,3.36143,-.370728,1.49322,3.36107,-.374771,1.4928,3.36272,-.366898,1.4928,3.36169,-.370774,1.4928,3.36134,-.374771,1.54095,3.34495,-.389114,1.54095,3.34804,-.395739,1.54095,3.34306,-.382053,1.53951,3.34409,-.389426,1.54053,3.34781,-.395871,1.53629,3.34013,-.382569,1.53029,3.34409,-.389426,1.53029,3.34781,-.395871,1.53029,3.34013,-.382569,1.49363,3.34409,-.389426,1.49363,3.34781,-.395871,1.49363,3.34013,-.382569,1.49363,3.3447,-.389204,1.49363,3.3428,-.382099,1.49322,3.3447,-.389204,1.49322,3.34781,-.395871,1.49322,3.3428,-.382099,1.49322,3.36248,-.382734,1.49322,3.36419,-.386412,1.49322,3.36143,-.378814,1.4928,3.36272,-.382643,1.4928,3.36442,-.38628,1.4928,3.36169,-.378768,1.54095,3.35223,-.401727,1.54095,3.3574,-.406896,1.53951,3.35153,-.402315,1.53629,3.35549,-.409172,1.53029,3.35153,-.402315,1.53029,3.35549,-.409172,1.49363,3.35153,-.402315,1.49363,3.35549,-.409172,1.49363,3.35203,-.401896,1.49363,3.35723,-.407098,1.49322,3.35203,-.401896,1.49322,3.35723,-.407098,1.49322,3.36652,-.389736,1.49322,3.36939,-.392606,1.4928,3.36672,-.389566,1.4928,3.36956,-.392404,1.49266,3.39586,-.394705,1.49243,3.39223,-.396401,1.49219,3.38835,-.397439,1.49196,3.38435,-.397789,1.49257,3.38835,-.352103,1.49233,3.39223,-.353141,1.4921,3.39586,-.354837,1.49187,3.39915,-.357138,1.49163,3.40199,-.359975,1.4914,3.40429,-.363262,1.49116,3.40598,-.366898,1.49093,3.40702,-.370774,1.4907,3.40737,-.374771,1.49046,3.40702,-.378768,1.49023,3.40598,-.382643,1.48999,3.40429,-.38628,1.48976,3.40199,-.389566,1.48952,3.39915,-.392404,1.48929,3.39586,-.394705,1.48906,3.39223,-.396401,1.48882,3.38835,-.397439,1.48859,3.38435,-.397789,1.49266,3.37285,-.354837,1.49243,3.37648,-.353141,1.49219,3.38036,-.352103,1.49196,3.38435,-.351753,1.49172,3.38835,-.352103,1.49149,3.39223,-.353141,1.49126,3.39586,-.354837,1.49102,3.39915,-.357138,1.49079,3.40199,-.359975,1.49055,3.40429,-.363262,1.49032,3.40598,-.366898,1.49009,3.40702,-.370774,1.48985,3.40737,-.374771,1.48962,3.40702,-.378768,1.48938,3.40598,-.382643,1.48915,3.40429,-.38628,1.48892,3.40199,-.389566,1.48868,3.39915,-.392404,1.48845,3.39586,-.394705,1.48821,3.39223,-.396401,1.48798,3.38835,-.397439,1.48775,3.38435,-.397789,1.49257,3.38036,-.397439,1.49233,3.37648,-.396401,1.4921,3.37284,-.394705,1.49187,3.36956,-.392404,1.49163,3.36672,-.389566,1.4914,3.36442,-.38628,1.49116,3.36272,-.382643,1.49093,3.36169,-.378768,1.4907,3.36134,-.374771,1.49046,3.36169,-.370774,1.49023,3.36272,-.366898,1.48999,3.36442,-.363262,1.48976,3.36672,-.359975,1.48952,3.36956,-.357138,1.48929,3.37284,-.354837,1.48906,3.37648,-.353141,1.48882,3.38036,-.352103,1.48859,3.38435,-.351753,1.48835,3.38835,-.352103,1.48812,3.39223,-.353141,1.48789,3.39586,-.354837,1.48765,3.39915,-.357138,1.48742,3.40199,-.359975,1.48718,3.40429,-.363262,1.48695,3.40598,-.366898,1.48672,3.40702,-.370774,1.48648,3.40737,-.374771,1.48625,3.40702,-.378768,1.48601,3.40598,-.382643,1.48578,3.40429,-.38628,1.48555,3.40199,-.389566,1.48531,3.39915,-.392404,1.48508,3.39586,-.394705,1.48484,3.39223,-.396401,1.49172,3.38036,-.397439,1.49149,3.37648,-.396401,1.49126,3.37284,-.394705,1.49102,3.36956,-.392404,1.49079,3.36672,-.389566,1.49055,3.36442,-.38628,1.49032,3.36272,-.382643,1.49009,3.36169,-.378768,1.48985,3.36134,-.374771,1.48962,3.36169,-.370774,1.48938,3.36272,-.366898,1.48915,3.36442,-.363262,1.48892,3.36672,-.359975,1.48868,3.36956,-.357138,1.48845,3.37284,-.354837,1.48821,3.37648,-.353141,1.48798,3.38036,-.352103,1.48775,3.38435,-.351753,1.48751,3.38835,-.352103,1.48728,3.39223,-.353141,1.48704,3.39586,-.354837,1.48681,3.39915,-.357138,1.48658,3.40199,-.359975,1.48634,3.40429,-.363262,1.48611,3.40598,-.366898,1.48587,3.40702,-.370774,1.48564,3.40737,-.374771,1.48541,3.40702,-.378768,1.48517,3.40598,-.382643,1.48494,3.40429,-.38628,1.48835,3.38037,-.39736,1.48812,3.37654,-.396249,1.48789,3.37297,-.394495,1.48765,3.36977,-.392156,1.48742,3.36703,-.389307,1.48718,3.36484,-.386037,1.48695,3.36326,-.38245,1.48672,3.36232,-.378656,1.48648,3.36206,-.374771,1.48625,3.36248,-.370914,1.48601,3.36356,-.367202,1.48578,3.36526,-.363746,1.48555,3.36753,-.36065,1.48531,3.37028,-.358004,1.48508,3.37345,-.355886,1.48484,3.37692,-.354355,1.48751,3.38037,-.39736,1.48728,3.37654,-.396249,1.48704,3.37297,-.394495,1.48681,3.36977,-.392156,1.48658,3.36703,-.389307,1.48634,3.36484,-.386037,1.48611,3.36326,-.38245,1.48587,3.36232,-.378656,1.48564,3.36206,-.374771,1.48541,3.36248,-.370914,1.48517,3.36356,-.367202,1.48494,3.36526,-.363746,1.49451,3.83897,-.648892,1.49451,3.96556,-.636423,1.49451,4.08729,-.599498,1.49451,4.19948,-.539534,1.49451,4.3785,-.360505,1.49451,4.43847,-.24832,1.49451,4.47539,-.126593,1.49451,4.48786,-5.73259e-7,1.49451,4.47539,.126592,1.49451,4.43847,.248319,1.49451,4.3785,.360504,1.49451,4.19948,.539533,1.49451,4.08729,.599497,1.49451,3.96556,.636422,1.49451,3.83897,.64889,1.49451,3.71238,.636422,1.49451,3.59065,.599497,1.49451,3.47847,.539533,1.49451,3.29944,.360504,1.49451,3.23947,.248319,1.49451,3.20255,.126591,1.49451,3.19008,-109411e-11,1.49451,3.20255,-.126594,1.49451,3.23947,-.248321,1.49451,3.29944,-.360506,1.49451,3.47847,-.539534,1.49451,3.59065,-.599498,1.49451,3.71238,-.636424,1.49451,3.83897,-.513803,1.49451,3.93921,-.503931,1.49451,4.0356,-.474693,1.49451,4.12442,-.427212,1.49451,4.20228,-.363314,1.49451,4.26618,-.285454,1.49451,4.31366,-.196624,1.49451,4.3429,-.100239,1.49451,4.35277,-6.01514e-7,1.49451,4.3429,.100237,1.49451,4.31366,.196623,1.49451,4.26618,.285453,1.49451,4.20228,.363313,1.49451,4.12442,.427211,1.49451,4.0356,.474691,1.49451,3.93921,.50393,1.49451,3.83897,.513802,1.49451,3.73873,.50393,1.49451,3.64235,.474691,1.49451,3.55352,.427211,1.49451,3.47566,.363313,1.49451,3.41176,.285453,1.49451,3.36428,.196623,1.49451,3.33504,.100237,1.49451,3.32517,-101393e-11,1.49451,3.33504,-.100239,1.49451,3.36428,-.196625,1.49451,3.41176,-.285455,1.49451,3.47566,-.363314,1.49451,3.55352,-.427212,1.49451,3.64235,-.474693,1.49451,3.73873,-.503931,1.4923,3.38009,-.190074,1.4923,3.42599,-.275945,1.4923,4.19018,-.35121,1.4923,4.25195,-.275944,1.4923,3.93587,.487141,1.4923,3.83897,.496685,1.4923,3.34229,-100348e-11,1.4923,3.35183,-.0968996,1.4923,4.02905,-.458878,1.4923,4.11492,-.41298,1.4923,4.11492,.412978,1.4923,4.02904,.458877,1.4923,3.38009,.190072,1.4923,3.35183,.0968976,1.4923,3.83897,-.496686,1.4923,3.93587,-.487142,1.4923,4.25195,.275943,1.4923,4.19018,.351209,1.4923,3.74207,-.487143,1.4923,3.48776,.351209,1.4923,3.42599,.275943,1.4923,4.32611,.0968979,1.4923,4.29785,.190073,1.4923,3.56303,-.41298,1.4923,3.6489,-.458879,1.4923,3.6489,.458877,1.4923,3.56303,.412978,1.4923,4.32611,-.0968991,1.4923,4.33566,-6.04801e-7,1.4923,3.48776,-.351211,1.4923,3.74207,.487141,1.4923,4.29785,-.190074,1.49451,3.32437,-.102362,1.49451,3.35423,-.200789,1.49451,4.13047,-.436259,1.49451,4.20998,-.371008,1.49451,4.03976,.484744,1.49451,3.94133,.514601,1.49451,3.32437,.10236,1.49451,3.31429,-101985e-11,1.49451,3.94133,-.514602,1.49451,4.03976,-.484745,1.49451,4.20998,.371007,1.49451,4.13047,.436258,1.49451,3.40271,.291498,1.49451,3.35423,.200787,1.49451,4.32372,.200787,1.49451,4.27523,.291498,1.49451,3.63818,-.484745,1.49451,3.73661,-.514602,1.49451,3.54747,.436258,1.49451,3.46796,.371006,1.49451,4.36366,-5.98693e-7,1.49451,4.35357,.10236,1.49451,3.46796,-.371008,1.49451,3.54747,-.436259,1.49451,3.73661,.514601,1.49451,3.63818,.484744,1.49451,4.32372,-.200788,1.49451,4.35357,-.102361,1.49451,3.40271,-.2915,1.49451,4.27523,-.291499,1.49451,3.83897,.524683,1.49451,3.83897,-.524684,1.49451,4.29781,-.458836,1.49451,4.29781,.458835,1.49451,3.38014,.458835,1.49451,3.38014,-.458836,1.49451,3.33979,-.409671,1.49451,3.43534,-.331254,1.49451,3.35108,-.326003,1.49451,3.42405,-.414922,1.49451,3.4293,.499184,1.49451,3.50772,.403632,1.49451,3.42405,.414921,1.49451,3.51297,.487895,1.49451,4.33816,.409669,1.49451,4.2426,.331252,1.49451,4.32687,.326001,1.49451,4.25389,.414921,1.49451,4.24864,-.499185,1.49451,4.17022,-.403633,1.49451,4.25389,-.414922,1.49451,4.16497,-.487896,1.49451,4.21414,-.493729,1.49451,4.24133,-.482465,1.49451,4.2526,-.455271,1.49451,4.24133,-.428076,1.49451,4.21414,-.416812,1.49451,4.18694,-.428076,1.49451,4.17568,-.455271,1.49451,4.18694,-.482465,1.49451,4.29424,.336708,1.49451,4.32144,.347972,1.49451,4.3327,.375166,1.49451,4.32144,.402361,1.49451,4.29424,.413625,1.49451,4.26705,.402361,1.49451,4.25578,.375166,1.49451,4.26705,.347972,1.49451,3.4638,.416811,1.49451,3.491,.428075,1.49451,3.50226,.455269,1.49451,3.491,.482464,1.49451,3.4638,.493728,1.49451,3.43661,.482464,1.49451,3.42535,.455269,1.49451,3.43661,.428075,1.49451,3.3837,-.413627,1.49451,3.4109,-.402362,1.49451,3.42216,-.375168,1.49451,3.4109,-.347974,1.49451,3.3837,-.336709,1.49451,3.35651,-.347974,1.49451,3.34524,-.375168,1.49451,3.35651,-.402362,1.49451,3.3837,-.417473,1.49451,3.35379,-.405082,1.49451,3.3414,-.375168,1.49451,3.35379,-.345254,1.49451,3.3837,-.332863,1.49451,3.41362,-.345254,1.49451,3.42601,-.375168,1.49451,3.41362,-.405082,1.49451,4.18422,-.485185,1.49451,4.17183,-.455271,1.49451,4.18422,-.425357,1.49451,4.21414,-.412966,1.49451,4.24405,-.425357,1.49451,4.25644,-.455271,1.49451,4.24405,-.485185,1.49451,4.21414,-.497575,1.49451,4.29424,.417471,1.49451,4.32416,.40508,1.49451,4.33655,.375166,1.49451,4.32416,.345252,1.49451,4.29424,.332862,1.49451,4.26433,.345252,1.49451,4.25194,.375166,1.49451,4.26433,.40508,1.49451,3.49372,.485183,1.49451,3.50611,.455269,1.49451,3.49372,.425356,1.49451,3.4638,.412965,1.49451,3.43389,.425356,1.49451,3.4215,.455269,1.49451,3.43389,.485183,1.49451,3.4638,.497574,1.4913,4.21414,-.493729,1.4913,4.24133,-.482465,1.4913,4.2526,-.455271,1.4913,4.24133,-.428076,1.4913,4.21414,-.416812,1.4913,4.18694,-.428076,1.4913,4.17568,-.455271,1.4913,4.18694,-.482465,1.4913,4.29424,.336708,1.4913,4.32144,.347972,1.4913,4.3327,.375166,1.4913,4.32144,.402361,1.4913,4.29424,.413625,1.4913,4.26705,.402361,1.4913,4.25578,.375166,1.4913,4.26705,.347972,1.4913,3.4638,.416811,1.4913,3.491,.428075,1.4913,3.50226,.455269,1.4913,3.491,.482464,1.4913,3.4638,.493728,1.4913,3.43661,.482464,1.4913,3.42535,.455269,1.4913,3.43661,.428075,1.4913,3.3837,-.413627,1.4913,3.4109,-.402362,1.4913,3.42216,-.375168,1.4913,3.4109,-.347974,1.4913,3.3837,-.336709,1.4913,3.35651,-.347974,1.4913,3.34524,-.375168,1.4913,3.35651,-.402362,1.48742,4.21414,-.493729,1.48742,4.24133,-.482465,1.48742,4.2526,-.455271,1.48742,4.24133,-.428076,1.48742,4.21414,-.416812,1.48742,4.18694,-.428076,1.48742,4.17568,-.455271,1.48742,4.18694,-.482465,1.48742,4.29424,.336708,1.48742,4.32144,.347972,1.48742,4.3327,.375166,1.48742,4.32144,.402361,1.48742,4.29424,.413625,1.48742,4.26705,.402361,1.48742,4.25578,.375166,1.48742,4.26705,.347972,1.48742,3.4638,.416811,1.48742,3.491,.428075,1.48742,3.50226,.455269,1.48742,3.491,.482464,1.48742,3.4638,.493728,1.48742,3.43661,.482464,1.48742,3.42535,.455269,1.48742,3.43661,.428075,1.48742,3.3837,-.413627,1.48742,3.4109,-.402362,1.48742,3.42216,-.375168,1.48742,3.4109,-.347974,1.48742,3.3837,-.336709,1.48742,3.35651,-.347974,1.48742,3.34524,-.375168,1.48742,3.35651,-.402362,1.48742,4.21414,-.475259,1.48742,4.22827,-.469405,1.48742,4.23413,-.455271,1.48742,4.22827,-.441137,1.48742,4.21414,-.435282,1.48742,4.2,-.441137,1.48742,4.19415,-.455271,1.48742,4.2,-.469405,1.48742,4.29424,.355178,1.48742,4.30838,.361032,1.48742,4.31423,.375166,1.48742,4.30838,.3893,1.48742,4.29424,.395155,1.48742,4.28011,.3893,1.48742,4.27425,.375166,1.48742,4.28011,.361032,1.48742,3.4638,.435281,1.48742,3.47794,.441135,1.48742,3.48379,.455269,1.48742,3.47794,.469403,1.48742,3.4638,.475258,1.48742,3.44967,.469403,1.48742,3.44382,.455269,1.48742,3.44967,.441135,1.48742,3.3837,-.395156,1.48742,3.39784,-.389302,1.48742,3.40369,-.375168,1.48742,3.39784,-.361034,1.48742,3.3837,-.35518,1.48742,3.36957,-.361034,1.48742,3.36371,-.375168,1.48742,3.36957,-.389302,1.54008,3.46342,.423672,1.54095,3.45761,.422586,1.54095,3.46342,.422077,1.54095,3.45197,.424097,1.54095,3.44668,.426564,1.54008,3.4358,.439619,1.54095,3.4419,.429912,1.54095,3.43777,.43404,1.54095,3.43442,.438822,1.54095,3.43196,.444113,1.54095,3.43044,.449751,1.54095,3.42994,.455567,1.54008,3.4358,.471514,1.54095,3.43044,.461382,1.54095,3.43196,.467021,1.54095,3.43442,.472311,1.54095,3.43777,.477093,1.54095,3.4419,.481221,1.54095,3.44668,.484569,1.54008,3.46342,.487461,1.54095,3.45197,.487036,1.54095,3.45761,.488547,1.54095,3.46342,.489056,1.50484,3.46342,.423672,1.50484,3.4358,.439619,1.50484,3.4358,.471514,1.50484,3.46342,.487461,1.54095,3.46924,.422586,1.54095,3.47488,.424097,1.54095,3.48017,.426564,1.54008,3.49105,.439619,1.54095,3.48495,.429912,1.54095,3.48908,.43404,1.54095,3.49243,.438822,1.54095,3.49489,.444113,1.54095,3.49641,.449751,1.54095,3.49691,.455567,1.54008,3.49105,.471514,1.54095,3.49641,.461382,1.54095,3.49489,.467021,1.54095,3.49243,.472311,1.54095,3.48908,.477093,1.54095,3.48495,.481221,1.54095,3.48017,.484569,1.54095,3.47488,.487036,1.54095,3.46924,.488547,1.50484,3.49105,.439619,1.50484,3.49105,.471514,1.54095,3.45614,.414268,1.54095,3.46342,.413631,1.54095,3.44908,.41616,1.54095,3.44246,.419249,1.53951,3.45598,.413367,1.54053,3.46342,.413367,1.53629,3.44807,.413367,1.53029,3.43906,.413367,1.53029,3.45598,.413367,1.53029,3.46342,.413367,1.53029,3.44807,.413367,1.49363,3.45598,.413367,1.49363,3.46342,.413367,1.49363,3.44807,.413367,1.49363,3.43906,.413367,1.49363,3.4561,.414008,1.49363,3.44899,.415912,1.49363,3.44233,.419021,1.49322,3.4561,.414008,1.49322,3.46342,.413367,1.49322,3.44899,.415912,1.49322,3.44233,.419021,1.49322,3.45938,.432639,1.49322,3.46342,.432285,1.49322,3.45546,.433689,1.49322,3.45178,.435404,1.4928,3.45943,.432898,1.4928,3.46342,.432549,1.4928,3.45555,.433937,1.4928,3.45192,.435632,1.54095,3.47071,.414268,1.54095,3.47777,.41616,1.54095,3.48439,.419249,1.53951,3.47087,.413367,1.53629,3.47878,.413367,1.53029,3.48779,.413367,1.53029,3.47087,.413367,1.53029,3.47878,.413367,1.49363,3.47087,.413367,1.49363,3.47878,.413367,1.49363,3.48779,.413367,1.49363,3.47075,.414008,1.49363,3.47786,.415912,1.49363,3.48452,.419021,1.49322,3.47075,.414008,1.49322,3.47786,.415912,1.49322,3.48452,.419021,1.49322,3.46747,.432639,1.49322,3.47139,.433689,1.49322,3.47507,.435404,1.4928,3.46742,.432898,1.4928,3.4713,.433937,1.4928,3.47493,.435632,1.54095,3.49555,.428611,1.54095,3.49974,.434599,1.54095,3.49038,.423442,1.53951,3.49625,.428023,1.54053,3.49997,.434467,1.53629,3.49229,.421165,1.53029,3.49625,.428023,1.53029,3.49997,.434467,1.53029,3.49229,.421165,1.49363,3.49625,.428023,1.49363,3.49997,.434467,1.49363,3.49229,.421165,1.49363,3.49575,.428441,1.49363,3.49055,.42324,1.49322,3.49575,.428441,1.49322,3.49997,.434467,1.49322,3.49055,.42324,1.49322,3.48126,.440601,1.49322,3.48359,.443926,1.49322,3.47839,.437732,1.4928,3.48106,.440771,1.4928,3.48336,.444058,1.4928,3.47822,.437934,1.54095,3.50283,.441224,1.54095,3.50472,.448284,1.54095,3.50536,.455567,1.53951,3.50369,.440911,1.53629,3.50765,.447768,1.53029,3.51215,.455567,1.53029,3.50369,.440911,1.53029,3.50765,.447768,1.49363,3.50369,.440911,1.49363,3.50765,.447768,1.49363,3.51215,.455567,1.49363,3.50308,.441133,1.49363,3.50498,.448239,1.49363,3.50562,.455567,1.49322,3.50308,.441133,1.49322,3.50498,.448239,1.49322,3.50562,.455567,1.49322,3.4853,.447604,1.49322,3.48635,.451524,1.49322,3.48671,.455567,1.4928,3.48505,.447694,1.4928,3.48609,.451569,1.4928,3.48644,.455567,1.54095,3.50283,.469909,1.54095,3.49974,.476534,1.54095,3.50472,.462849,1.53951,3.50369,.470222,1.54053,3.49997,.476666,1.53629,3.50765,.463365,1.53029,3.50369,.470222,1.53029,3.49997,.476666,1.53029,3.50765,.463365,1.49363,3.50369,.470222,1.49363,3.49997,.476666,1.49363,3.50765,.463365,1.49363,3.50308,.47,1.49363,3.50498,.462894,1.49322,3.50308,.47,1.49322,3.49997,.476666,1.49322,3.50498,.462894,1.49322,3.4853,.463529,1.49322,3.48359,.467207,1.49322,3.48635,.459609,1.4928,3.48505,.463439,1.4928,3.48336,.467075,1.4928,3.48609,.459564,1.54095,3.49555,.482522,1.54095,3.49038,.487691,1.54095,3.48439,.491884,1.53951,3.49625,.48311,1.53629,3.49229,.489968,1.53029,3.48779,.497766,1.53029,3.49625,.48311,1.53029,3.49229,.489968,1.49363,3.49625,.48311,1.49363,3.49229,.489968,1.49363,3.48779,.497766,1.49363,3.49575,.482692,1.49363,3.49055,.487893,1.49363,3.48452,.492112,1.49322,3.49575,.482692,1.49322,3.49055,.487893,1.49322,3.48452,.492112,1.49322,3.48126,.470532,1.49322,3.47839,.473401,1.49322,3.47507,.475729,1.4928,3.48106,.470362,1.4928,3.47822,.473199,1.4928,3.47493,.475501,1.54095,3.47071,.496865,1.54095,3.46342,.497502,1.54095,3.47777,.494973,1.53951,3.47087,.497766,1.54053,3.46342,.497766,1.53629,3.47878,.497766,1.53029,3.47087,.497766,1.53029,3.46342,.497766,1.53029,3.47878,.497766,1.49363,3.47087,.497766,1.49363,3.46342,.497766,1.49363,3.47878,.497766,1.49363,3.47075,.497125,1.49363,3.47786,.495221,1.49322,3.47075,.497125,1.49322,3.46342,.497766,1.49322,3.47786,.495221,1.49322,3.46747,.478495,1.49322,3.46342,.478848,1.49322,3.47139,.477444,1.4928,3.46742,.478235,1.4928,3.46342,.478585,1.4928,3.4713,.477196,1.54095,3.45614,.496865,1.54095,3.44908,.494973,1.54095,3.44246,.491884,1.53951,3.45598,.497766,1.53629,3.44807,.497766,1.53029,3.43906,.497766,1.53029,3.45598,.497766,1.53029,3.44807,.497766,1.49363,3.45598,.497766,1.49363,3.44807,.497766,1.49363,3.43906,.497766,1.49363,3.4561,.497125,1.49363,3.44899,.495221,1.49363,3.44233,.492112,1.49322,3.4561,.497125,1.49322,3.44899,.495221,1.49322,3.44233,.492112,1.49322,3.45938,.478495,1.49322,3.45546,.477444,1.49322,3.45178,.475729,1.4928,3.45943,.478235,1.4928,3.45555,.477196,1.4928,3.45192,.475501,1.54095,3.4313,.482522,1.54095,3.42711,.476534,1.54095,3.43647,.487691,1.53951,3.4306,.48311,1.54053,3.42688,.476666,1.53629,3.43456,.489968,1.53029,3.4306,.48311,1.53029,3.42688,.476666,1.53029,3.43456,.489968,1.49363,3.4306,.48311,1.49363,3.42688,.476666,1.49363,3.43456,.489968,1.49363,3.4311,.482692,1.49363,3.4363,.487893,1.49322,3.4311,.482692,1.49322,3.42688,.476666,1.49322,3.4363,.487893,1.49322,3.44559,.470532,1.49322,3.44326,.467207,1.49322,3.44846,.473401,1.4928,3.44579,.470362,1.4928,3.44349,.467075,1.4928,3.44863,.473199,1.54095,3.42402,.469909,1.54095,3.42213,.462849,1.54095,3.42149,.455567,1.53951,3.42316,.470222,1.53629,3.4192,.463365,1.53029,3.4147,.455567,1.53029,3.42316,.470222,1.53029,3.4192,.463365,1.49363,3.42316,.470222,1.49363,3.4192,.463365,1.49363,3.4147,.455567,1.49363,3.42377,.47,1.49363,3.42187,.462894,1.49363,3.42123,.455567,1.49322,3.42377,.47,1.49322,3.42187,.462894,1.49322,3.42123,.455567,1.49322,3.44155,.463529,1.49322,3.4405,.459609,1.49322,3.44014,.455567,1.4928,3.4418,.463439,1.4928,3.44076,.459564,1.4928,3.44041,.455567,1.54095,3.42402,.441224,1.54095,3.42711,.434599,1.54095,3.42213,.448285,1.53951,3.42316,.440911,1.54053,3.42688,.434467,1.53629,3.4192,.447768,1.53029,3.42316,.440911,1.53029,3.42688,.434467,1.53029,3.4192,.447768,1.49363,3.42316,.440911,1.49363,3.42688,.434467,1.49363,3.4192,.447768,1.49363,3.42377,.441133,1.49363,3.42187,.448239,1.49322,3.42377,.441133,1.49322,3.42688,.434467,1.49322,3.42187,.448239,1.49322,3.44155,.447604,1.49322,3.44326,.443926,1.49322,3.4405,.451524,1.4928,3.4418,.447694,1.4928,3.44349,.444058,1.4928,3.44076,.451569,1.54095,3.4313,.428611,1.54095,3.43647,.423442,1.53951,3.4306,.428023,1.53629,3.43456,.421165,1.53029,3.4306,.428023,1.53029,3.43456,.421165,1.49363,3.4306,.428023,1.49363,3.43456,.421165,1.49363,3.4311,.428441,1.49363,3.4363,.42324,1.49322,3.4311,.428441,1.49322,3.4363,.42324,1.49322,3.44559,.440601,1.49322,3.44846,.437732,1.4928,3.44579,.440771,1.4928,3.44863,.437934,1.49266,3.47493,.435632,1.49243,3.4713,.433937,1.49219,3.46742,.432898,1.49196,3.46342,.432549,1.49257,3.46742,.478235,1.49233,3.4713,.477196,1.4921,3.47493,.475501,1.49187,3.47822,.473199,1.49163,3.48106,.470362,1.4914,3.48336,.467075,1.49116,3.48505,.463439,1.49093,3.48609,.459564,1.4907,3.48644,.455567,1.49046,3.48609,.451569,1.49023,3.48505,.447694,1.48999,3.48336,.444058,1.48976,3.48106,.440771,1.48952,3.47822,.437934,1.48929,3.47493,.435632,1.48906,3.4713,.433937,1.48882,3.46742,.432898,1.48859,3.46342,.432549,1.49266,3.45192,.475501,1.49243,3.45555,.477196,1.49219,3.45943,.478235,1.49196,3.46342,.478585,1.49172,3.46742,.478235,1.49149,3.4713,.477196,1.49126,3.47493,.475501,1.49102,3.47822,.473199,1.49079,3.48106,.470362,1.49055,3.48336,.467075,1.49032,3.48505,.463439,1.49009,3.48609,.459564,1.48985,3.48644,.455567,1.48962,3.48609,.451569,1.48938,3.48505,.447694,1.48915,3.48336,.444058,1.48892,3.48106,.440771,1.48868,3.47822,.437934,1.48845,3.47493,.435632,1.48821,3.4713,.433937,1.48798,3.46742,.432898,1.48775,3.46342,.432549,1.49257,3.45943,.432898,1.49233,3.45555,.433937,1.4921,3.45192,.435632,1.49187,3.44863,.437934,1.49163,3.44579,.440771,1.4914,3.44349,.444058,1.49116,3.4418,.447694,1.49093,3.44076,.451569,1.4907,3.44041,.455567,1.49046,3.44076,.459564,1.49023,3.4418,.463439,1.48999,3.44349,.467075,1.48976,3.44579,.470362,1.48952,3.44863,.473199,1.48929,3.45192,.475501,1.48906,3.45555,.477196,1.48882,3.45943,.478235,1.48859,3.46342,.478585,1.48835,3.46742,.478235,1.48812,3.4713,.477196,1.48789,3.47493,.475501,1.48765,3.47822,.473199,1.48742,3.48106,.470362,1.48718,3.48336,.467075,1.48695,3.48505,.463439,1.48672,3.48609,.459564,1.48648,3.48644,.455567,1.48625,3.48609,.451569,1.48601,3.48505,.447694,1.48578,3.48336,.444058,1.48555,3.48106,.440771,1.48531,3.47822,.437934,1.48508,3.47493,.435632,1.48484,3.4713,.433937,1.49172,3.45943,.432898,1.49149,3.45555,.433937,1.49126,3.45192,.435632,1.49102,3.44863,.437934,1.49079,3.44579,.440771,1.49055,3.44349,.444058,1.49032,3.4418,.447694,1.49009,3.44076,.451569,1.48985,3.44041,.455567,1.48962,3.44076,.459564,1.48938,3.4418,.463439,1.48915,3.44349,.467075,1.48892,3.44579,.470362,1.48868,3.44863,.473199,1.48845,3.45192,.475501,1.48821,3.45555,.477196,1.48798,3.45943,.478235,1.48775,3.46342,.478585,1.48751,3.46742,.478235,1.48728,3.4713,.477196,1.48704,3.47493,.475501,1.48681,3.47822,.473199,1.48658,3.48106,.470362,1.48634,3.48336,.467075,1.48611,3.48505,.463439,1.48587,3.48609,.459564,1.48564,3.48644,.455567,1.48541,3.48609,.451569,1.48517,3.48505,.447694,1.48494,3.48336,.444058,1.48835,3.45944,.432978,1.48812,3.45561,.434088,1.48789,3.45204,.435842,1.48765,3.44884,.438181,1.48742,3.4461,.44103,1.48718,3.44391,.4443,1.48695,3.44233,.447887,1.48672,3.44139,.451682,1.48648,3.44113,.455567,1.48625,3.44155,.459423,1.48601,3.44263,.463135,1.48578,3.44433,.466591,1.48555,3.4466,.469687,1.48531,3.44936,.472333,1.48508,3.45252,.474452,1.48484,3.45599,.475982,1.48751,3.45944,.432978,1.48728,3.45561,.434088,1.48704,3.45204,.435842,1.48681,3.44884,.438181,1.48658,3.4461,.44103,1.48634,3.44391,.4443,1.48611,3.44233,.447887,1.48587,3.44139,.451682,1.48564,3.44113,.455567,1.48541,3.44155,.459423,1.48517,3.44263,.463135,1.48494,3.44433,.466591,1.54008,4.29452,.343767,1.54095,4.28871,.342681,1.54095,4.29452,.342172,1.54095,4.28307,.344192,1.54095,4.27778,.346659,1.54008,4.2669,.359714,1.54095,4.273,.350007,1.54095,4.26887,.354135,1.54095,4.26552,.358917,1.54095,4.26305,.364208,1.54095,4.26154,.369846,1.54095,4.26103,.375662,1.54008,4.2669,.391609,1.54095,4.26154,.381477,1.54095,4.26305,.387116,1.54095,4.26552,.392406,1.54095,4.26887,.397188,1.54095,4.273,.401316,1.54095,4.27778,.404664,1.54008,4.29452,.407556,1.54095,4.28307,.407131,1.54095,4.28871,.408642,1.54095,4.29452,.409151,1.50484,4.29452,.343767,1.50484,4.2669,.359714,1.50484,4.2669,.391609,1.50484,4.29452,.407556,1.54095,4.30034,.342681,1.54095,4.30598,.344192,1.54095,4.31127,.346659,1.54008,4.32214,.359714,1.54095,4.31605,.350007,1.54095,4.32018,.354135,1.54095,4.32352,.358917,1.54095,4.32599,.364208,1.54095,4.3275,.369846,1.54095,4.32801,.375662,1.54008,4.32214,.391609,1.54095,4.3275,.381477,1.54095,4.32599,.387116,1.54095,4.32352,.392406,1.54095,4.32018,.397188,1.54095,4.31605,.401316,1.54095,4.31127,.404664,1.54095,4.30598,.407131,1.54095,4.30034,.408642,1.50484,4.32214,.359714,1.50484,4.32214,.391609,1.54095,4.28724,.334363,1.54095,4.29452,.333726,1.54095,4.28018,.336255,1.54095,4.27355,.339344,1.53951,4.28708,.333462,1.54053,4.29452,.333462,1.53629,4.27916,.333462,1.53029,4.27016,.333462,1.53029,4.28708,.333462,1.53029,4.29452,.333462,1.53029,4.27916,.333462,1.49363,4.28708,.333462,1.49363,4.29452,.333462,1.49363,4.27916,.333462,1.49363,4.27016,.333462,1.49363,4.28719,.334103,1.49363,4.28009,.336007,1.49363,4.27342,.339116,1.49322,4.28719,.334103,1.49322,4.29452,.333462,1.49322,4.28009,.336007,1.49322,4.27342,.339116,1.49322,4.29048,.352734,1.49322,4.29452,.35238,1.49322,4.28656,.353784,1.49322,4.28288,.355499,1.4928,4.29053,.352993,1.4928,4.29452,.352644,1.4928,4.28665,.354032,1.4928,4.28301,.355728,1.54095,4.3018,.334363,1.54095,4.30887,.336255,1.54095,4.31549,.339344,1.53951,4.30196,.333462,1.53629,4.30988,.333462,1.53029,4.31889,.333462,1.53029,4.30196,.333462,1.53029,4.30988,.333462,1.49363,4.30196,.333462,1.49363,4.30988,.333462,1.49363,4.31889,.333462,1.49363,4.30185,.334103,1.49363,4.30896,.336007,1.49363,4.31562,.339116,1.49322,4.30185,.334103,1.49322,4.30896,.336007,1.49322,4.31562,.339116,1.49322,4.29856,.352734,1.49322,4.30248,.353784,1.49322,4.30616,.355499,1.4928,4.29852,.352993,1.4928,4.30239,.354032,1.4928,4.30603,.355728,1.54095,4.32665,.348706,1.54095,4.33084,.354694,1.54095,4.32148,.343537,1.53951,4.32735,.348118,1.54053,4.33107,.354562,1.53629,4.32339,.34126,1.53029,4.32735,.348118,1.53029,4.33107,.354562,1.53029,4.32339,.34126,1.49363,4.32735,.348118,1.49363,4.33107,.354562,1.49363,4.32339,.34126,1.49363,4.32685,.348536,1.49363,4.32165,.343335,1.49322,4.32685,.348536,1.49322,4.33107,.354562,1.49322,4.32165,.343335,1.49322,4.31236,.360697,1.49322,4.31468,.364021,1.49322,4.30949,.357827,1.4928,4.31216,.360866,1.4928,4.31446,.364153,1.4928,4.30932,.358029,1.54095,4.33393,.361319,1.54095,4.33582,.36838,1.54095,4.33646,.375662,1.53951,4.33479,.361006,1.53629,4.33875,.367864,1.53029,4.34325,.375662,1.53029,4.33479,.361006,1.53029,4.33875,.367864,1.49363,4.33479,.361006,1.49363,4.33875,.367864,1.49363,4.34325,.375662,1.49363,4.33418,.361229,1.49363,4.33608,.368334,1.49363,4.33672,.375662,1.49322,4.33418,.361229,1.49322,4.33608,.368334,1.49322,4.33672,.375662,1.49322,4.3164,.367699,1.49322,4.31745,.371619,1.49322,4.3178,.375662,1.4928,4.31615,.367789,1.4928,4.31719,.371665,1.4928,4.31754,.375662,1.54095,4.33393,.390005,1.54095,4.33084,.39663,1.54095,4.33582,.382944,1.53951,4.33479,.390318,1.54053,4.33107,.396762,1.53629,4.33875,.38346,1.53029,4.33479,.390318,1.53029,4.33107,.396762,1.53029,4.33875,.38346,1.49363,4.33479,.390318,1.49363,4.33107,.396762,1.49363,4.33875,.38346,1.49363,4.33418,.390095,1.49363,4.33608,.38299,1.49322,4.33418,.390095,1.49322,4.33107,.396762,1.49322,4.33608,.38299,1.49322,4.3164,.383625,1.49322,4.31468,.387303,1.49322,4.31745,.379705,1.4928,4.31615,.383534,1.4928,4.31446,.387171,1.4928,4.31719,.379659,1.54095,4.32665,.402618,1.54095,4.32148,.407786,1.54095,4.31549,.411979,1.53951,4.32735,.403206,1.53629,4.32339,.410063,1.53029,4.31889,.417861,1.53029,4.32735,.403206,1.53029,4.32339,.410063,1.49363,4.32735,.403206,1.49363,4.32339,.410063,1.49363,4.31889,.417861,1.49363,4.32685,.402787,1.49363,4.32165,.407989,1.49363,4.31562,.412208,1.49322,4.32685,.402787,1.49322,4.32165,.407989,1.49322,4.31562,.412208,1.49322,4.31236,.390627,1.49322,4.30949,.393497,1.49322,4.30616,.395824,1.4928,4.31216,.390458,1.4928,4.30932,.393295,1.4928,4.30603,.395596,1.54095,4.3018,.416961,1.54095,4.29452,.417598,1.54095,4.30887,.415069,1.53951,4.30196,.417861,1.54053,4.29452,.417861,1.53629,4.30988,.417861,1.53029,4.30196,.417861,1.53029,4.29452,.417861,1.53029,4.30988,.417861,1.49363,4.30196,.417861,1.49363,4.29452,.417861,1.49363,4.30988,.417861,1.49363,4.30185,.41722,1.49363,4.30896,.415316,1.49322,4.30185,.41722,1.49322,4.29452,.417861,1.49322,4.30896,.415316,1.49322,4.29856,.39859,1.49322,4.29452,.398943,1.49322,4.30248,.397539,1.4928,4.29852,.39833,1.4928,4.29452,.39868,1.4928,4.30239,.397292,1.54095,4.28724,.416961,1.54095,4.28018,.415069,1.54095,4.27355,.411979,1.53951,4.28708,.417861,1.53629,4.27916,.417861,1.53029,4.27016,.417861,1.53029,4.28708,.417861,1.53029,4.27916,.417861,1.49363,4.28708,.417861,1.49363,4.27916,.417861,1.49363,4.27016,.417861,1.49363,4.28719,.41722,1.49363,4.28009,.415316,1.49363,4.27342,.412208,1.49322,4.28719,.41722,1.49322,4.28009,.415316,1.49322,4.27342,.412208,1.49322,4.29048,.39859,1.49322,4.28656,.397539,1.49322,4.28288,.395824,1.4928,4.29053,.39833,1.4928,4.28665,.397292,1.4928,4.28301,.395596,1.54095,4.2624,.402618,1.54095,4.2582,.39663,1.54095,4.26757,.407786,1.53951,4.2617,.403206,1.54053,4.25798,.396762,1.53629,4.26566,.410063,1.53029,4.2617,.403206,1.53029,4.25798,.396762,1.53029,4.26566,.410063,1.49363,4.2617,.403206,1.49363,4.25798,.396762,1.49363,4.26566,.410063,1.49363,4.2622,.402787,1.49363,4.2674,.407989,1.49322,4.2622,.402787,1.49322,4.25798,.396762,1.49322,4.2674,.407989,1.49322,4.27669,.390627,1.49322,4.27436,.387303,1.49322,4.27956,.393497,1.4928,4.27689,.390458,1.4928,4.27459,.387171,1.4928,4.27973,.393295,1.54095,4.25512,.390005,1.54095,4.25322,.382944,1.54095,4.25259,.375662,1.53951,4.25426,.390318,1.53629,4.2503,.38346,1.53029,4.24579,.375662,1.53029,4.25426,.390318,1.53029,4.2503,.38346,1.49363,4.25426,.390318,1.49363,4.2503,.38346,1.49363,4.24579,.375662,1.49363,4.25487,.390095,1.49363,4.25296,.38299,1.49363,4.25232,.375662,1.49322,4.25487,.390095,1.49322,4.25296,.38299,1.49322,4.25232,.375662,1.49322,4.27264,.383625,1.49322,4.27159,.379705,1.49322,4.27124,.375662,1.4928,4.27289,.383534,1.4928,4.27185,.379659,1.4928,4.2715,.375662,1.54095,4.25512,.361319,1.54095,4.2582,.354694,1.54095,4.25322,.36838,1.53951,4.25426,.361006,1.54053,4.25798,.354562,1.53629,4.2503,.367864,1.53029,4.25426,.361006,1.53029,4.25798,.354562,1.53029,4.2503,.367864,1.49363,4.25426,.361006,1.49363,4.25798,.354562,1.49363,4.2503,.367864,1.49363,4.25487,.361229,1.49363,4.25296,.368334,1.49322,4.25487,.361229,1.49322,4.25798,.354562,1.49322,4.25296,.368334,1.49322,4.27264,.367699,1.49322,4.27436,.364021,1.49322,4.27159,.371619,1.4928,4.27289,.367789,1.4928,4.27459,.364153,1.4928,4.27185,.371665,1.54095,4.2624,.348706,1.54095,4.26757,.343537,1.53951,4.2617,.348118,1.53629,4.26566,.34126,1.53029,4.2617,.348118,1.53029,4.26566,.34126,1.49363,4.2617,.348118,1.49363,4.26566,.34126,1.49363,4.2622,.348536,1.49363,4.2674,.343335,1.49322,4.2622,.348536,1.49322,4.2674,.343335,1.49322,4.27669,.360697,1.49322,4.27956,.357827,1.4928,4.27689,.360866,1.4928,4.27973,.358029,1.49266,4.30603,.355728,1.49243,4.30239,.354032,1.49219,4.29852,.352993,1.49196,4.29452,.352644,1.49257,4.29852,.39833,1.49233,4.30239,.397292,1.4921,4.30603,.395596,1.49187,4.30932,.393295,1.49163,4.31216,.390458,1.4914,4.31446,.387171,1.49116,4.31615,.383534,1.49093,4.31719,.379659,1.4907,4.31754,.375662,1.49046,4.31719,.371665,1.49023,4.31615,.367789,1.48999,4.31446,.364153,1.48976,4.31216,.360866,1.48952,4.30932,.358029,1.48929,4.30603,.355728,1.48906,4.30239,.354032,1.48882,4.29852,.352993,1.48859,4.29452,.352644,1.49266,4.28301,.395596,1.49243,4.28665,.397292,1.49219,4.29053,.39833,1.49196,4.29452,.39868,1.49172,4.29852,.39833,1.49149,4.30239,.397292,1.49126,4.30603,.395596,1.49102,4.30932,.393295,1.49079,4.31216,.390458,1.49055,4.31446,.387171,1.49032,4.31615,.383534,1.49009,4.31719,.379659,1.48985,4.31754,.375662,1.48962,4.31719,.371665,1.48938,4.31615,.367789,1.48915,4.31446,.364153,1.48892,4.31216,.360866,1.48868,4.30932,.358029,1.48845,4.30603,.355728,1.48821,4.30239,.354032,1.48798,4.29852,.352993,1.48775,4.29452,.352644,1.49257,4.29053,.352993,1.49233,4.28665,.354032,1.4921,4.28301,.355728,1.49187,4.27973,.358029,1.49163,4.27689,.360866,1.4914,4.27459,.364153,1.49116,4.27289,.367789,1.49093,4.27185,.371665,1.4907,4.2715,.375662,1.49046,4.27185,.379659,1.49023,4.27289,.383534,1.48999,4.27459,.387171,1.48976,4.27689,.390458,1.48952,4.27973,.393295,1.48929,4.28301,.395596,1.48906,4.28665,.397292,1.48882,4.29053,.39833,1.48859,4.29452,.39868,1.48835,4.29852,.39833,1.48812,4.30239,.397292,1.48789,4.30603,.395596,1.48765,4.30932,.393295,1.48742,4.31216,.390458,1.48718,4.31446,.387171,1.48695,4.31615,.383534,1.48672,4.31719,.379659,1.48648,4.31754,.375662,1.48625,4.31719,.371665,1.48601,4.31615,.367789,1.48578,4.31446,.364153,1.48555,4.31216,.360866,1.48531,4.30932,.358029,1.48508,4.30603,.355728,1.48484,4.30239,.354032,1.49172,4.29053,.352993,1.49149,4.28665,.354032,1.49126,4.28301,.355728,1.49102,4.27973,.358029,1.49079,4.27689,.360866,1.49055,4.27459,.364153,1.49032,4.27289,.367789,1.49009,4.27185,.371665,1.48985,4.2715,.375662,1.48962,4.27185,.379659,1.48938,4.27289,.383534,1.48915,4.27459,.387171,1.48892,4.27689,.390458,1.48868,4.27973,.393295,1.48845,4.28301,.395596,1.48821,4.28665,.397292,1.48798,4.29053,.39833,1.48775,4.29452,.39868,1.48751,4.29852,.39833,1.48728,4.30239,.397292,1.48704,4.30603,.395596,1.48681,4.30932,.393295,1.48658,4.31216,.390458,1.48634,4.31446,.387171,1.48611,4.31615,.383534,1.48587,4.31719,.379659,1.48564,4.31754,.375662,1.48541,4.31719,.371665,1.48517,4.31615,.367789,1.48494,4.31446,.364153,1.48835,4.29054,.353073,1.48812,4.28671,.354184,1.48789,4.28313,.355937,1.48765,4.27993,.358276,1.48742,4.2772,.361126,1.48718,4.27501,.364395,1.48695,4.27342,.367983,1.48672,4.27249,.371777,1.48648,4.27223,.375662,1.48625,4.27265,.379519,1.48601,4.27373,.383231,1.48578,4.27543,.386686,1.48555,4.27769,.389783,1.48531,4.28045,.392429,1.48508,4.28362,.394547,1.48484,4.28709,.396077,1.48751,4.29054,.353073,1.48728,4.28671,.354184,1.48704,4.28313,.355937,1.48681,4.27993,.358276,1.48658,4.2772,.361126,1.48634,4.27501,.364395,1.48611,4.27342,.367983,1.48587,4.27249,.371777,1.48564,4.27223,.375662,1.48541,4.27265,.379519,1.48517,4.27373,.383231,1.48494,4.27543,.386686,1.54008,4.21417,-.487318,1.54095,4.20836,-.488404,1.54095,4.21417,-.488913,1.54095,4.20272,-.486893,1.54095,4.19743,-.484426,1.54008,4.18655,-.471371,1.54095,4.19265,-.481078,1.54095,4.18852,-.47695,1.54095,4.18517,-.472168,1.54095,4.1827,-.466877,1.54095,4.18119,-.461239,1.54095,4.18069,-.455423,1.54008,4.18655,-.439476,1.54095,4.18119,-.449608,1.54095,4.1827,-.443969,1.54095,4.18517,-.438679,1.54095,4.18852,-.433897,1.54095,4.19265,-.429769,1.54095,4.19743,-.426421,1.54008,4.21417,-.423529,1.54095,4.20272,-.423954,1.54095,4.20836,-.422443,1.54095,4.21417,-.421934,1.50484,4.21417,-.487318,1.50484,4.18655,-.471371,1.50484,4.18655,-.439476,1.50484,4.21417,-.423529,1.54095,4.21999,-.488404,1.54095,4.22563,-.486893,1.54095,4.23092,-.484426,1.54008,4.2418,-.471371,1.54095,4.2357,-.481078,1.54095,4.23983,-.47695,1.54095,4.24318,-.472168,1.54095,4.24564,-.466877,1.54095,4.24716,-.461239,1.54095,4.24766,-.455423,1.54008,4.2418,-.439476,1.54095,4.24716,-.449608,1.54095,4.24564,-.443969,1.54095,4.24318,-.438679,1.54095,4.23983,-.433897,1.54095,4.2357,-.429769,1.54095,4.23092,-.426421,1.54095,4.22563,-.423954,1.54095,4.21999,-.422443,1.50484,4.2418,-.471371,1.50484,4.2418,-.439476,1.54095,4.20689,-.496722,1.54095,4.21417,-.497359,1.54095,4.19983,-.49483,1.54095,4.19321,-.491741,1.53951,4.20673,-.497623,1.54053,4.21417,-.497623,1.53629,4.19882,-.497623,1.53029,4.18981,-.497623,1.53029,4.20673,-.497623,1.53029,4.21417,-.497623,1.53029,4.19882,-.497623,1.49363,4.20673,-.497623,1.49363,4.21417,-.497623,1.49363,4.19882,-.497623,1.49363,4.18981,-.497623,1.49363,4.20685,-.496982,1.49363,4.19974,-.495078,1.49363,4.19307,-.491969,1.49322,4.20685,-.496982,1.49322,4.21417,-.497623,1.49322,4.19974,-.495078,1.49322,4.19307,-.491969,1.49322,4.21013,-.478351,1.49322,4.21417,-.478705,1.49322,4.20621,-.477301,1.49322,4.20253,-.475586,1.4928,4.21018,-.478092,1.4928,4.21417,-.478441,1.4928,4.2063,-.477053,1.4928,4.20267,-.475358,1.54095,4.22146,-.496722,1.54095,4.22852,-.49483,1.54095,4.23514,-.491741,1.53951,4.22162,-.497623,1.53629,4.22953,-.497623,1.53029,4.23854,-.497623,1.53029,4.22162,-.497623,1.53029,4.22953,-.497623,1.49363,4.22162,-.497623,1.49363,4.22953,-.497623,1.49363,4.23854,-.497623,1.49363,4.2215,-.496982,1.49363,4.22861,-.495078,1.49363,4.23527,-.491969,1.49322,4.2215,-.496982,1.49322,4.22861,-.495078,1.49322,4.23527,-.491969,1.49322,4.21822,-.478351,1.49322,4.22214,-.477301,1.49322,4.22582,-.475586,1.4928,4.21817,-.478092,1.4928,4.22205,-.477053,1.4928,4.22568,-.475358,1.54095,4.2463,-.482379,1.54095,4.25049,-.476391,1.54095,4.24113,-.487548,1.53951,4.247,-.482967,1.54053,4.25072,-.476523,1.53629,4.24304,-.489825,1.53029,4.247,-.482967,1.53029,4.25072,-.476523,1.53029,4.24304,-.489825,1.49363,4.247,-.482967,1.49363,4.25072,-.476523,1.49363,4.24304,-.489825,1.49363,4.2465,-.482549,1.49363,4.2413,-.48775,1.49322,4.2465,-.482549,1.49322,4.25072,-.476523,1.49322,4.2413,-.48775,1.49322,4.23201,-.470389,1.49322,4.23434,-.467064,1.49322,4.22914,-.473258,1.4928,4.23181,-.470219,1.4928,4.23411,-.466932,1.4928,4.22897,-.473056,1.54095,4.25358,-.469766,1.54095,4.25547,-.462705,1.54095,4.25611,-.455423,1.53951,4.25444,-.470079,1.53629,4.2584,-.463222,1.53029,4.2629,-.455423,1.53029,4.25444,-.470079,1.53029,4.2584,-.463222,1.49363,4.25444,-.470079,1.49363,4.2584,-.463222,1.49363,4.2629,-.455423,1.49363,4.25383,-.469857,1.49363,4.25573,-.462751,1.49363,4.25637,-.455423,1.49322,4.25383,-.469857,1.49322,4.25573,-.462751,1.49322,4.25637,-.455423,1.49322,4.23605,-.463386,1.49322,4.2371,-.459466,1.49322,4.23746,-.455423,1.4928,4.2358,-.463296,1.4928,4.23684,-.459421,1.4928,4.23719,-.455423,1.54095,4.25358,-.44108,1.54095,4.25049,-.434456,1.54095,4.25547,-.448141,1.53951,4.25444,-.440768,1.54053,4.25072,-.434324,1.53629,4.2584,-.447625,1.53029,4.25444,-.440768,1.53029,4.25072,-.434324,1.53029,4.2584,-.447625,1.49363,4.25444,-.440768,1.49363,4.25072,-.434324,1.49363,4.2584,-.447625,1.49363,4.25383,-.44099,1.49363,4.25573,-.448096,1.49322,4.25383,-.44099,1.49322,4.25072,-.434324,1.49322,4.25573,-.448096,1.49322,4.23605,-.447461,1.49322,4.23434,-.443783,1.49322,4.2371,-.451381,1.4928,4.2358,-.447551,1.4928,4.23411,-.443914,1.4928,4.23684,-.451426,1.54095,4.2463,-.428467,1.54095,4.24113,-.423299,1.54095,4.23514,-.419106,1.53951,4.247,-.42788,1.53629,4.24304,-.421022,1.53029,4.23854,-.413224,1.53029,4.247,-.42788,1.53029,4.24304,-.421022,1.49363,4.247,-.42788,1.49363,4.24304,-.421022,1.49363,4.23854,-.413224,1.49363,4.2465,-.428298,1.49363,4.2413,-.423097,1.49363,4.23527,-.418877,1.49322,4.2465,-.428298,1.49322,4.2413,-.423097,1.49322,4.23527,-.418877,1.49322,4.23201,-.440458,1.49322,4.22914,-.437589,1.49322,4.22582,-.435261,1.4928,4.23181,-.440628,1.4928,4.22897,-.437791,1.4928,4.22568,-.435489,1.54095,4.22146,-.414125,1.54095,4.21417,-.413487,1.54095,4.22852,-.416017,1.53951,4.22162,-.413224,1.54053,4.21417,-.413224,1.53629,4.22953,-.413224,1.53029,4.22162,-.413224,1.53029,4.21417,-.413224,1.53029,4.22953,-.413224,1.49363,4.22162,-.413224,1.49363,4.21417,-.413224,1.49363,4.22953,-.413224,1.49363,4.2215,-.413865,1.49363,4.22861,-.415769,1.49322,4.2215,-.413865,1.49322,4.21417,-.413224,1.49322,4.22861,-.415769,1.49322,4.21822,-.432495,1.49322,4.21417,-.432142,1.49322,4.22214,-.433546,1.4928,4.21817,-.432755,1.4928,4.21417,-.432405,1.4928,4.22205,-.433794,1.54095,4.20689,-.414125,1.54095,4.19983,-.416017,1.54095,4.19321,-.419106,1.53951,4.20673,-.413224,1.53629,4.19882,-.413224,1.53029,4.18981,-.413224,1.53029,4.20673,-.413224,1.53029,4.19882,-.413224,1.49363,4.20673,-.413224,1.49363,4.19882,-.413224,1.49363,4.18981,-.413224,1.49363,4.20685,-.413865,1.49363,4.19974,-.415769,1.49363,4.19307,-.418877,1.49322,4.20685,-.413865,1.49322,4.19974,-.415769,1.49322,4.19307,-.418877,1.49322,4.21013,-.432495,1.49322,4.20621,-.433546,1.49322,4.20253,-.435261,1.4928,4.21018,-.432755,1.4928,4.2063,-.433794,1.4928,4.20267,-.435489,1.54095,4.18205,-.428467,1.54095,4.17786,-.434455,1.54095,4.18722,-.423299,1.53951,4.18135,-.42788,1.54053,4.17763,-.434324,1.53629,4.18531,-.421022,1.53029,4.18135,-.42788,1.53029,4.17763,-.434324,1.53029,4.18531,-.421022,1.49363,4.18135,-.42788,1.49363,4.17763,-.434324,1.49363,4.18531,-.421022,1.49363,4.18185,-.428298,1.49363,4.18705,-.423097,1.49322,4.18185,-.428298,1.49322,4.17763,-.434324,1.49322,4.18705,-.423097,1.49322,4.19634,-.440458,1.49322,4.19401,-.443783,1.49322,4.19921,-.437589,1.4928,4.19654,-.440628,1.4928,4.19424,-.443914,1.4928,4.19938,-.437791,1.54095,4.17477,-.44108,1.54095,4.17288,-.448141,1.54095,4.17224,-.455423,1.53951,4.17391,-.440768,1.53629,4.16995,-.447625,1.53029,4.16545,-.455423,1.53029,4.17391,-.440768,1.53029,4.16995,-.447625,1.49363,4.17391,-.440768,1.49363,4.16995,-.447625,1.49363,4.16545,-.455423,1.49363,4.17452,-.44099,1.49363,4.17262,-.448096,1.49363,4.17198,-.455423,1.49322,4.17452,-.44099,1.49322,4.17262,-.448096,1.49322,4.17198,-.455423,1.49322,4.1923,-.447461,1.49322,4.19125,-.451381,1.49322,4.19089,-.455423,1.4928,4.19254,-.447551,1.4928,4.19151,-.451426,1.4928,4.19116,-.455423,1.54095,4.17477,-.469766,1.54095,4.17786,-.476391,1.54095,4.17288,-.462705,1.53951,4.17391,-.470079,1.54053,4.17763,-.476523,1.53629,4.16995,-.463221,1.53029,4.17391,-.470079,1.53029,4.17763,-.476523,1.53029,4.16995,-.463221,1.49363,4.17391,-.470079,1.49363,4.17763,-.476523,1.49363,4.16995,-.463221,1.49363,4.17452,-.469857,1.49363,4.17262,-.462751,1.49322,4.17452,-.469857,1.49322,4.17763,-.476523,1.49322,4.17262,-.462751,1.49322,4.1923,-.463386,1.49322,4.19401,-.467064,1.49322,4.19125,-.459466,1.4928,4.19254,-.463296,1.4928,4.19424,-.466932,1.4928,4.19151,-.459421,1.54095,4.18205,-.482379,1.54095,4.18722,-.487548,1.53951,4.18135,-.482967,1.53629,4.18531,-.489825,1.53029,4.18135,-.482967,1.53029,4.18531,-.489825,1.49363,4.18135,-.482967,1.49363,4.18531,-.489825,1.49363,4.18185,-.482549,1.49363,4.18705,-.48775,1.49322,4.18185,-.482549,1.49322,4.18705,-.48775,1.49322,4.19634,-.470389,1.49322,4.19921,-.473258,1.4928,4.19654,-.470219,1.4928,4.19938,-.473056,1.49266,4.22568,-.475358,1.49243,4.22205,-.477053,1.49219,4.21817,-.478092,1.49196,4.21417,-.478441,1.49257,4.21817,-.432755,1.49233,4.22205,-.433794,1.4921,4.22568,-.435489,1.49187,4.22897,-.437791,1.49163,4.23181,-.440628,1.4914,4.23411,-.443914,1.49116,4.2358,-.447551,1.49093,4.23684,-.451426,1.4907,4.23719,-.455423,1.49046,4.23684,-.459421,1.49023,4.2358,-.463296,1.48999,4.23411,-.466932,1.48976,4.23181,-.470219,1.48952,4.22897,-.473056,1.48929,4.22568,-.475358,1.48906,4.22205,-.477053,1.48882,4.21817,-.478092,1.48859,4.21417,-.478441,1.49266,4.20267,-.435489,1.49243,4.2063,-.433794,1.49219,4.21018,-.432755,1.49196,4.21417,-.432405,1.49172,4.21817,-.432755,1.49149,4.22205,-.433794,1.49126,4.22568,-.435489,1.49102,4.22897,-.437791,1.49079,4.23181,-.440628,1.49055,4.23411,-.443914,1.49032,4.2358,-.447551,1.49009,4.23684,-.451426,1.48985,4.23719,-.455423,1.48962,4.23684,-.459421,1.48938,4.2358,-.463296,1.48915,4.23411,-.466932,1.48892,4.23181,-.470219,1.48868,4.22897,-.473056,1.48845,4.22568,-.475358,1.48821,4.22205,-.477053,1.48798,4.21817,-.478092,1.48775,4.21417,-.478441,1.49257,4.21018,-.478092,1.49233,4.2063,-.477053,1.4921,4.20267,-.475358,1.49187,4.19938,-.473056,1.49163,4.19654,-.470219,1.4914,4.19424,-.466932,1.49116,4.19254,-.463296,1.49093,4.19151,-.459421,1.4907,4.19116,-.455423,1.49046,4.19151,-.451426,1.49023,4.19254,-.447551,1.48999,4.19424,-.443914,1.48976,4.19654,-.440628,1.48952,4.19938,-.437791,1.48929,4.20267,-.435489,1.48906,4.2063,-.433794,1.48882,4.21018,-.432755,1.48859,4.21417,-.432405,1.48835,4.21817,-.432755,1.48812,4.22205,-.433794,1.48789,4.22568,-.435489,1.48765,4.22897,-.437791,1.48742,4.23181,-.440628,1.48718,4.23411,-.443914,1.48695,4.2358,-.447551,1.48672,4.23684,-.451426,1.48648,4.23719,-.455423,1.48625,4.23684,-.459421,1.48601,4.2358,-.463296,1.48578,4.23411,-.466932,1.48555,4.23181,-.470219,1.48531,4.22897,-.473056,1.48508,4.22568,-.475358,1.48484,4.22205,-.477053,1.49172,4.21018,-.478092,1.49149,4.2063,-.477053,1.49126,4.20267,-.475358,1.49102,4.19938,-.473056,1.49079,4.19654,-.470219,1.49055,4.19424,-.466932,1.49032,4.19254,-.463296,1.49009,4.19151,-.459421,1.48985,4.19116,-.455423,1.48962,4.19151,-.451426,1.48938,4.19254,-.447551,1.48915,4.19424,-.443914,1.48892,4.19654,-.440628,1.48868,4.19938,-.437791,1.48845,4.20267,-.435489,1.48821,4.2063,-.433794,1.48798,4.21018,-.432755,1.48775,4.21417,-.432405,1.48751,4.21817,-.432755,1.48728,4.22205,-.433794,1.48704,4.22568,-.435489,1.48681,4.22897,-.437791,1.48658,4.23181,-.440628,1.48634,4.23411,-.443914,1.48611,4.2358,-.447551,1.48587,4.23684,-.451426,1.48564,4.23719,-.455423,1.48541,4.23684,-.459421,1.48517,4.2358,-.463296,1.48494,4.23411,-.466932,1.48835,4.21019,-.478012,1.48812,4.20636,-.476902,1.48789,4.20279,-.475148,1.48765,4.19959,-.472809,1.48742,4.19685,-.46996,1.48718,4.19466,-.46669,1.48695,4.19308,-.463103,1.48672,4.19214,-.459308,1.48648,4.19188,-.455423,1.48625,4.1923,-.451567,1.48601,4.19338,-.447855,1.48578,4.19508,-.444399,1.48555,4.19735,-.441302,1.48531,4.20011,-.438657,1.48508,4.20327,-.436538,1.48484,4.20674,-.435008,1.48751,4.21019,-.478012,1.48728,4.20636,-.476902,1.48704,4.20279,-.475148,1.48681,4.19959,-.472809,1.48658,4.19685,-.46996,1.48634,4.19466,-.46669,1.48611,4.19308,-.463103,1.48587,4.19214,-.459308,1.48564,4.19188,-.455423,1.48541,4.1923,-.451567,1.48517,4.19338,-.447855,1.48494,4.19508,-.444399,1.49451,3.83897,-.660076,1.49451,3.96775,-.647393,1.49451,4.09157,-.60983,1.49451,4.20569,-.548833,1.49451,4.3878,-.366719,1.49451,4.4488,-.2526,1.49451,4.48636,-.128775,1.49451,4.49905,-5.7108e-7,1.49451,4.48636,.128774,1.49451,4.4488,.252599,1.49451,4.3878,.366718,1.49451,4.20569,.548832,1.49451,4.09157,.60983,1.49451,3.96775,.647391,1.49451,3.83897,.660075,1.49451,3.7102,.647391,1.49451,3.58637,.609829,1.49451,3.47225,.548832,1.49451,3.29014,.366717,1.49451,3.22914,.252599,1.49451,3.19158,.128773,1.49451,3.1789,-110091e-11,1.49451,3.19158,-.128775,1.49451,3.22914,-.252601,1.49451,3.29014,-.366719,1.49451,3.47225,-.548833,1.49451,3.58637,-.609831,1.49451,3.7102,-.647393,1.49451,4.30572,-.466744,1.49451,4.30572,.466743,1.49451,3.37223,.466743,1.49451,3.37223,-.466745,1.49451,3.33118,-.416732,1.49451,3.42224,.507787,1.49451,4.34676,.41673,1.49451,4.2557,-.507789,1.47717,3.83897,-.660076,1.47717,3.96775,-.647393,1.47717,4.09157,-.60983,1.47717,4.20569,-.548833,1.47717,4.3878,-.366719,1.47717,4.4488,-.2526,1.47717,4.48636,-.128775,1.47717,4.49905,-5.7108e-7,1.47717,4.48636,.128774,1.47717,4.4488,.252599,1.47717,4.3878,.366718,1.47717,4.20569,.548832,1.47717,4.09157,.60983,1.47717,3.96775,.647391,1.47717,3.83897,.660075,1.47717,3.7102,.647391,1.47717,3.58637,.609829,1.47717,3.47225,.548832,1.47717,3.29014,.366717,1.47717,3.22914,.252599,1.47717,3.19158,.128773,1.47717,3.1789,-110091e-11,1.47717,3.19158,-.128775,1.47717,3.22914,-.252601,1.47717,3.29014,-.366719,1.47717,3.47225,-.548833,1.47717,3.58637,-.609831,1.47717,3.7102,-.647393,1.47717,4.30572,-.466744,1.47717,4.30572,.466743,1.47717,3.37223,.466743,1.47717,3.37223,-.466745,1.47717,3.33118,-.416732,1.47717,3.42224,.507787,1.47717,4.34676,.41673,1.47717,4.2557,-.507789,1.4523,3.83897,-.660076,1.4523,3.96775,-.647393,1.4523,4.09157,-.60983,1.4523,4.20569,-.548833,1.4523,4.3878,-.366719,1.4523,4.4488,-.2526,1.4523,4.48636,-.128775,1.4523,4.49905,-5.7108e-7,1.4523,4.48636,.128774,1.4523,4.4488,.252599,1.4523,4.3878,.366718,1.4523,4.20569,.548832,1.4523,4.09157,.60983,1.4523,3.96775,.647391,1.4523,3.83897,.660075,1.4523,3.7102,.647391,1.4523,3.58637,.609829,1.4523,3.47225,.548832,1.4523,3.29014,.366717,1.4523,3.22914,.252599,1.4523,3.19158,.128773,1.4523,3.1789,-110091e-11,1.4523,3.19158,-.128775,1.4523,3.22914,-.252601,1.4523,3.29014,-.366719,1.4523,3.47225,-.548833,1.4523,3.58637,-.609831,1.4523,3.7102,-.647393,1.4523,4.30572,-.466744,1.4523,4.30572,.466743,1.4523,3.37223,.466743,1.4523,3.37223,-.466745,1.4523,3.33118,-.416732,1.4523,3.42224,.507787,1.4523,4.34676,.41673,1.4523,4.2557,-.507789,1.3928,4.29785,-.190074,1.3928,3.74207,.487141,1.3928,3.48776,-.351211,1.3928,4.33566,-6.04801e-7,1.3928,4.32611,-.0968991,1.3928,3.56303,.412978,1.3928,3.6489,.458877,1.3928,3.6489,-.458879,1.3928,3.56303,-.41298,1.3928,4.29785,.190073,1.3928,4.32611,.0968979,1.3928,3.42599,.275943,1.3928,3.48776,.351209,1.3928,3.74207,-.487143,1.3928,4.19018,.351209,1.3928,4.25195,.275943,1.3928,3.93587,-.487142,1.3928,3.83897,-.496686,1.3928,3.35183,.0968976,1.3928,3.38009,.190072,1.3928,4.02904,.458877,1.3928,4.11492,.412978,1.3928,4.11492,-.41298,1.3928,4.02905,-.458878,1.3928,3.35183,-.0968996,1.3928,3.34229,-100348e-11,1.3928,3.83897,.496685,1.3928,3.93587,.487141,1.3928,4.25195,-.275944,1.3928,4.19018,-.35121,1.3928,3.42599,-.275945,1.3928,3.38009,-.190074,1.4381,3.38009,-.190074,1.4381,3.42599,-.275945,1.4381,4.19018,-.35121,1.4381,4.25195,-.275944,1.4381,3.93587,.487141,1.4381,3.83897,.496685,1.4381,3.34229,-100348e-11,1.4381,3.35183,-.0968996,1.4381,4.02905,-.458878,1.4381,4.11492,-.41298,1.4381,4.11492,.412978,1.4381,4.02904,.458877,1.4381,3.38009,.190072,1.4381,3.35183,.0968976,1.4381,3.83897,-.496686,1.4381,3.93587,-.487142,1.4381,4.25195,.275943,1.4381,4.19018,.351209,1.4381,3.74207,-.487143,1.4381,3.48776,.351209,1.4381,3.42599,.275943,1.4381,4.32611,.0968979,1.4381,4.29785,.190073,1.4381,3.56303,-.41298,1.4381,3.6489,-.458879,1.4381,3.6489,.458877,1.4381,3.56303,.412978,1.4381,4.32611,-.0968991,1.4381,4.33566,-6.04801e-7,1.4381,3.48776,-.351211,1.4381,3.74207,.487141,1.4381,4.29785,-.190074,1.49813,3.4286,-.169982,1.49813,3.46965,-.246775,1.49813,4.15305,-.314084,1.49813,4.20829,-.246774,1.49813,3.92563,.435646,1.49813,3.83897,.44418,1.49813,3.39479,-9.74377e-7,1.49813,3.40333,-.0866564,1.49813,4.00895,-.41037,1.49813,4.08575,-.369323,1.49813,4.08575,.369322,1.49813,4.00895,.410369,1.49813,3.4286,.16998,1.49813,3.40333,.0866545,1.49813,3.83897,-.444181,1.49813,3.92563,-.435647,1.49813,4.20829,.246773,1.49813,4.15305,.314083,1.49813,3.75232,-.435647,1.49813,3.52489,.314083,1.49813,3.46965,.246773,1.49813,4.27462,.0866548,1.49813,4.24934,.16998,1.49813,3.5922,-.369324,1.49813,3.66899,-.41037,1.49813,3.66899,.410369,1.49813,3.5922,.369322,1.49813,4.27462,-.086656,1.49813,4.28315,-6.17843e-7,1.49813,3.52489,-.314084,1.49813,3.75232,.435645,1.49813,4.24934,-.169981,1.50499,3.92862,-.450672,1.49376,3.93443,-.479883,1.49376,4.02621,-.45204,1.50499,4.01481,-.424523,1.50499,3.41445,-.175844,1.49376,3.38693,-.187242,1.49376,3.43215,-.271833,1.50499,3.45691,-.255286,1.50499,4.28964,.0896434,1.49376,4.31885,.0954539,1.49376,4.29101,.18724,1.50499,4.26349,.175843,1.50499,4.26349,-.175844,1.49376,4.29101,-.187241,1.49376,4.31885,-.0954552,1.50499,4.28964,-.0896447,1.50499,4.01481,.424522,1.49376,4.02621,.452039,1.49376,3.93443,.479882,1.50499,3.92862,.450671,1.50499,3.74933,-.450672,1.49376,3.74352,-.479883,1.49376,3.83897,-.489285,1.50499,3.83897,-.459501,1.50499,3.51406,-.324917,1.49376,3.493,-.345977,1.49376,3.56714,-.406826,1.50499,3.58369,-.382061,1.50499,3.3883,-.0896451,1.49376,3.35909,-.0954556,1.50499,3.58369,.38206,1.49376,3.56714,.406824,1.49376,3.493,.345975,1.50499,3.51406,.324915,1.50499,3.83897,.4595,1.49376,3.83897,.489283,1.49376,3.74352,.479882,1.50499,3.74933,.45067,1.50499,4.09426,.38206,1.49376,4.1108,.406824,1.49376,4.2458,.271831,1.50499,4.22103,.255284,1.50499,3.37947,-9.82895e-7,1.49376,3.34969,-9.99943e-7,1.49376,4.32826,-6.07205e-7,1.50499,4.29847,-6.14064e-7,1.50499,4.16389,.324915,1.49376,4.18495,.345975,1.50499,4.16389,-.324916,1.49376,4.18495,-.345977,1.49376,4.2458,-.271832,1.50499,4.22103,-.255285,1.49376,3.65173,-.45204,1.50499,3.66313,-.424524,1.50499,3.3883,.0896431,1.49376,3.35909,.0954536,1.49376,3.43215,.271831,1.50499,3.45691,.255284,1.49376,3.65173,.452039,1.50499,3.66313,.424522,1.50499,4.09426,-.382061,1.49376,4.1108,-.406825,1.50499,3.41445,.175842,1.49376,3.38693,.18724,1.40828,3.43855,-.16586,1.40828,3.47861,-.24079,1.40828,4.14544,-.306467,1.40828,4.19934,-.24079,1.40828,3.92353,.425081,1.40828,3.83897,.433409,1.40828,3.40556,-9.67873e-7,1.40828,3.41389,-.084555,1.40828,4.00483,-.400419,1.40828,4.07976,-.360367,1.40828,4.07976,.360366,1.40828,4.00483,.400418,1.40828,3.43855,.165858,1.40828,3.41389,.084553,1.40828,3.83897,-.43341,1.40828,3.92353,-.425082,1.40828,4.19934,.240789,1.40828,4.14544,.306466,1.40828,3.75442,-.425082,1.40828,3.5325,.306466,1.40828,3.4786,.240789,1.40828,4.26405,.0845533,1.40828,4.23939,.165858,1.40828,3.59818,-.360368,1.40828,3.67311,-.400419,1.40828,3.67311,.400417,1.40828,3.59818,.360366,1.40828,4.26405,-.0845546,1.40828,4.27238,-6.19984e-7,1.40828,3.53251,-.306468,1.40828,3.75442,.425081,1.40828,4.23939,-.165859,1.4688,3.4286,-.169982,1.4688,3.46965,-.246775,1.4688,4.15305,-.314084,1.4688,4.20829,-.246774,1.4688,3.92563,.435646,1.4688,3.83897,.44418,1.4688,3.39479,-9.74377e-7,1.4688,3.40333,-.0866564,1.4688,4.00895,-.41037,1.4688,4.08575,-.369323,1.4688,4.08575,.369322,1.4688,4.00895,.410369,1.4688,3.4286,.16998,1.4688,3.40333,.0866545,1.4688,3.83897,-.444181,1.4688,3.92563,-.435647,1.4688,4.20829,.246773,1.4688,4.15305,.314083,1.4688,3.75232,-.435647,1.4688,3.52489,.314083,1.4688,3.46965,.246773,1.4688,4.27462,.0866548,1.4688,4.24934,.16998,1.4688,3.5922,-.369324,1.4688,3.66899,-.41037,1.4688,3.66899,.410369,1.4688,3.5922,.369322,1.4688,4.27462,-.086656,1.4688,4.28315,-6.17843e-7,1.4688,3.52489,-.314084,1.4688,3.75232,.435645,1.4688,4.24934,-.169981,1.49964,3.4286,-.169982,1.49964,3.46965,-.246775,1.49964,4.15305,-.314084,1.49964,4.20829,-.246774,1.49964,3.92563,.435646,1.49964,3.83897,.44418,1.49964,3.39479,-9.74377e-7,1.49964,3.40333,-.0866564,1.49964,4.00895,-.41037,1.49964,4.08575,-.369323,1.49964,4.08575,.369322,1.49964,4.00895,.410369,1.49964,3.4286,.16998,1.49964,3.40333,.0866545,1.49964,3.83897,-.444181,1.49964,3.92563,-.435647,1.49964,4.20829,.246773,1.49964,4.15305,.314083,1.49964,3.75232,-.435647,1.49964,3.52489,.314083,1.49964,3.46965,.246773,1.49964,4.27462,.0866548,1.49964,4.24934,.16998,1.49964,3.5922,-.369324,1.49964,3.66899,-.41037,1.49964,3.66899,.410369,1.49964,3.5922,.369322,1.49964,4.27462,-.086656,1.49964,4.28315,-6.17843e-7,1.49964,3.52489,-.314084,1.49964,3.75232,.435645,1.49964,4.24934,-.169981,1.49964,3.44092,-.164879,1.49964,3.48074,-.239367,1.49964,4.14363,-.304655,1.49964,4.19721,-.239366,1.49964,3.92303,.422568,1.49964,3.83897,.430846,1.49964,3.40812,-9.66165e-7,1.49964,3.4164,-.084055,1.49964,4.00385,-.398051,1.49964,4.07834,-.358236,1.49964,4.07834,.358235,1.49964,4.00385,.39805,1.49964,3.44092,.164877,1.49964,3.4164,.0840531,1.49964,3.83897,-.430847,1.49964,3.92303,-.422569,1.49964,4.19721,.239365,1.49964,4.14363,.304654,1.49964,3.75492,-.422569,1.49964,3.53432,.304654,1.49964,3.48074,.239365,1.49964,4.26154,.0840534,1.49964,4.23702,.164877,1.49964,3.59961,-.358237,1.49964,3.67409,-.398051,1.49964,3.67409,.39805,1.49964,3.59961,.358235,1.49964,4.26154,-.0840546,1.49964,4.26982,-6.20334e-7,1.49964,3.53432,-.304656,1.49964,3.75492,.422567,1.49964,4.23702,-.164878,1.31758,3.71223,-.0524973,1.31758,3.72491,-.0762139,1.31758,3.93597,-.0970016,1.31758,3.95303,-.0762138,1.31758,3.86573,.134544,1.31758,3.83897,.137179,1.31758,3.70179,-7.85731e-7,1.31758,3.70443,-.0267633,1.31758,3.89147,-.126738,1.31758,3.91518,-.114062,1.31758,3.91518,.11406,1.31758,3.89147,.126737,1.31758,3.71223,.0524958,1.31758,3.70443,.0267617,1.31758,3.83897,-.137181,1.31758,3.86573,-.134545,1.31758,3.95303,.0762124,1.31758,3.93597,.0970003,1.31758,3.81221,-.134545,1.31758,3.74197,.0970002,1.31758,3.72491,.0762124,1.31758,3.97352,.0267618,1.31758,3.96571,.0524958,1.31758,3.76276,-.114062,1.31758,3.78648,-.126739,1.31758,3.78647,.126737,1.31758,3.76276,.11406,1.31758,3.97352,-.0267632,1.31758,3.97615,-6.75619e-7,1.31758,3.74197,-.0970017,1.31758,3.81221,.134544,1.31758,3.96571,-.0524972,1.31758,3.71508,-.0513198,1.31758,3.72747,-.0745044,1.31758,3.9338,-.0948258,1.31758,3.95047,-.0745043,1.31758,3.86513,.131526,1.31758,3.83897,.134102,1.31758,3.70487,-7.83727e-7,1.31758,3.70745,-.026163,1.31758,3.89029,-.123896,1.31758,3.91348,-.111503,1.31758,3.91348,.111502,1.31758,3.89029,.123894,1.31758,3.71508,.0513183,1.31758,3.70745,.0261614,1.31758,3.83897,-.134104,1.31758,3.86513,-.131527,1.31758,3.95047,.074503,1.31758,3.9338,.0948245,1.31758,3.81281,-.131527,1.31758,3.74415,.0948245,1.31758,3.72747,.0745029,1.31758,3.9705,.0261615,1.31758,3.96287,.0513183,1.31758,3.76447,-.111503,1.31758,3.78765,-.123896,1.31758,3.78765,.123894,1.31758,3.76447,.111502,1.31758,3.9705,-.0261629,1.31758,3.97307,-6.76085e-7,1.31758,3.74415,-.0948259,1.31758,3.81281,.131526,1.31758,3.96287,-.0513197,1.29517,3.71508,-.0513198,1.29517,3.72747,-.0745044,1.29517,3.9338,-.0948258,1.29517,3.95047,-.0745043,1.29517,3.86513,.131526,1.29517,3.83897,.134102,1.29517,3.70487,-7.83727e-7,1.29517,3.70745,-.026163,1.29517,3.89029,-.123896,1.29517,3.91348,-.111503,1.29517,3.91348,.111502,1.29517,3.89029,.123894,1.29517,3.71508,.0513183,1.29517,3.70745,.0261614,1.29517,3.83897,-.134104,1.29517,3.86513,-.131527,1.29517,3.95047,.074503,1.29517,3.9338,.0948245,1.29517,3.81281,-.131527,1.29517,3.74415,.0948245,1.29517,3.72747,.0745029,1.29517,3.9705,.0261615,1.29517,3.96287,.0513183,1.29517,3.76447,-.111503,1.29517,3.78765,-.123896,1.29517,3.78765,.123894,1.29517,3.76447,.111502,1.29517,3.9705,-.0261629,1.29517,3.97307,-6.76085e-7,1.29517,3.74415,-.0948259,1.29517,3.81281,.131526,1.29517,3.96287,-.0513197,1.30518,3.71508,-.0513198,1.30518,3.72747,-.0745044,1.30518,3.9338,-.0948258,1.30518,3.95047,-.0745043,1.30518,3.86513,.131526,1.30518,3.83897,.134102,1.30518,3.70487,-7.84631e-7,1.30518,3.70745,-.026163,1.30518,3.89029,-.123896,1.30518,3.91348,-.111503,1.30518,3.91348,.111502,1.30518,3.89029,.123894,1.30518,3.71508,.0513183,1.30518,3.70745,.0261614,1.30518,3.83897,-.134104,1.30518,3.86513,-.131527,1.30518,3.95047,.074503,1.30518,3.9338,.0948245,1.30518,3.81281,-.131527,1.30518,3.74415,.0948244,1.30518,3.72747,.0745029,1.30518,3.9705,.0261615,1.30518,3.96287,.0513183,1.30518,3.76447,-.111503,1.30518,3.78765,-.123896,1.30518,3.78765,.123894,1.30518,3.76447,.111502,1.30518,3.9705,-.0261629,1.30518,3.97307,-6.76989e-7,1.30518,3.74415,-.094826,1.30518,3.81281,.131526,1.30518,3.96287,-.0513197,1.32623,3.71508,-.0513198,1.32623,3.72747,-.0745044,1.32623,3.9338,-.0948258,1.32623,3.95047,-.0745043,1.32623,3.86513,.131526,1.32623,3.83897,.134102,1.32623,3.70487,-7.84631e-7,1.32623,3.70745,-.026163,1.32623,3.89029,-.123896,1.32623,3.91348,-.111503,1.32623,3.91348,.111502,1.32623,3.89029,.123894,1.32623,3.71508,.0513183,1.32623,3.70745,.0261614,1.32623,3.83897,-.134104,1.32623,3.86513,-.131527,1.32623,3.95047,.074503,1.32623,3.9338,.0948245,1.32623,3.81281,-.131527,1.32623,3.74415,.0948244,1.32623,3.72747,.0745029,1.32623,3.9705,.0261615,1.32623,3.96287,.0513183,1.32623,3.76447,-.111503,1.32623,3.78765,-.123896,1.32623,3.78765,.123894,1.32623,3.76447,.111502,1.32623,3.9705,-.0261629,1.32623,3.97307,-6.76989e-7,1.32623,3.74415,-.094826,1.32623,3.81281,.131526,1.32623,3.96287,-.0513197,1.32623,3.72698,-.0463903,1.32623,3.73818,-.0673479,1.32623,3.92469,-.0857173,1.32623,3.93976,-.0673478,1.32623,3.86262,.118892,1.32623,3.83897,.121221,1.32623,3.71775,-7.76323e-7,1.32623,3.72008,-.0236499,1.32623,3.88536,-.111995,1.32623,3.90632,-.100793,1.32623,3.90632,.100791,1.32623,3.88536,.111993,1.32623,3.72698,.0463888,1.32623,3.72008,.0236484,1.32623,3.83897,-.121222,1.32623,3.86262,-.118893,1.32623,3.93976,.0673464,1.32623,3.92469,.085716,1.32623,3.81532,-.118893,1.32623,3.75325,.0857159,1.32623,3.73818,.0673464,1.32623,3.95786,.0236485,1.32623,3.95097,.0463888,1.32623,3.77162,-.100793,1.32623,3.79258,-.111995,1.32623,3.79258,.111993,1.32623,3.77162,.100791,1.32623,3.95786,-.0236498,1.32623,3.96019,-6.79021e-7,1.32623,3.75326,-.0857174,1.32623,3.81532,.118892,1.32623,3.95097,-.0463902,1.2942,3.72698,-.0463903,1.2942,3.73818,-.0673479,1.2942,3.92469,-.0857173,1.2942,3.93976,-.0673478,1.2942,3.86262,.118892,1.2942,3.83897,.121221,1.2942,3.71775,-7.76323e-7,1.2942,3.72008,-.0236499,1.2942,3.88536,-.111995,1.2942,3.90632,-.100793,1.2942,3.90632,.100791,1.2942,3.88536,.111993,1.2942,3.72698,.0463888,1.2942,3.72008,.0236484,1.2942,3.83897,-.121222,1.2942,3.86262,-.118893,1.2942,3.93976,.0673464,1.2942,3.92469,.085716,1.2942,3.81532,-.118893,1.2942,3.75325,.0857159,1.2942,3.73818,.0673464,1.2942,3.95786,.0236485,1.2942,3.95097,.0463888,1.2942,3.77162,-.100793,1.2942,3.79258,-.111995,1.2942,3.79258,.111993,1.2942,3.77162,.100791,1.2942,3.95786,-.0236498,1.2942,3.96019,-6.79021e-7,1.2942,3.75326,-.0857174,1.2942,3.81532,.118892,1.2942,3.95097,-.0463902,1.31822,3.73818,.0673464,1.31822,3.72698,.0463888,1.31822,3.86262,.118892,1.31822,3.83897,.121221,1.31822,3.79258,.111993,1.31822,3.77162,.100791,1.31822,3.86262,-.118893,1.31822,3.88536,-.111995,1.31822,3.72698,-.0463903,1.31822,3.73818,-.0673479,1.31822,3.95786,.0236485,1.31822,3.95097,.0463888,1.31822,3.95097,-.0463902,1.31822,3.95786,-.0236498,1.31822,3.88536,.111993,1.31822,3.81532,-.118893,1.31822,3.83897,-.121222,1.31822,3.75326,-.0857174,1.31822,3.77162,-.100793,1.31822,3.72008,-.0236499,1.31822,3.75325,.0857159,1.31822,3.81532,.118892,1.31822,3.90632,.100791,1.31822,3.93976,.0673464,1.31822,3.71775,-7.76323e-7,1.31822,3.96019,-6.79021e-7,1.31822,3.92469,.085716,1.31822,3.92469,-.0857173,1.31822,3.93976,-.0673478,1.31822,3.79258,-.111995,1.31822,3.72008,.0236484,1.31822,3.90632,-.100793,1.33092,3.86346,-.123104,1.33092,3.8643,-.127316,1.33092,3.88865,-.119929,1.33092,3.887,-.115962,1.33092,3.72301,-.0480335,1.33092,3.71904,-.0496766,1.33092,3.73104,-.0721189,1.33092,3.73461,-.0697334,1.33092,3.96208,.0244862,1.33092,3.96629,.0253238,1.33092,3.9589,.0496752,1.33092,3.95493,.048032,1.33092,3.95493,-.0480333,1.33092,3.9589,-.0496765,1.33092,3.96629,-.0253252,1.33092,3.96208,-.0244875,1.33092,3.887,.11596,1.33092,3.88865,.119927,1.33092,3.8643,.127314,1.33092,3.86346,.123103,1.33092,3.81448,-.123104,1.33092,3.81365,-.127316,1.33092,3.83897,-.12981,1.33092,3.83897,-.125516,1.33092,3.75022,-.0887536,1.33092,3.74718,-.0917898,1.33092,3.76685,-.107933,1.33092,3.76924,-.104363,1.33092,3.71587,-.0244876,1.33092,3.71166,-.0253253,1.33092,3.76924,.104362,1.33092,3.76685,.107932,1.33092,3.74718,.0917883,1.33092,3.75022,.0887521,1.33092,3.83897,.125515,1.33092,3.83897,.129809,1.33092,3.81365,.127314,1.33092,3.81448,.123103,1.33092,3.9087,.104362,1.33092,3.91109,.107932,1.33092,3.9469,.0721175,1.33092,3.94333,.069732,1.33092,3.71346,-7.79092e-7,1.33092,3.70916,-7.81862e-7,1.33092,3.96878,-6.77667e-7,1.33092,3.96449,-6.78344e-7,1.33092,3.92772,.0887522,1.33092,3.93076,.0917883,1.33092,3.92772,-.0887535,1.33092,3.93076,-.0917897,1.33092,3.9469,-.0721188,1.33092,3.94333,-.0697333,1.33092,3.7893,-.119929,1.33092,3.79094,-.115962,1.33092,3.71587,.0244861,1.33092,3.71166,.0253238,1.33092,3.73104,.0721174,1.33092,3.73461,.0697319,1.33092,3.7893,.119927,1.33092,3.79094,.11596,1.33092,3.9087,-.104363,1.33092,3.91109,-.107933,1.33092,3.72301,.0480319,1.33092,3.71904,.0496751,1.3409,3.728,-.0459672,1.3409,3.7391,-.0667337,1.3409,3.92391,-.0849355,1.3409,3.93884,-.0667336,1.3409,3.86241,.117807,1.3409,3.83897,.120115,1.3409,3.71886,-7.74668e-7,1.3409,3.72116,-.0234343,1.3409,3.88494,-.110973,1.3409,3.9057,-.0998735,1.3409,3.9057,.0998722,1.3409,3.88494,.110972,1.3409,3.728,.0459657,1.3409,3.72116,.0234327,1.3409,3.83897,-.120117,1.3409,3.86241,-.117809,1.3409,3.93884,.0667322,1.3409,3.92391,.0849342,1.3409,3.81554,-.117809,1.3409,3.75404,.0849341,1.3409,3.7391,.0667322,1.3409,3.95678,.0234328,1.3409,3.94994,.0459657,1.3409,3.77224,-.0998736,1.3409,3.79301,-.110973,1.3409,3.79301,.110972,1.3409,3.77224,.0998721,1.3409,3.95678,-.0234341,1.3409,3.95909,-6.78254e-7,1.3409,3.75404,-.0849356,1.3409,3.81554,.117807,1.3409,3.94994,-.0459671,1.38409,3.76878,-.0290761,1.38409,3.7758,-.0422117,1.38409,3.8927,-.053725,1.38409,3.90214,-.0422116,1.38409,3.85379,.0745171,1.38409,3.83897,.075977,1.38409,3.76299,-7.4622e-7,1.38409,3.76445,-.0148233,1.38409,3.86805,-.0701949,1.38409,3.88118,-.0631738,1.38409,3.88118,.0631725,1.38409,3.86805,.0701936,1.38409,3.76878,.0290747,1.38409,3.76445,.0148218,1.38409,3.83897,-.0759783,1.38409,3.85379,-.0745185,1.38409,3.90214,.0422103,1.38409,3.8927,.0537237,1.38409,3.82415,-.0745185,1.38409,3.78525,.0537236,1.38409,3.7758,.0422102,1.38409,3.91349,.0148218,1.38409,3.90917,.0290747,1.38409,3.79676,-.0631739,1.38409,3.8099,-.0701949,1.38409,3.8099,.0701935,1.38409,3.79676,.0631724,1.38409,3.91349,-.0148232,1.38409,3.91495,-6.85235e-7,1.38409,3.78525,-.0537251,1.38409,3.82415,.0745171,1.38409,3.90917,-.0290761,1.40099,3.80198,-.0153248,1.40099,3.80568,-.0222478,1.40099,3.86729,-.0283158,1.40099,3.87227,-.0222478,1.40099,3.84678,.0392736,1.40099,3.83897,.040043,1.40099,3.79893,-7.22408e-7,1.40099,3.7997,-.00781286,1.40099,3.8543,-.0369962,1.40099,3.86122,-.0332958,1.40099,3.86122,.0332944,1.40099,3.8543,.0369949,1.40099,3.80198,.0153233,1.40099,3.7997,.00781142,1.40099,3.83897,-.0400444,1.40099,3.84678,-.0392749,1.40099,3.87227,.0222464,1.40099,3.86729,.0283145,1.40099,3.83116,-.039275,1.40099,3.81066,.0283145,1.40099,3.80568,.0222464,1.40099,3.87825,.00781144,1.40099,3.87597,.0153234,1.40099,3.81672,-.0332958,1.40099,3.82365,-.0369963,1.40099,3.82365,.0369949,1.40099,3.81672,.0332944,1.40099,3.87825,-.00781283,1.40099,3.87902,-6.90266e-7,1.40099,3.81066,-.0283159,1.40099,3.83116,.0392736,1.40099,3.87597,-.0153247,1.40895,3.82612,-.00532358,1.40895,3.82741,-.00772832,1.40895,3.84881,-.00983608,1.40895,3.85054,-.00772831,1.40895,3.84169,.0136414,1.40895,3.83897,.0139086,1.40895,3.82506,-7.06553e-7,1.40895,3.82533,-.00271428,1.40895,3.84429,-.0128512,1.40895,3.8467,-.0115659,1.40895,3.8467,.0115645,1.40895,3.84429,.0128499,1.40895,3.82612,.00532217,1.40895,3.82533,.00271287,1.40895,3.83897,-.01391,1.40895,3.84169,-.0136428,1.40895,3.85054,.00772692,1.40895,3.84881,.00983469,1.40895,3.83626,-.0136428,1.40895,3.82914,.00983469,1.40895,3.82741,.00772691,1.40895,3.85261,.00271288,1.40895,3.85182,.00532217,1.40895,3.83124,-.0115659,1.40895,3.83365,-.0128512,1.40895,3.83365,.0128499,1.40895,3.83124,.0115645,1.40895,3.85261,-.00271427,1.40895,3.85288,-6.95388e-7,1.40895,3.82914,-.00983609,1.40895,3.83626,.0136414,1.40895,3.85182,-.00532356,1.40895,3.83897,-6.97139e-7,1.50499,3.93137,-.464516,1.50499,4.02022,-.437564,1.50499,3.40141,-.181246,1.50499,3.44517,-.263128,1.50499,4.30349,.0923972,1.50499,4.27654,.181244,1.50499,4.27654,-.181245,1.50499,4.30349,-.0923984,1.50499,4.02022,.437563,1.50499,3.93137,.464515,1.50499,3.74657,-.464516,1.50499,3.83897,-.473616,1.50499,3.50408,-.334898,1.50499,3.57585,-.393798,1.50499,3.37446,-.0923989,1.50499,3.57584,.393796,1.50499,3.50407,.334896,1.50499,3.83897,.473615,1.50499,3.74657,.464515,1.50499,4.1021,.393797,1.50499,4.23277,.263126,1.50499,3.36536,-9.90891e-7,1.50499,4.31259,-6.1073e-7,1.50499,4.17387,.334896,1.50499,4.17387,-.334897,1.50499,4.23277,-.263127,1.50499,3.65773,-.437565,1.50499,3.37446,.0923969,1.50499,3.44517,.263126,1.50499,3.65773,.437563,1.50499,4.1021,-.393798,1.50499,3.40141,.181244,1.33266,3.728,-.0459672,1.33266,3.7391,-.0667337,1.33266,3.92391,-.0849355,1.33266,3.93884,-.0667336,1.33266,3.86241,.117807,1.33266,3.83897,.120115,1.33266,3.71886,-7.74668e-7,1.33266,3.72116,-.0234343,1.33266,3.88494,-.110973,1.33266,3.9057,-.0998735,1.33266,3.9057,.0998722,1.33266,3.88494,.110972,1.33266,3.728,.0459657,1.33266,3.72116,.0234327,1.33266,3.83897,-.120117,1.33266,3.86241,-.117809,1.33266,3.93884,.0667322,1.33266,3.92391,.0849342,1.33266,3.81554,-.117809,1.33266,3.75404,.0849341,1.33266,3.7391,.0667322,1.33266,3.95678,.0234328,1.33266,3.94994,.0459657,1.33266,3.77224,-.0998736,1.33266,3.79301,-.110973,1.33266,3.79301,.110972,1.33266,3.77224,.0998721,1.33266,3.95678,-.0234341,1.33266,3.95909,-6.78254e-7,1.33266,3.75404,-.0849356,1.33266,3.81554,.117807,1.33266,3.94994,-.0459671,1.30913,3.728,-.0459672,1.30913,3.7391,-.0667337,1.30913,3.92391,-.0849355,1.30913,3.93884,-.0667336,1.30913,3.86241,.117807,1.30913,3.83897,.120115,1.30913,3.71886,-7.74668e-7,1.30913,3.72116,-.0234343,1.30913,3.88494,-.110973,1.30913,3.9057,-.0998735,1.30913,3.9057,.0998722,1.30913,3.88494,.110972,1.30913,3.728,.0459657,1.30913,3.72116,.0234327,1.30913,3.83897,-.120117,1.30913,3.86241,-.117809,1.30913,3.93884,.0667322,1.30913,3.92391,.0849342,1.30913,3.81554,-.117809,1.30913,3.75404,.0849341,1.30913,3.7391,.0667322,1.30913,3.95678,.0234328,1.30913,3.94994,.0459657,1.30913,3.77224,-.0998736,1.30913,3.79301,-.110973,1.30913,3.79301,.110972,1.30913,3.77224,.0998721,1.30913,3.95678,-.0234341,1.30913,3.95909,-6.78254e-7,1.30913,3.75404,-.0849356,1.30913,3.81554,.117807,1.30913,3.94994,-.0459671],facese3,997,1,0,0,0,0,624,626,640,637,43,997,1e3,1001,998,1,0,0,0,0,637,640,641,638,43,998,1001,1002,999,1,0,0,0,0,638,641,642,639,43,780,1003,1004,779,1,0,0,0,0,507,643,644,506,43,781,1005,1003,780,1,0,0,0,0,508,220,643,507,43,782,982,1005,781,1,0,0,0,0,18,629,220,508,43,1003,1006,1007,1004,1,0,0,0,0,643,221,222,644,43,1005,1008,1006,1003,1,0,0,0,0,220,645,221,643,43,982,985,1008,1005,1,0,0,0,0,629,632,645,220,43,1006,1009,1010,1007,1,0,0,0,0,221,226,225,222,43,1008,1011,1009,1006,1,0,0,0,0,645,226,226,221,42,985,1011,1008,1,0,0,0,632,226,645,43,1009,1012,1013,1010,1,0,0,0,0,226,646,647,225,43,1011,1014,1012,1009,1,0,0,0,0,226,229,646,226,43,985,990,1014,1011,1,0,0,0,0,632,205,229,226,42,1012,1015,1013,1,0,0,0,646,648,647,43,1014,1016,1015,1012,1,0,0,0,0,229,649,648,646,43,990,993,1016,1014,1,0,0,0,0,205,208,649,229,43,1015,1017,1018,1013,1,0,0,0,0,648,650,651,647,43,1016,1019,1017,1015,1,0,0,0,0,649,652,650,648,43,993,996,1019,1016,1,0,0,0,0,208,211,652,649,43,1017,1020,1021,1018,1,0,0,0,0,650,653,654,651,43,1019,1022,1020,1017,1,0,0,0,0,652,655,653,650,43,996,999,1022,1019,1,0,0,0,0,211,639,655,652,43,1020,1023,1024,1021,1,0,0,0,0,653,656,657,654,43,1022,1025,1023,1020,1,0,0,0,0,655,658,656,653,43,999,1002,1025,1022,1,0,0,0,0,639,642,658,655,43,779,1004,1026,778,1,0,0,0,0,506,644,659,14,43,778,1026,1027,777,1,0,0,0,0,14,659,242,13,43,777,1027,1028,775,1,0,0,0,0,13,242,243,11,43,1004,1007,1029,1026,1,0,0,0,0,644,222,660,659,43,1026,1029,1030,1027,1,0,0,0,0,659,660,245,242,43,1027,1030,1031,1028,1,0,0,0,0,242,245,246,243,43,1007,1010,1032,1029,1,0,0,0,0,222,225,224,660,43,1029,1032,1033,1030,1,0,0,0,0,660,224,226,245,42,1030,1033,1031,1,0,0,0,245,226,246,43,1010,1013,1034,1032,1,0,0,0,0,225,647,661,224,43,1032,1034,1035,1033,1,0,0,0,0,224,661,662,226,43,1033,1035,1036,1031,1,0,0,0,0,226,662,249,246,42,1013,1037,1034,1,0,0,0,647,663,661,43,1034,1037,1038,1035,1,0,0,0,0,661,663,664,662,43,1035,1038,1039,1036,1,0,0,0,0,662,664,665,249,43,1013,1018,1040,1037,1,0,0,0,0,647,651,666,663,43,1037,1040,1041,1038,1,0,0,0,0,663,666,667,664,43,1038,1041,1042,1039,1,0,0,0,0,664,667,668,665,43,1018,1021,1043,1040,1,0,0,0,0,651,654,669,666,43,1040,1043,1044,1041,1,0,0,0,0,666,669,670,667,43,1041,1044,1045,1042,1,0,0,0,0,667,670,671,668,43,1021,1024,1046,1043,1,0,0,0,0,654,657,672,669,43,1043,1046,1047,1044,1,0,0,0,0,669,672,673,670,43,1044,1047,1048,1045,1,0,0,0,0,670,673,674,671,43,773,1049,1050,772,1,0,0,0,0,9,675,676,8,43,774,1051,1049,773,1,0,0,0,0,10,677,675,9,43,775,1028,1051,774,1,0,0,0,0,11,243,677,10,43,1049,1052,1053,1050,1,0,0,0,0,675,678,679,676,43,1051,1054,1052,1049,1,0,0,0,0,677,680,678,675,43,1028,1031,1054,1051,1,0,0,0,0,243,246,680,677,43,1052,1055,1056,1053,1,0,0,0,0,678,268,269,679,43,1054,1057,1055,1052,1,0,0,0,0,680,268,268,678,42,1031,1057,1054,1,0,0,0,246,268,680,43,1055,1058,1059,1056,1,0,0,0,0,268,681,682,269,43,1057,1060,1058,1055,1,0,0,0,0,268,681,681,268,43,1031,1036,1060,1057,1,0,0,0,0,246,249,681,268,42,1058,1061,1059,1,0,0,0,681,683,682,43,1060,1062,1061,1058,1,0,0,0,0,681,684,683,681,43,1036,1039,1062,1060,1,0,0,0,0,249,665,684,681,43,1061,1063,1064,1059,1,0,0,0,0,683,685,686,682,43,1062,1065,1063,1061,1,0,0,0,0,684,687,685,683,43,1039,1042,1065,1062,1,0,0,0,0,665,668,687,684,43,1063,1066,1067,1064,1,0,0,0,0,685,688,689,686,43,1065,1068,1066,1063,1,0,0,0,0,687,690,688,685,43,1042,1045,1068,1065,1,0,0,0,0,668,671,690,687,43,1066,1069,1070,1067,1,0,0,0,0,688,691,692,689,43,1068,1071,1069,1066,1,0,0,0,0,690,693,691,688,43,1045,1048,1071,1068,1,0,0,0,0,671,674,693,690,43,772,1050,1072,771,1,0,0,0,0,8,676,284,504,43,771,1072,1073,770,1,0,0,0,0,504,284,285,503,43,770,1073,815,768,1,0,0,0,0,503,285,51,4,43,1050,1053,1074,1072,1,0,0,0,0,676,679,694,284,43,1072,1074,1075,1073,1,0,0,0,0,284,694,695,285,43,1073,1075,819,815,1,0,0,0,0,285,695,527,51,43,1053,1056,1076,1074,1,0,0,0,0,679,269,268,694,43,1074,1076,1077,1075,1,0,0,0,0,694,268,268,695,42,1075,1077,819,1,0,0,0,695,268,527,43,1056,1059,1078,1076,1,0,0,0,0,269,682,271,268,43,1076,1078,1079,1077,1,0,0,0,0,268,271,289,268,43,1077,1079,826,819,1,0,0,0,0,268,289,529,527,42,1059,1080,1078,1,0,0,0,682,696,271,43,1078,1080,1081,1079,1,0,0,0,0,271,696,697,289,43,1079,1081,829,826,1,0,0,0,0,289,697,532,529,43,1059,1064,1082,1080,1,0,0,0,0,682,686,698,696,43,1080,1082,1083,1081,1,0,0,0,0,696,698,699,697,43,1081,1083,833,829,1,0,0,0,0,697,699,536,532,43,1064,1067,1084,1082,1,0,0,0,0,686,689,700,698,43,1082,1084,1085,1083,1,0,0,0,0,698,700,701,699,43,1083,1085,837,833,1,0,0,0,0,699,701,540,536,43,1067,1070,1086,1084,1,0,0,0,0,689,692,702,700,43,1084,1086,1087,1085,1,0,0,0,0,700,702,703,701,43,1085,1087,841,837,1,0,0,0,0,701,703,544,540,42,864,1088,887,1,0,0,0,559,704,573,43,863,1089,1088,864,1,0,0,0,0,558,299,704,559,43,862,1090,1089,863,1,0,0,0,0,557,300,299,558,43,839,1091,1090,862,1,0,0,0,0,542,301,300,557,42,977,1092,978,1,0,0,0,196,302,626,43,979,1093,1092,977,1,0,0,0,0,627,303,302,196,43,956,1094,1093,979,1,0,0,0,0,614,304,303,627,43,955,1095,1094,956,1,0,0,0,0,613,305,304,614,43,954,1096,1095,955,1,0,0,0,0,612,306,305,613,43,932,1097,1096,954,1,0,0,0,0,599,705,306,612,43,931,1098,1097,932,1,0,0,0,0,598,348,705,599,43,933,1099,1098,931,1,0,0,0,0,600,309,348,598,43,910,1100,1099,933,1,0,0,0,0,136,706,309,600,43,909,1101,1100,910,1,0,0,0,0,584,707,706,136,43,908,1102,1101,909,1,0,0,0,0,583,708,707,584,43,886,1103,1102,908,1,0,0,0,0,572,101,708,583,43,885,1104,1103,886,1,0,0,0,0,571,709,101,572,43,887,1105,1104,885,1,0,0,0,0,573,710,709,571,43,1088,1106,1105,887,1,0,0,0,0,704,704,710,573,43,1089,1107,1106,1088,1,0,0,0,0,299,316,704,704,43,1090,1108,1107,1089,1,0,0,0,0,300,711,316,299,43,1091,1109,1108,1090,1,0,0,0,0,301,712,711,300,42,1002,1110,1025,1,0,0,0,642,713,658,43,1001,1111,1110,1002,1,0,0,0,0,641,714,713,642,43,1e3,1112,1111,1001,1,0,0,0,0,640,715,714,641,43,978,1113,1112,1e3,1,0,0,0,0,626,716,715,640,43,1092,1114,1113,978,1,0,0,0,0,302,717,716,626,43,1093,1115,1114,1092,1,0,0,0,0,303,718,717,302,43,1094,1116,1115,1093,1,0,0,0,0,304,719,718,303,43,1095,1117,1116,1094,1,0,0,0,0,305,305,719,304,43,1096,1118,1117,1095,1,0,0,0,0,306,323,305,305,43,1097,1119,1118,1096,1,0,0,0,0,705,143,323,306,43,1098,1120,1119,1097,1,0,0,0,0,348,720,143,705,43,1099,1121,1120,1098,1,0,0,0,0,309,309,720,348,43,1100,1122,1121,1099,1,0,0,0,0,706,310,309,309,43,1101,1123,1122,1100,1,0,0,0,0,707,721,310,706,43,1102,1124,1123,1101,1,0,0,0,0,708,722,721,707,43,1103,1125,1124,1102,1,0,0,0,0,101,101,722,708,43,1104,1126,1125,1103,1,0,0,0,0,709,327,101,101,43,1105,1127,1126,1104,1,0,0,0,0,710,710,327,709,43,1106,1128,1127,1105,1,0,0,0,0,704,298,710,710,43,1107,1129,1128,1106,1,0,0,0,0,316,329,298,704,43,1108,1130,1129,1107,1,0,0,0,0,711,330,329,316,43,1109,1131,1130,1108,1,0,0,0,0,712,723,330,711,42,838,1132,839,1,0,0,0,541,332,542,43,840,1133,1132,838,1,0,0,0,0,543,333,332,541,43,841,1134,1133,840,1,0,0,0,0,544,334,333,543,43,1087,1135,1134,841,1,0,0,0,0,703,724,334,544,43,1086,1136,1135,1087,1,0,0,0,0,702,336,724,703,43,1070,1137,1136,1086,1,0,0,0,0,692,269,336,702,43,1069,1138,1137,1070,1,0,0,0,0,691,337,269,692,43,1071,1139,1138,1069,1,0,0,0,0,693,725,337,691,43,1048,1140,1139,1071,1,0,0,0,0,674,339,725,693,43,1047,1141,1140,1048,1,0,0,0,0,673,726,339,674,43,1046,1142,1141,1047,1,0,0,0,0,672,341,726,673,43,1024,1143,1142,1046,1,0,0,0,0,657,727,341,672,43,1023,1144,1143,1024,1,0,0,0,0,656,728,727,657,43,1025,1145,1144,1023,1,0,0,0,0,658,729,728,656,43,1110,1146,1145,1025,1,0,0,0,0,713,344,729,658,43,1111,1147,1146,1110,1,0,0,0,0,714,714,344,713,43,1112,1148,1147,1111,1,0,0,0,0,715,715,714,714,43,1113,1149,1148,1112,1,0,0,0,0,716,716,715,715,43,1114,1150,1149,1113,1,0,0,0,0,717,717,716,716,43,1115,1151,1150,1114,1,0,0,0,0,718,718,717,717,43,1116,1152,1151,1115,1,0,0,0,0,719,719,718,718,43,1117,1153,1152,1116,1,0,0,0,0,305,305,719,719,43,1118,1154,1153,1117,1,0,0,0,0,323,306,305,305,43,1119,1155,1154,1118,1,0,0,0,0,143,705,306,323,43,1120,1156,1155,1119,1,0,0,0,0,720,348,705,143,43,1121,1157,1156,1120,1,0,0,0,0,309,309,348,720,43,1122,1158,1157,1121,1,0,0,0,0,310,730,309,309,43,1123,1159,1158,1122,1,0,0,0,0,721,731,730,310,43,1124,1160,1159,1123,1,0,0,0,0,722,326,731,721,43,1125,1161,1160,1124,1,0,0,0,0,101,732,326,722,43,1126,1162,1161,1125,1,0,0,0,0,327,351,732,101,43,1127,1163,1162,1126,1,0,0,0,0,710,733,351,327,43,1128,1164,1163,1127,1,0,0,0,0,298,734,733,710,43,1129,1165,1164,1128,1,0,0,0,0,329,354,734,298,43,1132,1166,1091,839,1,0,0,0,0,332,735,301,542,43,1133,1167,1166,1132,1,0,0,0,0,333,736,735,332,43,1134,1168,1167,1133,1,0,0,0,0,334,357,736,333,43,1135,1169,1168,1134,1,0,0,0,0,724,737,357,334,43,1136,1170,1169,1135,1,0,0,0,0,336,359,737,724,43,1137,1171,1170,1136,1,0,0,0,0,269,738,359,336,43,1138,1172,1171,1137,1,0,0,0,0,337,361,738,269,43,1139,1173,1172,1138,1,0,0,0,0,725,362,361,337,43,1140,1174,1173,1139,1,0,0,0,0,339,739,362,725,43,1141,1175,1174,1140,1,0,0,0,0,726,740,739,339,43,1142,1176,1175,1141,1,0,0,0,0,341,741,740,726,43,1143,1177,1176,1142,1,0,0,0,0,727,742,741,341,43,1144,1178,1177,1143,1,0,0,0,0,728,743,742,727,43,1145,1179,1178,1144,1,0,0,0,0,729,368,743,728,43,1146,1180,1179,1145,1,0,0,0,0,344,369,368,729,43,1147,1181,1180,1146,1,0,0,0,0,714,744,369,344,43,1148,1182,1181,1147,1,0,0,0,0,715,371,744,714,43,1149,1183,1182,1148,1,0,0,0,0,716,372,371,715,43,1150,1184,1183,1149,1,0,0,0,0,717,745,372,716,43,1151,1185,1184,1150,1,0,0,0,0,718,374,745,717,43,1152,1186,1185,1151,1,0,0,0,0,719,746,374,718,43,1153,1187,1186,1152,1,0,0,0,0,305,376,746,719,43,1154,1188,1187,1153,1,0,0,0,0,306,747,376,305,43,1155,1189,1188,1154,1,0,0,0,0,705,748,747,306,43,1156,1190,1189,1155,1,0,0,0,0,348,749,748,705,43,1157,1191,1190,1156,1,0,0,0,0,309,750,749,348,43,1158,1192,1191,1157,1,0,0,0,0,730,751,750,309,43,1159,1193,1192,1158,1,0,0,0,0,731,752,751,730,43,1160,1194,1193,1159,1,0,0,0,0,326,383,752,731,43,1161,1195,1194,1160,1,0,0,0,0,732,753,383,326,43,1166,1196,1109,1091,1,0,0,0,0,735,385,712,301,43,1167,1197,1196,1166,1,0,0,0,0,736,386,385,735,43,1168,1198,1197,1167,1,0,0,0,0,357,754,386,736,43,1169,1199,1198,1168,1,0,0,0,0,737,388,754,357,43,1170,1200,1199,1169,1,0,0,0,0,359,755,388,737,43,1171,1201,1200,1170,1,0,0,0,0,738,756,755,359,43,1172,1202,1201,1171,1,0,0,0,0,361,757,756,738,43,1173,1203,1202,1172,1,0,0,0,0,362,392,757,361,43,1174,1204,1203,1173,1,0,0,0,0,739,758,392,362,43,1175,1205,1204,1174,1,0,0,0,0,740,759,758,739,43,1176,1206,1205,1175,1,0,0,0,0,741,395,759,740,43,1177,1207,1206,1176,1,0,0,0,0,742,760,395,741,43,1178,1208,1207,1177,1,0,0,0,0,743,761,760,742,43,1179,1209,1208,1178,1,0,0,0,0,368,762,761,743,43,1180,1210,1209,1179,1,0,0,0,0,369,763,762,368,43,1181,1211,1210,1180,1,0,0,0,0,744,764,763,369,43,1196,1212,1131,1109,1,0,0,0,0,385,765,723,712,43,1197,1213,1212,1196,1,0,0,0,0,386,766,765,385,43,1198,1214,1213,1197,1,0,0,0,0,754,767,766,386,43,1199,1215,1214,1198,1,0,0,0,0,388,404,767,754,43,1200,1216,1215,1199,1,0,0,0,0,755,768,404,388,43,1201,1217,1216,1200,1,0,0,0,0,756,406,768,755,43,1202,1218,1217,1201,1,0,0,0,0,757,407,406,756,43,1203,1219,1218,1202,1,0,0,0,0,392,408,407,757,43,1204,1220,1219,1203,1,0,0,0,0,758,769,408,392,43,1205,1221,1220,1204,1,0,0,0,0,759,410,769,758,43,1206,1222,1221,1205,1,0,0,0,0,395,770,410,759,43,1207,1223,1222,1206,1,0,0,0,0,760,771,770,395,42,1224,1225,1226,1,0,0,0,772,773,2,42,1224,1227,1225,1,0,0,0,772,774,773,42,1224,1228,1227,1,0,0,0,772,4,774,42,1224,1229,1228,1,0,0,0,772,775,4,42,1229,1230,1228,1,0,0,0,775,776,4,42,1229,1231,1230,1,0,0,0,775,504,776,42,1229,1232,1231,1,0,0,0,775,777,504,42,1229,1233,1232,1,0,0,0,775,9,777,42,1229,1234,1233,1,0,0,0,775,10,9,42,1229,1235,1234,1,0,0,0,775,778,10,42,1229,1236,1235,1,0,0,0,775,779,778,42,1236,1237,1235,1,0,0,0,779,13,778,42,1236,1238,1237,1,0,0,0,779,780,13,42,1236,1239,1238,1,0,0,0,779,781,780,42,1236,1240,1239,1,0,0,0,779,782,781,42,1236,1241,1240,1,0,0,0,779,783,782,42,1236,1242,1241,1,0,0,0,779,18,783,42,1236,1243,1242,1,0,0,0,779,19,18,42,1243,1244,1242,1,0,0,0,19,784,18,42,1243,1245,1244,1,0,0,0,19,511,784,42,1243,1246,1245,1,0,0,0,19,512,511,43,1224,1247,1248,1229,1,0,0,0,0,772,23,24,775,43,1229,1248,1249,1236,1,0,0,0,0,775,24,25,779,43,1236,1249,1250,1243,1,0,0,0,0,779,25,26,19,42,1247,1249,1248,1,0,0,0,23,25,24,42,1247,1250,1249,1,0,0,0,23,26,25,42,1226,1251,1224,1,0,0,0,2,27,772,42,1251,1252,1224,1,0,0,0,27,28,772,42,1252,1253,1224,1,0,0,0,28,29,772,42,1253,1254,1224,1,0,0,0,29,30,772,42,1253,1255,1254,1,0,0,0,29,785,30,42,1255,1256,1254,1,0,0,0,785,32,30,42,1256,1257,1254,1,0,0,0,32,33,30,42,1257,1258,1254,1,0,0,0,33,786,30,42,1258,1259,1254,1,0,0,0,786,787,30,42,1259,1260,1254,1,0,0,0,787,36,30,42,1260,1261,1254,1,0,0,0,36,37,30,42,1260,1262,1261,1,0,0,0,36,788,37,42,1262,1263,1261,1,0,0,0,788,520,37,42,1263,1264,1261,1,0,0,0,520,521,37,42,1264,1265,1261,1,0,0,0,521,789,37,42,1265,1266,1261,1,0,0,0,789,790,37,42,1266,1267,1261,1,0,0,0,790,43,37,42,1267,1243,1261,1,0,0,0,43,19,37,42,1267,1268,1243,1,0,0,0,43,523,19,42,1268,1269,1243,1,0,0,0,523,45,19,42,1269,1246,1243,1,0,0,0,45,512,19,43,1254,1270,1247,1224,1,0,0,0,0,30,46,23,772,43,1261,1271,1270,1254,1,0,0,0,0,37,47,46,30,43,1243,1250,1271,1261,1,0,0,0,0,19,26,47,37,42,1270,1271,1247,1,0,0,0,46,47,23,42,1271,1250,1247,1,0,0,0,47,26,23,43,1225,1272,1273,1226,1,0,0,0,0,773,48,525,2,43,1227,1274,1272,1225,1,0,0,0,0,774,50,48,773,43,1228,1275,1274,1227,1,0,0,0,0,4,51,50,774,43,1272,1276,1277,1273,1,0,0,0,0,48,52,526,525,43,1274,1278,1276,1272,1,0,0,0,0,50,791,52,48,43,1275,1279,1278,1274,1,0,0,0,0,51,792,791,50,43,1276,1280,1281,1277,1,0,0,0,0,52,56,56,526,43,1278,1282,1280,1276,1,0,0,0,0,791,56,56,52,42,1279,1282,1278,1,0,0,0,792,56,791,43,1280,1283,1284,1281,1,0,0,0,0,56,57,58,56,43,1282,1285,1283,1280,1,0,0,0,0,56,57,57,56,43,1279,1286,1285,1282,1,0,0,0,0,792,793,57,56,42,1283,1287,1284,1,0,0,0,57,794,58,43,1285,1288,1287,1283,1,0,0,0,0,57,795,794,57,43,1286,1289,1288,1285,1,0,0,0,0,793,62,795,57,43,1287,1290,1291,1284,1,0,0,0,0,794,533,534,58,43,1288,1292,1290,1287,1,0,0,0,0,795,796,533,794,43,1289,1293,1292,1288,1,0,0,0,0,62,797,796,795,43,1290,1294,1295,1291,1,0,0,0,0,533,798,68,534,43,1292,1296,1294,1290,1,0,0,0,0,796,799,798,533,43,1293,1297,1296,1292,1,0,0,0,0,797,800,799,796,43,1294,1298,1299,1295,1,0,0,0,0,798,801,72,68,43,1296,1300,1298,1294,1,0,0,0,0,799,802,801,798,43,1297,1301,1300,1296,1,0,0,0,0,800,803,802,799,43,1226,1273,1302,1251,1,0,0,0,0,2,525,804,27,43,1251,1302,1303,1252,1,0,0,0,0,27,804,76,28,43,1252,1303,1304,1253,1,0,0,0,0,28,76,77,29,43,1273,1277,1305,1302,1,0,0,0,0,525,526,78,804,43,1302,1305,1306,1303,1,0,0,0,0,804,78,79,76,43,1303,1306,1307,1304,1,0,0,0,0,76,79,546,77,43,1277,1281,1308,1305,1,0,0,0,0,526,56,56,78,43,1305,1308,1309,1306,1,0,0,0,0,78,56,56,79,42,1306,1309,1307,1,0,0,0,79,56,546,43,1281,1284,1310,1308,1,0,0,0,0,56,58,57,56,43,1308,1310,1311,1309,1,0,0,0,0,56,57,57,56,43,1309,1311,1312,1307,1,0,0,0,0,56,57,805,546,42,1284,1313,1310,1,0,0,0,58,806,57,43,1310,1313,1314,1311,1,0,0,0,0,57,806,807,57,43,1311,1314,1315,1312,1,0,0,0,0,57,807,808,805,43,1284,1291,1316,1313,1,0,0,0,0,58,534,809,806,43,1313,1316,1317,1314,1,0,0,0,0,806,809,810,807,43,1314,1317,1318,1315,1,0,0,0,0,807,810,87,808,43,1291,1295,1319,1316,1,0,0,0,0,534,68,811,809,43,1316,1319,1320,1317,1,0,0,0,0,809,811,812,810,43,1317,1320,1321,1318,1,0,0,0,0,810,812,813,87,43,1295,1299,1322,1319,1,0,0,0,0,68,72,814,811,43,1319,1322,1323,1320,1,0,0,0,0,811,814,815,812,43,1320,1323,1324,1321,1,0,0,0,0,812,815,816,813,43,1256,1325,1326,1257,1,0,0,0,0,32,94,817,33,43,1255,1327,1325,1256,1,0,0,0,0,785,96,94,32,43,1253,1304,1327,1255,1,0,0,0,0,29,77,96,785,43,1325,1328,1329,1326,1,0,0,0,0,94,818,819,817,43,1327,1330,1328,1325,1,0,0,0,0,96,99,818,94,43,1304,1307,1330,1327,1,0,0,0,0,77,546,99,96,43,1328,1331,1332,1329,1,0,0,0,0,818,100,101,819,43,1330,1333,1331,1328,1,0,0,0,0,99,100,100,818,42,1307,1333,1330,1,0,0,0,546,100,99,43,1331,1334,1335,1332,1,0,0,0,0,100,122,563,101,43,1333,1336,1334,1331,1,0,0,0,0,100,123,122,100,43,1307,1312,1336,1333,1,0,0,0,0,546,805,123,100,42,1334,1337,1335,1,0,0,0,122,820,563,43,1336,1338,1337,1334,1,0,0,0,0,123,821,820,122,43,1312,1315,1338,1336,1,0,0,0,0,805,808,821,123,43,1337,1339,1340,1335,1,0,0,0,0,820,822,108,563,43,1338,1341,1339,1337,1,0,0,0,0,821,567,822,820,43,1315,1318,1341,1338,1,0,0,0,0,808,87,567,821,43,1339,1342,1343,1340,1,0,0,0,0,822,823,824,108,43,1341,1344,1342,1339,1,0,0,0,0,567,825,823,822,43,1318,1321,1344,1341,1,0,0,0,0,87,813,825,567,43,1342,1345,1346,1343,1,0,0,0,0,823,826,827,824,43,1344,1347,1345,1342,1,0,0,0,0,825,828,826,823,43,1321,1324,1347,1344,1,0,0,0,0,813,816,828,825,43,1257,1326,1348,1258,1,0,0,0,0,33,817,829,786,43,1258,1348,1349,1259,1,0,0,0,0,786,829,117,787,43,1259,1349,1350,1260,1,0,0,0,0,787,117,118,36,43,1326,1329,1351,1348,1,0,0,0,0,817,819,119,829,43,1348,1351,1352,1349,1,0,0,0,0,829,119,830,117,43,1349,1352,1353,1350,1,0,0,0,0,117,830,121,118,43,1329,1332,1354,1351,1,0,0,0,0,819,101,831,119,43,1351,1354,1355,1352,1,0,0,0,0,119,831,101,830,42,1352,1355,1353,1,0,0,0,830,101,121,43,1332,1335,1356,1354,1,0,0,0,0,101,563,122,831,43,1354,1356,1357,1355,1,0,0,0,0,831,122,832,101,43,1355,1357,1358,1353,1,0,0,0,0,101,832,124,121,42,1335,1359,1356,1,0,0,0,563,833,122,43,1356,1359,1360,1357,1,0,0,0,0,122,833,126,832,43,1357,1360,1361,1358,1,0,0,0,0,832,126,834,124,43,1335,1340,1362,1359,1,0,0,0,0,563,108,835,833,43,1359,1362,1363,1360,1,0,0,0,0,833,835,129,126,43,1360,1363,1364,1361,1,0,0,0,0,126,129,836,834,43,1340,1343,1365,1362,1,0,0,0,0,108,824,837,835,43,1362,1365,1366,1363,1,0,0,0,0,835,837,838,129,43,1363,1366,1367,1364,1,0,0,0,0,129,838,839,836,43,1343,1346,1368,1365,1,0,0,0,0,824,827,840,837,43,1365,1368,1369,1366,1,0,0,0,0,837,840,584,838,43,1366,1369,1370,1367,1,0,0,0,0,838,584,841,839,43,1263,1371,1372,1264,1,0,0,0,0,520,842,843,521,43,1262,1373,1371,1263,1,0,0,0,0,788,139,842,520,43,1260,1350,1373,1262,1,0,0,0,0,36,118,139,788,43,1371,1374,1375,1372,1,0,0,0,0,842,140,844,843,43,1373,1376,1374,1371,1,0,0,0,0,139,142,140,842,43,1350,1353,1376,1373,1,0,0,0,0,118,121,142,139,43,1374,1377,1378,1375,1,0,0,0,0,140,143,143,844,43,1376,1379,1377,1374,1,0,0,0,0,142,144,143,140,42,1353,1379,1376,1,0,0,0,121,144,142,43,1377,1380,1381,1378,1,0,0,0,0,143,845,846,143,43,1379,1382,1380,1377,1,0,0,0,0,144,847,845,143,43,1353,1358,1382,1379,1,0,0,0,0,121,124,847,144,42,1380,1383,1381,1,0,0,0,845,848,846,43,1382,1384,1383,1380,1,0,0,0,0,847,849,848,845,43,1358,1361,1384,1382,1,0,0,0,0,124,834,849,847,43,1383,1385,1386,1381,1,0,0,0,0,848,850,851,846,43,1384,1387,1385,1383,1,0,0,0,0,849,852,850,848,43,1361,1364,1387,1384,1,0,0,0,0,834,836,852,849,43,1385,1388,1389,1386,1,0,0,0,0,850,853,854,851,43,1387,1390,1388,1385,1,0,0,0,0,852,855,853,850,43,1364,1367,1390,1387,1,0,0,0,0,836,839,855,852,43,1388,1391,1392,1389,1,0,0,0,0,853,856,857,854,43,1390,1393,1391,1388,1,0,0,0,0,855,858,856,853,43,1367,1370,1393,1390,1,0,0,0,0,839,841,858,855,43,1264,1372,1394,1265,1,0,0,0,0,521,843,859,789,43,1265,1394,1395,1266,1,0,0,0,0,789,859,160,790,43,1266,1395,1396,1267,1,0,0,0,0,790,160,161,43,43,1372,1375,1397,1394,1,0,0,0,0,843,844,860,859,43,1394,1397,1398,1395,1,0,0,0,0,859,860,163,160,43,1395,1398,1399,1396,1,0,0,0,0,160,163,861,161,43,1375,1378,1400,1397,1,0,0,0,0,844,143,144,860,43,1397,1400,1401,1398,1,0,0,0,0,860,144,144,163,42,1398,1401,1399,1,0,0,0,163,144,861,43,1378,1381,1402,1400,1,0,0,0,0,143,846,845,144,43,1400,1402,1403,1401,1,0,0,0,0,144,845,147,144,43,1401,1403,1404,1399,1,0,0,0,0,144,147,862,861,42,1381,1405,1402,1,0,0,0,846,863,845,43,1402,1405,1406,1403,1,0,0,0,0,845,863,864,147,43,1403,1406,1407,1404,1,0,0,0,0,147,864,865,862,43,1381,1386,1408,1405,1,0,0,0,0,846,851,866,863,43,1405,1408,1409,1406,1,0,0,0,0,863,866,867,864,43,1406,1409,1410,1407,1,0,0,0,0,864,867,172,865,43,1386,1389,1411,1408,1,0,0,0,0,851,854,868,866,43,1408,1411,1412,1409,1,0,0,0,0,866,868,869,867,43,1409,1412,1413,1410,1,0,0,0,0,867,869,870,172,43,1389,1392,1414,1411,1,0,0,0,0,854,857,871,868,43,1411,1414,1415,1412,1,0,0,0,0,868,871,872,869,43,1412,1415,1416,1413,1,0,0,0,0,869,872,873,870,43,1269,1417,1418,1246,1,0,0,0,0,45,874,616,512,43,1268,1419,1417,1269,1,0,0,0,0,523,181,874,45,43,1267,1396,1419,1268,1,0,0,0,0,43,161,181,523,43,1417,1420,1421,1418,1,0,0,0,0,874,617,875,616,43,1419,1422,1420,1417,1,0,0,0,0,181,184,617,874,43,1396,1399,1422,1419,1,0,0,0,0,161,861,184,181,43,1420,1423,1424,1421,1,0,0,0,0,617,185,185,875,43,1422,1425,1423,1420,1,0,0,0,0,184,185,185,617,42,1399,1425,1422,1,0,0,0,861,185,184,43,1423,1426,1427,1424,1,0,0,0,0,185,186,187,185,43,1425,1428,1426,1423,1,0,0,0,0,185,186,186,185,43,1399,1404,1428,1425,1,0,0,0,0,861,862,186,185,42,1426,1429,1427,1,0,0,0,186,876,187,43,1428,1430,1429,1426,1,0,0,0,0,186,877,876,186,43,1404,1407,1430,1428,1,0,0,0,0,862,865,877,186,43,1429,1431,1432,1427,1,0,0,0,0,876,622,191,187,43,1430,1433,1431,1429,1,0,0,0,0,877,878,622,876,43,1407,1410,1433,1430,1,0,0,0,0,865,172,878,877,43,1431,1434,1435,1432,1,0,0,0,0,622,623,879,191,43,1433,1436,1434,1431,1,0,0,0,0,878,880,623,622,43,1410,1413,1436,1433,1,0,0,0,0,172,870,880,878,43,1434,1437,1438,1435,1,0,0,0,0,623,196,197,879,43,1436,1439,1437,1434,1,0,0,0,0,880,881,196,623,43,1413,1416,1439,1436,1,0,0,0,0,870,873,881,880,43,1246,1418,1440,1245,1,0,0,0,0,512,616,882,511,43,1245,1440,1441,1244,1,0,0,0,0,511,882,200,784,43,1244,1441,1442,1242,1,0,0,0,0,784,200,629,18,43,1418,1421,1443,1440,1,0,0,0,0,616,875,883,882,43,1440,1443,1444,1441,1,0,0,0,0,882,883,203,200,43,1441,1444,1445,1442,1,0,0,0,0,200,203,884,629,43,1421,1424,1446,1443,1,0,0,0,0,875,185,185,883,43,1443,1446,1447,1444,1,0,0,0,0,883,185,185,203,42,1444,1447,1445,1,0,0,0,203,185,884,43,1424,1427,1448,1446,1,0,0,0,0,185,187,186,185,43,1446,1448,1449,1447,1,0,0,0,0,185,186,186,185,43,1447,1449,1450,1445,1,0,0,0,0,185,186,885,884,42,1427,1451,1448,1,0,0,0,187,206,186,43,1448,1451,1452,1449,1,0,0,0,0,186,206,886,186,43,1449,1452,1453,1450,1,0,0,0,0,186,886,887,885,43,1427,1432,1454,1451,1,0,0,0,0,187,191,888,206,43,1451,1454,1455,1452,1,0,0,0,0,206,888,889,886,43,1452,1455,1456,1453,1,0,0,0,0,886,889,890,887,43,1432,1435,1457,1454,1,0,0,0,0,191,879,891,888,43,1454,1457,1458,1455,1,0,0,0,0,888,891,892,889,43,1455,1458,1459,1456,1,0,0,0,0,889,892,893,890,43,1435,1438,1460,1457,1,0,0,0,0,879,197,894,891,43,1457,1460,1461,1458,1,0,0,0,0,891,894,895,892,43,1458,1461,1462,1459,1,0,0,0,0,892,895,896,893,43,1240,1463,1464,1239,1,0,0,0,0,782,897,898,781,43,1241,1465,1463,1240,1,0,0,0,0,783,899,897,782,43,1242,1442,1465,1241,1,0,0,0,0,18,629,899,783,43,1463,1466,1467,1464,1,0,0,0,0,897,900,901,898,43,1465,1468,1466,1463,1,0,0,0,0,899,902,900,897,43,1442,1445,1468,1465,1,0,0,0,0,629,884,902,899,43,1466,1469,1470,1467,1,0,0,0,0,900,225,226,901,43,1468,1471,1469,1466,1,0,0,0,0,902,224,225,900,42,1445,1471,1468,1,0,0,0,884,224,902,43,1469,1472,1473,1470,1,0,0,0,0,225,662,228,226,43,1471,1474,1472,1469,1,0,0,0,0,224,229,662,225,43,1445,1450,1474,1471,1,0,0,0,0,884,885,229,224,42,1472,1475,1473,1,0,0,0,662,903,228,43,1474,1476,1475,1472,1,0,0,0,0,229,904,903,662,43,1450,1453,1476,1474,1,0,0,0,0,885,887,904,229,43,1475,1477,1478,1473,1,0,0,0,0,903,232,905,228,43,1476,1479,1477,1475,1,0,0,0,0,904,906,232,903,43,1453,1456,1479,1476,1,0,0,0,0,887,890,906,904,43,1477,1480,1481,1478,1,0,0,0,0,232,907,908,905,43,1479,1482,1480,1477,1,0,0,0,0,906,909,907,232,43,1456,1459,1482,1479,1,0,0,0,0,890,893,909,906,43,1480,1483,1484,1481,1,0,0,0,0,907,910,911,908,43,1482,1485,1483,1480,1,0,0,0,0,909,912,910,907,43,1459,1462,1485,1482,1,0,0,0,0,893,896,912,909,43,1239,1464,1486,1238,1,0,0,0,0,781,898,913,780,43,1238,1486,1487,1237,1,0,0,0,0,780,913,914,13,43,1237,1487,1488,1235,1,0,0,0,0,13,914,243,778,43,1464,1467,1489,1486,1,0,0,0,0,898,901,915,913,43,1486,1489,1490,1487,1,0,0,0,0,913,915,245,914,43,1487,1490,1491,1488,1,0,0,0,0,914,245,246,243,43,1467,1470,1492,1489,1,0,0,0,0,901,226,226,915,43,1489,1492,1493,1490,1,0,0,0,0,915,226,226,245,42,1490,1493,1491,1,0,0,0,245,226,246,43,1470,1473,1494,1492,1,0,0,0,0,226,228,661,226,43,1492,1494,1495,1493,1,0,0,0,0,226,661,229,226,43,1493,1495,1496,1491,1,0,0,0,0,226,229,249,246,42,1473,1497,1494,1,0,0,0,228,916,661,43,1494,1497,1498,1495,1,0,0,0,0,661,916,917,229,43,1495,1498,1499,1496,1,0,0,0,0,229,917,918,249,43,1473,1478,1500,1497,1,0,0,0,0,228,905,919,916,43,1497,1500,1501,1498,1,0,0,0,0,916,919,254,917,43,1498,1501,1502,1499,1,0,0,0,0,917,254,920,918,43,1478,1481,1503,1500,1,0,0,0,0,905,908,921,919,43,1500,1503,1504,1501,1,0,0,0,0,919,921,922,254,43,1501,1504,1505,1502,1,0,0,0,0,254,922,923,920,43,1481,1484,1506,1503,1,0,0,0,0,908,911,924,921,43,1503,1506,1507,1504,1,0,0,0,0,921,924,925,922,43,1504,1507,1508,1505,1,0,0,0,0,922,925,926,923,43,1233,1509,1510,1232,1,0,0,0,0,9,927,928,777,43,1234,1511,1509,1233,1,0,0,0,0,10,677,927,9,43,1235,1488,1511,1234,1,0,0,0,0,778,243,677,10,43,1509,1512,1513,1510,1,0,0,0,0,927,929,930,928,43,1511,1514,1512,1509,1,0,0,0,0,677,267,929,927,43,1488,1491,1514,1511,1,0,0,0,0,243,246,267,677,43,1512,1515,1516,1513,1,0,0,0,0,929,268,268,930,43,1514,1517,1515,1512,1,0,0,0,0,267,268,268,929,42,1491,1517,1514,1,0,0,0,246,268,267,43,1515,1518,1519,1516,1,0,0,0,0,268,289,272,268,43,1517,1520,1518,1515,1,0,0,0,0,268,289,289,268,43,1491,1496,1520,1517,1,0,0,0,0,246,249,289,268,42,1518,1521,1519,1,0,0,0,289,931,272,43,1520,1522,1521,1518,1,0,0,0,0,289,274,931,289,43,1496,1499,1522,1520,1,0,0,0,0,249,918,274,289,43,1521,1523,1524,1519,1,0,0,0,0,931,932,933,272,43,1522,1525,1523,1521,1,0,0,0,0,274,277,932,931,43,1499,1502,1525,1522,1,0,0,0,0,918,920,277,274,43,1523,1526,1527,1524,1,0,0,0,0,932,934,935,933,43,1525,1528,1526,1523,1,0,0,0,0,277,936,934,932,43,1502,1505,1528,1525,1,0,0,0,0,920,923,936,277,43,1526,1529,1530,1527,1,0,0,0,0,934,937,938,935,43,1528,1531,1529,1526,1,0,0,0,0,936,939,937,934,43,1505,1508,1531,1528,1,0,0,0,0,923,926,939,936,43,1232,1510,1532,1231,1,0,0,0,0,777,928,940,504,43,1231,1532,1533,1230,1,0,0,0,0,504,940,941,776,43,1230,1533,1275,1228,1,0,0,0,0,776,941,51,4,43,1510,1513,1534,1532,1,0,0,0,0,928,930,942,940,43,1532,1534,1535,1533,1,0,0,0,0,940,942,287,941,43,1533,1535,1279,1275,1,0,0,0,0,941,287,792,51,43,1513,1516,1536,1534,1,0,0,0,0,930,268,269,942,43,1534,1536,1537,1535,1,0,0,0,0,942,269,268,287,42,1535,1537,1279,1,0,0,0,287,268,792,43,1516,1519,1538,1536,1,0,0,0,0,268,272,681,269,43,1536,1538,1539,1537,1,0,0,0,0,269,681,289,268,43,1537,1539,1286,1279,1,0,0,0,0,268,289,793,792,42,1519,1540,1538,1,0,0,0,272,943,681,43,1538,1540,1541,1539,1,0,0,0,0,681,943,291,289,43,1539,1541,1289,1286,1,0,0,0,0,289,291,62,793,43,1519,1524,1542,1540,1,0,0,0,0,272,933,698,943,43,1540,1542,1543,1541,1,0,0,0,0,943,698,699,291,43,1541,1543,1293,1289,1,0,0,0,0,291,699,797,62,43,1524,1527,1544,1542,1,0,0,0,0,933,935,944,698,43,1542,1544,1545,1543,1,0,0,0,0,698,944,945,699,43,1543,1545,1297,1293,1,0,0,0,0,699,945,800,797,43,1527,1530,1546,1544,1,0,0,0,0,935,938,946,944,43,1544,1546,1547,1545,1,0,0,0,0,944,946,947,945,43,1545,1547,1301,1297,1,0,0,0,0,945,947,803,800,42,1324,1548,1347,1,0,0,0,816,948,828,43,1323,1549,1548,1324,1,0,0,0,0,815,299,948,816,43,1322,1550,1549,1323,1,0,0,0,0,814,300,299,815,43,1299,1551,1550,1322,1,0,0,0,0,72,301,300,814,42,1437,1552,1438,1,0,0,0,196,302,197,43,1439,1553,1552,1437,1,0,0,0,0,881,949,302,196,43,1416,1554,1553,1439,1,0,0,0,0,873,304,949,881,43,1415,1555,1554,1416,1,0,0,0,0,872,305,304,873,43,1414,1556,1555,1415,1,0,0,0,0,871,306,305,872,43,1392,1557,1556,1414,1,0,0,0,0,857,143,306,871,43,1391,1558,1557,1392,1,0,0,0,0,856,324,143,857,43,1393,1559,1558,1391,1,0,0,0,0,858,349,324,856,43,1370,1560,1559,1393,1,0,0,0,0,841,310,349,858,43,1369,1561,1560,1370,1,0,0,0,0,584,311,310,841,43,1368,1562,1561,1369,1,0,0,0,0,840,326,311,584,43,1346,1563,1562,1368,1,0,0,0,0,827,950,326,840,43,1345,1564,1563,1346,1,0,0,0,0,826,313,950,827,43,1347,1565,1564,1345,1,0,0,0,0,828,951,313,826,43,1548,1566,1565,1347,1,0,0,0,0,948,298,951,828,43,1549,1567,1566,1548,1,0,0,0,0,299,316,298,948,43,1550,1568,1567,1549,1,0,0,0,0,300,300,316,299,43,1551,1569,1568,1550,1,0,0,0,0,301,952,300,300,42,1462,1570,1485,1,0,0,0,896,713,912,43,1461,1571,1570,1462,1,0,0,0,0,895,953,713,896,43,1460,1572,1571,1461,1,0,0,0,0,894,320,953,895,43,1438,1573,1572,1460,1,0,0,0,0,197,185,320,894,43,1552,1574,1573,1438,1,0,0,0,0,302,302,185,197,43,1553,1575,1574,1552,1,0,0,0,0,949,303,302,302,43,1554,1576,1575,1553,1,0,0,0,0,304,304,303,949,43,1555,1577,1576,1554,1,0,0,0,0,305,322,304,304,43,1556,1578,1577,1555,1,0,0,0,0,306,306,322,305,43,1557,1579,1578,1556,1,0,0,0,0,143,143,306,306,43,1558,1580,1579,1557,1,0,0,0,0,324,348,143,143,43,1559,1581,1580,1558,1,0,0,0,0,349,309,348,324,43,1560,1582,1581,1559,1,0,0,0,0,310,310,309,349,43,1561,1583,1582,1560,1,0,0,0,0,311,325,310,310,43,1562,1584,1583,1561,1,0,0,0,0,326,326,325,311,43,1563,1585,1584,1562,1,0,0,0,0,950,831,326,326,43,1564,1586,1585,1563,1,0,0,0,0,313,313,831,950,43,1565,1587,1586,1564,1,0,0,0,0,951,710,313,313,43,1566,1588,1587,1565,1,0,0,0,0,298,704,710,951,43,1567,1589,1588,1566,1,0,0,0,0,316,329,704,298,43,1568,1590,1589,1567,1,0,0,0,0,300,330,329,316,43,1569,1591,1590,1568,1,0,0,0,0,952,331,330,300,42,1298,1592,1299,1,0,0,0,801,332,72,43,1300,1593,1592,1298,1,0,0,0,0,802,954,332,801,43,1301,1594,1593,1300,1,0,0,0,0,803,955,954,802,43,1547,1595,1594,1301,1,0,0,0,0,947,335,955,803,43,1546,1596,1595,1547,1,0,0,0,0,946,956,335,947,43,1530,1597,1596,1546,1,0,0,0,0,938,268,956,946,43,1529,1598,1597,1530,1,0,0,0,0,937,337,268,938,43,1531,1599,1598,1529,1,0,0,0,0,939,725,337,937,43,1508,1600,1599,1531,1,0,0,0,0,926,339,725,939,43,1507,1601,1600,1508,1,0,0,0,0,925,340,339,926,43,1506,1602,1601,1507,1,0,0,0,0,924,341,340,925,43,1484,1603,1602,1506,1,0,0,0,0,911,226,341,924,43,1483,1604,1603,1484,1,0,0,0,0,910,957,226,911,43,1485,1605,1604,1483,1,0,0,0,0,912,958,957,910,43,1570,1606,1605,1485,1,0,0,0,0,713,959,958,912,43,1571,1607,1606,1570,1,0,0,0,0,953,714,959,713,43,1572,1608,1607,1571,1,0,0,0,0,320,320,714,953,43,1573,1609,1608,1572,1,0,0,0,0,185,716,320,320,43,1574,1610,1609,1573,1,0,0,0,0,302,302,716,185,43,1575,1611,1610,1574,1,0,0,0,0,303,303,302,302,43,1576,1612,1611,1575,1,0,0,0,0,304,304,303,303,43,1577,1613,1612,1576,1,0,0,0,0,322,305,304,304,43,1578,1614,1613,1577,1,0,0,0,0,306,306,305,322,43,1579,1615,1614,1578,1,0,0,0,0,143,705,306,306,43,1580,1616,1615,1579,1,0,0,0,0,348,720,705,143,43,1581,1617,1616,1580,1,0,0,0,0,309,349,720,348,43,1582,1618,1617,1581,1,0,0,0,0,310,310,349,309,43,1583,1619,1618,1582,1,0,0,0,0,325,731,310,310,43,1584,1620,1619,1583,1,0,0,0,0,326,960,731,325,43,1585,1621,1620,1584,1,0,0,0,0,831,732,960,326,43,1586,1622,1621,1585,1,0,0,0,0,313,351,732,831,43,1587,1623,1622,1586,1,0,0,0,0,710,733,351,313,43,1588,1624,1623,1587,1,0,0,0,0,704,961,733,710,43,1589,1625,1624,1588,1,0,0,0,0,329,354,961,704,43,1592,1626,1551,1299,1,0,0,0,0,332,962,301,72,43,1593,1627,1626,1592,1,0,0,0,0,954,963,962,332,43,1594,1628,1627,1593,1,0,0,0,0,955,964,963,954,43,1595,1629,1628,1594,1,0,0,0,0,335,358,964,955,43,1596,1630,1629,1595,1,0,0,0,0,956,965,358,335,43,1597,1631,1630,1596,1,0,0,0,0,268,738,965,956,43,1598,1632,1631,1597,1,0,0,0,0,337,361,738,268,43,1599,1633,1632,1598,1,0,0,0,0,725,966,361,337,43,1600,1634,1633,1599,1,0,0,0,0,339,363,966,725,43,1601,1635,1634,1600,1,0,0,0,0,340,967,363,339,43,1602,1636,1635,1601,1,0,0,0,0,341,968,967,340,43,1603,1637,1636,1602,1,0,0,0,0,226,969,968,341,43,1604,1638,1637,1603,1,0,0,0,0,957,970,969,226,43,1605,1639,1638,1604,1,0,0,0,0,958,971,970,957,43,1606,1640,1639,1605,1,0,0,0,0,959,972,971,958,43,1607,1641,1640,1606,1,0,0,0,0,714,973,972,959,43,1608,1642,1641,1607,1,0,0,0,0,320,974,973,714,43,1609,1643,1642,1608,1,0,0,0,0,716,372,974,320,43,1610,1644,1643,1609,1,0,0,0,0,302,373,372,716,43,1611,1645,1644,1610,1,0,0,0,0,303,975,373,302,43,1612,1646,1645,1611,1,0,0,0,0,304,976,975,303,43,1613,1647,1646,1612,1,0,0,0,0,305,977,976,304,43,1614,1648,1647,1613,1,0,0,0,0,306,978,977,305,43,1615,1649,1648,1614,1,0,0,0,0,705,748,978,306,43,1616,1650,1649,1615,1,0,0,0,0,720,979,748,705,43,1617,1651,1650,1616,1,0,0,0,0,349,980,979,720,43,1618,1652,1651,1617,1,0,0,0,0,310,981,980,349,43,1619,1653,1652,1618,1,0,0,0,0,731,752,981,310,43,1620,1654,1653,1619,1,0,0,0,0,960,383,752,731,43,1621,1655,1654,1620,1,0,0,0,0,732,753,383,960,43,1626,1656,1569,1551,1,0,0,0,0,962,385,952,301,43,1627,1657,1656,1626,1,0,0,0,0,963,386,385,962,43,1628,1658,1657,1627,1,0,0,0,0,964,982,386,963,43,1629,1659,1658,1628,1,0,0,0,0,358,983,982,964,43,1630,1660,1659,1629,1,0,0,0,0,965,984,983,358,43,1631,1661,1660,1630,1,0,0,0,0,738,985,984,965,43,1632,1662,1661,1631,1,0,0,0,0,361,391,985,738,43,1633,1663,1662,1632,1,0,0,0,0,966,986,391,361,43,1634,1664,1663,1633,1,0,0,0,0,363,987,986,966,43,1635,1665,1664,1634,1,0,0,0,0,967,394,987,363,43,1636,1666,1665,1635,1,0,0,0,0,968,988,394,967,43,1637,1667,1666,1636,1,0,0,0,0,969,989,988,968,43,1638,1668,1667,1637,1,0,0,0,0,970,990,989,969,43,1639,1669,1668,1638,1,0,0,0,0,971,991,990,970,43,1640,1670,1669,1639,1,0,0,0,0,972,763,991,971,43,1641,1671,1670,1640,1,0,0,0,0,973,992,763,972,43,1656,1672,1591,1569,1,0,0,0,0,385,401,331,952,43,1657,1673,1672,1656,1,0,0,0,0,386,766,401,385,43,1658,1674,1673,1657,1,0,0,0,0,982,993,766,386,43,1659,1675,1674,1658,1,0,0,0,0,983,994,993,982,43,1660,1676,1675,1659,1,0,0,0,0,984,995,994,983,43,1661,1677,1676,1660,1,0,0,0,0,985,996,995,984,43,1662,1678,1677,1661,1,0,0,0,0,391,997,996,985,43,1663,1679,1678,1662,1,0,0,0,0,986,408,997,391,43,1664,1680,1679,1663,1,0,0,0,0,987,769,408,986,43,1665,1681,1680,1664,1,0,0,0,0,394,410,769,987,43,1666,1682,1681,1665,1,0,0,0,0,988,998,410,394,43,1667,1683,1682,1666,1,0,0,0,0,989,999,998,988,42,1684,1685,1686,1,0,0,0,0,1,2,42,1684,1687,1685,1,0,0,0,0,3,1,42,1684,1688,1687,1,0,0,0,0,4,3,42,1684,1689,1688,1,0,0,0,0,5,4,42,1689,1690,1688,1,0,0,0,5,1e3,4,42,1689,1691,1690,1,0,0,0,5,1001,1e3,42,1689,1692,1691,1,0,0,0,5,1002,1001,42,1689,1693,1692,1,0,0,0,5,9,1002,42,1689,1694,1693,1,0,0,0,5,1003,9,42,1689,1695,1694,1,0,0,0,5,11,1003,42,1689,1696,1695,1,0,0,0,5,779,11,42,1696,1697,1695,1,0,0,0,779,1004,11,42,1696,1698,1697,1,0,0,0,779,14,1004,42,1696,1699,1698,1,0,0,0,779,1005,14,42,1696,1700,1699,1,0,0,0,779,1006,1005,42,1696,1701,1700,1,0,0,0,779,783,1006,42,1696,1702,1701,1,0,0,0,779,18,783,42,1696,1703,1702,1,0,0,0,779,19,18,42,1703,1704,1702,1,0,0,0,19,20,18,42,1703,1705,1704,1,0,0,0,19,511,20,42,1703,1706,1705,1,0,0,0,19,512,511,43,1684,1707,1708,1689,1,0,0,0,0,0,23,1007,5,43,1689,1708,1709,1696,1,0,0,0,0,5,1007,25,779,43,1696,1709,1710,1703,1,0,0,0,0,779,25,26,19,42,1707,1709,1708,1,0,0,0,23,25,1007,42,1707,1710,1709,1,0,0,0,23,26,25,42,1686,1711,1684,1,0,0,0,2,513,0,42,1711,1712,1684,1,0,0,0,513,514,0,42,1712,1713,1684,1,0,0,0,514,29,0,42,1713,1714,1684,1,0,0,0,29,1008,0,42,1713,1715,1714,1,0,0,0,29,785,1008,42,1715,1716,1714,1,0,0,0,785,1009,1008,42,1716,1717,1714,1,0,0,0,1009,1010,1008,42,1717,1718,1714,1,0,0,0,1010,1011,1008,42,1718,1719,1714,1,0,0,0,1011,1012,1008,42,1719,1720,1714,1,0,0,0,1012,1013,1008,42,1720,1721,1714,1,0,0,0,1013,1014,1008,42,1720,1722,1721,1,0,0,0,1013,1015,1014,42,1722,1723,1721,1,0,0,0,1015,1016,1014,42,1723,1724,1721,1,0,0,0,1016,1017,1014,42,1724,1725,1721,1,0,0,0,1017,1018,1014,42,1725,1726,1721,1,0,0,0,1018,1019,1014,42,1726,1727,1721,1,0,0,0,1019,43,1014,42,1727,1703,1721,1,0,0,0,43,19,1014,42,1727,1728,1703,1,0,0,0,43,44,19,42,1728,1729,1703,1,0,0,0,44,45,19,42,1729,1706,1703,1,0,0,0,45,512,19,43,1714,1730,1707,1684,1,0,0,0,0,1008,46,23,0,43,1721,1731,1730,1714,1,0,0,0,0,1014,47,46,1008,43,1703,1710,1731,1721,1,0,0,0,0,19,26,47,1014,42,1730,1731,1707,1,0,0,0,46,47,23,42,1731,1710,1707,1,0,0,0,47,26,23,43,1685,1732,1733,1686,1,0,0,0,0,1,48,525,2,43,1687,1734,1732,1685,1,0,0,0,0,3,50,48,1,43,1688,1735,1734,1687,1,0,0,0,0,4,1020,50,3,43,1732,1736,1737,1733,1,0,0,0,0,48,52,526,525,43,1734,1738,1736,1732,1,0,0,0,0,50,1021,52,48,43,1735,1739,1738,1734,1,0,0,0,0,1020,55,1021,50,43,1736,1740,1741,1737,1,0,0,0,0,52,56,56,526,43,1738,1742,1740,1736,1,0,0,0,0,1021,56,56,52,42,1739,1742,1738,1,0,0,0,55,56,1021,43,1740,1743,1744,1741,1,0,0,0,0,56,57,58,56,43,1742,1745,1743,1740,1,0,0,0,0,56,57,57,56,43,1739,1746,1745,1742,1,0,0,0,0,55,59,57,56,42,1743,1747,1744,1,0,0,0,57,794,58,43,1745,1748,1747,1743,1,0,0,0,0,57,795,794,57,43,1746,1749,1748,1745,1,0,0,0,0,59,62,795,57,43,1747,1750,1751,1744,1,0,0,0,0,794,1022,534,58,43,1748,1752,1750,1747,1,0,0,0,0,795,1023,1022,794,43,1749,1753,1752,1748,1,0,0,0,0,62,797,1023,795,43,1750,1754,1755,1751,1,0,0,0,0,1022,1024,538,534,43,1752,1756,1754,1750,1,0,0,0,0,1023,1025,1024,1022,43,1753,1757,1756,1752,1,0,0,0,0,797,1026,1025,1023,43,1754,1758,1759,1755,1,0,0,0,0,1024,1027,542,538,43,1756,1760,1758,1754,1,0,0,0,0,1025,1028,1027,1024,43,1757,1761,1760,1756,1,0,0,0,0,1026,1029,1028,1025,43,1686,1733,1762,1711,1,0,0,0,0,2,525,1030,513,43,1711,1762,1763,1712,1,0,0,0,0,513,1030,76,514,43,1712,1763,1764,1713,1,0,0,0,0,514,76,77,29,43,1733,1737,1765,1762,1,0,0,0,0,525,526,1031,1030,43,1762,1765,1766,1763,1,0,0,0,0,1030,1031,1032,76,43,1763,1766,1767,1764,1,0,0,0,0,76,1032,546,77,43,1737,1741,1768,1765,1,0,0,0,0,526,56,56,1031,43,1765,1768,1769,1766,1,0,0,0,0,1031,56,56,1032,42,1766,1769,1767,1,0,0,0,1032,56,546,43,1741,1744,1770,1768,1,0,0,0,0,56,58,57,56,43,1768,1770,1771,1769,1,0,0,0,0,56,57,57,56,43,1769,1771,1772,1767,1,0,0,0,0,56,57,548,546,42,1744,1773,1770,1,0,0,0,58,82,57,43,1770,1773,1774,1771,1,0,0,0,0,57,82,83,57,43,1771,1774,1775,1772,1,0,0,0,0,57,83,551,548,43,1744,1751,1776,1773,1,0,0,0,0,58,534,809,82,43,1773,1776,1777,1774,1,0,0,0,0,82,809,1033,83,43,1774,1777,1778,1775,1,0,0,0,0,83,1033,1034,551,43,1751,1755,1779,1776,1,0,0,0,0,534,538,88,809,43,1776,1779,1780,1777,1,0,0,0,0,809,88,1035,1033,43,1777,1780,1781,1778,1,0,0,0,0,1033,1035,1036,1034,43,1755,1759,1782,1779,1,0,0,0,0,538,542,814,88,43,1779,1782,1783,1780,1,0,0,0,0,88,814,1037,1035,43,1780,1783,1784,1781,1,0,0,0,0,1035,1037,1038,1036,43,1716,1785,1786,1717,1,0,0,0,0,1009,1039,95,1010,43,1715,1787,1785,1716,1,0,0,0,0,785,96,1039,1009,43,1713,1764,1787,1715,1,0,0,0,0,29,77,96,785,43,1785,1788,1789,1786,1,0,0,0,0,1039,97,1040,95,43,1787,1790,1788,1785,1,0,0,0,0,96,99,97,1039,43,1764,1767,1790,1787,1,0,0,0,0,77,546,99,96,43,1788,1791,1792,1789,1,0,0,0,0,97,831,101,1040,43,1790,1793,1791,1788,1,0,0,0,0,99,100,831,97,42,1767,1793,1790,1,0,0,0,546,100,99,43,1791,1794,1795,1792,1,0,0,0,0,831,123,563,101,43,1793,1796,1794,1791,1,0,0,0,0,100,564,123,831,43,1767,1772,1796,1793,1,0,0,0,0,546,548,564,100,42,1794,1797,1795,1,0,0,0,123,1041,563,43,1796,1798,1797,1794,1,0,0,0,0,564,566,1041,123,43,1772,1775,1798,1796,1,0,0,0,0,548,551,566,564,43,1797,1799,1800,1795,1,0,0,0,0,1041,1042,1043,563,43,1798,1801,1799,1797,1,0,0,0,0,566,567,1042,1041,43,1775,1778,1801,1798,1,0,0,0,0,551,1034,567,566,43,1799,1802,1803,1800,1,0,0,0,0,1042,1044,1045,1043,43,1801,1804,1802,1799,1,0,0,0,0,567,1046,1044,1042,43,1778,1781,1804,1801,1,0,0,0,0,1034,1036,1046,567,43,1802,1805,1806,1803,1,0,0,0,0,1044,826,1047,1045,43,1804,1807,1805,1802,1,0,0,0,0,1046,1048,826,1044,43,1781,1784,1807,1804,1,0,0,0,0,1036,1038,1048,1046,43,1717,1786,1808,1718,1,0,0,0,0,1010,95,1049,1011,43,1718,1808,1809,1719,1,0,0,0,0,1011,1049,1050,1012,43,1719,1809,1810,1720,1,0,0,0,0,1012,1050,118,1013,43,1786,1789,1811,1808,1,0,0,0,0,95,1040,119,1049,43,1808,1811,1812,1809,1,0,0,0,0,1049,119,1051,1050,43,1809,1812,1813,1810,1,0,0,0,0,1050,1051,121,118,43,1789,1792,1814,1811,1,0,0,0,0,1040,101,100,119,43,1811,1814,1815,1812,1,0,0,0,0,119,100,101,1051,42,1812,1815,1813,1,0,0,0,1051,101,121,43,1792,1795,1816,1814,1,0,0,0,0,101,563,122,100,43,1814,1816,1817,1815,1,0,0,0,0,100,122,104,101,43,1815,1817,1818,1813,1,0,0,0,0,101,104,124,121,42,1795,1819,1816,1,0,0,0,563,125,122,43,1816,1819,1820,1817,1,0,0,0,0,122,125,1052,104,43,1817,1820,1821,1818,1,0,0,0,0,104,1052,834,124,43,1795,1800,1822,1819,1,0,0,0,0,563,1043,578,125,43,1819,1822,1823,1820,1,0,0,0,0,125,578,1053,1052,43,1820,1823,1824,1821,1,0,0,0,0,1052,1053,836,834,43,1800,1803,1825,1822,1,0,0,0,0,1043,1045,1054,578,43,1822,1825,1826,1823,1,0,0,0,0,578,1054,1055,1053,43,1823,1826,1827,1824,1,0,0,0,0,1053,1055,839,836,43,1803,1806,1828,1825,1,0,0,0,0,1045,1047,1056,1054,43,1825,1828,1829,1826,1,0,0,0,0,1054,1056,1057,1055,43,1826,1829,1830,1827,1,0,0,0,0,1055,1057,1058,839,43,1723,1831,1832,1724,1,0,0,0,0,1016,842,843,1017,43,1722,1833,1831,1723,1,0,0,0,0,1015,1059,842,1016,43,1720,1810,1833,1722,1,0,0,0,0,1013,118,1059,1015,43,1831,1834,1835,1832,1,0,0,0,0,842,140,141,843,43,1833,1836,1834,1831,1,0,0,0,0,1059,142,140,842,43,1810,1813,1836,1833,1,0,0,0,0,118,121,142,1059,43,1834,1837,1838,1835,1,0,0,0,0,140,144,143,141,43,1836,1839,1837,1834,1,0,0,0,0,142,143,144,140,42,1813,1839,1836,1,0,0,0,121,143,142,43,1837,1840,1841,1838,1,0,0,0,0,144,588,1060,143,43,1839,1842,1840,1837,1,0,0,0,0,143,147,588,144,43,1813,1818,1842,1839,1,0,0,0,0,121,124,147,143,42,1840,1843,1841,1,0,0,0,588,1061,1060,43,1842,1844,1843,1840,1,0,0,0,0,147,1062,1061,588,43,1818,1821,1844,1842,1,0,0,0,0,124,834,1062,147,43,1843,1845,1846,1841,1,0,0,0,0,1061,1063,1064,1060,43,1844,1847,1845,1843,1,0,0,0,0,1062,852,1063,1061,43,1821,1824,1847,1844,1,0,0,0,0,834,836,852,1062,43,1845,1848,1849,1846,1,0,0,0,0,1063,1065,1066,1064,43,1847,1850,1848,1845,1,0,0,0,0,852,1067,1065,1063,43,1824,1827,1850,1847,1,0,0,0,0,836,839,1067,852,43,1848,1851,1852,1849,1,0,0,0,0,1065,1068,857,1066,43,1850,1853,1851,1848,1,0,0,0,0,1067,1069,1068,1065,43,1827,1830,1853,1850,1,0,0,0,0,839,1058,1069,1067,43,1724,1832,1854,1725,1,0,0,0,0,1017,843,1070,1018,43,1725,1854,1855,1726,1,0,0,0,0,1018,1070,160,1019,43,1726,1855,1856,1727,1,0,0,0,0,1019,160,161,43,43,1832,1835,1857,1854,1,0,0,0,0,843,141,1071,1070,43,1854,1857,1858,1855,1,0,0,0,0,1070,1071,1072,160,43,1855,1858,1859,1856,1,0,0,0,0,160,1072,164,161,43,1835,1838,1860,1857,1,0,0,0,0,141,143,705,1071,43,1857,1860,1861,1858,1,0,0,0,0,1071,705,144,1072,42,1858,1861,1859,1,0,0,0,1072,144,164,43,1838,1841,1862,1860,1,0,0,0,0,143,1060,147,705,43,1860,1862,1863,1861,1,0,0,0,0,705,147,1073,144,43,1861,1863,1864,1859,1,0,0,0,0,144,1073,603,164,42,1841,1865,1862,1,0,0,0,1060,1074,147,43,1862,1865,1866,1863,1,0,0,0,0,147,1074,864,1073,43,1863,1866,1867,1864,1,0,0,0,0,1073,864,605,603,43,1841,1846,1868,1865,1,0,0,0,0,1060,1064,170,1074,43,1865,1868,1869,1866,1,0,0,0,0,1074,170,171,864,43,1866,1869,1870,1867,1,0,0,0,0,864,171,608,605,43,1846,1849,1871,1868,1,0,0,0,0,1064,1066,1075,170,43,1868,1871,1872,1869,1,0,0,0,0,170,1075,1076,171,43,1869,1872,1873,1870,1,0,0,0,0,171,1076,1077,608,43,1849,1852,1874,1871,1,0,0,0,0,1066,857,1078,1075,43,1871,1874,1875,1872,1,0,0,0,0,1075,1078,1079,1076,43,1872,1875,1876,1873,1,0,0,0,0,1076,1079,1080,1077,43,1729,1877,1878,1706,1,0,0,0,0,45,615,1081,512,43,1728,1879,1877,1729,1,0,0,0,0,44,181,615,45,43,1727,1856,1879,1728,1,0,0,0,0,43,161,181,44,43,1877,1880,1881,1878,1,0,0,0,0,615,617,875,1081,43,1879,1882,1880,1877,1,0,0,0,0,181,184,617,615,43,1856,1859,1882,1879,1,0,0,0,0,161,164,184,181,43,1880,1883,1884,1881,1,0,0,0,0,617,185,185,875,43,1882,1885,1883,1880,1,0,0,0,0,184,185,185,617,42,1859,1885,1882,1,0,0,0,164,185,184,43,1883,1886,1887,1884,1,0,0,0,0,185,186,187,185,43,1885,1888,1886,1883,1,0,0,0,0,185,186,186,185,43,1859,1864,1888,1885,1,0,0,0,0,164,603,186,185,42,1886,1889,1887,1,0,0,0,186,1082,187,43,1888,1890,1889,1886,1,0,0,0,0,186,189,1082,186,43,1864,1867,1890,1888,1,0,0,0,0,603,605,189,186,43,1889,1891,1892,1887,1,0,0,0,0,1082,622,191,187,43,1890,1893,1891,1889,1,0,0,0,0,189,192,622,1082,43,1867,1870,1893,1890,1,0,0,0,0,605,608,192,189,43,1891,1894,1895,1892,1,0,0,0,0,622,1083,194,191,43,1893,1896,1894,1891,1,0,0,0,0,192,1084,1083,622,43,1870,1873,1896,1893,1,0,0,0,0,608,1077,1084,192,43,1894,1897,1898,1895,1,0,0,0,0,1083,1085,1086,194,43,1896,1899,1897,1894,1,0,0,0,0,1084,1087,1085,1083,43,1873,1876,1899,1896,1,0,0,0,0,1077,1080,1087,1084,43,1706,1878,1900,1705,1,0,0,0,0,512,1081,199,511,43,1705,1900,1901,1704,1,0,0,0,0,511,199,200,20,43,1704,1901,1902,1702,1,0,0,0,0,20,200,629,18,43,1878,1881,1903,1900,1,0,0,0,0,1081,875,883,199,43,1900,1903,1904,1901,1,0,0,0,0,199,883,203,200,43,1901,1904,1905,1902,1,0,0,0,0,200,203,204,629,43,1881,1884,1906,1903,1,0,0,0,0,875,185,185,883,43,1903,1906,1907,1904,1,0,0,0,0,883,185,185,203,42,1904,1907,1905,1,0,0,0,203,185,204,43,1884,1887,1908,1906,1,0,0,0,0,185,187,186,185,43,1906,1908,1909,1907,1,0,0,0,0,185,186,186,185,43,1907,1909,1910,1905,1,0,0,0,0,185,186,205,204,42,1887,1911,1908,1,0,0,0,187,1088,186,43,1908,1911,1912,1909,1,0,0,0,0,186,1088,207,186,43,1909,1912,1913,1910,1,0,0,0,0,186,207,208,205,43,1887,1892,1914,1911,1,0,0,0,0,187,191,1089,1088,43,1911,1914,1915,1912,1,0,0,0,0,1088,1089,210,207,43,1912,1915,1916,1913,1,0,0,0,0,207,210,890,208,43,1892,1895,1917,1914,1,0,0,0,0,191,194,1090,1089,43,1914,1917,1918,1915,1,0,0,0,0,1089,1090,1091,210,43,1915,1918,1919,1916,1,0,0,0,0,210,1091,1092,890,43,1895,1898,1920,1917,1,0,0,0,0,194,1086,1093,1090,43,1917,1920,1921,1918,1,0,0,0,0,1090,1093,895,1091,43,1918,1921,1922,1919,1,0,0,0,0,1091,895,1094,1092,43,1700,1923,1924,1699,1,0,0,0,0,1006,218,1095,1005,43,1701,1925,1923,1700,1,0,0,0,0,783,220,218,1006,43,1702,1902,1925,1701,1,0,0,0,0,18,629,220,783,43,1923,1926,1927,1924,1,0,0,0,0,218,221,1096,1095,43,1925,1928,1926,1923,1,0,0,0,0,220,902,221,218,43,1902,1905,1928,1925,1,0,0,0,0,629,204,902,220,43,1926,1929,1930,1927,1,0,0,0,0,221,224,226,1096,43,1928,1931,1929,1926,1,0,0,0,0,902,226,224,221,42,1905,1931,1928,1,0,0,0,204,226,902,43,1929,1932,1933,1930,1,0,0,0,0,224,1097,228,226,43,1931,1934,1932,1929,1,0,0,0,0,226,248,1097,224,43,1905,1910,1934,1931,1,0,0,0,0,204,205,248,226,42,1932,1935,1933,1,0,0,0,1097,1098,228,43,1934,1936,1935,1932,1,0,0,0,0,248,649,1098,1097,43,1910,1913,1936,1934,1,0,0,0,0,205,208,649,248,43,1935,1937,1938,1933,1,0,0,0,0,1098,1099,233,228,43,1936,1939,1937,1935,1,0,0,0,0,649,906,1099,1098,43,1913,1916,1939,1936,1,0,0,0,0,208,890,906,649,43,1937,1940,1941,1938,1,0,0,0,0,1099,1100,1101,233,43,1939,1942,1940,1937,1,0,0,0,0,906,1102,1100,1099,43,1916,1919,1942,1939,1,0,0,0,0,890,1092,1102,906,43,1940,1943,1944,1941,1,0,0,0,0,1100,1103,1104,1101,43,1942,1945,1943,1940,1,0,0,0,0,1102,1105,1103,1100,43,1919,1922,1945,1942,1,0,0,0,0,1092,1094,1105,1102,43,1699,1924,1946,1698,1,0,0,0,0,1005,1095,1106,14,43,1698,1946,1947,1697,1,0,0,0,0,14,1106,242,1004,43,1697,1947,1948,1695,1,0,0,0,0,1004,242,243,11,43,1924,1927,1949,1946,1,0,0,0,0,1095,1096,1107,1106,43,1946,1949,1950,1947,1,0,0,0,0,1106,1107,245,242,43,1947,1950,1951,1948,1,0,0,0,0,242,245,246,243,43,1927,1930,1952,1949,1,0,0,0,0,1096,226,1108,1107,43,1949,1952,1953,1950,1,0,0,0,0,1107,1108,224,245,42,1950,1953,1951,1,0,0,0,245,224,246,43,1930,1933,1954,1952,1,0,0,0,0,226,228,661,1108,43,1952,1954,1955,1953,1,0,0,0,0,1108,661,1097,224,43,1953,1955,1956,1951,1,0,0,0,0,224,1097,249,246,42,1933,1957,1954,1,0,0,0,228,1109,661,43,1954,1957,1958,1955,1,0,0,0,0,661,1109,917,1097,43,1955,1958,1959,1956,1,0,0,0,0,1097,917,918,249,43,1933,1938,1960,1957,1,0,0,0,0,228,233,1110,1109,43,1957,1960,1961,1958,1,0,0,0,0,1109,1110,1111,917,43,1958,1961,1962,1959,1,0,0,0,0,917,1111,920,918,43,1938,1941,1963,1960,1,0,0,0,0,233,1101,1112,1110,43,1960,1963,1964,1961,1,0,0,0,0,1110,1112,1113,1111,43,1961,1964,1965,1962,1,0,0,0,0,1111,1113,1114,920,43,1941,1944,1966,1963,1,0,0,0,0,1101,1104,1115,1112,43,1963,1966,1967,1964,1,0,0,0,0,1112,1115,1116,1113,43,1964,1967,1968,1965,1,0,0,0,0,1113,1116,1117,1114,43,1693,1969,1970,1692,1,0,0,0,0,9,1118,676,1002,43,1694,1971,1969,1693,1,0,0,0,0,1003,264,1118,9,43,1695,1948,1971,1694,1,0,0,0,0,11,243,264,1003,43,1969,1972,1973,1970,1,0,0,0,0,1118,1119,1120,676,43,1971,1974,1972,1969,1,0,0,0,0,264,680,1119,1118,43,1948,1951,1974,1971,1,0,0,0,0,243,246,680,264,43,1972,1975,1976,1973,1,0,0,0,0,1119,1121,268,1120,43,1974,1977,1975,1972,1,0,0,0,0,680,270,1121,1119,42,1951,1977,1974,1,0,0,0,246,270,680,43,1975,1978,1979,1976,1,0,0,0,0,1121,1122,1123,268,43,1977,1980,1978,1975,1,0,0,0,0,270,289,1122,1121,43,1951,1956,1980,1977,1,0,0,0,0,246,249,289,270,42,1978,1981,1979,1,0,0,0,1122,1124,1123,43,1980,1982,1981,1978,1,0,0,0,0,289,1125,1124,1122,43,1956,1959,1982,1980,1,0,0,0,0,249,918,1125,289,43,1981,1983,1984,1979,1,0,0,0,0,1124,1126,933,1123,43,1982,1985,1983,1981,1,0,0,0,0,1125,1127,1126,1124,43,1959,1962,1985,1982,1,0,0,0,0,918,920,1127,1125,43,1983,1986,1987,1984,1,0,0,0,0,1126,1128,1129,933,43,1985,1988,1986,1983,1,0,0,0,0,1127,1130,1128,1126,43,1962,1965,1988,1985,1,0,0,0,0,920,1114,1130,1127,43,1986,1989,1990,1987,1,0,0,0,0,1128,1131,1132,1129,43,1988,1991,1989,1986,1,0,0,0,0,1130,1133,1131,1128,43,1965,1968,1991,1988,1,0,0,0,0,1114,1117,1133,1130,43,1692,1970,1992,1691,1,0,0,0,0,1002,676,1134,1001,43,1691,1992,1993,1690,1,0,0,0,0,1001,1134,285,1e3,43,1690,1993,1735,1688,1,0,0,0,0,1e3,285,1020,4,43,1970,1973,1994,1992,1,0,0,0,0,676,1120,694,1134,43,1992,1994,1995,1993,1,0,0,0,0,1134,694,287,285,43,1993,1995,1739,1735,1,0,0,0,0,285,287,55,1020,43,1973,1976,1996,1994,1,0,0,0,0,1120,268,270,694,43,1994,1996,1997,1995,1,0,0,0,0,694,270,268,287,42,1995,1997,1739,1,0,0,0,287,268,55,43,1976,1979,1998,1996,1,0,0,0,0,268,1123,1135,270,43,1996,1998,1999,1997,1,0,0,0,0,270,1135,289,268,43,1997,1999,1746,1739,1,0,0,0,0,268,289,59,55,42,1979,2e3,1998,1,0,0,0,1123,1136,1135,43,1998,2e3,2001,1999,1,0,0,0,0,1135,1136,697,289,43,1999,2001,1749,1746,1,0,0,0,0,289,697,62,59,43,1979,1984,2002,2e3,1,0,0,0,0,1123,933,1137,1136,43,2e3,2002,2003,2001,1,0,0,0,0,1136,1137,1138,697,43,2001,2003,1753,1749,1,0,0,0,0,697,1138,797,62,43,1984,1987,2004,2002,1,0,0,0,0,933,1129,1139,1137,43,2002,2004,2005,2003,1,0,0,0,0,1137,1139,1140,1138,43,2003,2005,1757,1753,1,0,0,0,0,1138,1140,1026,797,43,1987,1990,2006,2004,1,0,0,0,0,1129,1132,1141,1139,43,2004,2006,2007,2005,1,0,0,0,0,1139,1141,1142,1140,43,2005,2007,1761,1757,1,0,0,0,0,1140,1142,1029,1026,42,1784,2008,1807,1,0,0,0,1038,1143,1048,43,1783,2009,2008,1784,1,0,0,0,0,1037,316,1143,1038,43,1782,2010,2009,1783,1,0,0,0,0,814,300,316,1037,43,1759,2011,2010,1782,1,0,0,0,0,542,301,300,814,42,1897,2012,1898,1,0,0,0,1085,1144,1086,43,1899,2013,2012,1897,1,0,0,0,0,1087,303,1144,1085,43,1876,2014,2013,1899,1,0,0,0,0,1080,304,303,1087,43,1875,2015,2014,1876,1,0,0,0,0,1079,322,304,1080,43,1874,2016,2015,1875,1,0,0,0,0,1078,306,322,1079,43,1852,2017,2016,1874,1,0,0,0,0,857,143,306,1078,43,1851,2018,2017,1852,1,0,0,0,0,1068,324,143,857,43,1853,2019,2018,1851,1,0,0,0,0,1069,309,324,1068,43,1830,2020,2019,1853,1,0,0,0,0,1058,730,309,1069,43,1829,2021,2020,1830,1,0,0,0,0,1057,325,730,1058,43,1828,2022,2021,1829,1,0,0,0,0,1056,326,325,1057,43,1806,2023,2022,1828,1,0,0,0,0,1047,101,326,1056,43,1805,2024,2023,1806,1,0,0,0,0,826,327,101,1047,43,1807,2025,2024,1805,1,0,0,0,0,1048,328,327,826,43,2008,2026,2025,1807,1,0,0,0,0,1143,704,328,1048,43,2009,2027,2026,2008,1,0,0,0,0,316,316,704,1143,43,2010,2028,2027,2009,1,0,0,0,0,300,711,316,316,43,2011,2029,2028,2010,1,0,0,0,0,301,712,711,300,42,1922,2030,1945,1,0,0,0,1094,959,1105,43,1921,2031,2030,1922,1,0,0,0,0,895,714,959,1094,43,1920,2032,2031,1921,1,0,0,0,0,1093,320,714,895,43,1898,2033,2032,1920,1,0,0,0,0,1086,185,320,1093,43,2012,2034,2033,1898,1,0,0,0,0,1144,302,185,1086,43,2013,2035,2034,2012,1,0,0,0,0,303,303,302,1144,43,2014,2036,2035,2013,1,0,0,0,0,304,304,303,303,43,2015,2037,2036,2014,1,0,0,0,0,322,322,304,304,43,2016,2038,2037,2015,1,0,0,0,0,306,306,322,322,43,2017,2039,2038,2016,1,0,0,0,0,143,143,306,306,43,2018,2040,2039,2017,1,0,0,0,0,324,324,143,143,43,2019,2041,2040,2018,1,0,0,0,0,309,349,324,324,43,2020,2042,2041,2019,1,0,0,0,0,730,730,349,309,43,2021,2043,2042,2020,1,0,0,0,0,325,325,730,730,43,2022,2044,2043,2021,1,0,0,0,0,326,326,325,325,43,2023,2045,2044,2022,1,0,0,0,0,101,831,326,326,43,2024,2046,2045,2023,1,0,0,0,0,327,313,831,101,43,2025,2047,2046,2024,1,0,0,0,0,328,328,313,327,43,2026,2048,2047,2025,1,0,0,0,0,704,704,328,328,43,2027,2049,2048,2026,1,0,0,0,0,316,329,704,704,43,2028,2050,2049,2027,1,0,0,0,0,711,330,329,316,43,2029,2051,2050,2028,1,0,0,0,0,712,331,330,711,42,1758,2052,1759,1,0,0,0,1027,332,542,43,1760,2053,2052,1758,1,0,0,0,0,1028,333,332,1027,43,1761,2054,2053,1760,1,0,0,0,0,1029,334,333,1028,43,2007,2055,2054,1761,1,0,0,0,0,1142,724,334,1029,43,2006,2056,2055,2007,1,0,0,0,0,1141,1145,724,1142,43,1990,2057,2056,2006,1,0,0,0,0,1132,1146,1145,1141,43,1989,2058,2057,1990,1,0,0,0,0,1131,337,1146,1132,43,1991,2059,2058,1989,1,0,0,0,0,1133,1147,337,1131,43,1968,2060,2059,1991,1,0,0,0,0,1117,339,1147,1133,43,1967,2061,2060,1968,1,0,0,0,0,1116,340,339,1117,43,1966,2062,2061,1967,1,0,0,0,0,1115,341,340,1116,43,1944,2063,2062,1966,1,0,0,0,0,1104,1108,341,1115,43,1943,2064,2063,1944,1,0,0,0,0,1103,957,1108,1104,43,1945,2065,2064,1943,1,0,0,0,0,1105,729,957,1103,43,2030,2066,2065,1945,1,0,0,0,0,959,713,729,1105,43,2031,2067,2066,2030,1,0,0,0,0,714,714,713,959,43,2032,2068,2067,2031,1,0,0,0,0,320,320,714,714,43,2033,2069,2068,2032,1,0,0,0,0,185,185,320,320,43,2034,2070,2069,2033,1,0,0,0,0,302,302,185,185,43,2035,2071,2070,2034,1,0,0,0,0,303,303,302,302,43,2036,2072,2071,2035,1,0,0,0,0,304,304,303,303,43,2037,2073,2072,2036,1,0,0,0,0,322,305,304,304,43,2038,2074,2073,2037,1,0,0,0,0,306,306,305,322,43,2039,2075,2074,2038,1,0,0,0,0,143,705,306,306,43,2040,2076,2075,2039,1,0,0,0,0,324,348,705,143,43,2041,2077,2076,2040,1,0,0,0,0,349,1148,348,324,43,2042,2078,2077,2041,1,0,0,0,0,730,310,1148,349,43,2043,2079,2078,2042,1,0,0,0,0,325,311,310,730,43,2044,2080,2079,2043,1,0,0,0,0,326,960,311,325,43,2045,2081,2080,2044,1,0,0,0,0,831,1149,960,326,43,2046,2082,2081,2045,1,0,0,0,0,313,1150,1149,831,43,2047,2083,2082,2046,1,0,0,0,0,328,733,1150,313,43,2048,2084,2083,2047,1,0,0,0,0,704,961,733,328,43,2049,2085,2084,2048,1,0,0,0,0,329,354,961,704,43,2052,2086,2011,1759,1,0,0,0,0,332,1151,301,542,43,2053,2087,2086,2052,1,0,0,0,0,333,736,1151,332,43,2054,2088,2087,2053,1,0,0,0,0,334,357,736,333,43,2055,2089,2088,2054,1,0,0,0,0,724,1152,357,334,43,2056,2090,2089,2055,1,0,0,0,0,1145,1153,1152,724,43,2057,2091,2090,2056,1,0,0,0,0,1146,1154,1153,1145,43,2058,2092,2091,2057,1,0,0,0,0,337,361,1154,1146,43,2059,2093,2092,2058,1,0,0,0,0,1147,1155,361,337,43,2060,2094,2093,2059,1,0,0,0,0,339,1156,1155,1147,43,2061,2095,2094,2060,1,0,0,0,0,340,1157,1156,339,43,2062,2096,2095,2061,1,0,0,0,0,341,1158,1157,340,43,2063,2097,2096,2062,1,0,0,0,0,1108,1159,1158,341,43,2064,2098,2097,2063,1,0,0,0,0,957,970,1159,1108,43,2065,2099,2098,2064,1,0,0,0,0,729,1160,970,957,43,2066,2100,2099,2065,1,0,0,0,0,713,972,1160,729,43,2067,2101,2100,2066,1,0,0,0,0,714,973,972,713,43,2068,2102,2101,2067,1,0,0,0,0,320,371,973,714,43,2069,2103,2102,2068,1,0,0,0,0,185,372,371,320,43,2070,2104,2103,2069,1,0,0,0,0,302,373,372,185,43,2071,2105,2104,2070,1,0,0,0,0,303,374,373,302,43,2072,2106,2105,2071,1,0,0,0,0,304,976,374,303,43,2073,2107,2106,2072,1,0,0,0,0,305,977,976,304,43,2074,2108,2107,2073,1,0,0,0,0,306,1161,977,305,43,2075,2109,2108,2074,1,0,0,0,0,705,748,1161,306,43,2076,2110,2109,2075,1,0,0,0,0,348,979,748,705,43,2077,2111,2110,2076,1,0,0,0,0,1148,1162,979,348,43,2078,2112,2111,2077,1,0,0,0,0,310,381,1162,1148,43,2079,2113,2112,2078,1,0,0,0,0,311,382,381,310,43,2080,2114,2113,2079,1,0,0,0,0,960,1163,382,311,43,2081,2115,2114,2080,1,0,0,0,0,1149,1164,1163,960,43,2086,2116,2029,2011,1,0,0,0,0,1151,385,712,301,43,2087,2117,2116,2086,1,0,0,0,0,736,386,385,1151,43,2088,2118,2117,2087,1,0,0,0,0,357,754,386,736,43,2089,2119,2118,2088,1,0,0,0,0,1152,388,754,357,43,2090,2120,2119,2089,1,0,0,0,0,1153,1165,388,1152,43,2091,2121,2120,2090,1,0,0,0,0,1154,1166,1165,1153,43,2092,2122,2121,2091,1,0,0,0,0,361,757,1166,1154,43,2093,2123,2122,2092,1,0,0,0,0,1155,1167,757,361,43,2094,2124,2123,2093,1,0,0,0,0,1156,393,1167,1155,43,2095,2125,2124,2094,1,0,0,0,0,1157,759,393,1156,43,2096,2126,2125,2095,1,0,0,0,0,1158,1168,759,1157,43,2097,2127,2126,2096,1,0,0,0,0,1159,1169,1168,1158,43,2098,2128,2127,2097,1,0,0,0,0,970,1170,1169,1159,43,2099,2129,2128,2098,1,0,0,0,0,1160,1171,1170,970,43,2100,2130,2129,2099,1,0,0,0,0,972,763,1171,1160,43,2101,2131,2130,2100,1,0,0,0,0,973,992,763,972,43,2116,2132,2051,2029,1,0,0,0,0,385,765,331,712,43,2117,2133,2132,2116,1,0,0,0,0,386,1172,765,385,43,2118,2134,2133,2117,1,0,0,0,0,754,1173,1172,386,43,2119,2135,2134,2118,1,0,0,0,0,388,994,1173,754,43,2120,2136,2135,2119,1,0,0,0,0,1165,1174,994,388,43,2121,2137,2136,2120,1,0,0,0,0,1166,1175,1174,1165,43,2122,2138,2137,2121,1,0,0,0,0,757,407,1175,1166,43,2123,2139,2138,2122,1,0,0,0,0,1167,1176,407,757,43,2124,2140,2139,2123,1,0,0,0,0,393,769,1176,1167,43,2125,2141,2140,2124,1,0,0,0,0,759,1177,769,393,43,2126,2142,2141,2125,1,0,0,0,0,1168,1178,1177,759,43,2127,2143,2142,2126,1,0,0,0,0,1169,412,1178,1168,43,587,588,2176,2175,0,0,0,0,0,413,413,1179,1180,43,486,485,2169,2170,0,0,0,0,0,413,413,1181,1182,43,469,468,2152,2153,0,0,0,0,0,413,413,1183,1184,43,476,475,2159,2160,0,0,0,0,0,413,413,1185,1186,43,466,465,2149,2150,0,0,0,0,0,413,413,1187,1188,43,483,482,2166,2167,0,0,0,0,0,413,413,1189,1190,43,473,472,2156,2157,0,0,0,0,0,413,413,1191,1192,43,592,477,2161,2177,0,0,0,0,0,413,413,1193,1194,43,463,462,2146,2147,0,0,0,0,0,413,413,1195,1196,43,480,479,2163,2164,0,0,0,0,0,413,413,1197,1198,43,586,592,2177,2174,0,0,0,0,0,413,413,1194,1199,43,470,469,2153,2154,0,0,0,0,0,413,413,1184,1200,43,487,486,2170,2171,0,0,0,0,0,413,413,1182,1201,43,477,476,2160,2161,0,0,0,0,0,413,413,1186,1193,43,484,483,2167,2168,0,0,0,0,0,413,413,1190,1202,43,584,600,2179,2172,0,0,0,0,0,413,413,1203,1204,43,467,466,2150,2151,0,0,0,0,0,413,413,1188,1205,43,474,473,2157,2158,0,0,0,0,0,417,413,1192,1206,43,464,584,2172,2148,0,0,0,0,0,413,413,1204,1207,43,481,480,2164,2165,0,0,0,0,0,413,413,1198,1208,43,588,484,2168,2176,0,0,0,0,0,413,413,1202,1179,43,471,585,2173,2155,0,0,0,0,0,413,413,1209,1210,43,460,487,2171,2144,0,0,0,0,0,413,413,1201,1211,43,600,463,2147,2179,0,0,0,0,0,413,413,1196,1203,43,461,460,2144,2145,0,0,0,0,0,413,413,1211,1212,43,478,586,2174,2162,0,0,0,0,0,413,413,1199,1213,43,468,467,2151,2152,0,0,0,0,0,413,413,1205,1183,43,485,587,2175,2169,0,0,0,0,0,413,413,1180,1181,43,475,474,2158,2159,0,0,0,0,0,413,417,1206,1185,43,482,481,2165,2166,0,0,0,0,0,413,413,1208,1189,43,585,596,2178,2173,0,0,0,0,0,413,413,1214,1209,43,465,464,2148,2149,0,0,0,0,0,413,413,1207,1187,43,472,471,2155,2156,0,0,0,0,0,413,413,1210,1191,43,462,461,2145,2146,0,0,0,0,0,413,413,1212,1195,43,479,478,2162,2163,0,0,0,0,0,413,413,1213,1197,43,596,470,2154,2178,0,0,0,0,0,413,413,1200,1214,43,2151,2150,2186,2187,0,0,0,0,0,1205,1188,1215,310,43,2168,2167,2203,2204,0,0,0,0,0,1202,1190,1216,1217,43,2158,2157,2193,2194,0,0,0,0,0,1206,1192,1218,185,43,2177,2161,2197,2213,0,0,0,0,0,1194,1193,1219,1220,43,2148,2172,2208,2184,0,0,0,0,0,1207,1204,489,1221,43,2165,2164,2200,2201,0,0,0,0,0,1208,1198,1222,339,43,2144,2171,2207,2180,0,0,0,0,0,1211,1201,1223,56,43,2155,2173,2209,2191,0,0,0,0,0,1210,1209,492,1224,43,2175,2176,2212,2211,0,0,0,0,0,1180,1179,1225,490,43,2145,2144,2180,2181,0,0,0,0,0,1212,1211,56,1226,43,2162,2174,2210,2198,0,0,0,0,0,1213,1199,491,1227,43,2152,2151,2187,2188,0,0,0,0,0,1183,1205,310,1228,43,2169,2175,2211,2205,0,0,0,0,0,1181,1180,490,1229,43,2159,2158,2194,2195,0,0,0,0,0,1185,1206,185,1230,43,2176,2168,2204,2212,0,0,0,0,0,1179,1202,1217,1225,43,2149,2148,2184,2185,0,0,0,0,0,1187,1207,1221,1231,43,2166,2165,2201,2202,0,0,0,0,0,1189,1208,339,1232,43,2156,2155,2191,2192,0,0,0,0,0,1191,1210,1224,1233,43,2179,2147,2183,2215,0,0,0,0,0,1203,1196,1234,1235,43,2174,2177,2213,2210,0,0,0,0,0,1199,1194,1220,491,43,2163,2162,2198,2199,0,0,0,0,0,1197,1213,1227,1236,43,2146,2145,2181,2182,0,0,0,0,0,1195,1212,1226,1237,43,2170,2169,2205,2206,0,0,0,0,0,1182,1181,1229,1238,43,2153,2152,2188,2189,0,0,0,0,0,1184,1183,1228,1239,43,2160,2159,2195,2196,0,0,0,0,0,1186,1185,1230,1240,43,2173,2178,2214,2209,0,0,0,0,0,1209,1214,1241,492,43,2150,2149,2185,2186,0,0,0,0,0,1188,1187,1231,1215,43,2167,2166,2202,2203,0,0,0,0,0,1190,1189,1232,1216,43,2178,2154,2190,2214,0,0,0,0,0,1214,1200,1242,1241,43,2157,2156,2192,2193,0,0,0,0,0,1192,1191,1233,1218,43,2147,2146,2182,2183,0,0,0,0,0,1196,1195,1237,1234,43,2164,2163,2199,2200,0,0,0,0,0,1198,1197,1236,1222,43,2154,2153,2189,2190,0,0,0,0,0,1200,1184,1239,1242,43,2171,2170,2206,2207,0,0,0,0,0,1201,1182,1238,1223,43,2161,2160,2196,2197,0,0,0,0,0,1193,1186,1240,1219,43,2172,2179,2215,2208,0,0,0,0,0,1204,1203,1235,489,43,2200,2199,2235,2236,0,0,0,0,0,1222,1236,1236,1222,43,2183,2182,2218,2219,0,0,0,0,0,1234,1237,1237,1234,43,2212,2204,2240,2248,0,0,0,0,0,1225,1217,1217,1225,43,2190,2189,2225,2226,0,0,0,0,0,1242,1239,1239,1242,43,2207,2206,2242,2243,0,0,0,0,0,1223,1238,1238,1223,43,2197,2196,2232,2233,0,0,0,0,0,1219,1240,1240,1219,43,2204,2203,2239,2240,0,0,0,0,0,1217,1216,1216,1217,43,2187,2186,2222,2223,0,0,0,0,0,310,1215,1215,730,43,2210,2213,2249,2246,0,0,0,0,0,491,1220,1220,491,43,2194,2193,2229,2230,0,0,0,0,0,185,1218,1218,185,43,2184,2208,2244,2220,0,0,0,0,0,1221,489,489,1221,43,2201,2200,2236,2237,0,0,0,0,0,339,1222,1222,339,43,2191,2209,2245,2227,0,0,0,0,0,1224,492,492,1224,43,2180,2207,2243,2216,0,0,0,0,0,56,1223,1223,56,43,2209,2214,2250,2245,0,0,0,0,0,492,1241,1241,492,43,2181,2180,2216,2217,0,0,0,0,0,1226,56,56,1226,43,2198,2210,2246,2234,0,0,0,0,0,1227,491,491,1227,43,2188,2187,2223,2224,0,0,0,0,0,1228,310,730,1228,43,2205,2211,2247,2241,0,0,0,0,0,1229,490,490,1229,43,2195,2194,2230,2231,0,0,0,0,0,1230,185,185,1230,43,2202,2201,2237,2238,0,0,0,0,0,1232,339,339,1232,43,2185,2184,2220,2221,0,0,0,0,0,1231,1221,1221,1231,43,2208,2215,2251,2244,0,0,0,0,0,489,1235,1235,489,43,2192,2191,2227,2228,0,0,0,0,0,1233,1224,1224,1233,43,2215,2183,2219,2251,0,0,0,0,0,1235,1234,1234,1235,43,2182,2181,2217,2218,0,0,0,0,0,1237,1226,1226,1237,43,2199,2198,2234,2235,0,0,0,0,0,1236,1227,1227,1236,43,2189,2188,2224,2225,0,0,0,0,0,1239,1228,1228,1239,43,2206,2205,2241,2242,0,0,0,0,0,1238,1229,1229,1238,43,2213,2197,2233,2249,0,0,0,0,0,1220,1219,1219,1220,43,2196,2195,2231,2232,0,0,0,0,0,1240,1230,1230,1240,43,2186,2185,2221,2222,0,0,0,0,0,1215,1231,1231,1215,43,2203,2202,2238,2239,0,0,0,0,0,1216,1232,1232,1216,43,2211,2212,2248,2247,0,0,0,0,0,490,1225,1225,490,43,2193,2192,2228,2229,0,0,0,0,0,1218,1233,1233,1218,43,2214,2190,2226,2250,0,0,0,0,0,1241,1242,1242,1241,43,534,535,2268,2269,0,0,0,0,0,462,461,1230,185,43,520,521,2282,2283,0,0,0,0,0,448,447,1242,1239,43,533,526,2277,2270,0,0,0,0,0,459,454,310,1215,43,530,531,2272,2273,0,0,0,0,0,458,457,1238,1229,43,540,532,2271,2263,0,0,0,0,0,466,460,1231,1221,43,536,537,2266,2267,0,0,0,0,0,464,463,490,1217,43,543,544,2259,2260,0,0,0,0,0,471,470,1233,1224,43,544,538,2265,2259,0,0,0,0,0,470,465,1218,1233,43,551,547,2256,2252,0,0,0,0,0,478,475,1222,1236,43,529,522,2281,2274,0,0,0,0,0,455,450,491,1219,43,545,546,2257,2258,0,0,0,0,0,473,472,1234,1237,43,546,539,2264,2257,0,0,0,0,0,472,467,489,1234,43,532,533,2270,2271,0,0,0,0,0,460,459,1215,1231,43,538,534,2269,2265,0,0,0,0,0,465,462,185,1218,43,542,536,2267,2261,0,0,0,0,0,468,464,1217,1216,43,549,543,2260,2254,0,0,0,0,0,476,471,1224,492,43,524,525,2278,2279,0,0,0,0,0,452,451,56,1223,43,522,523,2280,2281,0,0,0,0,0,450,449,1227,491,43,525,550,2253,2278,0,0,0,0,0,451,477,1226,56,43,531,524,2279,2272,0,0,0,0,0,457,452,1223,1238,43,550,545,2258,2253,0,0,0,0,0,477,473,1237,1226,43,537,530,2273,2266,0,0,0,0,0,463,458,1229,490,43,535,528,2275,2268,0,0,0,0,0,461,456,1240,1230,43,523,551,2252,2280,0,0,0,0,0,449,478,1236,1227,43,539,540,2263,2264,0,0,0,0,0,467,466,1221,489,43,521,549,2254,2282,0,0,0,0,0,447,476,492,1242,43,527,520,2283,2276,0,0,0,0,0,453,448,1239,1228,43,548,541,2262,2255,0,0,0,0,0,474,469,1232,339,43,541,542,2261,2262,0,0,0,0,0,469,468,1216,1232,43,526,527,2276,2277,0,0,0,0,0,454,453,1228,310,43,528,529,2274,2275,0,0,0,0,0,456,455,1219,1240,43,547,548,2255,2256,0,0,0,0,0,475,474,339,1222,43,2348,2351,2324,2331,4,0,0,0,0,1243,1244,1245,1246,43,2352,2355,2317,2316,4,0,0,0,0,1247,1248,1249,1250,43,2356,2359,2338,2337,4,0,0,0,0,1251,1252,1253,1254,43,2360,2363,2343,2347,4,0,0,0,0,1255,1256,1257,1258,43,2364,2367,2320,2327,4,0,0,0,0,1259,1260,1261,1262,43,2368,2371,2330,2334,4,0,0,0,0,1263,1264,1265,1266,43,2372,2375,2339,2345,4,0,0,0,0,1267,1268,1269,1270,43,2376,2352,2316,2323,4,0,0,0,0,1271,1247,1250,1272,43,2371,2348,2331,2330,4,0,0,0,0,1264,1243,1246,1265,43,2378,2381,2335,2342,4,0,0,0,0,1273,1274,1275,1276,43,2382,2385,2346,2321,4,0,0,0,0,1277,1278,1279,1280,43,2386,2364,2327,2326,4,0,0,0,0,1281,1259,1262,1282,43,2359,2389,2332,2338,4,0,0,0,0,1252,1283,1284,1253,43,2390,2376,2323,2322,4,0,0,0,0,1285,1271,1272,1286,43,2363,2393,2344,2343,4,0,0,0,0,1256,1287,1288,1257,43,2394,2386,2326,2333,4,0,0,0,0,1289,1281,1282,1290,43,2396,2399,2319,2318,4,0,0,0,0,1291,1292,1293,1294,43,2375,2401,2340,2339,4,0,0,0,0,1268,1295,1296,1269,43,2402,2390,2322,2329,4,0,0,0,0,1297,1285,1286,1298,43,2381,2405,2336,2335,4,0,0,0,0,1274,1299,1300,1275,43,2385,2407,2341,2346,4,0,0,0,0,1278,1301,1302,1279,43,2408,2396,2318,2325,4,0,0,0,0,1303,1291,1294,1304,43,2389,2394,2333,2332,4,0,0,0,0,1283,1289,1290,1284,43,2393,2356,2337,2344,4,0,0,0,0,1287,1251,1254,1288,43,2399,2360,2347,2319,4,0,0,0,0,1292,1255,1258,1293,43,2410,2402,2329,2328,4,0,0,0,0,1305,1297,1298,1306,43,2401,2368,2334,2340,4,0,0,0,0,1295,1263,1266,1296,43,2351,2408,2325,2324,4,0,0,0,0,1244,1303,1304,1245,43,2355,2372,2345,2317,4,0,0,0,0,1248,1267,1270,1249,43,2405,2410,2328,2336,4,0,0,0,0,1299,1305,1306,1300,43,2367,2382,2321,2320,4,0,0,0,0,1260,1277,1280,1261,43,2407,2378,2342,2341,4,0,0,0,0,1301,1273,1276,1302,43,2299,2292,2350,2349,4,0,0,0,0,1307,1308,1309,1310,43,2989,2990,2351,2348,4,0,0,0,0,1311,1312,1244,1243,43,2284,2285,2354,2353,4,0,0,0,0,1313,1314,1315,1316,43,2991,2992,2355,2352,4,0,0,0,0,1317,1318,1248,1247,43,2305,2306,2358,2357,4,0,0,0,0,1319,1320,1321,1322,43,2993,2994,2359,2356,4,0,0,0,0,1323,1324,1252,1251,43,2315,2311,2362,2361,4,0,0,0,0,1325,1326,1327,1328,43,2995,2996,2363,2360,4,0,0,0,0,1329,1330,1256,1255,43,2295,2288,2366,2365,4,0,0,0,0,1331,1332,1333,1334,43,2997,2998,2367,2364,4,0,0,0,0,1335,1336,1260,1259,43,2302,2298,2370,2369,4,0,0,0,0,1337,1338,1339,1340,43,2999,3e3,2371,2368,4,0,0,0,0,1341,1342,1264,1263,43,2313,2307,2374,2373,4,0,0,0,0,1343,1344,1345,1346,43,3001,3002,2375,2372,4,0,0,0,0,1347,1348,1268,1267,43,2291,2284,2353,2377,4,0,0,0,0,1349,1313,1316,1350,43,3003,2991,2352,2376,4,0,0,0,0,1351,1317,1247,1271,43,2298,2299,2349,2370,4,0,0,0,0,1338,1307,1310,1339,43,3e3,2989,2348,2371,4,0,0,0,0,1342,1311,1243,1264,43,2310,2303,2380,2379,4,0,0,0,0,1352,1353,1354,1355,43,3004,3005,2381,2378,4,0,0,0,0,1356,1357,1274,1273,43,2289,2314,2384,2383,4,0,0,0,0,1358,1359,1360,1361,43,3006,3007,2385,2382,4,0,0,0,0,1362,1363,1278,1277,43,2294,2295,2365,2387,4,0,0,0,0,1364,1331,1334,1365,43,3008,2997,2364,2386,4,0,0,0,0,1366,1335,1259,1281,43,2306,2300,2388,2358,4,0,0,0,0,1320,1367,1368,1321,43,2994,3009,2389,2359,4,0,0,0,0,1324,1369,1283,1252,43,2290,2291,2377,2391,4,0,0,0,0,1370,1349,1350,1371,43,3010,3003,2376,2390,4,0,0,0,0,1372,1351,1271,1285,43,2311,2312,2392,2362,4,0,0,0,0,1326,1373,1374,1327,43,2996,3011,2393,2363,4,0,0,0,0,1330,1375,1287,1256,43,2301,2294,2387,2395,4,0,0,0,0,1376,1364,1365,1377,43,3012,3008,2386,2394,4,0,0,0,0,1378,1366,1281,1289,43,2286,2287,2398,2397,4,0,0,0,0,1379,1380,1381,1382,43,3013,3014,2399,2396,4,0,0,0,0,1383,1384,1292,1291,43,2307,2308,2400,2374,4,0,0,0,0,1344,1385,1386,1345,43,3002,3015,2401,2375,4,0,0,0,0,1348,1387,1295,1268,43,2297,2290,2391,2403,4,0,0,0,0,1388,1370,1371,1389,43,3016,3010,2390,2402,4,0,0,0,0,1390,1372,1285,1297,43,2303,2304,2404,2380,4,0,0,0,0,1353,1391,1392,1354,43,3005,3017,2405,2381,4,0,0,0,0,1357,1393,1299,1274,43,2314,2309,2406,2384,4,0,0,0,0,1359,1394,1395,1360,43,3007,3018,2407,2385,4,0,0,0,0,1363,1396,1301,1278,43,2293,2286,2397,2409,4,0,0,0,0,1397,1379,1382,1398,43,3019,3013,2396,2408,4,0,0,0,0,1399,1383,1291,1303,43,2300,2301,2395,2388,4,0,0,0,0,1367,1376,1377,1368,43,3009,3012,2394,2389,4,0,0,0,0,1369,1378,1289,1283,43,2312,2305,2357,2392,4,0,0,0,0,1373,1319,1322,1374,43,3011,2993,2356,2393,4,0,0,0,0,1375,1323,1251,1287,43,2287,2315,2361,2398,4,0,0,0,0,1380,1325,1328,1381,43,3014,2995,2360,2399,4,0,0,0,0,1384,1329,1255,1292,43,2296,2297,2403,2411,4,0,0,0,0,1400,1388,1389,1401,43,3020,3016,2402,2410,4,0,0,0,0,1402,1390,1297,1305,43,2308,2302,2369,2400,4,0,0,0,0,1385,1337,1340,1386,43,3015,2999,2368,2401,4,0,0,0,0,1387,1341,1263,1295,43,2292,2293,2409,2350,4,0,0,0,0,1308,1397,1398,1309,43,2990,3019,2408,2351,4,0,0,0,0,1312,1399,1303,1244,43,2285,2313,2373,2354,4,0,0,0,0,1314,1343,1346,1315,43,2992,3001,2372,2355,4,0,0,0,0,1318,1347,1267,1248,43,2304,2296,2411,2404,4,0,0,0,0,1391,1400,1401,1392,43,3017,3020,2410,2405,4,0,0,0,0,1393,1402,1305,1299,43,2288,2289,2383,2366,4,0,0,0,0,1332,1358,1361,1333,43,2998,3006,2382,2367,4,0,0,0,0,1336,1362,1277,1260,43,2309,2310,2379,2406,4,0,0,0,0,1394,1352,1355,1395,43,3018,3004,2378,2407,4,0,0,0,0,1396,1356,1273,1301,43,2333,2326,2422,2429,4,0,0,0,0,1290,1282,1403,1404,43,2318,2319,2415,2414,4,0,0,0,0,1294,1293,1405,1406,43,2339,2340,2436,2435,4,0,0,0,0,1269,1296,1407,1408,43,2329,2322,2418,2425,4,0,0,0,0,1298,1286,1409,1410,43,2335,2336,2432,2431,4,0,0,0,0,1275,1300,1411,1412,43,2346,2341,2437,2442,4,0,0,0,0,1279,1302,1413,1414,43,2325,2318,2414,2421,4,0,0,0,0,1304,1294,1406,1415,43,2332,2333,2429,2428,4,0,0,0,0,1284,1290,1404,1416,43,2344,2337,2433,2440,4,0,0,0,0,1288,1254,1417,1418,43,2319,2347,2443,2415,4,0,0,0,0,1293,1258,1419,1405,43,2328,2329,2425,2424,4,0,0,0,0,1306,1298,1410,1420,43,2340,2334,2430,2436,4,0,0,0,0,1296,1266,1421,1407,43,2324,2325,2421,2420,4,0,0,0,0,1245,1304,1415,1422,43,2317,2345,2441,2413,4,0,0,0,0,1249,1270,1423,1424,43,2336,2328,2424,2432,4,0,0,0,0,1300,1306,1420,1411,43,2320,2321,2417,2416,4,0,0,0,0,1261,1280,1425,1426,43,2341,2342,2438,2437,4,0,0,0,0,1302,1276,1427,1413,43,2331,2324,2420,2427,4,0,0,0,0,1246,1245,1422,1428,43,2316,2317,2413,2412,4,0,0,0,0,1250,1249,1424,1429,43,2337,2338,2434,2433,4,0,0,0,0,1254,1253,1430,1417,43,2347,2343,2439,2443,4,0,0,0,0,1258,1257,1431,1419,43,2327,2320,2416,2423,4,0,0,0,0,1262,1261,1426,1432,43,2334,2330,2426,2430,4,0,0,0,0,1266,1265,1433,1421,43,2345,2339,2435,2441,4,0,0,0,0,1270,1269,1408,1423,43,2323,2316,2412,2419,4,0,0,0,0,1272,1250,1429,1434,43,2330,2331,2427,2426,4,0,0,0,0,1265,1246,1428,1433,43,2342,2335,2431,2438,4,0,0,0,0,1276,1275,1412,1427,43,2321,2346,2442,2417,4,0,0,0,0,1280,1279,1414,1425,43,2326,2327,2423,2422,4,0,0,0,0,1282,1262,1432,1403,43,2338,2332,2428,2434,4,0,0,0,0,1253,1284,1416,1430,43,2322,2323,2419,2418,4,0,0,0,0,1286,1272,1434,1409,43,2343,2344,2440,2439,4,0,0,0,0,1257,1288,1418,1431,43,2461,2454,2486,2493,3,1,2,3,4,492,1224,1210,1435,43,2446,2447,2479,2478,3,5,6,7,8,489,1221,1207,1204,43,2467,2468,2500,2499,3,9,10,11,12,1229,1238,1182,1181,43,2457,2450,2482,2489,3,13,14,15,16,1222,339,1208,1198,43,2463,2464,2496,2495,3,17,18,19,20,491,1227,1213,1436,43,2474,2469,2501,2506,3,21,22,23,24,1230,1240,1186,1185,43,2453,2446,2478,2485,3,25,5,8,26,1234,489,1204,1196,43,2460,2461,2493,2492,3,27,1,4,28,1242,492,1435,1200,43,2472,2465,2497,2504,3,29,30,31,32,310,1228,1183,1205,43,2447,2475,2507,2479,3,6,33,34,7,1221,1231,1187,1207,43,2456,2457,2489,2488,3,35,13,16,36,1236,1222,1198,1197,43,2468,2462,2494,2500,3,10,37,38,11,1238,1223,1201,1182,43,2452,2453,2485,2484,3,39,25,26,40,1237,1234,1196,1195,43,2445,2473,2505,2477,3,41,42,43,44,1217,490,1180,1202,43,2464,2456,2488,2496,3,18,35,36,19,1227,1236,1197,1213,43,2448,2449,2481,2480,3,45,46,47,48,1218,185,1206,1192,43,2469,2470,2502,2501,3,22,49,50,23,1240,1219,1193,1186,43,2459,2452,2484,2491,3,51,39,40,52,1226,1237,1195,1212,43,2444,2445,2477,2476,3,53,41,44,54,1216,1217,1202,1190,43,2465,2466,2498,2497,3,30,55,56,31,1228,1239,1184,1183,43,2475,2471,2503,2507,3,33,57,58,34,1231,1215,1188,1187,43,2455,2448,2480,2487,3,59,45,48,60,1233,1218,1192,1191,43,2462,2458,2490,2494,3,37,61,62,38,1223,56,1211,1201,43,2473,2467,2499,2505,3,42,9,12,43,490,1229,1181,1180,43,2451,2444,2476,2483,3,63,53,54,64,1232,1216,1190,1189,43,2458,2459,2491,2490,3,61,51,52,62,56,1226,1212,1211,43,2470,2463,2495,2502,3,49,17,20,50,1219,491,1436,1193,43,2449,2474,2506,2481,3,46,21,24,47,185,1230,1185,1206,43,2454,2455,2487,2486,3,2,59,60,3,1224,1233,1191,1210,43,2466,2460,2492,2498,3,55,27,28,56,1239,1242,1200,1184,43,2450,2451,2483,2482,3,14,63,64,15,339,1232,1189,1208,43,2471,2472,2504,2503,3,57,29,32,58,1215,310,1205,1188,43,2491,2484,2516,2523,3,52,40,65,66,1212,1195,1437,1438,43,2480,2481,2513,2512,3,48,47,67,68,1192,1206,1439,1440,43,2501,2502,2534,2533,3,23,50,69,70,1186,1193,1441,1442,43,2507,2503,2535,2539,3,34,58,71,72,1187,1188,1443,1444,43,2487,2480,2512,2519,3,60,48,68,73,1191,1192,1440,1445,43,2476,2477,2509,2508,3,54,44,74,75,1190,1202,1446,1447,43,2497,2498,2530,2529,3,31,56,76,77,1183,1184,1448,1449,43,2505,2499,2531,2537,3,43,12,78,79,1180,1181,1450,1451,43,2483,2476,2508,2515,3,64,54,75,80,1189,1190,1447,1452,43,2494,2490,2522,2526,3,38,62,81,82,1201,1211,1453,1454,43,2502,2495,2527,2534,3,50,20,83,69,1193,1436,1455,1441,43,2481,2506,2538,2513,3,47,24,84,67,1206,1185,1456,1439,43,2490,2491,2523,2522,3,62,52,66,81,1211,1212,1438,1453,43,2498,2492,2524,2530,3,56,28,85,76,1184,1200,1457,1448,43,2486,2487,2519,2518,3,3,60,73,86,1210,1191,1445,1458,43,2503,2504,2536,2535,3,58,32,87,71,1188,1205,1459,1443,43,2493,2486,2518,2525,3,4,3,86,88,1435,1210,1458,1460,43,2482,2483,2515,2514,3,15,64,80,89,1208,1189,1452,1461,43,2489,2482,2514,2521,3,16,15,89,90,1198,1208,1461,1462,43,2478,2479,2511,2510,3,8,7,91,92,1204,1207,1463,1464,43,2499,2500,2532,2531,3,12,11,93,78,1181,1182,1465,1450,43,2506,2501,2533,2538,3,24,23,70,84,1185,1186,1442,1456,43,2485,2478,2510,2517,3,26,8,92,94,1196,1204,1464,1466,43,2495,2496,2528,2527,3,20,19,95,83,1436,1213,1467,1455,43,2504,2497,2529,2536,3,32,31,77,87,1205,1183,1449,1459,43,2479,2507,2539,2511,3,7,34,72,91,1207,1187,1444,1463,43,2492,2493,2525,2524,3,28,4,88,85,1200,1435,1460,1457,43,2500,2494,2526,2532,3,11,38,82,93,1182,1201,1454,1465,43,2488,2489,2521,2520,3,36,16,90,96,1197,1198,1462,1468,43,2477,2505,2537,2509,3,44,43,79,74,1202,1180,1451,1446,43,2496,2488,2520,2528,3,19,36,96,95,1213,1197,1468,1467,43,2484,2485,2517,2516,3,40,26,94,65,1195,1196,1466,1437,43,2528,2520,2552,2560,3,95,96,97,98,1467,1468,1469,1470,43,2512,2513,2545,2544,3,68,67,99,100,1440,1439,1471,1472,43,2533,2534,2566,2565,3,70,69,101,102,1442,1441,1473,1474,43,2523,2516,2548,2555,3,66,65,103,104,1438,1437,1475,1476,43,2508,2509,2541,2540,3,75,74,105,106,1447,1446,1477,1478,43,2529,2530,2562,2561,3,77,76,107,108,1449,1448,1479,1480,43,2539,2535,2567,2571,3,72,71,109,110,1444,1443,1481,1482,43,2519,2512,2544,2551,3,73,68,100,111,1445,1440,1472,1483,43,2526,2522,2554,2558,3,82,81,112,113,1454,1453,1484,1485,43,2537,2531,2563,2569,3,79,78,114,115,1451,1450,1486,1487,43,2515,2508,2540,2547,3,80,75,106,116,1452,1447,1478,1488,43,2522,2523,2555,2554,3,81,66,104,112,1453,1438,1476,1484,43,2534,2527,2559,2566,3,69,83,117,101,1441,1455,1489,1473,43,2513,2538,2570,2545,3,67,84,118,99,1439,1456,1490,1471,43,2518,2519,2551,2550,3,86,73,111,119,1458,1445,1483,1491,43,2530,2524,2556,2562,3,76,85,120,107,1448,1457,1492,1479,43,2514,2515,2547,2546,3,89,80,116,121,1461,1452,1488,1493,43,2535,2536,2568,2567,3,71,87,122,109,1443,1459,1494,1481,43,2525,2518,2550,2557,3,88,86,119,123,1460,1458,1491,1495,43,2510,2511,2543,2542,3,92,91,124,125,1464,1463,1496,1497,43,2531,2532,2564,2563,3,78,93,126,114,1450,1465,1498,1486,43,2521,2514,2546,2553,3,90,89,121,127,1462,1461,1493,1499,43,2527,2528,2560,2559,3,83,95,98,117,1455,1467,1470,1489,43,2538,2533,2565,2570,3,84,70,102,118,1456,1442,1474,1490,43,2517,2510,2542,2549,3,94,92,125,128,1466,1464,1497,1500,43,2524,2525,2557,2556,3,85,88,123,120,1457,1460,1495,1492,43,2536,2529,2561,2568,3,87,77,108,122,1459,1449,1480,1494,43,2511,2539,2571,2543,3,91,72,110,124,1463,1444,1482,1496,43,2520,2521,2553,2552,3,96,90,127,97,1468,1462,1499,1469,43,2532,2526,2558,2564,3,93,82,113,126,1465,1454,1485,1498,43,2516,2517,2549,2548,3,65,94,128,103,1437,1466,1500,1475,43,2509,2537,2569,2541,3,74,79,115,105,1446,1451,1487,1477,43,2564,2558,2590,2596,3,126,113,129,130,1498,1485,1501,1502,43,2548,2549,2581,2580,3,103,128,131,132,1475,1500,1503,1504,43,2541,2569,2601,2573,3,105,115,133,134,1477,1487,1505,1506,43,2560,2552,2584,2592,3,98,97,135,136,1470,1469,1507,1508,43,2544,2545,2577,2576,3,100,99,137,138,1472,1471,1509,1510,43,2565,2566,2598,2597,3,102,101,139,140,1474,1473,1511,1512,43,2555,2548,2580,2587,3,104,103,132,141,1476,1475,1504,1513,43,2540,2541,2573,2572,3,106,105,134,142,1478,1477,1506,1514,43,2561,2562,2594,2593,3,108,107,143,144,1480,1479,1515,1516,43,2571,2567,2599,2603,3,110,109,145,146,1482,1481,1517,1518,43,2551,2544,2576,2583,3,111,100,138,147,1483,1472,1510,1519,43,2558,2554,2586,2590,3,113,112,148,129,1485,1484,1520,1501,43,2569,2563,2595,2601,3,115,114,149,133,1487,1486,1521,1505,43,2547,2540,2572,2579,3,116,106,142,150,1488,1478,1514,1522,43,2554,2555,2587,2586,3,112,104,141,148,1484,1476,1513,1520,43,2566,2559,2591,2598,3,101,117,151,139,1473,1489,1523,1511,43,2545,2570,2602,2577,3,99,118,152,137,1471,1490,1524,1509,43,2550,2551,2583,2582,3,119,111,147,153,1491,1483,1519,1525,43,2562,2556,2588,2594,3,107,120,154,143,1479,1492,1526,1515,43,2546,2547,2579,2578,3,121,116,150,155,1493,1488,1522,1527,43,2567,2568,2600,2599,3,109,122,156,145,1481,1494,1528,1517,43,2557,2550,2582,2589,3,123,119,153,157,1495,1491,1525,1529,43,2542,2543,2575,2574,3,125,124,158,159,1497,1496,1530,1531,43,2563,2564,2596,2595,3,114,126,130,149,1486,1498,1502,1521,43,2553,2546,2578,2585,3,127,121,155,160,1499,1493,1527,1532,43,2559,2560,2592,2591,3,117,98,136,151,1489,1470,1508,1523,43,2570,2565,2597,2602,3,118,102,140,152,1490,1474,1512,1524,43,2549,2542,2574,2581,3,128,125,159,131,1500,1497,1531,1503,43,2556,2557,2589,2588,3,120,123,157,154,1492,1495,1529,1526,43,2568,2561,2593,2600,3,122,108,144,156,1494,1480,1516,1528,43,2543,2571,2603,2575,3,124,110,146,158,1496,1482,1518,1530,43,2552,2553,2585,2584,3,97,127,160,135,1469,1499,1532,1507,43,2600,2593,2625,2632,3,156,144,161,162,1528,1516,1232,1533,43,2575,2603,2635,2607,3,158,146,163,164,1530,1518,1236,1227,43,2584,2585,2617,2616,3,135,160,165,166,1507,1532,1215,1231,43,2596,2590,2622,2628,3,130,129,167,168,1502,1501,1218,1233,43,2580,2581,2613,2612,3,132,131,169,170,1504,1503,1219,1240,43,2573,2601,2633,2605,3,134,133,171,172,1506,1505,492,1242,43,2592,2584,2616,2624,3,136,135,166,173,1508,1507,1231,1221,43,2576,2577,2609,2608,3,138,137,174,175,1510,1509,56,1223,43,2597,2598,2630,2629,3,140,139,176,177,1512,1511,1234,1237,43,2587,2580,2612,2619,3,141,132,170,178,1513,1504,1240,1230,43,2572,2573,2605,2604,3,142,134,172,179,1514,1506,1242,1239,43,2593,2594,2626,2625,3,144,143,180,161,1516,1515,1216,1232,43,2603,2599,2631,2635,3,146,145,181,163,1518,1517,1222,1236,43,2583,2576,2608,2615,3,147,138,175,182,1519,1510,1223,1238,43,2590,2586,2618,2622,3,129,148,183,167,1501,1520,185,1218,43,2601,2595,2627,2633,3,133,149,184,171,1505,1521,1224,492,43,2579,2572,2604,2611,3,150,142,179,185,1522,1514,1239,1228,43,2586,2587,2619,2618,3,148,141,178,183,1520,1513,1230,185,43,2598,2591,2623,2630,3,139,151,186,176,1511,1523,489,1234,43,2577,2602,2634,2609,3,137,152,187,174,1509,1524,1226,56,43,2582,2583,2615,2614,3,153,147,182,188,1525,1519,1238,1229,43,2594,2588,2620,2626,3,143,154,189,180,1515,1526,1217,1216,43,2578,2579,2611,2610,3,155,150,185,190,1527,1522,1228,310,43,2599,2600,2632,2631,3,145,156,162,181,1517,1528,1533,1222,43,2589,2582,2614,2621,3,157,153,188,191,1529,1525,1229,490,43,2574,2575,2607,2606,3,159,158,164,192,1531,1530,1227,491,43,2595,2596,2628,2627,3,149,130,168,184,1521,1502,1233,1224,43,2585,2578,2610,2617,3,160,155,190,165,1532,1527,310,1215,43,2591,2592,2624,2623,3,151,136,173,186,1523,1508,1221,489,43,2602,2597,2629,2634,3,152,140,177,187,1524,1512,1237,1226,43,2581,2574,2606,2613,3,131,159,192,169,1503,1531,491,1219,43,2588,2589,2621,2620,3,154,157,191,189,1526,1529,490,1217,43,2649,2642,2674,2681,4,0,0,0,0,1222,1533,1534,1535,43,2655,2656,2688,2687,4,0,0,0,0,491,1227,1536,1537,43,2666,2661,2693,2698,4,0,0,0,0,1230,1240,1538,1539,43,2645,2638,2670,2677,4,0,0,0,0,1234,489,1540,1541,43,2652,2653,2685,2684,4,0,0,0,0,1242,492,1542,1543,43,2664,2657,2689,2696,4,0,0,0,0,310,1228,1544,1545,43,2639,2667,2699,2671,4,0,0,0,0,1221,1231,1546,1547,43,2648,2649,2681,2680,4,0,0,0,0,1236,1222,1535,1548,43,2660,2654,2686,2692,4,0,0,0,0,1238,1223,1549,1550,43,2644,2645,2677,2676,4,0,0,0,0,1237,1234,1541,1551,43,2637,2665,2697,2669,4,0,0,0,0,1217,490,1552,1553,43,2656,2648,2680,2688,4,0,0,0,0,1227,1236,1548,1536,43,2640,2641,2673,2672,4,0,0,0,0,1218,185,1554,1555,43,2661,2662,2694,2693,4,0,0,0,0,1240,1219,1556,1538,43,2651,2644,2676,2683,4,0,0,0,0,1226,1237,1551,1557,43,2636,2637,2669,2668,4,0,0,0,0,1216,1217,1553,1558,43,2657,2658,2690,2689,4,0,0,0,0,1228,1239,1559,1544,43,2667,2663,2695,2699,4,0,0,0,0,1231,1215,1560,1546,43,2647,2640,2672,2679,4,0,0,0,0,1233,1218,1555,1561,43,2654,2650,2682,2686,4,0,0,0,0,1223,56,1562,1549,43,2665,2659,2691,2697,4,0,0,0,0,490,1229,1563,1552,43,2643,2636,2668,2675,4,0,0,0,0,1232,1216,1558,1564,43,2650,2651,2683,2682,4,0,0,0,0,56,1226,1557,1562,43,2662,2655,2687,2694,4,0,0,0,0,1219,491,1537,1556,43,2641,2666,2698,2673,4,0,0,0,0,185,1230,1539,1554,43,2646,2647,2679,2678,4,0,0,0,0,1224,1233,1561,1565,43,2658,2652,2684,2690,4,0,0,0,0,1239,1242,1543,1559,43,2642,2643,2675,2674,4,0,0,0,0,1533,1232,1564,1534,43,2663,2664,2696,2695,4,0,0,0,0,1215,310,1545,1560,43,2653,2646,2678,2685,4,0,0,0,0,492,1224,1565,1542,43,2638,2639,2671,2670,4,0,0,0,0,489,1221,1547,1540,43,2659,2660,2692,2691,4,0,0,0,0,1229,1238,1550,1563,43,2796,2799,2708,2715,4,0,0,0,0,1566,1567,1568,1569,43,2800,2803,2701,2700,4,0,0,0,0,1570,1571,1572,1573,43,2804,2807,2722,2721,4,0,0,0,0,1574,1575,1576,1577,43,2808,2811,2727,2731,4,0,0,0,0,1578,1579,1580,1581,43,2812,2815,2704,2711,4,0,0,0,0,1582,1583,1584,1585,43,2816,2819,2714,2718,4,0,0,0,0,1586,1587,1588,1589,43,2820,2823,2723,2729,4,0,0,0,0,1590,1591,1592,1593,43,2824,2800,2700,2707,4,0,0,0,0,1594,1570,1573,1595,43,2819,2796,2715,2714,4,0,0,0,0,1587,1566,1569,1588,43,2826,2829,2719,2726,4,0,0,0,0,1596,1597,1598,1599,43,2830,2833,2730,2705,4,0,0,0,0,1600,1601,1602,1603,43,2834,2812,2711,2710,4,0,0,0,0,1604,1582,1585,1605,43,2807,2837,2716,2722,4,0,0,0,0,1575,1606,1607,1576,43,2838,2824,2707,2706,4,0,0,0,0,1608,1594,1595,1609,43,2811,2841,2728,2727,4,0,0,0,0,1579,1610,1611,1580,43,2842,2834,2710,2717,4,0,0,0,0,1612,1604,1605,1613,43,2844,2847,2703,2702,4,0,0,0,0,1614,1615,1616,1617,43,2823,2849,2724,2723,4,0,0,0,0,1591,1618,1619,1592,43,2850,2838,2706,2713,4,0,0,0,0,1620,1608,1609,1621,43,2829,2853,2720,2719,4,0,0,0,0,1597,1622,1623,1598,43,2833,2855,2725,2730,4,0,0,0,0,1601,1624,1625,1602,43,2856,2844,2702,2709,4,0,0,0,0,1626,1614,1617,1627,43,2837,2842,2717,2716,4,0,0,0,0,1606,1612,1613,1607,43,2841,2804,2721,2728,4,0,0,0,0,1610,1574,1577,1611,43,2847,2808,2731,2703,4,0,0,0,0,1615,1578,1581,1616,43,2858,2850,2713,2712,4,0,0,0,0,1628,1620,1621,1629,43,2849,2816,2718,2724,4,0,0,0,0,1618,1586,1589,1619,43,2799,2856,2709,2708,4,0,0,0,0,1567,1626,1627,1568,43,2803,2820,2729,2701,4,0,0,0,0,1571,1590,1593,1572,43,2853,2858,2712,2720,4,0,0,0,0,1622,1628,1629,1623,43,2815,2830,2705,2704,4,0,0,0,0,1583,1600,1603,1584,43,2855,2826,2726,2725,4,0,0,0,0,1624,1596,1599,1625,43,2764,2765,2744,2752,4,0,0,0,0,1221,1231,1231,1221,43,2766,2767,2737,2736,4,0,0,0,0,1223,56,56,1223,43,2768,2769,2758,2757,4,0,0,0,0,1237,1234,1234,1237,43,2770,2771,2740,2747,4,0,0,0,0,1230,1240,1240,1230,43,2772,2773,2733,2732,4,0,0,0,0,1239,1242,1242,1239,43,2774,2775,2754,2753,4,0,0,0,0,1232,1216,1216,1232,43,2776,2777,2759,2763,4,0,0,0,0,1236,1222,1222,1236,43,2778,2766,2736,2743,4,0,0,0,0,1238,1223,1223,1238,43,2779,2780,2746,2750,4,0,0,0,0,1218,185,185,1218,43,2781,2782,2755,2761,4,0,0,0,0,492,1224,1224,492,43,2783,2772,2732,2739,4,0,0,0,0,1228,1239,1239,1228,43,2780,2770,2747,2746,4,0,0,0,0,185,1230,1230,185,43,2769,2784,2751,2758,4,0,0,0,0,1234,489,489,1234,43,2767,2785,2762,2737,4,0,0,0,0,56,1226,1226,56,43,2786,2778,2743,2742,4,0,0,0,0,1229,1238,1238,1229,43,2775,2787,2748,2754,4,0,0,0,0,1216,1217,1217,1216,43,2788,2783,2739,2738,4,0,0,0,0,310,1228,1228,310,43,2777,2789,2760,2759,4,0,0,0,0,1222,339,339,1222,43,2790,2786,2742,2749,4,0,0,0,0,490,1229,1229,490,43,2791,2792,2735,2734,4,0,0,0,0,491,1227,1227,491,43,2782,2793,2756,2755,4,0,0,0,0,1224,1233,1233,1224,43,2794,2788,2738,2745,4,0,0,0,0,1215,310,310,1215,43,2784,2764,2752,2751,4,0,0,0,0,489,1221,1221,489,43,2785,2768,2757,2762,4,0,0,0,0,1226,1237,1237,1226,43,2795,2791,2734,2741,4,0,0,0,0,1219,491,491,1219,43,2787,2790,2749,2748,4,0,0,0,0,1217,490,490,1217,43,2789,2774,2753,2760,4,0,0,0,0,339,1232,1232,339,43,2792,2776,2763,2735,4,0,0,0,0,1227,1236,1236,1227,43,2765,2794,2745,2744,4,0,0,0,0,1231,1215,1215,1231,43,2793,2779,2750,2756,4,0,0,0,0,1233,1218,1218,1233,43,2771,2795,2741,2740,4,0,0,0,0,1240,1219,1219,1240,43,2773,2781,2761,2733,4,0,0,0,0,1242,492,492,1242,43,2720,2712,2765,2764,4,0,0,0,0,1623,1629,1231,1221,43,2704,2705,2767,2766,4,0,0,0,0,1584,1603,56,1223,43,2725,2726,2769,2768,4,0,0,0,0,1625,1599,1234,1237,43,2715,2708,2771,2770,4,0,0,0,0,1569,1568,1240,1230,43,2700,2701,2773,2772,4,0,0,0,0,1573,1572,1242,1239,43,2721,2722,2775,2774,4,0,0,0,0,1577,1576,1216,1232,43,2731,2727,2777,2776,4,0,0,0,0,1581,1580,1222,1236,43,2711,2704,2766,2778,4,0,0,0,0,1585,1584,1223,1238,43,2718,2714,2780,2779,4,0,0,0,0,1589,1588,185,1218,43,2729,2723,2782,2781,4,0,0,0,0,1593,1592,1224,492,43,2707,2700,2772,2783,4,0,0,0,0,1595,1573,1239,1228,43,2714,2715,2770,2780,4,0,0,0,0,1588,1569,1230,185,43,2726,2719,2784,2769,4,0,0,0,0,1599,1598,489,1234,43,2705,2730,2785,2767,4,0,0,0,0,1603,1602,1226,56,43,2710,2711,2778,2786,4,0,0,0,0,1605,1585,1238,1229,43,2722,2716,2787,2775,4,0,0,0,0,1576,1607,1217,1216,43,2706,2707,2783,2788,4,0,0,0,0,1609,1595,1228,310,43,2727,2728,2789,2777,4,0,0,0,0,1580,1611,339,1222,43,2717,2710,2786,2790,4,0,0,0,0,1613,1605,1229,490,43,2702,2703,2792,2791,4,0,0,0,0,1617,1616,1227,491,43,2723,2724,2793,2782,4,0,0,0,0,1592,1619,1233,1224,43,2713,2706,2788,2794,4,0,0,0,0,1621,1609,310,1215,43,2719,2720,2764,2784,4,0,0,0,0,1598,1623,1221,489,43,2730,2725,2768,2785,4,0,0,0,0,1602,1625,1237,1226,43,2709,2702,2791,2795,4,0,0,0,0,1627,1617,491,1219,43,2716,2717,2790,2787,4,0,0,0,0,1607,1613,490,1217,43,2728,2721,2774,2789,4,0,0,0,0,1611,1577,1232,339,43,2703,2731,2776,2792,4,0,0,0,0,1616,1581,1236,1227,43,2712,2713,2794,2765,4,0,0,0,0,1629,1621,1215,1231,43,2724,2718,2779,2793,4,0,0,0,0,1619,1589,1218,1233,43,2708,2709,2795,2771,4,0,0,0,0,1568,1627,1219,1240,43,2701,2729,2781,2773,4,0,0,0,0,1572,1593,492,1242,43,2683,2676,2798,2797,4,0,0,0,0,1557,1551,1630,1631,43,2797,2798,2799,2796,4,0,0,0,0,1631,1630,1567,1566,43,2668,2669,2802,2801,4,0,0,0,0,1558,1553,1632,1633,43,2801,2802,2803,2800,4,0,0,0,0,1633,1632,1571,1570,43,2689,2690,2806,2805,4,0,0,0,0,1544,1559,1634,1635,43,2805,2806,2807,2804,4,0,0,0,0,1635,1634,1575,1574,43,2699,2695,2810,2809,4,0,0,0,0,1546,1560,1636,1637,43,2809,2810,2811,2808,4,0,0,0,0,1637,1636,1579,1578,43,2679,2672,2814,2813,4,0,0,0,0,1561,1555,1638,1639,43,2813,2814,2815,2812,4,0,0,0,0,1639,1638,1583,1582,43,2686,2682,2818,2817,4,0,0,0,0,1549,1562,1640,1641,43,2817,2818,2819,2816,4,0,0,0,0,1641,1640,1587,1586,43,2697,2691,2822,2821,4,0,0,0,0,1552,1563,1642,1643,43,2821,2822,2823,2820,4,0,0,0,0,1643,1642,1591,1590,43,2675,2668,2801,2825,4,0,0,0,0,1564,1558,1633,1644,43,2825,2801,2800,2824,4,0,0,0,0,1644,1633,1570,1594,43,2682,2683,2797,2818,4,0,0,0,0,1562,1557,1631,1640,43,2818,2797,2796,2819,4,0,0,0,0,1640,1631,1566,1587,43,2694,2687,2828,2827,4,0,0,0,0,1556,1537,1645,1646,43,2827,2828,2829,2826,4,0,0,0,0,1646,1645,1597,1596,43,2673,2698,2832,2831,4,0,0,0,0,1554,1539,1647,1648,43,2831,2832,2833,2830,4,0,0,0,0,1648,1647,1601,1600,43,2678,2679,2813,2835,4,0,0,0,0,1565,1561,1639,1649,43,2835,2813,2812,2834,4,0,0,0,0,1649,1639,1582,1604,43,2690,2684,2836,2806,4,0,0,0,0,1559,1543,1650,1634,43,2806,2836,2837,2807,4,0,0,0,0,1634,1650,1606,1575,43,2674,2675,2825,2839,4,0,0,0,0,1534,1564,1644,1651,43,2839,2825,2824,2838,4,0,0,0,0,1651,1644,1594,1608,43,2695,2696,2840,2810,4,0,0,0,0,1560,1545,1652,1636,43,2810,2840,2841,2811,4,0,0,0,0,1636,1652,1610,1579,43,2685,2678,2835,2843,4,0,0,0,0,1542,1565,1649,1653,43,2843,2835,2834,2842,4,0,0,0,0,1653,1649,1604,1612,43,2670,2671,2846,2845,4,0,0,0,0,1540,1547,1654,1655,43,2845,2846,2847,2844,4,0,0,0,0,1655,1654,1615,1614,43,2691,2692,2848,2822,4,0,0,0,0,1563,1550,1656,1642,43,2822,2848,2849,2823,4,0,0,0,0,1642,1656,1618,1591,43,2681,2674,2839,2851,4,0,0,0,0,1535,1534,1651,1657,43,2851,2839,2838,2850,4,0,0,0,0,1657,1651,1608,1620,43,2687,2688,2852,2828,4,0,0,0,0,1537,1536,1658,1645,43,2828,2852,2853,2829,4,0,0,0,0,1645,1658,1622,1597,43,2698,2693,2854,2832,4,0,0,0,0,1539,1538,1659,1647,43,2832,2854,2855,2833,4,0,0,0,0,1647,1659,1624,1601,43,2677,2670,2845,2857,4,0,0,0,0,1541,1540,1655,1660,43,2857,2845,2844,2856,4,0,0,0,0,1660,1655,1614,1626,43,2684,2685,2843,2836,4,0,0,0,0,1543,1542,1653,1650,43,2836,2843,2842,2837,4,0,0,0,0,1650,1653,1612,1606,43,2696,2689,2805,2840,4,0,0,0,0,1545,1544,1635,1652,43,2840,2805,2804,2841,4,0,0,0,0,1652,1635,1574,1610,43,2671,2699,2809,2846,4,0,0,0,0,1547,1546,1637,1654,43,2846,2809,2808,2847,4,0,0,0,0,1654,1637,1578,1615,43,2680,2681,2851,2859,4,0,0,0,0,1548,1535,1657,1661,43,2859,2851,2850,2858,4,0,0,0,0,1661,1657,1620,1628,43,2692,2686,2817,2848,4,0,0,0,0,1550,1549,1641,1656,43,2848,2817,2816,2849,4,0,0,0,0,1656,1641,1586,1618,43,2676,2677,2857,2798,4,0,0,0,0,1551,1541,1660,1630,43,2798,2857,2856,2799,4,0,0,0,0,1630,1660,1626,1567,43,2669,2697,2821,2802,4,0,0,0,0,1553,1552,1643,1632,43,2802,2821,2820,2803,4,0,0,0,0,1632,1643,1590,1571,43,2688,2680,2859,2852,4,0,0,0,0,1536,1548,1661,1658,43,2852,2859,2858,2853,4,0,0,0,0,1658,1661,1628,1622,43,2672,2673,2831,2814,4,0,0,0,0,1555,1554,1648,1638,43,2814,2831,2830,2815,4,0,0,0,0,1638,1648,1600,1583,43,2693,2694,2827,2854,4,0,0,0,0,1538,1556,1646,1659,43,2854,2827,2826,2855,4,0,0,0,0,1659,1646,1596,1624,43,2889,2883,2915,2921,2,0,0,0,0,1662,1663,1664,1665,43,2867,2860,2892,2899,2,0,0,0,0,1666,1667,1668,1669,43,2874,2875,2907,2906,2,0,0,0,0,1670,1671,1672,1673,43,2886,2879,2911,2918,2,0,0,0,0,1674,1675,1676,1677,43,2865,2890,2922,2897,2,0,0,0,0,1678,1679,1680,1681,43,2870,2871,2903,2902,2,0,0,0,0,1682,1683,1684,1685,43,2882,2876,2908,2914,2,0,0,0,0,1686,1687,1688,1689,43,2866,2867,2899,2898,2,0,0,0,0,1690,1666,1669,1691,43,2887,2888,2920,2919,2,0,0,0,0,1692,1693,1694,1695,43,2877,2870,2902,2909,2,0,0,0,0,1696,1682,1685,1697,43,2862,2863,2895,2894,2,0,0,0,0,1698,1699,1700,1701,43,2883,2884,2916,2915,2,0,0,0,0,1663,1702,1703,1664,43,2873,2866,2898,2905,2,0,0,0,0,1704,1690,1691,1705,43,2879,2880,2912,2911,2,0,0,0,0,1675,1706,1707,1676,43,2890,2885,2917,2922,2,0,0,0,0,1679,1708,1709,1680,43,2869,2862,2894,2901,2,0,0,0,0,1710,1698,1701,1711,43,2876,2877,2909,2908,2,0,0,0,0,1687,1696,1697,1688,43,2888,2881,2913,2920,2,0,0,0,0,1693,1712,1713,1694,43,2863,2891,2923,2895,2,0,0,0,0,1699,1714,1715,1700,43,2872,2873,2905,2904,2,0,0,0,0,1716,1704,1705,1717,43,2884,2878,2910,2916,2,0,0,0,0,1702,1718,1719,1703,43,2868,2869,2901,2900,2,0,0,0,0,1720,1710,1711,1721,43,2861,2889,2921,2893,2,0,0,0,0,1722,1662,1665,1723,43,2880,2872,2904,2912,2,0,0,0,0,1706,1716,1717,1707,43,2864,2865,2897,2896,2,0,0,0,0,1724,1678,1681,1725,43,2885,2886,2918,2917,2,0,0,0,0,1708,1674,1677,1709,43,2875,2868,2900,2907,2,0,0,0,0,1671,1720,1721,1672,43,2860,2861,2893,2892,2,0,0,0,0,1667,1722,1723,1668,43,2881,2882,2914,2913,2,0,0,0,0,1712,1686,1689,1713,43,2891,2887,2919,2923,2,0,0,0,0,1714,1692,1695,1715,43,2871,2864,2896,2903,2,0,0,0,0,1683,1724,1725,1684,43,2878,2874,2906,2910,2,0,0,0,0,1718,1670,1673,1719,43,2922,2917,2949,2954,2,0,0,0,0,1680,1709,1726,1727,43,2901,2894,2926,2933,2,0,0,0,0,1711,1701,1728,1729,43,2908,2909,2941,2940,2,0,0,0,0,1688,1697,1730,1731,43,2920,2913,2945,2952,2,0,0,0,0,1694,1713,1732,1733,43,2895,2923,2955,2927,2,0,0,0,0,1700,1715,1734,1735,43,2904,2905,2937,2936,2,0,0,0,0,1717,1705,1736,1737,43,2916,2910,2942,2948,2,0,0,0,0,1703,1719,1738,1739,43,2900,2901,2933,2932,2,0,0,0,0,1721,1711,1729,1740,43,2893,2921,2953,2925,2,0,0,0,0,1723,1665,1741,1742,43,2912,2904,2936,2944,2,0,0,0,0,1707,1717,1737,1743,43,2896,2897,2929,2928,2,0,0,0,0,1725,1681,1744,1745,43,2917,2918,2950,2949,2,0,0,0,0,1709,1677,1746,1726,43,2907,2900,2932,2939,2,0,0,0,0,1672,1721,1740,1747,43,2892,2893,2925,2924,2,0,0,0,0,1668,1723,1742,1748,43,2913,2914,2946,2945,2,0,0,0,0,1713,1689,1749,1732,43,2923,2919,2951,2955,2,0,0,0,0,1715,1695,1750,1734,43,2903,2896,2928,2935,2,0,0,0,0,1684,1725,1745,1751,43,2910,2906,2938,2942,2,0,0,0,0,1719,1673,1752,1738,43,2921,2915,2947,2953,2,0,0,0,0,1665,1664,1753,1741,43,2899,2892,2924,2931,2,0,0,0,0,1669,1668,1748,1754,43,2906,2907,2939,2938,2,0,0,0,0,1673,1672,1747,1752,43,2918,2911,2943,2950,2,0,0,0,0,1677,1676,1755,1746,43,2897,2922,2954,2929,2,0,0,0,0,1681,1680,1727,1744,43,2902,2903,2935,2934,2,0,0,0,0,1685,1684,1751,1756,43,2914,2908,2940,2946,2,0,0,0,0,1689,1688,1731,1749,43,2898,2899,2931,2930,2,0,0,0,0,1691,1669,1754,1757,43,2919,2920,2952,2951,2,0,0,0,0,1695,1694,1733,1750,43,2909,2902,2934,2941,2,0,0,0,0,1697,1685,1756,1730,43,2894,2895,2927,2926,2,0,0,0,0,1701,1700,1735,1728,43,2915,2916,2948,2947,2,0,0,0,0,1664,1703,1739,1753,43,2905,2898,2930,2937,2,0,0,0,0,1705,1691,1757,1736,43,2911,2912,2944,2943,2,0,0,0,0,1676,1707,1743,1755,43,2937,2930,2962,2969,2,0,0,0,0,1736,1757,1758,1759,43,2943,2944,2976,2975,2,0,0,0,0,1755,1743,1760,1761,43,2954,2949,2981,2986,2,0,0,0,0,1727,1726,1762,1763,43,2933,2926,2958,2965,2,0,0,0,0,1729,1728,1764,1765,43,2940,2941,2973,2972,2,0,0,0,0,1731,1730,1766,1767,43,2952,2945,2977,2984,2,0,0,0,0,1733,1732,1768,1769,43,2927,2955,2987,2959,2,0,0,0,0,1735,1734,1770,1771,43,2936,2937,2969,2968,2,0,0,0,0,1737,1736,1759,1772,43,2948,2942,2974,2980,2,0,0,0,0,1739,1738,1773,1774,43,2932,2933,2965,2964,2,0,0,0,0,1740,1729,1765,1775,43,2925,2953,2985,2957,2,0,0,0,0,1742,1741,1776,1777,43,2944,2936,2968,2976,2,0,0,0,0,1743,1737,1772,1760,43,2928,2929,2961,2960,2,0,0,0,0,1745,1744,1778,1779,43,2949,2950,2982,2981,2,0,0,0,0,1726,1746,1780,1762,43,2939,2932,2964,2971,2,0,0,0,0,1747,1740,1775,1781,43,2924,2925,2957,2956,2,0,0,0,0,1748,1742,1777,1782,43,2945,2946,2978,2977,2,0,0,0,0,1732,1749,1783,1768,43,2955,2951,2983,2987,2,0,0,0,0,1734,1750,1784,1770,43,2935,2928,2960,2967,2,0,0,0,0,1751,1745,1779,1785,43,2942,2938,2970,2974,2,0,0,0,0,1738,1752,1786,1773,43,2953,2947,2979,2985,2,0,0,0,0,1741,1753,1787,1776,43,2931,2924,2956,2963,2,0,0,0,0,1754,1748,1782,1788,43,2938,2939,2971,2970,2,0,0,0,0,1752,1747,1781,1786,43,2950,2943,2975,2982,2,0,0,0,0,1746,1755,1761,1780,43,2929,2954,2986,2961,2,0,0,0,0,1744,1727,1763,1778,43,2934,2935,2967,2966,2,0,0,0,0,1756,1751,1785,1789,43,2946,2940,2972,2978,2,0,0,0,0,1749,1731,1767,1783,43,2930,2931,2963,2962,2,0,0,0,0,1757,1754,1788,1758,43,2951,2952,2984,2983,2,0,0,0,0,1750,1733,1769,1784,43,2941,2934,2966,2973,2,0,0,0,0,1730,1756,1789,1766,43,2926,2927,2959,2958,2,0,0,0,0,1728,1735,1771,1764,43,2947,2948,2980,2979,2,0,0,0,0,1753,1739,1774,1787,42,2973,2966,2988,2,0,0,0,1766,1789,413,42,2958,2959,2988,2,0,0,0,1764,1771,413,42,2979,2980,2988,2,0,0,0,1787,1774,413,42,2969,2962,2988,2,0,0,0,1759,1758,413,42,2975,2976,2988,2,0,0,0,1761,1760,413,42,2986,2981,2988,2,0,0,0,1763,1762,413,42,2965,2958,2988,2,0,0,0,1765,1764,413,42,2972,2973,2988,2,0,0,0,1767,1766,413,42,2984,2977,2988,2,0,0,0,1769,1768,413,42,2959,2987,2988,2,0,0,0,1771,1770,413,42,2968,2969,2988,2,0,0,0,1772,1759,413,42,2980,2974,2988,2,0,0,0,1774,1773,413,42,2964,2965,2988,2,0,0,0,1775,1765,413,42,2957,2985,2988,2,0,0,0,1777,1776,413,42,2976,2968,2988,2,0,0,0,1760,1772,413,42,2960,2961,2988,2,0,0,0,1779,1778,413,42,2981,2982,2988,2,0,0,0,1762,1780,413,42,2971,2964,2988,2,0,0,0,1781,1775,413,42,2956,2957,2988,2,0,0,0,1782,1777,413,42,2977,2978,2988,2,0,0,0,1768,1783,413,42,2987,2983,2988,2,0,0,0,1770,1784,413,42,2967,2960,2988,2,0,0,0,1785,1779,413,42,2974,2970,2988,2,0,0,0,1773,1786,413,42,2985,2979,2988,2,0,0,0,1776,1787,413,42,2963,2956,2988,2,0,0,0,1788,1782,413,42,2970,2971,2988,2,0,0,0,1786,1781,413,42,2982,2975,2988,2,0,0,0,1780,1761,413,42,2961,2986,2988,2,0,0,0,1778,1763,413,42,2966,2967,2988,2,0,0,0,1789,1785,413,42,2978,2972,2988,2,0,0,0,1783,1767,413,42,2962,2963,2988,2,0,0,0,1758,1788,413,42,2983,2984,2988,2,0,0,0,1784,1769,413,43,2349,2350,2990,2989,4,0,0,0,0,1310,1309,1312,1311,43,2353,2354,2992,2991,4,0,0,0,0,1316,1315,1318,1317,43,2357,2358,2994,2993,4,0,0,0,0,1322,1321,1324,1323,43,2361,2362,2996,2995,4,0,0,0,0,1328,1327,1330,1329,43,2365,2366,2998,2997,4,0,0,0,0,1334,1333,1336,1335,43,2369,2370,3e3,2999,4,0,0,0,0,1340,1339,1342,1341,43,2373,2374,3002,3001,4,0,0,0,0,1346,1345,1348,1347,43,2377,2353,2991,3003,4,0,0,0,0,1350,1316,1317,1351,43,2370,2349,2989,3e3,4,0,0,0,0,1339,1310,1311,1342,43,2379,2380,3005,3004,4,0,0,0,0,1355,1354,1357,1356,43,2383,2384,3007,3006,4,0,0,0,0,1361,1360,1363,1362,43,2387,2365,2997,3008,4,0,0,0,0,1365,1334,1335,1366,43,2358,2388,3009,2994,4,0,0,0,0,1321,1368,1369,1324,43,2391,2377,3003,3010,4,0,0,0,0,1371,1350,1351,1372,43,2362,2392,3011,2996,4,0,0,0,0,1327,1374,1375,1330,43,2395,2387,3008,3012,4,0,0,0,0,1377,1365,1366,1378,43,2397,2398,3014,3013,4,0,0,0,0,1382,1381,1384,1383,43,2374,2400,3015,3002,4,0,0,0,0,1345,1386,1387,1348,43,2403,2391,3010,3016,4,0,0,0,0,1389,1371,1372,1390,43,2380,2404,3017,3005,4,0,0,0,0,1354,1392,1393,1357,43,2384,2406,3018,3007,4,0,0,0,0,1360,1395,1396,1363,43,2409,2397,3013,3019,4,0,0,0,0,1398,1382,1383,1399,43,2388,2395,3012,3009,4,0,0,0,0,1368,1377,1378,1369,43,2392,2357,2993,3011,4,0,0,0,0,1374,1322,1323,1375,43,2398,2361,2995,3014,4,0,0,0,0,1381,1328,1329,1384,43,2411,2403,3016,3020,4,0,0,0,0,1401,1389,1390,1402,43,2400,2369,2999,3015,4,0,0,0,0,1386,1340,1341,1387,43,2350,2409,3019,2990,4,0,0,0,0,1309,1398,1399,1312,43,2354,2373,3001,2992,4,0,0,0,0,1315,1346,1347,1318,43,2404,2411,3020,3017,4,0,0,0,0,1392,1401,1402,1393,43,2366,2383,3006,2998,4,0,0,0,0,1333,1361,1362,1336,43,2406,2379,3004,3018,4,0,0,0,0,1395,1355,1356,1396,43,2868,2875,3036,3029,2,0,0,0,0,1720,1671,1226,1237,43,2861,2860,3021,3022,2,0,0,0,0,1722,1667,1216,1217,43,2882,2881,3042,3043,2,0,0,0,0,1686,1712,1228,1239,43,2887,2891,3052,3048,2,0,0,0,0,1692,1714,1231,1215,43,2864,2871,3032,3025,2,0,0,0,0,1724,1683,1233,1218,43,2874,2878,3039,3035,2,0,0,0,0,1670,1718,1223,56,43,2883,2889,3050,3044,2,0,0,0,0,1663,1662,490,1229,43,2860,2867,3028,3021,2,0,0,0,0,1667,1666,1232,1216,43,2875,2874,3035,3036,2,0,0,0,0,1671,1670,56,1226,43,2879,2886,3047,3040,2,0,0,0,0,1675,1674,1219,491,43,2890,2865,3026,3051,2,0,0,0,0,1679,1678,185,1230,43,2871,2870,3031,3032,2,0,0,0,0,1683,1682,1224,1233,43,2876,2882,3043,3037,2,0,0,0,0,1687,1686,1239,1242,43,2867,2866,3027,3028,2,0,0,0,0,1666,1690,339,1232,43,2888,2887,3048,3049,2,0,0,0,0,1693,1692,1215,310,43,2870,2877,3038,3031,2,0,0,0,0,1682,1696,492,1224,43,2863,2862,3023,3024,2,0,0,0,0,1699,1698,489,1221,43,2884,2883,3044,3045,2,0,0,0,0,1702,1663,1229,1238,43,2866,2873,3034,3027,2,0,0,0,0,1690,1704,1222,339,43,2880,2879,3040,3041,2,0,0,0,0,1706,1675,491,1227,43,2885,2890,3051,3046,2,0,0,0,0,1708,1679,1230,1240,43,2862,2869,3030,3023,2,0,0,0,0,1698,1710,1234,489,43,2877,2876,3037,3038,2,0,0,0,0,1696,1687,1242,492,43,2881,2888,3049,3042,2,0,0,0,0,1712,1693,310,1228,43,2891,2863,3024,3052,2,0,0,0,0,1714,1699,1221,1231,43,2873,2872,3033,3034,2,0,0,0,0,1704,1716,1236,1222,43,2878,2884,3045,3039,2,0,0,0,0,1718,1702,1238,1223,43,2869,2868,3029,3030,2,0,0,0,0,1710,1720,1237,1234,43,2889,2861,3022,3050,2,0,0,0,0,1662,1722,1217,490,43,2872,2880,3041,3033,2,0,0,0,0,1716,1706,1227,1236,43,2865,2864,3025,3026,2,0,0,0,0,1678,1724,1218,185,43,2886,2885,3046,3047,2,0,0,0,0,1674,1708,1240,1219,43,3027,3034,3066,3059,2,0,0,0,0,339,1222,1222,339,43,3041,3040,3072,3073,2,0,0,0,0,1227,491,491,1227,43,3046,3051,3083,3078,2,0,0,0,0,1240,1230,1230,1240,43,3023,3030,3062,3055,2,0,0,0,0,489,1234,1234,489,43,3038,3037,3069,3070,2,0,0,0,0,492,1242,1242,492,43,3042,3049,3081,3074,2,0,0,0,0,1228,310,310,1228,43,3052,3024,3056,3084,2,0,0,0,0,1231,1221,1221,1231,43,3034,3033,3065,3066,2,0,0,0,0,1222,1236,1236,1222,43,3039,3045,3077,3071,2,0,0,0,0,1223,1238,1238,1223,43,3030,3029,3061,3062,2,0,0,0,0,1234,1237,1237,1234,43,3050,3022,3054,3082,2,0,0,0,0,490,1217,1217,490,43,3033,3041,3073,3065,2,0,0,0,0,1236,1227,1227,1236,43,3026,3025,3057,3058,2,0,0,0,0,185,1218,1218,185,43,3047,3046,3078,3079,2,0,0,0,0,1219,1240,1240,1219,43,3029,3036,3068,3061,2,0,0,0,0,1237,1226,1226,1237,43,3022,3021,3053,3054,2,0,0,0,0,1217,1216,1216,1217,43,3043,3042,3074,3075,2,0,0,0,0,1239,1228,1228,1239,43,3048,3052,3084,3080,2,0,0,0,0,1215,1231,1231,1215,43,3025,3032,3064,3057,2,0,0,0,0,1218,1233,1233,1218,43,3035,3039,3071,3067,2,0,0,0,0,56,1223,1223,56,43,3044,3050,3082,3076,2,0,0,0,0,1229,490,490,1229,43,3021,3028,3060,3053,2,0,0,0,0,1216,1232,1232,1216,43,3036,3035,3067,3068,2,0,0,0,0,1226,56,56,1226,43,3040,3047,3079,3072,2,0,0,0,0,491,1219,1219,491,43,3051,3026,3058,3083,2,0,0,0,0,1230,185,185,1230,43,3032,3031,3063,3064,2,0,0,0,0,1233,1224,1224,1233,43,3037,3043,3075,3069,2,0,0,0,0,1242,1239,1239,1242,43,3028,3027,3059,3060,2,0,0,0,0,1232,339,339,1232,43,3049,3048,3080,3081,2,0,0,0,0,310,1215,1215,310,43,3031,3038,3070,3063,2,0,0,0,0,1224,492,492,1224,43,3024,3023,3055,3056,2,0,0,0,0,1221,489,489,1221,43,3045,3044,3076,3077,2,0,0,0,0,1238,1229,1229,1238],normals:[.660054,0,.751183,.986755,.0379345,.157598,.97235,0,.233497,.995422,.0384533,.087466,.997314,.0365307,.0632649,.660054,.650533,.375591,.995392,.0565508,.0770287,.986755,.117435,.111637,.97235,.202216,.116733,.986755,.155431,.0458998,.995422,.0949736,.0104373,.997314,.0730613,0,.660054,.650533,-.375591,.995422,.0949736,-.0104373,.986755,.155431,-.0458998,.97235,.202216,-.116733,.986755,.117466,-.111637,.995392,.0565203,-.0770287,.997314,.0365307,-.0632649,.660085,0,-.751183,.995422,.0384533,-.087466,.986755,.0379345,-.157598,.97235,0,-.233467,.609973,0,.792383,.609973,.686239,.396191,.609973,.686239,-.396191,.609973,0,-.792383,.986755,-.0379345,.157567,.995392,-.0384533,.087466,.997314,-.0365307,.0632649,.660054,-.650533,.375591,.995392,-.0565508,.0770287,.986755,-.117466,.111637,.97235,-.202216,.116733,.986755,-.155431,.0459304,.995392,-.0950041,.0104068,.997314,-.0730918,0,.660054,-.650533,-.375591,.995422,-.0949736,-.0104068,.986755,-.155461,-.0459304,.97235,-.202185,-.116733,.986755,-.117496,-.111637,.995392,-.0565508,-.0770287,.997314,-.0365307,-.0632649,.995422,-.0384533,-.087466,.986755,-.0379345,-.157567,.609973,-.686239,.396191,.609973,-.686239,-.396191,.865505,-.0869778,-.49324,.865505,0,-.500839,.865505,-.1713,-.470656,.865505,-.250435,-.43376,.301309,-.0896634,-.949278,.302072,0,-.953276,.300485,-.175085,-.937559,.167547,-.492904,-.853755,0,0,-1,-.707083,0,-.707083,-.0278024,0,-.999603,-.609973,-.396191,-.686239,-.727256,-.119175,-.675893,-.727287,-.234718,-.644917,-.727256,-.34315,-.594378,-.688009,-.126011,-.714621,-.688009,0,-.7257,-.68804,-.248146,-.681906,-.688009,-.362804,-.628468,-.887997,-.0798364,-.452803,-.888028,0,-.459761,-.887967,-.157262,-.432112,-.887967,-.229926,-.398236,-.284219,-.166448,-.944182,-.284249,0,-.958739,-.284158,-.327921,-.900937,-.284158,-.479385,-.830317,.865505,.0869472,-.49324,.865505,.1713,-.470656,.865505,.250435,-.43376,.301309,.0896634,-.949278,.300485,.175085,-.937559,.167547,.492935,-.853755,-.609973,.396191,-.686209,-.727256,.119175,-.675924,-.727256,.234718,-.644948,-.727256,.34315,-.594409,-.688009,.126041,-.714652,-.687979,.248177,-.681936,-.687979,.362835,-.628468,-.887997,.0798364,-.452803,-.887997,.157231,-.432081,-.887997,.229865,-.398175,-.284219,.166478,-.944182,-.284219,.32786,-.900937,-.284249,.479354,-.830287,.865505,.383648,-.32194,.865505,.433729,-.250435,.865505,.32194,-.383679,.301309,.777245,-.552324,.302042,.825556,-.476638,.300485,.724387,-.620411,0,.865993,-.499985,0,.866024,-.499985,-.707144,.612262,-.353587,-.0278024,.865688,-.499802,-.707083,.612354,-.353526,-.727317,.525651,-.441206,-.727256,.441176,-.525773,-.687979,.555895,-.466475,-.687979,.628468,-.362835,-.687979,.466475,-.555895,-.887997,.352245,-.295511,-.887997,.398206,-.229896,-.887997,.295572,-.352184,-.284219,.734489,-.616199,-.284188,.830287,-.479385,-.284219,.616291,-.734397,.865505,.470656,-.1713,.865505,.493271,-.0869472,.865505,.50087,0,.301309,.866939,-.396954,.300485,.899503,-.317148,.167547,.985839,0,-.707114,.612323,-.353557,-.707114,.612354,-.353526,-.609973,.792383,0,-.727287,.644917,-.234748,-.727256,.675893,-.119175,-.727256,.686331,0,-.687979,.681936,-.248177,-.687979,.714652,-.126011,-.687979,.7257,0,-.887997,.432081,-.157292,-.887967,.452864,-.0798364,-.887997,.459822,0,-.284188,.900906,-.327952,-.284158,.944182,-.166478,-.284188,.958739,0,.865505,.470687,.1713,.865505,.43376,.250435,.865505,.493271,.0869472,.301309,.866939,.396954,.302042,.825556,.476638,.300485,.899503,.317148,0,.866024,.499985,0,.865993,.499985,-.707022,.612445,.353496,-.0278024,.865688,.499741,-.707083,.612354,.353526,-.727165,.645039,.234718,-.727256,.675924,.119205,-.687979,.681936,.248207,-.687979,.628498,.362774,-.687979,.714652,.126041,-.887967,.432112,.157262,-.887997,.398206,.229896,-.887997,.452834,.0798364,-.284158,.900937,.327921,-.284188,.830287,.479385,-.284188,.944182,.166448,.865505,.383679,.32194,.865505,.32194,.383679,.865505,.250435,.43376,.301309,.777245,.552293,.300485,.724387,.620411,.167547,.492904,.853755,-.707144,.612293,.353557,-.609973,.396191,.686209,-.727287,.525681,.441176,-.727226,.441145,.525803,-.727256,.34315,.594409,-.687979,.555925,.466445,-.687979,.466445,.555925,-.687979,.362835,.628468,-.887997,.352245,.295541,-.887997,.295572,.352214,-.887997,.229896,.398175,-.284188,.734458,.61623,-.284219,.61626,.734428,-.284219,.479385,.830287,.865505,.0869472,.493271,.865474,0,.5009,.865505,.1713,.470656,.301279,.0896634,.949278,.302011,0,.953276,.300485,.175085,.937559,0,0,1,-.707083,0,.707083,-.0278024,0,.999603,-.727256,.119205,.675924,-.727256,.234718,.644948,-.687979,.126041,.714652,-.687979,0,.7257,-.687979,.248177,.681936,-.888028,.0798364,.452773,-.888028,0,.459731,-.887997,.157262,.432051,-.28428,.166448,.944151,-.28431,0,.958708,-.284219,.327891,.900906,.865505,-.0869778,.493271,.865505,-.1713,.470656,.865505,-.250404,.43376,.301279,-.0896634,.949278,.300485,-.175085,.937559,.167547,-.492904,.853755,-.609973,-.396191,.686239,-.727256,-.119175,.675924,-.727256,-.234718,.644978,-.727256,-.34315,.594409,-.687979,-.126011,.714652,-.687979,-.248177,.681936,-.687979,-.362804,.628468,-.888028,-.0798364,.452773,-.887997,-.157231,.432081,-.887967,-.229926,.398236,-.284249,-.166448,.944151,-.284249,-.32786,.900937,-.284402,-.479354,.830226,.865474,-.383709,.32197,.865505,-.43376,.250465,.865505,-.32194,.383709,.301279,-.777245,.552324,.302011,-.825556,.476669,.300485,-.724418,.620411,0,-.865993,.499985,0,-.865993,.500015,0,-.866024,.499985,-.707144,-.612262,.353587,-.0278024,-.865688,.499771,-.707083,-.612354,.353526,-.727317,-.525681,.441176,-.727256,-.441145,.525773,-.688009,-.555925,.466445,-.687979,-.628498,.362804,-.687979,-.466445,.555925,-.887997,-.352214,.295572,-.887936,-.398297,.229926,-.887997,-.295541,.352245,-.284188,-.734397,.616321,-.284097,-.830348,.479354,-.284188,-.61623,.734458,.865505,-.470656,.171331,.865505,-.493271,.0869472,.865505,-.50087,0,.301309,-.866939,.396985,.300485,-.899503,.317148,.167547,-.985839,0,-.707053,-.612415,.353526,-.707114,-.612354,.353526,-.609973,-.792383,0,-.727195,-.645009,.234718,-.727256,-.675924,.119175,-.727256,-.686331,0,-.687979,-.681936,.248177,-.687979,-.714652,.126011,-.687979,-.7257,0,-.887936,-.432203,.157292,-.887997,-.452834,.0798669,-.888028,-.459761,0,-.284066,-.900967,.327921,-.284188,-.944182,.166478,-.284249,-.958739,0,.865505,-.470656,-.1713,.865474,-.43376,-.250465,.865505,-.493271,-.0869472,.301309,-.866939,-.396954,.302011,-.825556,-.476669,.300485,-.899472,-.317148,0,-.866024,-.499985,0,-.865993,-.500015,0,-.865993,-.499985,-.707114,-.612354,-.353526,-.0278024,-.865688,-.499771,-.727256,-.644948,-.234748,-.727256,-.675924,-.119175,-.687979,-.681936,-.248177,-.687979,-.628498,-.362804,-.687979,-.714652,-.126011,-.887967,-.432142,-.157323,-.887936,-.398267,-.229926,-.887967,-.452864,-.0798669,-.284097,-.900937,-.327952,-.284097,-.830348,-.479354,-.284158,-.944182,-.166478,.865474,-.383679,-.32197,.865505,-.32194,-.383709,.301279,-.777245,-.552355,.300485,-.724418,-.620411,-.707114,-.612293,-.353557,-.707083,-.612354,-.353526,-.727287,-.525712,-.441176,-.727256,-.441145,-.525773,-.688009,-.555925,-.466445,-.687979,-.466445,-.555925,-.887997,-.352214,-.295541,-.887997,-.295541,-.352245,-.284219,-.734428,-.616291,-.284219,-.61623,-.734458,0,.499985,-.866024,0,.34199,-.939695,0,.17362,-.984802,-.00286874,-.00222785,-.999969,0,.17362,.984802,0,.34199,.939695,0,.499985,.866024,0,.64275,.766045,0,.766045,.64275,0,.865993,.500015,0,.939665,.342082,0,.984802,.17365,0,1,0,0,.984802,-.17362,0,.939665,-.34199,0,.766045,-.64275,0,.642811,-.766015,0,.499985,-.865993,0,.342021,-.939665,-.00308237,-.00726341,-.999939,-244148e-9,-.499924,.866024,-305185e-10,-.34199,.939695,0,-.17362,.984802,0,.499985,.865993,0,.642781,.766015,0,.766045,.642781,0,.939665,.342051,0,.984802,-.173589,0,.939695,-.34199,0,.766015,-.642781,0,.642781,-.766015,0,.367931,-.929838,0,.170446,-.985351,0,-.0136723,-.999878,0,-.17362,-.984802,0,-.342021,-.939665,0,-.499985,-.866024,0,-.64275,-.766045,0,-.766015,-.642781,0,-.939665,-.342021,0,-.984802,-.17365,0,-1,0,0,-.984802,.17362,0,-.939665,.342021,305185e-10,-.766015,.642781,305185e-10,-.64275,.766045,0,-.499985,.865993,0,-.342021,.939665,0,.500015,.865993,0,.766015,.642811,0,.939665,.342021,0,.984802,.17362,0,.879543,-.475784,0,.763939,-.645253,0,.640248,-.76812,0,.497177,-.867611,0,.42262,-.906278,-.0117191,-.177862,-.983978,-.0236518,-.345286,-.938169,-.0355541,-.502182,-.864009,-.0473952,-.643727,-.763756,-.0591449,-.765618,-.640522,-.0708029,-.864254,-.498032,-.0823695,-.936521,-.340739,-.0938139,-.980346,-.173437,-.105136,-.994446,-.00125126,-.116337,-.978454,.170537,-.127354,-.93289,.336802,-.138218,-.85934,.492355,-.148869,-.760033,.632588,-.159459,-.63805,.753288,-.169836,-.497269,.850795,-.11887,-.36729,.922452,0,-.170446,.985351,0,.00323496,.999969,0,.176824,.984222,0,.345042,.938566,0,.502823,.864376,0,.645253,.763939,0,.768059,.640339,0,.867611,.497208,0,.940764,.339,0,.985351,.170446,0,.999969,-.00320444,0,.984222,-.176794,0,.938566,-.345042,0,.906278,-.42262,-.0122074,-.18775,-.982116,-.0241707,-.354747,-.934629,-.0361644,-.510941,-.858821,-.0480972,-.651448,-.757134,-.0599994,-.772088,-.632618,-.0718101,-.869228,-.48909,-.0835902,-.939879,-.331034,-.0952483,-.981933,-.163305,-.106815,-.994232,.00900296,-.11829,-.976379,.180639,-.129612,-.929075,.346355,-.184545,-.863338,.469588,-.297739,-.734397,.609912,-.318339,-.614032,.72219,-.338572,-.476943,.81109,-.346995,-.406446,.84518,0,-.196631,-.980468,0,-.363994,-.931394,0,-.52028,-.853969,0,-.660695,-.750633,0,-.78103,-.624439,0,-.877682,-.479232,0,-.947569,-.319468,0,-.988678,-.149998,0,-.999695,.0240486,0,-.980316,.197363,0,-.93112,.364696,0,-.897244,.441511,1,0,0,.998169,.0555132,.0229804,.998169,.0589312,.0117191,.998169,-.0333873,.0499588,.999969,0,0,.998169,-.0424818,.0424818,.998169,-.0117191,-.0589312,.998169,-.0229804,-.0555132,.998169,.0600909,0,.998169,.0589312,-.0117191,.998169,-.0229804,.0555132,.998169,-.0117191,.0589312,.998169,-.0333873,-.0499588,.998169,-.0424818,-.0424818,.998169,.0555132,-.0229804,.998169,.0499588,-.0333873,.998169,-.0499588,-.0333873,.998169,-.0555132,-.0229804,.998169,.0117191,.0589312,.998169,.0229804,.0555132,.998169,.0333873,-.0499588,.998169,.0424818,-.0424818,.998169,-.0589312,-.0117191,.998169,-.0600909,0,.998169,.0333873,.0499588,.998169,.0424818,.0424818,.998169,.0229804,-.0555132,.998169,.0117191,-.0589312,.998169,-.0589312,.0117191,.998169,-.0555132,.0229804,.998169,.0499588,.0333873,.998169,-.0499588,.0333873,.998169,0,-.0600909,.998169,0,.0600909,.681448,.608478,.406568,.681448,.676107,.280038,.681448,-.608478,.406568,.681448,-.517472,.517472,.681448,0,-.731834,.681448,-.142766,-.717765,.681448,.717765,.142766,.681448,.731834,0,.681448,-.406568,.608478,.681448,-.280038,.676107,.681448,-.280038,-.676107,.681448,-.406568,-.608478,.681448,.717765,-.142766,.681448,.676107,-.280038,.681448,-.142766,.717765,.681448,0,.731834,.681448,-.517472,-.517472,.681448,-.608478,-.406568,.681448,.142766,.717765,.681448,.608478,-.406568,.681448,.517472,-.517472,.681448,-.676107,-.280038,.681448,-.717765,-.142766,.681448,.280038,.676107,.681448,.406568,.608478,.681448,.406568,-.608478,.681448,.280038,-.676107,.681448,-.731834,0,.681448,-.717765,.142766,.681448,.517472,.517472,.681448,.142766,-.717765,.681448,-.676107,.280038,.804163,.42027,.42027,.804163,.594378,0,.804163,.42027,-.42027,.804163,0,-.594348,.804163,-.42027,-.42027,.804163,-.594378,0,.804163,-.42027,.42027,.804163,0,.594348,.804163,-.594348,0,.804163,.594348,0,0,.707083,-.707083,0,-.707083,-.707083,0,-.707083,.707083,0,.707083,.707083,.630238,.548967,.548967,.630238,.77636,0,.630238,0,-.77636,.630238,-.548967,-.548967,.630238,-.548967,.548967,.630238,0,.77636,.630238,.548967,-.548967,.630238,-.77636,0,.986755,.037965,.157598,.660054,.650533,.375561,.995422,.0564898,.0770287,.986755,.117466,.111637,.660085,.650533,-.375591,.97235,.202185,-.116733,.986755,.117496,-.111637,.995422,.0564898,-.0770287,.660054,0,-.751183,.995392,.0384533,-.087466,.986755,.0379345,-.157567,.97235,0,-.233497,.986755,-.0379345,.157598,.995422,-.0384533,.087466,.660085,-.650533,.375591,.995422,-.0564898,.0770592,.97235,-.202185,.116733,.986755,-.155431,.0458998,.660054,-.650533,-.375561,.986755,-.155431,-.0458998,.97235,-.202216,-.116733,.995422,-.0564898,-.0770287,.995392,-.0384533,-.0874966,.865505,-.0869472,-.49324,.865505,0,-.50087,.302042,0,-.953276,.167547,-.492904,-.853786,-.707114,0,-.707053,-.609973,-.396161,-.686239,-.727287,-.119175,-.675863,-.727256,-.234718,-.644948,-.727256,-.34315,-.594409,-.687979,-.126011,-.714652,-.687979,0,-.7257,-.688009,-.248146,-.681936,-.687979,-.362804,-.628468,-.888028,-.0798364,-.452773,-.887997,0,-.459792,-.888028,-.157201,-.432051,-.888028,-.229865,-.398144,-.284249,-.166478,-.944151,-.284219,0,-.958739,-.28428,-.327891,-.900906,-.28428,-.479354,-.830287,.300516,.175085,-.937559,.167547,.492904,-.853755,-.707053,0,-.707114,-.609973,.396191,-.686239,-.727195,.119175,-.675954,-.727226,.234748,-.644948,-.727256,.34312,-.594409,-.687979,.126011,-.714652,-.687979,.362804,-.628468,-.888028,.0798364,-.452773,-.888028,.157231,-.431989,-.888028,.229865,-.398144,-.28428,.166478,-.944151,-.28431,.32786,-.900906,-.28428,.479324,-.830287,.865505,.383679,-.32197,.865505,.43376,-.250435,.302011,.825556,-.476638,-.0278024,.865658,-.499802,-.707083,.612354,-.353557,-.727256,.525773,-.441176,-.727256,.441145,-.525803,-.687979,.466445,-.555925,-.888028,.352184,-.295541,-.888028,.398114,-.229896,-.888028,.295511,-.352184,-.284249,.734428,-.61626,-.28431,.830256,-.479385,-.28428,.61626,-.734428,.865505,.470687,-.1713,-.727256,.644948,-.234748,-.727226,.675924,-.119175,-.727256,.686361,0,-.687979,.681936,-.248207,-.688009,.714652,-.126011,-.888058,.431959,-.157231,-.887997,.452803,-.0798364,-.887997,.459792,0,-.28431,.900876,-.327921,-.284219,.944182,-.166478,.865474,.470687,.1713,.301279,.866939,.396954,.302011,.825556,.476638,-.707053,.612415,.353526,-.0278024,.865658,.499832,-.727195,.645009,.234748,-.727256,.675924,.119175,-.687979,.681906,.248238,-.687979,.628437,.362865,-.687979,.714652,.12598,-.888058,.431959,.157231,-.888028,.398114,.229896,-.888028,.452773,.0798364,-.284341,.900876,.327921,-.28428,.830256,.479354,-.284249,.944151,.166509,.300485,.724418,.62038,-.707053,.612384,.353526,-.609973,.396191,.686239,-.727226,.525803,.441145,-.727256,.34312,.594409,-.687979,.555895,.466475,-.688009,.466445,.555925,-.687979,.362804,.628468,-.887997,.352214,.295572,-.887997,.295541,.352245,-.888028,.229865,.398175,-.284219,.734428,.61626,-.284219,.61623,.734458,-.284249,.479324,.830287,.865505,.0869472,.49324,.865505,0,.500839,.301309,.0896634,.949278,.302072,0,.953276,-.707053,0,.707114,-.727195,.119144,.675954,-.727226,.234718,.644978,-.687979,.12598,.714682,-.888028,.0798059,.452742,-.888028,0,.459761,-.888028,.157201,.431989,-.284249,0,.958739,-.28431,.32786,.900906,.865505,-.0869472,.49324,.865505,-.250435,.43376,.30134,-.0896634,.949278,.300485,-.175054,.937559,.167547,-.492904,.853786,-.707114,0,.707053,-.727287,-.119144,.675863,-.687979,-.12598,.714682,-.688009,-.248146,.681936,-.888028,-.0798059,.452773,-.888028,-.157201,.43202,-.888028,-.229865,.398175,-.28428,-.166448,.944151,-.28428,-.32783,.900937,-.284249,-.479354,.830287,.865474,-.383679,.32197,.865474,-.43376,.250435,.300485,-.724418,.62038,-.707144,-.612293,.353557,-.0278634,-.865658,.499802,-.727287,-.525712,.441145,-.727256,-.441176,.525773,-.687979,-.555956,.466414,-.68804,-.628437,.362835,-.687979,-.466445,.555895,-.888028,-.352153,.295511,-.888028,-.398144,.229865,-.888028,-.295511,.352184,-.28431,-.734397,.616291,-.28428,-.830256,.479385,-.28428,-.61626,.734428,.865505,-.470687,.1713,.301279,-.866939,.396954,-.707083,-.612384,.353526,-.707083,-.612354,.353557,-.727378,-.644826,.234687,-.727439,-.67571,.119114,-.727439,-.686148,0,-.688131,-.681783,.248177,-.688192,-.714469,.12598,-.688192,-.725486,0,-.887997,-.432051,.157292,-.887997,-.452803,.0798364,-.888028,-.459731,0,-.284219,-.900906,.327921,-.284249,-.944182,.166478,-.28428,-.958708,0,.865474,-.470687,-.1713,.865474,-.43379,-.250465,.865505,-.493271,-.0869778,.301279,-.866939,-.396954,.301981,-.825556,-.476638,.300485,-.899503,-.317148,-.707083,-.612384,-.353526,-.0278634,-.865658,-.499802,-.727378,-.644826,-.234687,-.727409,-.675741,-.119144,-.688131,-.681783,-.248177,-.68804,-.628407,-.362835,-.688192,-.714469,-.12598,-.887997,-.432051,-.157292,-.888028,-.398114,-.229865,-.887997,-.452803,-.0798364,-.284219,-.900906,-.327952,-.28428,-.830256,-.479385,-.284219,-.944182,-.166478,.301279,-.777245,-.552324,.300485,-.724387,-.620411,-.727256,-.525742,-.441176,-.727256,-.441176,-.525773,-.687979,-.555895,-.466475,-.687979,-.466475,-.555895,-.888058,-.352123,-.29548,-.888028,-.29548,-.352184,-.284341,-.734397,-.61626,-.28431,-.61623,-.734428,0,.499954,-.866024,0,.866024,.499954,-305185e-10,.999969,0,-61037e-9,.984802,-.17362,-305185e-10,.939695,-.34199,0,.766045,-.642781,0,.64275,-.766045,0,.17365,-.984802,-.00308237,-.00723289,-.999939,0,-.499985,.866024,0,-.34199,.939695,0,-.17365,.984802,0,0,.999969,0,.17365,.984802,0,.34199,.939665,0,.499954,.866024,0,.939665,.34199,-305185e-10,.984802,-.17362,0,.939695,-.34196,0,-.0136418,-.999878,0,-.642781,-.766015,0,-.984802,-.17362,0,-.984802,.173589,305185e-10,-.865993,.500015,0,-.766045,.642781,0,-.642781,.766015,0,.999969,0,0,.984802,-.17365,0,.879543,-.475753,0,.640278,-.76812,0,.497177,-.867641,-.0117191,-.177892,-.983978,-.0236824,-.345317,-.938169,-.0473647,-.643727,-.763756,-.0708029,-.864223,-.498062,-.105136,-.994446,-.00128178,-.116337,-.978454,.170476,-.127323,-.93292,.336772,-.138188,-.85934,.492325,-.1489,-.760033,.632557,-.11887,-.36726,.922452,0,.176855,.984222,0,.502762,.864406,0,.768151,.640217,0,.867641,.497147,0,.940764,.338969,0,.985351,.170476,0,.999969,-.00323496,0,.984222,-.176885,0,.906339,-.422498,-.0361644,-.51091,-.858852,-.0599689,-.772118,-.632618,-.0718101,-.869228,-.48912,-.0835902,-.939879,-.331065,-.106815,-.994232,.00897244,-.11829,-.976409,.180609,-.184545,-.863369,.469558,-.297708,-.734397,.609912,-.318308,-.614002,.722251,-.338542,-.476943,.81109,-.346965,-.406446,.84518,0,-.1966,-.980468,0,-.363933,-.931394,0,-.520218,-.853999,0,-.78106,-.624409,0,-.999695,.0240181,0,-.931089,.364696,0,-.897275,.44145,.660085,0,.751183,.986755,.0379345,.157567,.995392,.0384533,.087466,.660054,.650563,.375591,.995422,.0565203,.0770592,.97232,.202246,.116733,.997314,.0730918,0,.660054,.650563,-.375591,.986755,.1554,-.0458998,.97232,.202246,-.116733,.986755,.117435,-.111637,.995422,.0565203,-.0770287,.995392,.0384533,-.0874966,.995392,-.0565203,.0770592,.986755,-.155461,.0458998,.995392,-.0950041,.0104373,.995422,-.0949736,-.0104373,.986755,-.117435,-.111637,.995392,-.0565508,-.0770592,.300485,-.175054,-.937559,.167547,-.492935,-.853755,-.609973,-.396191,-.686209,-.727256,-.119175,-.675924,-.727226,-.234718,-.644978,-.688009,-.248177,-.681936,-.687979,-.362835,-.628468,-.888028,-.0798059,-.452773,-.887997,-.157231,-.432081,-.887967,-.229896,-.398236,-.284249,-.166448,-.944182,-.284219,-.327891,-.900937,-.284188,-.479385,-.830287,.865505,.0869778,-.493271,-.610004,.396191,-.686209,-.727256,.119144,-.675924,-.727256,.234687,-.644978,-.727256,.34315,-.594378,-.687979,.12598,-.714682,-.688009,.248146,-.681936,-.888028,.0798364,-.452803,-.887997,.157262,-.432051,-.887997,.229926,-.398144,-.284249,.166478,-.944182,-.284219,.327891,-.900906,-.284219,.479232,-.830348,.865505,.433729,-.250465,.30134,.777245,-.552324,.302072,.825526,-.476669,-.727256,.525742,-.441206,-.727256,.441115,-.525773,-.688009,.555864,-.466506,-.887967,.352214,-.295663,-.887997,.398175,-.229926,-.887967,.295602,-.352275,-.284158,.734428,-.616291,-.284219,.830287,-.479385,-.284158,.616291,-.734428,.865505,.470626,-.1713,.300485,.899503,-.317118,0,.866024,-.499954,-.707114,.612354,-.353557,-.727256,.644917,-.234748,-.727226,.686361,0,-.688009,.681906,-.248207,-.688009,.725669,0,-.888028,.43202,-.157262,-.887997,.452803,-.0798059,-.887936,.459914,0,-.284249,.900906,-.327921,-.284127,.95877,0,.865505,.470656,.1713,.865505,.433729,.250435,.302072,.825556,.476638,-.707114,.612323,.353557,-.0278024,.865688,.499771,-.707114,.612354,.353526,-.727256,.644948,.234718,-.727256,.675893,.119144,-.688009,.681936,.248177,-.687979,.628498,.362804,-.687979,.714682,.12598,-.887997,.432051,.157231,-.887967,.398267,.229896,-.888028,.452773,.0798059,-.284219,.900906,.327921,-.284158,.830348,.479324,-.284219,.944182,.166417,.865505,.383648,.32194,.30134,.777245,.552293,.167547,.492935,.853755,-.610004,.396191,.686209,-.727287,.525712,.441206,-.727256,.441145,.525803,-.727256,.34315,.594378,-.688009,.555895,.466475,-.687979,.466414,.555956,-.887906,.352367,.295633,-.887906,.295724,.352306,-.887997,.229957,.398175,-.284036,.734519,.61626,-.284036,.616352,.734428,-.284188,.479385,.830287,.865505,.0869778,.49324,.302042,0,.953276,-.727256,.119144,.675924,-.727256,.234687,.644978,-.687979,.248146,.681936,-.888058,0,.4597,-.888028,.157231,.432051,-.284249,.327891,.900906,.865505,-.0869778,.49324,.301309,-.0896634,.949278,.167547,-.492935,.853755,-.609973,-.396191,.686209,-.727226,-.234718,.644978,-.727256,-.34315,.594378,-.687979,-.126011,.714682,-.688009,-.248177,.681936,-.687979,-.362835,.628468,-.888028,-.0798059,.452742,-.887997,-.157231,.432051,-.887967,-.229957,.398236,-.28431,-.166448,.944151,-.284219,-.32786,.900937,-.284127,-.479415,.830287,.865505,-.383679,.32194,.865535,-.433699,.250404,.865505,-.32197,.383679,.301309,-.777245,.552324,.302103,-.825556,.476608,.300485,-.724387,.620411,-.727226,-.525803,.441145,-.727256,-.441206,.525742,-.687979,-.628468,.362835,-.687979,-.466475,.555895,-.887936,-.352275,.295663,-.887997,-.398206,.229896,-.887936,-.295633,.352306,-.284097,-.734458,.616291,-.284188,-.830287,.479385,-.284066,-.616321,.734458,.865535,-.470626,.1713,.865505,-.493271,.0869778,.30134,-.866939,.396954,-.727195,-.645009,.234748,-.727256,-.675893,.119175,-.727226,-.686361,0,-.688009,-.681906,.248207,-.688009,-.725669,0,-.887997,-.432051,.157231,-.887936,-.452925,.0798059,-.887936,-.459944,0,-.284219,-.900906,.327891,-.284097,-.944212,.166417,-.284036,-.9588,0,.865535,-.470626,-.171331,.865535,-.433699,-.250435,.30134,-.866909,-.396985,.302103,-.825556,-.476638,-.727226,-.644978,-.234748,-.687979,-.681936,-.248207,-.687979,-.628468,-.362835,-.888028,-.431989,-.157262,-.888028,-.398114,-.229926,-.887967,-.452895,-.0798364,-.28428,-.900876,-.327952,-.28428,-.830256,-.479415,-.284127,-.944212,-.166417,.865505,-.383679,-.32194,.865505,-.32197,-.383679,.301309,-.777245,-.552324,-.727226,-.525803,-.441176,-.887967,-.352245,-.295633,-.887967,-.295633,-.352245,-.284127,-.734458,-.61626,-.284127,-.616321,-.734428,0,.499832,-.866085,0,.342021,.939665,0,.866054,-.499924,0,.642781,-.766045,-.00311289,-.00723289,-.999939,0,-.34196,.939695,0,-.34199,-.939695,0,-.499954,-.866024,0,-.766045,-.64275,0,-.766045,.64275,0,-.642781,.766045,0,-.499954,.866024,0,.939665,-.342021,0,.497147,-.867641,-.0117496,-.177862,-.983978,-.0236824,-.345286,-.938169,-.0355541,-.502152,-.864009,-.0591449,-.765648,-.640522,-.0938444,-.980346,-.173437,-.116337,-.978423,.170568,-.127384,-.93289,.336772,-.138249,-.85934,.492325,-.148961,-.760033,.632557,-.15949,-.63802,.753288,-.169836,-.497238,.850795,-.11887,-.36726,.922483,0,-.170415,.985351,0,.345073,.938566,0,.502792,.864406,0,.645222,.76397,0,.76812,.640278,0,.940794,.338939,0,.985351,.170415,0,.999969,-.00326548,-.0361644,-.51088,-.858852,-.0480972,-.651479,-.757134,-.0599994,-.772088,-.632649,-.0718406,-.869198,-.489151,-.0952788,-.981933,-.163305,-.106845,-.994232,.00900296,-.129643,-.929106,.346294,-.184545,-.863399,.469527,-.297739,-.734367,.609943,-.318339,-.614002,.722221,-.346965,-.406446,.84521,0,-.520218,-.85403,0,-.660695,-.750603,0,-.78103,-.62447,0,-.877651,-.479263,0,-.9476,-.319407,0,-.93115,.364605,0,-.897305,.441328,.995392,.0565508,.0770592,.986755,.117527,.111667,.97232,.202216,.116764,.995392,.0950041,.0104373,.995392,.0950041,-.0104373,.97232,.202246,-.116764,.986755,.117466,-.111667,.609973,.686209,.396191,.660024,-.650594,.375591,.986755,-.117496,.111667,.97232,-.202246,.116764,.986755,-.155492,.0459304,.995392,-.0950346,.0104068,.997314,-.0730613,0,.660024,-.650594,-.375591,.995392,-.0950041,-.0104068,.986755,-.155431,-.0459304,.97232,-.202277,-.116764,.986755,-.117496,-.111667,.995422,-.0564898,-.0770592,.865505,-.250404,-.43376,.300516,-.175085,-.937559,-.687979,-.12598,-.714682,-.687979,-.248146,-.681936,-.887997,-.0798059,-.452834,-.887997,-.157262,-.432051,-.888028,-.229896,-.398144,-.284188,-.166478,-.944182,-.284219,-.327921,-.900906,-.284249,-.479385,-.830256,.865505,.0869778,-.49324,.30134,.0896939,-.949278,.300485,.175054,-.937559,-.688009,.248177,-.681936,-.687979,.362804,-.628498,-.887997,.157231,-.432051,-.888028,.229896,-.398144,-.284249,.327921,-.900906,-.284249,.479263,-.830348,.865505,.383648,-.32197,.302072,.825556,-.476638,-.727256,.525742,-.441176,-.687979,.555925,-.466445,-.688009,.628468,-.362835,-.887967,.352245,-.295602,-.888028,.398144,-.229896,-.887997,.295572,-.352245,-.284249,.830287,-.479385,-.284188,.616291,-.734428,.865505,.470656,-.17127,.865505,.49324,-.0869778,.300485,.899472,-.317148,-.727256,.675924,-.119144,-.687979,.714682,-.12598,-.887997,.432081,-.157231,-.887936,.452956,-.0798364,-.284188,.900937,-.327891,-.284097,.944212,-.166478,-.284066,.95877,0,.865505,.493271,.0869778,-.0278024,.865658,.499802,-.727195,.645009,.234718,-.727256,.675893,.119175,-.687979,.681906,.248207,-.688009,.628468,.362835,-.887997,.432081,.157201,-.887967,.398267,.229865,-.887967,.452895,.0798669,-.284219,.900937,.32786,-.284127,.944212,.166478,.865505,.383648,.322001,.301309,.777245,.552324,.300516,.724387,.620411,-.707083,.612354,.353557,-.727256,.525773,.441176,-.887936,.352336,.295633,-.887967,.295572,.352306,-.887997,.229865,.398175,-.284066,.734489,.616291,-.284127,.61626,.734458,-.284219,.479324,.830317,.865505,0,.50087,-.727256,.119175,.675924,-.888028,.0798059,.452773,-.888028,.157201,.432051,-.28428,.166417,.944151,-.28428,0,.958708,-.284249,.32786,.900937,-.727256,-.119144,.675924,-.687979,-.12598,.714652,-.887997,-.0798059,.452803,-.887997,-.157201,.432081,-.888028,-.229896,.398175,-.284219,-.166478,.944182,-.284219,-.479324,.830317,.865474,-.43379,.250465,.301981,-.825556,.476638,-.707114,-.612354,.353557,-.727256,-.525803,.441145,-.688009,-.555925,.466414,-.887997,-.352214,.295541,-.887997,-.398206,.229835,-.887997,-.295541,.352275,-.284219,-.734428,.616291,-.284249,-.830317,.479293,-.284188,-.61626,.734458,.865474,-.470687,.1713,.301279,-.86697,.396954,0,-.866024,.499954,-.727226,-.645009,.234718,-.688009,-.681936,.248177,-.687979,-.714682,.126011,-.888058,-.431989,.15717,-.888089,-.452651,.0798059,-.888119,-.459578,0,-.284341,-.900906,.32786,-.284402,-.944121,.166448,-.284463,-.958678,0,.865474,-.470717,-.171331,.301248,-.86697,-.396954,.301981,-.825587,-.476638,0,-.866024,-.499954,-.707144,-.612262,-.353557,-.0278024,-.865658,-.499802,-.727317,-.644887,-.234748,-.727256,-.675893,-.119144,-.688009,-.681936,-.248177,-.687979,-.714682,-.12598,-.888028,-.43202,-.15717,-.888058,-.398114,-.229865,-.888089,-.452681,-.0797754,-.28428,-.900906,-.32786,-.28431,-.830287,-.479324,-.284371,-.944121,-.166448,.865505,-.383679,-.32197,-.707114,-.612323,-.353557,-.727256,-.525712,-.441206,-.688009,-.555895,-.466475,-.688009,-.466475,-.555895,-.888058,-.352153,-.295511,-.888028,-.295541,-.352184,-.28431,-.734428,-.61623,-.284249,-.61626,-.734397,0,.499893,-.866085,0,.173589,.984802,0,-.766076,-.64272,0,-.866054,-.499924,0,-.984802,-.173589,0,.984802,.173589,0,.879574,-.475753,0,.76397,-.645222,-.0117496,-.177892,-.983978,-.0473952,-.643757,-.763726,-.0591449,-.765679,-.640461,-.0708335,-.864284,-.497971,-.0938139,-.980346,-.173406,-.105136,-.994446,-.00122074,-.116306,-.978454,.170507,-.127354,-.93292,.336741,-.138218,-.85934,.492325,-.15949,-.638081,.753227,0,.76812,.640248,0,.985351,.170354,0,.938566,-.345073,0,.906308,-.422559,-.0599994,-.772118,-.632618,-.0718406,-.869259,-.489059,-.0952483,-.981933,-.163335,-.129612,-.929106,.346324,-.184545,-.863338,.469619,-.297769,-.734367,.609912,-.318369,-.614063,.72216,0,-.363964,-.931394,0,-.520249,-.853999,0,-.78106,-.624439,0,-.877682,-.479202,0,-.988647,-.150029,0,-.980316,.197302,0,-.93112,.364666,.707083,-.546587,-.448561,.68569,-.514664,-.514695,.68569,-.40437,-.605213,.68569,-.278542,-.672475,.68569,.713889,.142003,.68569,.672475,.278542,.68569,-.142003,.713889,.68569,-.278542,.672475,.68569,.672475,-.278542,.68569,.713889,-.142003,.68569,-.713889,-.142003,.68569,-.672475,-.278542,.68569,.278542,.672475,.68569,.142003,.713889,.68569,-.40437,.605213,.707083,-.448561,.546587,.68569,.278542,-.672475,.68569,.40437,-.605213,.68569,-.672475,.278542,.68569,-.713889,.142003,.68569,-.514695,.514664,.68569,.605213,.40437,.68569,-.142003,-.713889,.68569,-.605213,-.40437,.707083,.448561,-.546587,.68569,.514695,-.514664,.68569,.727866,0,.68569,0,.727866,.68569,.605213,-.40437,.68569,-.727866,0,.68569,.514664,.514695,.68569,.40437,.605213,.68569,0,-.727866,.68569,.142003,-.713889,.68569,-.605213,.40437,.707083,.546587,.448561,0,.980773,-.195074,0,-.923856,-.382672,0,-.831446,-.555559,0,.195074,.980773,0,-.555559,.831446,0,-.634388,.773003,0,.831446,-.555559,0,-.980773,.195074,0,-.195074,-.980773,0,.555559,.831446,0,-.773003,-.634388,0,.195074,-.980773,0,-.831446,.555559,0,.980773,.195074,0,-.555559,-.831446,0,-.195074,.980773,0,.923856,-.382672,0,-.980773,-.195074,0,.382672,.923856,0,.555559,-.831446,0,.634388,-.773003,0,-.923856,.382672,0,.382672,-.923856,0,-.382672,-.923856,0,.923856,.382672,0,-.382672,.923856,0,.773003,.634388,0,.831446,.555559,.980529,-.0383007,.192572,.980529,-.0751366,.181402,.607959,-.303812,.733512,.607959,-.154881,.77868,.980529,.181402,.0751366,.980529,.163244,.109073,.607959,.660146,.441084,.607959,.733512,.303812,.980529,-.192572,-.0383007,.980529,-.181402,-.0751366,.607959,-.733512,-.303812,.607959,-.77868,-.154881,.980529,-.181402,.0751366,.980529,-.192572,.0383007,.607959,-.77868,.154881,.607959,-.733512,.303812,.980529,-.0751366,-.181402,.980529,-.0383007,-.192572,.607959,-.154881,-.77868,.607959,-.303812,-.733512,.980529,.0383007,.192572,.980529,0,.196356,.607959,0,.793939,.607959,.154881,.77868,.980529,.138829,.138829,.980529,.109073,.163244,.607959,.441084,.660146,.607959,.561388,.561388,.980529,.192572,.0383007,.607959,.77868,.154881,.980529,.109073,-.163244,.980529,.138829,-.138829,.607959,.561388,-.561388,.607959,.441084,-.660146,.980529,0,-.196356,.980529,.0383007,-.192572,.607959,.154881,-.77868,.607959,0,-.793939,.980529,-.109073,-.163244,.607959,-.441084,-.660146,.980529,-.163244,-.109073,.607959,-.660146,-.441084,.980529,.196356,0,.607959,.793939,0,.980529,-.196356,0,.607959,-.793939,0,.980529,-.138829,-.138829,.607959,-.561388,-.561388,.980529,-.138829,.138829,.980529,-.163244,.109073,.607959,-.660146,.441084,.607959,-.561388,.561388,.980529,.0751366,.181402,.607959,.303812,.733512,.980529,.192572,-.0383007,.607959,.77868,-.154881,.980529,.163244,-.109073,.607959,.660146,-.441084,.980529,.0751366,-.181402,.607959,.303812,-.733512,.980529,-.109073,.163244,.607959,-.441084,.660146,.980529,.181402,-.0751366,.607959,.733512,-.303812,.131809,.193365,-.972198,.131809,.379315,-.915799,.503922,.330515,-.797998,.503922,.168493,-.847133,.946348,.0630207,-.316904,.946348,.12363,-.298532,.131809,-.915799,-.379315,.131809,-.824213,-.550707,.503922,-.718162,-.479843,.503922,-.797967,-.330515,.946348,-.298532,-.12363,.946348,-.268654,-.17951,.131809,.972198,.193365,.131809,.915799,.379315,.503922,.797998,.330515,.503922,.847133,.168493,.946348,.316904,.0630207,.946348,.298532,.12363,.131809,.915799,-.379315,.131809,.972198,-.193365,.503922,.847133,-.168493,.503922,.797967,-.330515,.946348,.298532,-.12363,.946348,.316904,-.0630207,.131809,.379315,.915799,.131809,.193365,.972198,.503922,.168493,.847133,.503922,.330515,.797998,.946348,.12363,.298532,.946348,.0630207,.316904,.131809,-.193365,-.972198,.131809,0,-.991272,.503922,0,-.863735,.503922,-.168493,-.847133,.946348,-.0630207,-.316904,.946348,0,-.32313,.131809,-.700919,-.700919,.131809,-.550707,-.824213,.503922,-.479843,-.718162,.503922,-.610736,-.610736,.946348,-.228492,-.228492,.946348,-.17951,-.268654,.131809,-.972198,-.193365,.503922,-.847133,-.168493,.946348,-.316904,-.0630207,.131809,-.550707,.824213,.131809,-.700919,.700919,.503922,-.610736,.610736,.503922,-.479843,.718162,.946348,-.17951,.268654,.946348,-.228462,.228462,.131809,0,.991272,.131809,-.193365,.972198,.503922,-.168493,.847133,.503922,0,.863735,.946348,0,.32313,.946348,-.0630207,.316904,.131809,.550707,.824213,.503922,.479843,.718162,.946348,.17951,.268654,.131809,.824213,.550707,.503922,.718162,.479843,.946348,.268654,.17951,.131809,-.991272,0,.503922,-.863735,0,.946348,-.32313,0,.131809,.991272,0,.503922,.863735,0,.946348,.32313,0,.131809,.700919,.700919,.503922,.610736,.610736,.946348,.228492,.228462,.131809,.700919,-.700919,.131809,.824213,-.550707,.503922,.718162,-.479843,.503922,.610736,-.610736,.946348,.228462,-.228462,.946348,.268654,-.17951,.131809,-.379315,-.915799,.503922,-.330515,-.797998,.946348,-.12363,-.298532,.131809,-.972198,.193365,.503922,-.847133,.168493,.946348,-.316904,.0630207,.131809,-.824213,.550707,.503922,-.718162,.479843,.946348,-.268654,.17951,.131809,-.379315,.915799,.503922,-.330515,.797998,.946348,-.12363,.298532,.131809,.550707,-.824213,.503922,.479843,-.718162,.946348,.17951,-.268654,.131809,-.915799,.379315,.503922,-.797998,.330515,.946348,-.298532,.12363,.119022,-.551622,-.825556,.119022,-.702078,-.702078,.118992,-.825556,.551592,.119022,-.702078,.702078,.119022,.379955,.917295,.119022,.551592,.825556,.119022,.992889,0,.119022,.973785,-.193701,.119022,.825556,-.551592,.119022,.702078,-.702078,.119022,.379955,-.917295,.119022,.193701,-.973785,.119022,-.551622,.825556,.118992,-.825556,-.551592,.119022,-.973785,-.193701,.119022,-.992889,0,.119022,-.917295,.379955,.119022,.917295,-.379955,.119022,.193701,.973785,.119022,-.379955,.917295,.119022,.702078,.702078,.119022,.825556,.551622,.119022,0,-.992889,.119022,-.193701,-.973785,.119022,.551592,-.825556,.119022,-.193701,.973785,.119022,.917295,.379955,.119022,-.917295,-.379955,.119022,-.973785,.193701,.119022,-.379955,-.917295,.119022,0,.992889,.119022,.973785,.193701,.68569,.514695,.514664,.68569,-.514664,.514664,.966155,-.0986969,.238319,.966155,-.050325,.252998,.966155,0,-.257942,.966155,-.050325,-.252998,.966155,.143284,-.214484,.966155,.0986969,-.238319,.966155,-.252998,.050325,.966155,-.238319,.0986969,.966155,-.0986969,-.238319,.966155,.214484,.143315,.966155,.238319,.0986969,.966155,-.238319,-.0986969,.966155,-.252998,-.050325,.966155,.143315,.214484,.966155,.182379,.182379,.966124,.252998,.050325,.966155,0,.257942,.966155,.0502945,.252998,.966155,.182379,-.182379,.966155,.050325,-.252998,.966155,-.214484,-.143284,.966155,-.143284,-.214484,.966155,-.257942,0,.966155,-.182379,-.182379,.966124,.257942,0,.966155,.252998,-.0502945,.966155,-.214484,.143284,.966155,-.182379,.182379,.966155,.0986969,.238319,.966155,-.143284,.214484,.966155,.214484,-.143284,.966155,.238319,-.0986969,.957121,.267556,-.110813,.957121,.240791,-.160894,.957121,0,-.289621,.957121,-.0564898,-.284036,.957121,.160894,-.240791,.957121,.110813,-.267556,.957121,-.110813,.267556,.957121,-.0564898,.284036,.957121,.240791,.160894,.957121,.267586,.110813,.957121,-.267556,-.110813,.957121,-.284036,-.0564898,.957121,-.284036,.0564898,.957121,-.267556,.110813,.957121,-.110813,-.267556,.957121,0,.289621,.957121,.0564898,.284036,.957121,.160894,.240791,.957121,.204779,.204779,.957121,.284066,.0564898,.957121,.204779,-.204779,.957121,.0564898,-.284036,.957121,-.160894,-.240791,.957121,-.240791,-.160894,.957121,.289621,0,.957121,-.289621,0,.957121,-.204779,-.204779,.957121,-.240791,.160894,.957121,-.204779,.204779,.957121,.110813,.267556,.957121,.284036,-.0564898,.957121,-.160894,.240791,.72982,.133335,.670461,.72982,.261605,.63155,.72982,-.379772,.568377,.72982,-.261574,.63155,.72982,.483383,.483383,.72982,.568377,.379772,.72982,.63155,-.261605,.72982,.568377,-.379772,.72982,0,-.683584,.72982,-.133366,-.670461,.72982,.379772,-.568377,.72982,.261605,-.63155,.72982,-.133335,.670461,.72982,.631581,.261574,.72982,-.63155,-.261574,.72982,-.670461,-.133366,.72982,-.670461,.133366,.72982,-.63155,.261574,.72982,-.261574,-.63155,.72982,0,.683584,.72982,.379772,.568377,.72982,.670461,.133335,.72982,.483383,-.483383,.72982,.133366,-.670461,.72982,-.379772,-.568377,.72982,-.568377,-.379772,.72982,.683615,0,.72982,-.683584,0,.72982,-.483383,-.483383,.72982,-.568377,.379772,.72985,-.483352,.483383,.72982,.670461,-.133335,0,-.999969,0,.354564,-.935026,0,.354564,-.917051,.182409,.354564,-.777429,.519456,.354564,-.661153,.661153,.354564,-.357799,.863826,.354564,-.182409,.917051,.354564,.661153,-.661153,.354564,.519456,-.777429,.354564,.661153,.661153,.354564,.777429,.519456,.354534,.917051,.182409,.354564,.935026,0,.354534,.863857,-.357799,.354564,.777429,-.519456,.354564,-.863826,.357799,.354564,-.182409,-.917051,.354564,-.357799,-.863826,.354564,.357799,-.863826,.354564,-.661153,-.661153,.354564,-.777429,-.519456,.354564,0,.935026,.354564,.182409,.917051,.354564,-.519456,.777429,.354564,.182409,-.917051,.354564,-.863826,-.357799,.354534,.863857,.357799,.354534,.917051,-.182409,.354564,.357799,.863826,.354564,0,-.935026,.354564,-.519456,-.777429,.354534,-.917051,-.182409,.354564,.519456,.777429,.924284,-.0744346,.37434,.924284,-.146031,.352611,.369823,-.355541,.858364,.369823,-.181249,.911222,.924284,.352611,.146031,.924284,.317331,.212043,.369823,.772515,.51616,.369823,.858364,.355541,.924284,-.37434,-.0744346,.924284,-.352641,-.146062,.369793,-.858364,-.355541,.369823,-.911222,-.181249,.924284,-.352611,.146062,.924284,-.37434,.0744652,.369793,-.911222,.181249,.369823,-.858364,.355541,.924284,-.146062,-.352611,.924284,-.0744346,-.37434,.369823,-.181249,-.911222,.369823,-.355541,-.858364,.924284,.0744346,.37434,.924284,0,.381664,.369823,0,.929075,.369823,.181249,.911222,.924284,.269875,.269875,.924284,.212043,.317331,.369823,.51616,.772515,.369823,.656941,.656972,.924284,.37434,.0744346,.369823,.911222,.181249,.924284,.212043,-.317331,.924284,.269875,-.269875,.369823,.656972,-.656941,.369823,.51616,-.772515,.924284,0,-.381664,.924284,.0744346,-.37434,.369823,.181249,-.911222,.369823,0,-.929075,.924284,-.212043,-.317331,.369823,-.51616,-.772515,.924284,-.317362,-.212043,.369793,-.772515,-.51616,.924284,.381664,0,.369823,.929075,0,.924284,-.381664,0,.369823,-.929075,0,.924284,-.269875,-.269875,.369823,-.656941,-.656972,.924284,-.269875,.269875,.924284,-.317331,.212043,.369823,-.772515,.51616,.369823,-.656972,.656972,.924284,.146031,.352611,.369823,.355541,.858364,.924284,.37434,-.0744346,.369823,.911222,-.181249,.924284,.317331,-.212043,.369823,.772515,-.51616,.924284,.146062,-.352611,.369823,.355541,-.858364,.924284,-.212043,.317331,.369823,-.51616,.772485,.924284,.352611,-.146062,.369823,.858364,-.355541,.905698,.162206,-.391583,.905698,.0826746,-.415723,.905698,-.352428,-.235481,.905698,-.391583,-.162206,.905698,.391614,.162206,.905698,.415723,.0826746,.905698,.415723,-.0826746,.905698,.391614,-.162206,.905698,.0826746,.415723,.905698,.162175,.391583,.905698,0,-.423872,.905698,-.0826746,-.415723,.905698,-.235481,-.352428,.905698,-.299722,-.299722,.905698,-.415723,-.0826746,.905698,-.299692,.299722,.905698,-.235481,.352428,.905698,-.0826746,.415723,.905698,0,.423872,.905698,.235481,.352428,.905698,.352428,.235481,.905698,-.423872,0,.905698,.423872,0,.905698,.299722,.299722,.905698,.352428,-.235481,.905698,.299722,-.299722,.905698,-.162206,-.391583,.905698,-.415723,.0826746,.905698,-.352428,.235481,.905698,-.162206,.391583,.905698,.235481,-.352428,.905698,-.391583,.162175,.379254,-.654256,-.654256,.379254,-.514054,-.769341,.816462,-.32075,-.480056,.816462,-.408246,-.408246,.379254,-.907498,-.180486,.379254,-.854823,-.354076,.816462,-.533403,-.220923,.816462,-.566271,-.112613,.379254,0,-.92526,.379254,.180486,-.907498,.816462,.112613,-.566271,.816462,0,-.577349,.379254,-.514054,.769341,.379254,-.654256,.654256,.816462,-.408246,.408246,.816462,-.32075,.480056,.379254,0,.92526,.379254,-.180486,.907498,.816462,-.112613,.566271,.816462,0,.577349,.379254,.514054,.769341,.379254,.354076,.854823,.816462,.220923,.533403,.816462,.32075,.480056,.379254,.854823,.354076,.379254,.769341,.514054,.816462,.480056,.32075,.816462,.533403,.220923,.379254,-.92526,0,.816462,-.577349,0,.379254,.907498,-.180486,.379254,.92526,0,.816462,.577349,0,.816462,.566271,-.112613,.379254,.654256,.654256,.816462,.408246,.408246,.379254,.654256,-.654256,.379254,.769341,-.514054,.816462,.480056,-.32075,.816462,.408246,-.408246,.379254,-.354076,-.854823,.816462,-.220923,-.533403,.379254,-.907498,.180486,.816462,-.566271,.112613,.379254,-.769341,.514054,.816462,-.480056,.32075,.379254,-.354076,.854823,.816462,-.220923,.533403,.379254,.514054,-.769341,.816462,.32075,-.480056,.379254,.907498,.180486,.816462,.566271,.112613,.379254,.854823,-.354076,.816462,.533403,-.220923,.379254,-.854823,.354076,.816462,-.533403,.220923,.379254,-.180486,-.907498,.816462,-.112613,-.566271,.379254,.354076,-.854823,.816462,.220923,-.533403,.379254,-.769341,-.514054,.816462,-.480056,-.32075,.379254,.180486,.907498,.816462,.112613,.566271,.931669,-.139012,.335612,.931669,-.070864,.356273,.931669,.256874,-.256874,.931669,.201819,-.302042,.931669,.256874,.256874,.931669,.302042,.201819,.931669,.356304,.070864,.931669,.363262,0,.931669,.335612,-.139012,.931669,.302042,-.201819,.931669,-.356273,.070864,.931669,-.335612,.139012,.931669,-.070864,-.356273,.931669,-.139012,-.335612,.931669,.139012,-.335612,.931669,-.256844,-.256874,.931669,-.302042,-.201819,.931669,-.302042,.201819,.931669,0,.363262,.931669,.070864,.356304,.931669,-.201819,.302042,.931669,.070864,-.356304,.931669,-.335612,-.139012,.931669,.335612,.139012,.931669,.356304,-.070864,.931669,.139012,.335612,.931669,0,-.363262,.931669,-.201819,-.302042,.931669,-.356273,-.070864,.931669,-.256874,.256874,.931669,.201819,.302042,.931669,-.363262,0,.987701,-.156316,0,.987701,-.153325,.030488,.987701,-.129978,.0868557,.987701,-.110538,.110538,.987701,-.0598163,.144444,.987701,-.0304575,.153325,.987701,.110538,-.110538,.987701,.0868557,-.129978,.987701,.110538,.110538,.987701,.129978,.0868557,.987701,.153325,.030488,.987701,.156316,0,.987701,.144414,-.0598163,.987701,.129978,-.0868557,.987701,-.144414,.0598163,.987701,-.030488,-.153325,.987671,-.0598468,-.144414,.987701,.0598163,-.144444,.987701,-.110508,-.110538,.987701,-.129978,-.0868557,.987701,0,.156316,.987701,.0304575,.153325,.987701,-.0868252,.129978,.987701,.030488,-.153325,.987701,-.144414,-.0598163,.987701,.144414,.0598163,.987701,.153325,-.030488,.987701,.0598163,.144444,.987701,0,-.156316,.987701,-.0868252,-.129978,.987701,-.153325,-.030488,.987701,.0868252,.129978],uvs:[[0,0,.0578334,.261553,.112962,.179864,.139482,.201502,.0880823,.277595,.263495,.940572,.181647,.886212,.203041,.859601,.279287,.910316,.888176,.816154,.818458,.885685,.796595,.859377,.861604,.794621,.94304,.261869,.980696,.352516,.948136,.362682,.913112,.2782,.737295,.0567836,.818925,.11113,.79755,.137667,.7215,.0869724,.452376,998357e-10,.550483,232718e-9,.547376,.0341738,.455909,.0340226,.354322,.977965,.363929,.945215,.0197559,.352478,.0525637,.362284,.019304,.644278,998357e-10,.547656,.0341376,.544079,.0519608,.634091,.111931,.816884,.138128,.794952,.888407,.180367,.862257,.202227,.736513,.94028,.720199,.910219,.450709,.997016,.453772,.963008,.98068,.643506,.942957,.734371,.912703,.718448,.947916,.633808,.265034,.056258,.356009,.0189919,.366062,.0516187,.281247,.0863434,.646662,.0193596,.637034,.0520436,.549024,.996992,.54542,.963014,.9999,.547083,.965894,.543979,251274e}},"JP+z":function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},JTgD:function(e,t,n){"use strict";function r(e){try{e.focus()}catch(e){}}e.exports=r},KCLY:function(e,t,n){"use strict";(function(t){function r(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var i=n("cGG2"),a=n("5VQ+"),o={"Content-Type":"application/x-www-form-urlencoded"},s={adapter:function(){var e;return"undefined"!=typeof XMLHttpRequest?e=n("7GwW"):void 0!==t&&(e=n("7GwW")),e}(),transformRequest:[function(e,t){return a(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(r(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)?(r(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};s.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],function(e){s.headers[e]={}}),i.forEach(["post","put","patch"],function(e){s.headers[e]=i.merge(o)}),e.exports=s}).call(t,n("W2nU"))},Khgl:function(e,t){},N0DK:function(e,t){e.exports="/media/ZoomToYoutube2.png"},NfCZ:function(e,t,n){!function(t,r){e.exports=r(n("GiK3"))}(0,function(e){return function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=2)}([function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n(7)),r(n(8));var i=n(9);t.Interact=i.default;var a=n(10);t.Modes=a.default;var o=n(11);t.Particle=o.default;var s=n(12);t.ParticleManager=s.default;var l=n(13);t.ParticlesLibrary=l.default;var c=n(14);t.Vendors=c.default},function(t,n){t.exports=e},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3);t.Particles=r.default,t.default=r.default},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(t,"__esModule",{value:!0});var s=n(1),l=n(1),c=n(4),u=n(0),h=function(e){function t(e){r(this,t);var n=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={canvas:void 0,library:void 0},n.loadCanvas=n.loadCanvas.bind(n),n}return a(t,e),o(t,[{key:"destroy",value:function(){this.state.library.destroy()}},{key:"loadCanvas",value:function(e){var t=this;e&&this.setState({canvas:e},function(){t.state.library.loadCanvas(t.state.canvas),t.state.library.start()})}},{key:"componentWillMount",value:function(){this.setState({library:new u.ParticlesLibrary(this.props.params)})}},{key:"componentWillUnmount",value:function(){this.state.library.destroy(),this.setState({library:void 0})}},{key:"render",value:function(){var e=this.props,t=e.width,n=e.height,r=e.className,i=e.canvasClassName;return s.createElement("div",{className:r},s.createElement("canvas",{ref:this.loadCanvas,className:i,style:u.deepExtend(c(this.props.style),{width:t,height:n})}))}}]),t}(l.PureComponent);h.defaultProps={width:"100%",height:"100%",params:{},style:{}},t.default=h},function(e,t,n){(function(e,n){function r(e,t){return e.set(t[0],t[1]),e}function i(e,t){return e.add(t),e}function a(e,t){for(var n=-1,r=e?e.length:0;++n<r&&!1!==t(e[n],n,e););return e}function o(e,t){for(var n=-1,r=t.length,i=e.length;++n<r;)e[i+n]=t[n];return e}function s(e,t,n,r){var i=-1,a=e?e.length:0;for(r&&a&&(n=e[++i]);++i<a;)n=t(n,e[i],i,e);return n}function l(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}function c(e,t){return null==e?void 0:e[t]}function u(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function h(e){var t=-1,n=Array(e.size);return e.forEach(function(e,r){n[++t]=[r,e]}),n}function p(e,t){return function(n){return e(t(n))}}function d(e){var t=-1,n=Array(e.size);return e.forEach(function(e){n[++t]=e}),n}function f(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function m(){this.__data__=kt?kt(null):{}}function v(e){return this.has(e)&&delete this.__data__[e]}function g(e){var t=this.__data__;if(kt){var n=t[e];return n===Pe?void 0:n}return gt.call(t,e)?t[e]:void 0}function y(e){var t=this.__data__;return kt?void 0!==t[e]:gt.call(t,e)}function b(e,t){return this.__data__[e]=kt&&void 0===t?Pe:t,this}function x(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function w(){this.__data__=[]}function _(e){var t=this.__data__,n=B(t,e);return!(n<0||(n==t.length-1?t.pop():St.call(t,n,1),0))}function E(e){var t=this.__data__,n=B(t,e);return n<0?void 0:t[n][1]}function M(e){return B(this.__data__,e)>-1}function T(e,t){var n=this.__data__,r=B(n,e);return r<0?n.push([e,t]):n[r][1]=t,this}function S(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function A(){this.__data__={hash:new f,map:new(Rt||x),string:new f}}function C(e){return oe(this,e).delete(e)}function P(e){return oe(this,e).get(e)}function L(e){return oe(this,e).has(e)}function R(e,t){return oe(this,e).set(e,t),this}function O(e){this.__data__=new x(e)}function I(){this.__data__=new x}function N(e){return this.__data__.delete(e)}function k(e){return this.__data__.get(e)}function D(e){return this.__data__.has(e)}function U(e,t){var n=this.__data__;if(n instanceof x){var r=n.__data__;if(!Rt||r.length<Ce-1)return r.push([e,t]),this;n=this.__data__=new S(r)}return n.set(e,t),this}function F(e,t){var n=Wt(e)||ye(e)?l(e.length,String):[],r=n.length,i=!!r;for(var a in e)!t&&!gt.call(e,a)||i&&("length"==a||he(a,r))||n.push(a);return n}function z(e,t,n){var r=e[t];gt.call(e,t)&&ge(r,n)&&(void 0!==n||t in e)||(e[t]=n)}function B(e,t){for(var n=e.length;n--;)if(ge(e[n][0],t))return n;return-1}function j(e,t){return e&&re(t,Te(t),e)}function G(e,t,n,r,i,o,s){var l;if(r&&(l=o?r(e,i,o,s):r(e)),void 0!==l)return l;if(!Ee(e))return e;var c=Wt(e);if(c){if(l=le(e),!t)return ne(e,l)}else{var h=Vt(e),p=h==Ne||h==ke;if(Xt(e))return Y(e,t);if(h==Fe||h==Re||p&&!o){if(u(e))return o?e:{};if(l=ce(p?{}:e),!t)return ie(e,j(l,e))}else{if(!it[h])return o?e:{};l=ue(e,h,G,t)}}s||(s=new O);var d=s.get(e);if(d)return d;if(s.set(e,l),!c)var f=n?ae(e):Te(e);return a(f||e,function(i,a){f&&(a=i,i=e[a]),z(l,a,G(i,t,n,r,a,e,s))}),l}function H(e){return Ee(e)?Mt(e):{}}function V(e,t,n){var r=t(e);return Wt(e)?r:o(r,n(e))}function W(e){return yt.call(e)}function X(e){return!(!Ee(e)||de(e))&&(we(e)||u(e)?bt:nt).test(me(e))}function q(e){if(!fe(e))return Pt(e);var t=[];for(var n in Object(e))gt.call(e,n)&&"constructor"!=n&&t.push(n);return t}function Y(e,t){if(t)return e.slice();var n=new e.constructor(e.length);return e.copy(n),n}function Z(e){var t=new e.constructor(e.byteLength);return new _t(t).set(new _t(e)),t}function K(e,t){var n=t?Z(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}function J(e,t,n){return s(t?n(h(e),!0):h(e),r,new e.constructor)}function Q(e){var t=new e.constructor(e.source,tt.exec(e));return t.lastIndex=e.lastIndex,t}function $(e,t,n){return s(t?n(d(e),!0):d(e),i,new e.constructor)}function ee(e){return Gt?Object(Gt.call(e)):{}}function te(e,t){var n=t?Z(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function ne(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}function re(e,t,n,r){n||(n={});for(var i=-1,a=t.length;++i<a;){var o=t[i],s=r?r(n[o],e[o],o,n,e):void 0;z(n,o,void 0===s?e[o]:s)}return n}function ie(e,t){return re(e,Ht(e),t)}function ae(e){return V(e,Te,Ht)}function oe(e,t){var n=e.__data__;return pe(t)?n["string"==typeof t?"string":"hash"]:n.map}function se(e,t){var n=c(e,t);return X(n)?n:void 0}function le(e){var t=e.length,n=e.constructor(t);return t&&"string"==typeof e[0]&&gt.call(e,"index")&&(n.index=e.index,n.input=e.input),n}function ce(e){return"function"!=typeof e.constructor||fe(e)?{}:H(Et(e))}function ue(e,t,n,r){var i=e.constructor;switch(t){case He:return Z(e);case Oe:case Ie:return new i(+e);case Ve:return K(e,r);case We:case Xe:case qe:case Ye:case Ze:case Ke:case Je:case Qe:case $e:return te(e,r);case De:return J(e,r,n);case Ue:case je:return new i(e);case ze:return Q(e);case Be:return $(e,r,n);case Ge:return ee(e)}}function he(e,t){return!!(t=null==t?Le:t)&&("number"==typeof e||rt.test(e))&&e>-1&&e%1==0&&e<t}function pe(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}function de(e){return!!mt&&mt in e}function fe(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||dt)}function me(e){if(null!=e){try{return vt.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function ve(e){return G(e,!0,!0)}function ge(e,t){return e===t||e!==e&&t!==t}function ye(e){return xe(e)&&gt.call(e,"callee")&&(!Tt.call(e,"callee")||yt.call(e)==Re)}function be(e){return null!=e&&_e(e.length)&&!we(e)}function xe(e){return Me(e)&&be(e)}function we(e){var t=Ee(e)?yt.call(e):"";return t==Ne||t==ke}function _e(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=Le}function Ee(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function Me(e){return!!e&&"object"==typeof e}function Te(e){return be(e)?F(e):q(e)}function Se(){return[]}function Ae(){return!1}var Ce=200,Pe="__lodash_hash_undefined__",Le=9007199254740991,Re="[object Arguments]",Oe="[object Boolean]",Ie="[object Date]",Ne="[object Function]",ke="[object GeneratorFunction]",De="[object Map]",Ue="[object Number]",Fe="[object Object]",ze="[object RegExp]",Be="[object Set]",je="[object String]",Ge="[object Symbol]",He="[object ArrayBuffer]",Ve="[object DataView]",We="[object Float32Array]",Xe="[object Float64Array]",qe="[object Int8Array]",Ye="[object Int16Array]",Ze="[object Int32Array]",Ke="[object Uint8Array]",Je="[object Uint8ClampedArray]",Qe="[object Uint16Array]",$e="[object Uint32Array]",et=/[\\^$.*+?()[\]{}|]/g,tt=/\w*$/,nt=/^\[object .+?Constructor\]$/,rt=/^(?:0|[1-9]\d*)$/,it={};it[Re]=it["[object Array]"]=it[He]=it[Ve]=it[Oe]=it[Ie]=it[We]=it[Xe]=it[qe]=it[Ye]=it[Ze]=it[De]=it[Ue]=it[Fe]=it[ze]=it[Be]=it[je]=it[Ge]=it[Ke]=it[Je]=it[Qe]=it[$e]=!0,it["[object Error]"]=it[Ne]=it["[object WeakMap]"]=!1;var at="object"==typeof e&&e&&e.Object===Object&&e,ot="object"==typeof self&&self&&self.Object===Object&&self,st=at||ot||Function("return this")(),lt="object"==typeof t&&t&&!t.nodeType&&t,ct=lt&&"object"==typeof n&&n&&!n.nodeType&&n,ut=ct&&ct.exports===lt,ht=Array.prototype,pt=Function.prototype,dt=Object.prototype,ft=st["__core-js_shared__"],mt=function(){var e=/[^.]+$/.exec(ft&&ft.keys&&ft.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),vt=pt.toString,gt=dt.hasOwnProperty,yt=dt.toString,bt=RegExp("^"+vt.call(gt).replace(et,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),xt=ut?st.Buffer:void 0,wt=st.Symbol,_t=st.Uint8Array,Et=p(Object.getPrototypeOf,Object),Mt=Object.create,Tt=dt.propertyIsEnumerable,St=ht.splice,At=Object.getOwnPropertySymbols,Ct=xt?xt.isBuffer:void 0,Pt=p(Object.keys,Object),Lt=se(st,"DataView"),Rt=se(st,"Map"),Ot=se(st,"Promise"),It=se(st,"Set"),Nt=se(st,"WeakMap"),kt=se(Object,"create"),Dt=me(Lt),Ut=me(Rt),Ft=me(Ot),zt=me(It),Bt=me(Nt),jt=wt?wt.prototype:void 0,Gt=jt?jt.valueOf:void 0;f.prototype.clear=m,f.prototype.delete=v,f.prototype.get=g,f.prototype.has=y,f.prototype.set=b,x.prototype.clear=w,x.prototype.delete=_,x.prototype.get=E,x.prototype.has=M,x.prototype.set=T,S.prototype.clear=A,S.prototype.delete=C,S.prototype.get=P,S.prototype.has=L,S.prototype.set=R,O.prototype.clear=I,O.prototype.delete=N,O.prototype.get=k,O.prototype.has=D,O.prototype.set=U;var Ht=At?p(At,Object):Se,Vt=W;(Lt&&Vt(new Lt(new ArrayBuffer(1)))!=Ve||Rt&&Vt(new Rt)!=De||Ot&&"[object Promise]"!=Vt(Ot.resolve())||It&&Vt(new It)!=Be||Nt&&"[object WeakMap]"!=Vt(new Nt))&&(Vt=function(e){var t=yt.call(e),n=t==Fe?e.constructor:void 0,r=n?me(n):void 0;if(r)switch(r){case Dt:return Ve;case Ut:return De;case Ft:return"[object Promise]";case zt:return Be;case Bt:return"[object WeakMap]"}return t});var Wt=Array.isArray,Xt=Ct||Ae;n.exports=ve}).call(t,n(5),n(6)(e))},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getDefaultParams=function(){return{particles:{number:{value:40,density:{enable:!1,value_area:1200}},color:{value:"#FFF"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5},image:{src:"",width:100,height:100}},opacity:{value:.5,random:!1,anim:{enable:!0,speed:1,opacity_min:.1,sync:!1}},size:{value:1,random:!1,anim:{enable:!1,speed:40,size_min:0,sync:!1}},line_linked:{enable:!0,distance:150,color:"#FFF",opacity:.6,width:1,shadow:{enable:!1,blur:5,color:"lime"}},move:{enable:!0,speed:3,direction:"none",random:!1,straight:!1,out_mode:"bounce",bounce:!0,attract:{enable:!1,rotateX:3e3,rotateY:3e3}},array:[]},interactivity:{detect_on:"canvas",events:{onhover:{enable:!1,mode:"grab"},onclick:{enable:!1,mode:"repulse"},resize:!0},modes:{grab:{distance:180,line_linked:{opacity:.35}},bubble:{distance:200,size:80,duration:.4},repulse:{distance:100,duration:5},push:{particles_nb:4},remove:{particles_nb:2}},mouse:{}},retina_detect:!0}}},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0}),t.hexToRgb=function(e){var t=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;e=e.replace(t,function(e,t,n,r){return t+t+n+n+r+r});var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?{r:parseInt(n[1],16),g:parseInt(n[2],16),b:parseInt(n[3],16)}:null},t.clamp=function(e,t,n){return Math.min(Math.max(e,t),n)},t.isInArray=function(e,t){return t.indexOf(e)>-1},t.deepExtend=function(e,n){for(var r in n)n[r]&&n[r].constructor&&n[r].constructor===Object?(e[r]=e[r]||{},t.deepExtend(e[r],n[r])):e[r]=n[r];return e},t.getColor=function(e){var n={};if("object"==(void 0===e?"undefined":r(e)))if(e instanceof Array){var i=e[Math.floor(Math.random()*e.length)];n.rgb=t.hexToRgb(i)}else{var a=e.r,o=e.g,s=e.b;if(void 0!==a&&void 0!==o&&void 0!==s)n.rgb={r:a,g:o,b:s};else{var l=e.h,c=e.s,u=e.l;void 0!==l&&void 0!==o&&void 0!==s&&(n.hsl={h:l,s:c,l:u})}}else"random"==e?n.rgb={r:Math.floor(255*Math.random())+1,g:Math.floor(255*Math.random())+1,b:Math.floor(255*Math.random())+1}:"string"==typeof e&&(n.rgb=t.hexToRgb(e));return n}},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(t,n){r(this,e),this.params=t,this.library=n}return i(e,[{key:"linkParticles",value:function(e,t){var n=e.x-t.x,r=e.y-t.y,i=Math.sqrt(n*n+r*r),a=this.library.canvas,o=this.params.particles.line_linked;if(i<=this.params.particles.line_linked.distance){var s=this.params.particles.line_linked.opacity-i/(1/this.params.particles.line_linked.opacity)/this.params.particles.line_linked.distance;if(s>0){var l=this.params.particles.line_linked.color_rgb_line,c=l.r,u=l.g,h=l.b;a.ctx.save(),a.ctx.strokeStyle="rgba( "+c+", "+u+", "+h+", "+s+" )",a.ctx.lineWidth=this.params.particles.line_linked.width,a.ctx.beginPath(),o.shadow.enable&&(a.ctx.shadowBlur=o.shadow.blur,a.ctx.shadowColor=o.shadow.color),a.ctx.moveTo(e.x,e.y),a.ctx.lineTo(t.x,t.y),a.ctx.stroke(),a.ctx.closePath(),a.ctx.restore()}}}},{key:"attractParticles",value:function(e,t){var n=e.x-t.x,r=e.y-t.y;if(Math.sqrt(n*n+r*r)<=this.params.particles.line_linked.distance){var i=n/(1e3*this.params.particles.move.attract.rotateX),a=r/(1e3*this.params.particles.move.attract.rotateY);e.vx-=i,e.vy-=a,t.vx+=i,t.vy+=a}}},{key:"bounceParticles",value:function(e,t){var n=e.x-t.x,r=e.y-t.y;Math.sqrt(n*n+r*r)<=e.radius+t.radius&&(e.vx=-e.vx,e.vy=-e.vy,t.vx=-t.vx,t.vy=-t.vy)}}]),e}();t.default=a},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(t,"__esModule",{value:!0});var a=n(0),o=function(){function e(t,n){r(this,e),this.params=t,this.library=n}return i(e,[{key:"pushParticles",value:function(e,t){var n=this.library,r=n.canvas,i=n.tmp,o=n.manager;i.pushing=!0;for(var s=0;s<e;s++)this.params.particles.array.push(new a.Particle(this.params,this.library,this.params.particles.color,this.params.particles.opacity.value,{x:t?t.pos_x:Math.random()*r.width,y:t?t.pos_y:Math.random()*r.height})),s==e-1&&(this.params.particles.move.enable||o.particlesDraw(),i.pushing=!1)}},{key:"removeParticles",value:function(e){var t=this.library.manager;this.params.particles.array.splice(0,e),this.params.particles.move.enable||t.particlesDraw()}},{key:"bubbleParticle",value:function(e){var t=this,n=this.library.tmp;if(this.params.interactivity.events.onhover.enable&&a.isInArray("bubble",this.params.interactivity.events.onhover.mode)){var r=e.x-this.params.interactivity.mouse.pos_x,i=e.y-this.params.interactivity.mouse.pos_y,o=Math.sqrt(r*r+i*i),s=1-o/this.params.interactivity.modes.bubble.distance,l=function(){e.opacity_bubble=e.opacity,e.radius_bubble=e.radius};if(o<=this.params.interactivity.modes.bubble.distance){if(s>=0&&"mousemove"==this.params.interactivity.status){if(this.params.interactivity.modes.bubble.size!=this.params.particles.size.value)if(this.params.interactivity.modes.bubble.size>this.params.particles.size.value){var c=e.radius+this.params.interactivity.modes.bubble.size*s;c>=0&&(e.radius_bubble=c)}else{var u=e.radius-this.params.interactivity.modes.bubble.size,h=e.radius-u*s;e.radius_bubble=h>0?h:0}if(this.params.interactivity.modes.bubble.opacity!=this.params.particles.opacity.value)if(this.params.interactivity.modes.bubble.opacity>this.params.particles.opacity.value){var p=this.params.interactivity.modes.bubble.opacity*s;p>e.opacity&&p<=this.params.interactivity.modes.bubble.opacity&&(e.opacity_bubble=p)}else{var d=e.opacity-(this.params.particles.opacity.value-this.params.interactivity.modes.bubble.opacity)*s;d<e.opacity&&d>=this.params.interactivity.modes.bubble.opacity&&(e.opacity_bubble=d)}}}else l();"mouseleave"==this.params.interactivity.status&&l()}else if(this.params.interactivity.events.onclick.enable&&a.isInArray("bubble",this.params.interactivity.events.onclick.mode)&&n.bubble_clicking){var f=e.x-this.params.interactivity.mouse.click_pos_x,m=e.y-this.params.interactivity.mouse.click_pos_y,v=Math.sqrt(f*f+m*m),g=((new Date).getTime()-this.params.interactivity.mouse.click_time)/1e3;g>this.params.interactivity.modes.bubble.duration&&(n.bubble_duration_end=!0),g>2*this.params.interactivity.modes.bubble.duration&&(n.bubble_clicking=!1,n.bubble_duration_end=!1);var y=function(r,i,a,o,s){if(r!=i)if(n.bubble_duration_end){if(void 0!=a){var l=o-g*(o-r)/t.params.interactivity.modes.bubble.duration,c=r-l,u=r+c;"size"==s&&(e.radius_bubble=u),"opacity"==s&&(e.opacity_bubble=u)}}else if(v<=t.params.interactivity.modes.bubble.distance){if((void 0!=a?a:o)!=r){var h=o-g*(o-r)/t.params.interactivity.modes.bubble.duration;"size"==s&&(e.radius_bubble=h),"opacity"==s&&(e.opacity_bubble=h)}}else"size"==s&&(e.radius_bubble=void 0),"opacity"==s&&(e.opacity_bubble=void 0)};n.bubble_clicking&&(y(this.params.interactivity.modes.bubble.size,this.params.particles.size.value,e.radius_bubble,e.radius,"size"),y(this.params.interactivity.modes.bubble.opacity,this.params.particles.opacity.value,e.opacity_bubble,e.opacity,"opacity"))}}},{key:"repulseParticle",value:function(e){var t=this,n=this.library,r=n.canvas,i=n.tmp;if(this.params.interactivity.events.onhover.enable&&a.isInArray("repulse",this.params.interactivity.events.onhover.mode)&&"mousemove"==this.params.interactivity.status){var o=e.x-this.params.interactivity.mouse.pos_x,s=e.y-this.params.interactivity.mouse.pos_y,l=Math.sqrt(o*o+s*s),c={x:o/l,y:s/l},u=this.params.interactivity.modes.repulse.distance,h=a.clamp(1/u*(-1*Math.pow(l/u,2)+1)*u*100,0,50),p={x:e.x+c.x*h,y:e.y+c.y*h};"bounce"==this.params.particles.move.out_mode?(p.x-e.radius>0&&p.x+e.radius<r.width&&(e.x=p.x),p.y-e.radius>0&&p.y+e.radius<r.height&&(e.y=p.y)):(e.x=p.x,e.y=p.y)}else if(this.params.interactivity.events.onclick.enable&&a.isInArray("repulse",this.params.interactivity.events.onclick.mode))if(i.repulse_finish||++i.repulse_count==this.params.particles.array.length&&(i.repulse_finish=!0),i.repulse_clicking){var d=Math.pow(this.params.interactivity.modes.repulse.distance/6,3),f=this.params.interactivity.mouse.click_pos_x-e.x,m=this.params.interactivity.mouse.click_pos_y-e.y,v=f*f+m*m,g=-d/v*1;v<=d&&function(){var n=Math.atan2(m,f);if(e.vx=g*Math.cos(n),e.vy=g*Math.sin(n),"bounce"==t.params.particles.move.out_mode){var i={x:e.x+e.vx,y:e.y+e.vy};i.x+e.radius>r.width?e.vx=-e.vx:i.x-e.radius<0&&(e.vx=-e.vx),i.y+e.radius>r.height?e.vy=-e.vy:i.y-e.radius<0&&(e.vy=-e.vy)}}()}else 0==i.repulse_clicking&&(e.vx=e.vx_i,e.vy=e.vy_i)}},{key:"grabParticle",value:function(e){var t=this.library.canvas,n=this.params,r=n.interactivity,i=n.particles;if(r.events.onhover.enable&&"mousemove"==r.status){var a=e.x-r.mouse.pos_x,o=e.y-r.mouse.pos_y,s=Math.sqrt(a*a+o*o);if(s<=r.modes.grab.distance){var l=r.modes.grab,c=l.line_linked.opacity-s/(1/l.line_linked.opacity)/l.distance;if(c>0){var u=i.line_linked.color_rgb_line,h=u.r,p=u.g,d=u.b;t.ctx.strokeStyle="rgba( "+h+", "+p+", "+d+", "+c+" )",t.ctx.lineWidth=i.line_linked.width,t.ctx.beginPath(),t.ctx.moveTo(e.x,e.y),t.ctx.lineTo(r.mouse.pos_x,r.mouse.pos_y),t.ctx.stroke(),t.ctx.closePath()}}}}}]),e}();t.default=o},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),s=function(){function e(t,n,i,a,o){r(this,e),this.params=t,this.library=n,this.setupSize(),this.setupPosition(o),this.setupColor(i),this.setupOpacity(),this.setupAnimation()}return a(e,[{key:"setupSize",value:function(){this.radius=(this.params.particles.size.random?Math.random():1)*this.params.particles.size.value,this.params.particles.size.anim.enable&&(this.size_status=!1,this.vs=this.params.particles.size.anim.speed/100,this.params.particles.size.anim.sync||(this.vs=this.vs*Math.random()))}},{key:"setupPosition",value:function(e){var t=this.library,n=t.canvas,r=t.vendors;this.x=e?e.x:Math.random()*n.width,this.y=e?e.y:Math.random()*n.height,this.x>n.width-2*this.radius?this.x=this.x-this.radius:this.x<2*this.radius&&(this.x=this.x+this.radius),this.y>n.height-2*this.radius?this.y=this.y-this.radius:this.y<2*this.radius&&(this.y=this.y+this.radius),this.params.particles.move.bounce&&r.checkOverlap(this,e)}},{key:"setupColor",value:function(e){this.color=o.getColor(e.value)}},{key:"setupOpacity",value:function(){this.opacity=(this.params.particles.opacity.random?Math.random():1)*this.params.particles.opacity.value,this.params.particles.opacity.anim.enable&&(this.opacity_status=!1,this.vo=this.params.particles.opacity.anim.speed/100,this.params.particles.opacity.anim.sync||(this.vo=this.vo*Math.random()))}},{key:"setupAnimation",value:function(){var e=this.library,t=e.tmp,n=e.vendors,r=null;switch(this.params.particles.move.direction){case"top":r={x:0,y:-1};break;case"top-right":r={x:.5,y:-.5};break;case"right":r={x:1,y:0};break;case"bottom-right":r={x:.5,y:.5};break;case"bottom":r={x:0,y:1};break;case"bottom-left":r={x:-.5,y:1};break;case"left":r={x:-1,y:0};break;case"top-left":r={x:-.5,y:-.5};break;default:r={x:0,y:0}}this.params.particles.move.straight?(this.vx=r.x,this.vy=r.y,this.params.particles.move.random&&(this.vx=this.vx*Math.random(),this.vy=this.vy*Math.random())):(this.vx=r.x+Math.random()-.5,this.vy=r.y+Math.random()-.5),this.vx_i=this.vx,this.vy_i=this.vy;var a=this.params.particles.shape.type;if("object"==(void 0===a?"undefined":i(a))){if(a instanceof Array){var o=a[Math.floor(Math.random()*a.length)];this.shape=o}}else this.shape=a;if("image"==this.shape){var s=this.params.particles.shape;this.img={src:s.image.src,ratio:s.image.width/s.image.height},this.img.ratio||(this.img.ratio=1),"svg"==t.img_type&&void 0!=t.source_svg&&(n.createSvgImg(this),t.pushing&&(this.img.loaded=!1))}}},{key:"draw",value:function(){var e=this,t=this.library,n=t.canvas,r=t.tmp,i=t.vendors,a=void this.params.particles;a=void 0!=this.radius_bubble?this.radius_bubble:this.radius;var o=void 0;o=void 0!=this.opacity_bubble?this.opacity_bubble:this.opacity;var s=void 0;if(this.color.rgb){var l=this.color.rgb;s="rgba( "+l.r+", "+l.g+", "+l.b+", "+o+" )"}else{var c=this.color.hsl;s="hsla( "+c.h+", "+c.s+", "+c.l+", "+o+" )"}switch(n.ctx.fillStyle=s,n.ctx.beginPath(),this.shape){case"circle":n.ctx.arc(this.x,this.y,a,0,2*Math.PI,!1);break;case"edge":n.ctx.rect(this.x-a,this.y-a,2*a,2*a);break;case"triangle":i.drawShape(n.ctx,this.x-a,this.y+a/1.66,2*a,3,2);break;case"polygon":i.drawShape(n.ctx,this.x-a/(this.params.particles.shape.polygon.nb_sides/3.5),this.y-a/.76,2.66*a/(this.params.particles.shape.polygon.nb_sides/3),this.params.particles.shape.polygon.nb_sides,1);break;case"star":i.drawShape(n.ctx,this.x-2*a/(this.params.particles.shape.polygon.nb_sides/4),this.y-a/1.52,2*a*2.66/(this.params.particles.shape.polygon.nb_sides/3),this.params.particles.shape.polygon.nb_sides,2);break;case"image":var u=void 0;(u="svg"==r.img_type?this.img.obj:r.img_obj)&&function(t){n.ctx.drawImage(t,e.x-a,e.y-a,2*a,2*a/e.img.ratio)}(u)}n.ctx.closePath(),this.params.particles.shape.stroke.width>0&&(n.ctx.strokeStyle=this.params.particles.shape.stroke.color,n.ctx.lineWidth=this.params.particles.shape.stroke.width,n.ctx.stroke()),n.ctx.fill()}}]),e}();t.default=s},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(t,"__esModule",{value:!0});var a=n(0),o=function(){function e(t,n,i,a,o){r(this,e),this.params=t,this.interact=n,this.modes=i,this.vendors=a,this.library=o}return i(e,[{key:"particlesCreate",value:function(){for(var e=this.params.particles,t=e.color,n=e.opacity,r=0;r<this.params.particles.number.value;r++)this.params.particles.array.push(new a.Particle(this.params,this.library,t,n.value))}},{key:"particlesUpdate",value:function(){var e=this,t=this.library,n=t.canvas,r=t.interact,i=t.modes;this.params.particles.array.forEach(function(t,o){if(e.params.particles.move.enable){var s=e.params.particles.move.speed/2;t.x+=t.vx*s,t.y+=t.vy*s}e.params.particles.opacity.anim.enable&&(1==t.opacity_status?(t.opacity>=e.params.particles.opacity.value&&(t.opacity_status=!1),t.opacity+=t.vo):(t.opacity<=e.params.particles.opacity.anim.opacity_min&&(t.opacity_status=!0),t.opacity-=t.vo),t.opacity<0&&(t.opacity=0)),e.params.particles.size.anim.enable&&(1==t.size_status?(t.radius>=e.params.particles.size.value&&(t.size_status=!1),t.radius+=t.vs):(t.radius<=e.params.particles.size.anim.size_min&&(t.size_status=!0),t.radius-=t.vs),t.radius<0&&(t.radius=0));var l=void 0;switch(l="bounce"==e.params.particles.move.out_mode?{x_left:t.radius,x_right:n.width,y_top:t.radius,y_bottom:n.height}:{x_left:-t.radius,x_right:n.width+t.radius,y_top:-t.radius,y_bottom:n.height+t.radius},t.x-t.radius>n.width?(t.x=l.x_left,t.y=Math.random()*n.height):t.x+t.radius<0&&(t.x=l.x_right,t.y=Math.random()*n.height),t.y-t.radius>n.height?(t.y=l.y_top,t.x=Math.random()*n.width):t.y+t.radius<0&&(t.y=l.y_bottom,t.x=Math.random()*n.width),e.params.particles.move.out_mode){case"bounce":t.x+t.radius>n.width?t.vx=-t.vx:t.x-t.radius<0&&(t.vx=-t.vx),t.y+t.radius>n.height?t.vy=-t.vy:t.y-t.radius<0&&(t.vy=-t.vy)}if(a.isInArray("grab",e.params.interactivity.events.onhover.mode)&&i.grabParticle(t),(a.isInArray("bubble",e.params.interactivity.events.onhover.mode)||a.isInArray("bubble",e.params.interactivity.events.onclick.mode))&&i.bubbleParticle(t),(a.isInArray("repulse",e.params.interactivity.events.onhover.mode)||a.isInArray("repulse",e.params.interactivity.events.onclick.mode))&&i.repulseParticle(t),e.params.particles.line_linked.enable||e.params.particles.move.attract.enable)for(var c=o+1;c<e.params.particles.array.length;c++){var u=e.params.particles.array[c];e.params.particles.line_linked.enable&&r.linkParticles(t,u),e.params.particles.move.attract.enable&&r.attractParticles(t,u),e.params.particles.move.bounce&&r.bounceParticles(t,u)}})}},{key:"particlesDraw",value:function(){var e=this.library,t=e.canvas,n=e.manager;t.ctx.clearRect(0,0,t.width,t.height),n.particlesUpdate(),this.params.particles.array.forEach(function(e){e.draw()})}},{key:"particlesEmpty",value:function(){this.params.particles.array=[]}},{key:"particlesRefresh",value:function(){var e=this.library,t=e.tmp;e.vendors,cancelAnimationFrame(t.checkAnimFrame),cancelAnimationFrame(t.drawAnimFrame),t.source_svg=void 0,t.img_obj=void 0,t.count_svg=0,this.particlesEmpty(),this.library.canvasClear(),this.library.start()}}]),e}();t.default=o},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(t,"__esModule",{value:!0});var a=n(0),o=function(){function e(t){r(this,e),this.tmp={},this.tmp={},this.loadParameters(t),this.extendParams(),this.interact=new a.Interact(this.params,this),this.modes=new a.Modes(this.params,this),this.vendors=new a.Vendors(this.params,this),this.manager=new a.ParticleManager(this.params,this.interact,this.modes,this.vendors,this)}return i(e,[{key:"loadParameters",value:function(e){var t=a.getDefaultParams(),n=a.deepExtend(t,e);this.params=n}},{key:"loadCanvas",value:function(e){this.canvas={element:e,width:e.offsetWidth,height:e.offsetHeight}}},{key:"start",value:function(){var e=this.vendors;e.eventsListeners(),e.start()}},{key:"destroy",value:function(){var e=this.tmp;this.detachListeners(),this.vendors.detachListeners(),cancelAnimationFrame(e.drawAnimFrame),this.canvasClear()}},{key:"detachListeners",value:function(){window.removeEventListener("resize",this.onWindowResize)}},{key:"extendParams",value:function(){this.extendTmpDefinition(),this.onWindowResize=this.onWindowResize.bind(this)}},{key:"extendTmpDefinition",value:function(){this.tmp.obj={size_value:this.params.particles.size.value,size_anim_speed:this.params.particles.size.anim.speed,move_speed:this.params.particles.move.speed,line_linked_distance:this.params.particles.line_linked.distance,line_linked_width:this.params.particles.line_linked.width,mode_grab_distance:this.params.interactivity.modes.grab.distance,mode_bubble_distance:this.params.interactivity.modes.bubble.distance,mode_bubble_size:this.params.interactivity.modes.bubble.size,mode_repulse_distance:this.params.interactivity.modes.repulse.distance}}},{key:"retinaInit",value:function(){var e=this.canvas,t=this.tmp;this.params.retina_detect&&window.devicePixelRatio>1?(e.pxratio=window.devicePixelRatio,t.retina=!0,e.width=e.element.offsetWidth*e.pxratio,e.height=e.element.offsetHeight*e.pxratio,this.params.particles.size.value=t.obj.size_value*e.pxratio,this.params.particles.size.anim.speed=t.obj.size_anim_speed*e.pxratio,this.params.particles.move.speed=t.obj.move_speed*e.pxratio,this.params.particles.line_linked.distance=t.obj.line_linked_distance*e.pxratio,this.params.interactivity.modes.grab.distance=t.obj.mode_grab_distance*e.pxratio,this.params.interactivity.modes.bubble.distance=t.obj.mode_bubble_distance*e.pxratio,this.params.particles.line_linked.width=t.obj.line_linked_width*e.pxratio,this.params.interactivity.modes.bubble.size=t.obj.mode_bubble_size*e.pxratio,this.params.interactivity.modes.repulse.distance=t.obj.mode_repulse_distance*e.pxratio):(e.pxratio=1,t.retina=!1)}},{key:"canvasInit",value:function(){var e=this.canvas;e.ctx=e.element.getContext("2d")}},{key:"canvasSize",value:function(){var e=this.canvas;e.element.width=e.width,e.element.height=e.height,this.params&&this.params.interactivity.events.resize&&window.addEventListener("resize",this.onWindowResize)}},{key:"canvasPaint",value:function(){var e=this.canvas;e.ctx.fillRect(0,0,e.width,e.height)}},{key:"canvasClear",value:function(){var e=this.canvas;e.ctx.clearRect(0,0,e.width,e.height)}},{key:"onWindowResize",value:function(){var e=this.canvas,t=this.manager,n=this.tmp,r=this.vendors;e.width=e.element.offsetWidth,e.height=e.element.offsetHeight,n.retina&&(e.width*=e.pxratio,e.height*=e.pxratio),e.element.width=e.width,e.element.height=e.height,this.params.particles.move.enable||(t.particlesEmpty(),t.particlesCreate(),t.particlesDraw(),r.densityAutoParticles()),r.densityAutoParticles()}}]),e}();t.default=o},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(t,"__esModule",{value:!0});var a=n(0),o=function(){function e(t,n){r(this,e),this.params=t,this.library=n,this.onMouseMove=this.onMouseMove.bind(this),this.onMouseLeave=this.onMouseLeave.bind(this),this.onClick=this.onClick.bind(this)}return i(e,[{key:"eventsListeners",value:function(){var e=this.params.interactivity,t=this.library.canvas;"window"==e.detect_on?e.el=window:e.el=t.element,(e.events.onhover.enable||e.events.onclick.enable)&&(e.el.addEventListener("mousemove",this.onMouseMove),e.el.addEventListener("mouseleave",this.onMouseLeave)),e.events.onclick.enable&&e.el.addEventListener("click",this.onClick)}},{key:"detachListeners",value:function(){var e=this.params.interactivity,t=this.library.tmp;e.el&&((e.events.onhover.enable||e.events.onclick.enable)&&(e.el.removeEventListener("mousemove",this.onMouseMove),e.el.addEventListener("mouseleave",this.onMouseLeave)),e.events.onclick.enable&&e.el.addEventListener("click",this.onClick)),window.cancelAnimationFrame(t.drawAnimFrame)}},{key:"onMouseMove",value:function(e){var t=this.library,n=t.canvas,r=t.tmp,i=this.params.interactivity,a=void 0;a=i.el==window?{x:e.clientX,y:e.clientY}:{x:e.offsetX||e.clientX,y:e.offsetY||e.clientY},i.mouse.pos_x=a.x,i.mouse.pos_y=a.y,r.retina&&(i.mouse.pos_x*=n.pxratio,i.mouse.pos_y*=n.pxratio),i.status="mousemove"}},{key:"onMouseLeave",value:function(e){var t=this.params.interactivity;t.mouse.pos_x=null,t.mouse.pos_y=null,t.status="mouseleave"}},{key:"onClick",value:function(){var e=this.library,t=e.modes,n=e.tmp,r=this.params,i=r.interactivity,a=r.particles;if(i.mouse.click_pos_x=i.mouse.pos_x,i.mouse.click_pos_y=i.mouse.pos_y,i.mouse.click_time=(new Date).getTime(),i.events.onclick.enable)switch(i.events.onclick.mode){case"push":a.move.enable?t.pushParticles(i.modes.push.particles_nb,i.mouse):1==i.modes.push.particles_nb?t.pushParticles(i.modes.push.particles_nb,i.mouse):i.modes.push.particles_nb>1&&t.pushParticles(i.modes.push.particles_nb);break;case"remove":t.removeParticles(i.modes.remove.particles_nb);break;case"bubble":n.bubble_clicking=!0;break;case"repulse":n.repulse_clicking=!0,n.repulse_count=0,n.repulse_finish=!1,setTimeout(function(){n.repulse_clicking=!1},1e3*i.modes.repulse.duration)}}},{key:"densityAutoParticles",value:function(){var e=this.library,t=e.canvas,n=e.modes,r=e.tmp,i=this.params.particles;if(i.number.density.enable){var a=t.element.width*t.element.height/1e3;r.retina&&(a=a/t.pxratio*2);var o=a*i.number.value/i.number.density.value_area,s=i.array.length-o;s<0?n.pushParticles(Math.abs(s)):n.removeParticles(s)}}},{key:"checkOverlap",value:function(e,t){var n=this.library,r=n.canvas,i=n.vendors;this.params.particles.array.forEach(function(n){var a=n,o=e.x-a.x,s=e.y-a.y;Math.sqrt(o*o+s*s)<=e.radius+a.radius&&(e.x=t?t.x:Math.random()*r.width,e.y=t?t.y:Math.random()*r.height,i.checkOverlap(e))})}},{key:"createSvgImg",value:function(e){var t=this.library.tmp,n=t.source_svg,r=/#([0-9A-F]{3,6})/gi,i=n.replace(r,function(t,n,r,i){var a=void 0;if(e.color.rgb){var o=e.color.rgb;a="rgba( "+o.r+", "+o.g+", "+o.b+", "+e.opacity+" )"}else{var s=e.color.hsl;a="rgba( "+s.h+", "+s.s+", "+s.l+", "+e.opacity+" )"}return a}),a=new Blob([i],{type:"image/svg+xml;charset=utf-8"}),o=window.URL||window,s=o.createObjectURL(a),l=new Image;l.addEventListener("load",function(){e.img.obj=l,e.img.loaded=!0,o.revokeObjectURL(s),t.count_svg++}),l.src=s}},{key:"destroy",value:function(){var e=this.library,t=e.canvas,n=e.tmp;cancelAnimationFrame(n.drawAnimFrame),t.element.remove()}},{key:"drawShape",value:function(e,t,n,r,i,a){var o=i*a,s=i/a,l=180*(s-2)/s,c=Math.PI-Math.PI*l/180;e.save(),e.beginPath(),e.translate(t,n),e.moveTo(0,0);for(var u=0;u<o;u++)e.lineTo(r,0),e.translate(r,0),e.rotate(c);e.fill(),e.restore()}},{key:"exportImg",value:function(){var e=this.library.canvas;window.open(e.element.toDataURL("image/png"),"_blank")}},{key:"loadImg",value:function(e){var t=this.library,n=t.tmp,r=t.vendors,i=this.params.particles;if(n.img_error=void 0,""!=i.shape.image.src)if("svg"==e){var a=new XMLHttpRequest;a.open("GET",i.shape.image.src),a.onreadystatechange=function(e){4==a.readyState&&(200==a.status?(n.source_svg=e.currentTarget.response,r.checkBeforeDraw()):(console.log("Error react-particles-js - image not found"),n.img_error=!0))},a.send()}else{var o=new Image;o.addEventListener("load",function(){n.img_obj=o,r.checkBeforeDraw()}),o.src=i.shape.image.src}else console.log("Error react-particles-js - no image.src"),n.img_error=!0}},{key:"draw",value:function(){var e=this.library,t=e.tmp,n=e.manager,r=e.vendors,i=this.params.particles;"image"==i.shape.type?"svg"==t.img_type?t.count_svg>=i.number.value?(n.particlesDraw(),i.move.enable?t.drawAnimFrame=requestAnimationFrame(r.draw.bind(r)):cancelAnimationFrame(t.drawAnimFrame)):t.img_error||(t.drawAnimFrame=requestAnimationFrame(r.draw.bind(r))):void 0!=t.img_obj?(n.particlesDraw(),i.move.enable?t.drawAnimFrame=requestAnimationFrame(r.draw.bind(r)):cancelAnimationFrame(t.drawAnimFrame)):t.img_error||(t.drawAnimFrame=requestAnimationFrame(r.draw.bind(r))):(n.particlesDraw(),i.move.enable?t.drawAnimFrame=requestAnimationFrame(r.draw.bind(r)):cancelAnimationFrame(t.drawAnimFrame))}},{key:"checkBeforeDraw",value:function(){var e=this.library,t=e.tmp,n=e.vendors;"image"==this.params.particles.shape.type?"svg"==t.img_type&&void 0==t.source_svg?t.checkAnimFrame=requestAnimationFrame(void 0):(cancelAnimationFrame(t.checkAnimFrame),t.img_error||(n.init(),n.draw())):(n.init(),n.draw())}},{key:"init",value:function(){var e=this.library,t=e.manager,n=e.vendors,r=this.params.particles;e.retinaInit(),e.canvasInit(),e.canvasSize(),t.particlesCreate(),n.densityAutoParticles(),r.line_linked.color_rgb_line=a.hexToRgb(r.line_linked.color)}},{key:"start",value:function(){var e=this.library,t=e.tmp,n=e.vendors,r=this.params.particles;a.isInArray("image",r.shape.type)?(t.img_type=r.shape.image.src.substr(r.shape.image.src.length-3),n.loadImg(t.img_type)):n.checkBeforeDraw()}}]),e}();t.default=o}])})},Np8g:function(e,t){},O27J:function(e,t,n){"use strict";function r(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r)}catch(e){console.error(e)}}r(),e.exports=n("/OLF")},Re3r:function(e,t){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function r(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}e.exports=function(e){return null!=e&&(n(e)||r(e)||!!e._isBuffer)}},SCbR:function(e,t){},SldL:function(e,t){!function(t){"use strict";function n(e,t,n,r){var a=t&&t.prototype instanceof i?t:i,o=Object.create(a.prototype),s=new d(r||[]);return o._invoke=c(e,n,s),o}function r(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function i(){}function a(){}function o(){}function s(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function l(e){function t(n,i,a,o){var s=r(e[n],e,i);if("throw"!==s.type){var l=s.arg,c=l.value;return c&&"object"==typeof c&&y.call(c,"__await")?Promise.resolve(c.__await).then(function(e){t("next",e,a,o)},function(e){t("throw",e,a,o)}):Promise.resolve(c).then(function(e){l.value=e,a(l)},o)}o(s.arg)}function n(e,n){function r(){return new Promise(function(r,i){t(e,n,r,i)})}return i=i?i.then(r,r):r()}var i;this._invoke=n}function c(e,t,n){var i=T;return function(a,o){if(i===A)throw new Error("Generator is already running");if(i===C){if("throw"===a)throw o;return m()}for(n.method=a,n.arg=o;;){var s=n.delegate;if(s){var l=u(s,n);if(l){if(l===P)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(i===T)throw i=C,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i=A;var c=r(e,t,n);if("normal"===c.type){if(i=n.done?C:S,c.arg===P)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(i=C,n.method="throw",n.arg=c.arg)}}}function u(e,t){var n=e.iterator[t.method];if(n===v){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=v,u(e,t),"throw"===t.method))return P;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return P}var i=r(n,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,P;var a=i.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=v),t.delegate=null,P):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,P)}function h(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function p(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function d(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(h,this),this.reset(!0)}function f(e){if(e){var t=e[x];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,r=function t(){for(;++n<e.length;)if(y.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=v,t.done=!0,t};return r.next=r}}return{next:m}}function m(){return{value:v,done:!0}}var v,g=Object.prototype,y=g.hasOwnProperty,b="function"==typeof Symbol?Symbol:{},x=b.iterator||"@@iterator",w=b.asyncIterator||"@@asyncIterator",_=b.toStringTag||"@@toStringTag",E="object"==typeof e,M=t.regeneratorRuntime;if(M)return void(E&&(e.exports=M));M=t.regeneratorRuntime=E?e.exports:{},M.wrap=n;var T="suspendedStart",S="suspendedYield",A="executing",C="completed",P={},L={};L[x]=function(){return this};var R=Object.getPrototypeOf,O=R&&R(R(f([])));O&&O!==g&&y.call(O,x)&&(L=O);var I=o.prototype=i.prototype=Object.create(L);a.prototype=I.constructor=o,o.constructor=a,o[_]=a.displayName="GeneratorFunction",M.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===a||"GeneratorFunction"===(t.displayName||t.name))},M.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,o):(e.__proto__=o,_ in e||(e[_]="GeneratorFunction")),e.prototype=Object.create(I),e},M.awrap=function(e){return{__await:e}},s(l.prototype),l.prototype[w]=function(){return this},M.AsyncIterator=l,M.async=function(e,t,r,i){var a=new l(n(e,t,r,i));return M.isGeneratorFunction(t)?a:a.next().then(function(e){return e.done?e.value:a.next()})},s(I),I[_]="Generator",I[x]=function(){return this},I.toString=function(){return"[object Generator]"},M.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},M.values=f,d.prototype={constructor:d,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=v,this.done=!1,this.delegate=null,this.method="next",this.arg=v,this.tryEntries.forEach(p),!e)for(var t in this)"t"===t.charAt(0)&&y.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=v)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){function t(t,r){return a.type="throw",a.arg=e,n.next=t,r&&(n.method="next",n.arg=v),!!r}if(this.done)throw e;for(var n=this,r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],a=i.completion;if("root"===i.tryLoc)return t("end");if(i.tryLoc<=this.prev){var o=y.call(i,"catchLoc"),s=y.call(i,"finallyLoc");if(o&&s){if(this.prev<i.catchLoc)return t(i.catchLoc,!0);if(this.prev<i.finallyLoc)return t(i.finallyLoc)}else if(o){if(this.prev<i.catchLoc)return t(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return t(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&y.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,P):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),P},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),p(n),P}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;p(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:f(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=v),P}}}(function(){return this}()||Function("return this")())},TJez:function(e,t,n){"use strict";var r={};e.exports=r},TNV1:function(e,t,n){"use strict";var r=n("cGG2");e.exports=function(e,t,n){return r.forEach(n,function(n){e=n(e,t)}),e}},UWAp:function(e,t){e.exports="/media/TakeOver.mp3"},"Ue/Q":function(e,t){},UxSj:function(e,t){e.exports="/media/perlin-512.png"},V0PE:function(e,t){e.exports={materials:[{colorDiffuse:[.14309,.14309,.14309],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"Cloth",depthWrite:!0,DbgIndex:0,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:15658734,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0},{colorDiffuse:[.8,.8,.8],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"BoltSteel",depthWrite:!0,DbgIndex:1,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:15597568,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0},{colorDiffuse:[.64,.64,.64],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"Aluminium",depthWrite:!0,DbgIndex:2,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:60928,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0},{colorDiffuse:[.0117357,.0117357,.0117357],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"MattePlastic",depthWrite:!0,DbgIndex:3,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:238,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0},{colorDiffuse:[.462434,.66488,.8],opacity:1,transparent:!1,specularCoef:50,colorSpecular:[.5,.5,.5],DbgName:"Chrome",depthWrite:!0,DbgIndex:4,shading:"phong",colorEmissive:[0,0,0],visible:!0,DbgColor:15658496,blending:1,doubleSided:!1,wireframe:!1,depthTest:!0}],metadata:{generator:"io_three",version:3,vertices:5697,faces:5696,uvs:1,type:"Geometry",materials:5,normals:2253},vertices:[1.6401,2.88172,-.0623844,1.64181,2.87271,-.0640654,1.64181,2.88172,-.064853,1.64181,2.86399,-.0617267,1.64181,2.8558,-.0579078,1.6401,2.83896,-.0376987,1.64181,2.84839,-.0527247,1.64181,2.84201,-.0463352,1.64181,2.83682,-.038933,1.64181,2.833,-.0307433,1.64181,2.83066,-.0220148,1.64181,2.82988,-.0130129,1.6401,2.83896,.0116729,1.64181,2.83066,-.00401097,1.64181,2.833,.00471737,1.64181,2.83682,.0129072,1.64181,2.84201,.0203094,1.64181,2.84839,.0266991,1.64181,2.8558,.0318821,1.6401,2.88172,.0363587,1.64181,2.86399,.0357009,1.64181,2.87271,.0380398,1.64181,2.88172,.0388274,1.57035,2.88172,-.0623844,1.57035,2.83896,-.0376987,1.57035,2.83896,.0116729,1.57035,2.88172,.0363587,1.64181,2.89072,-.0640654,1.64181,2.89945,-.0617267,1.64181,2.90764,-.0579078,1.6401,2.92447,-.0376987,1.64181,2.91504,-.0527247,1.64181,2.92143,-.0463352,1.64181,2.92661,-.038933,1.64181,2.93043,-.0307433,1.64181,2.93277,-.0220148,1.64181,2.93356,-.0130129,1.6401,2.92447,.0116729,1.64181,2.93277,-.00401097,1.64181,2.93043,.00471737,1.64181,2.92661,.0129072,1.64181,2.92143,.0203094,1.64181,2.91504,.0266991,1.64181,2.90764,.0318821,1.64181,2.89945,.0357009,1.64181,2.89072,.0380398,1.57035,2.92447,-.0376987,1.57035,2.92447,.0116729,1.64181,2.87045,-.0769417,1.64181,2.88172,-.0779278,1.64181,2.85951,-.074013,1.64181,2.84926,-.069231,1.63897,2.8702,-.0783363,1.641,2.88172,-.0783363,1.63259,2.85794,-.0783363,1.62073,2.844,-.0783363,1.62073,2.8702,-.0783363,1.62073,2.88172,-.0783363,1.62073,2.85794,-.0783363,1.54816,2.8702,-.0783363,1.54816,2.88172,-.0783363,1.54816,2.85794,-.0783363,1.54816,2.844,-.0783363,1.54816,2.87037,-.0773438,1.54816,2.85938,-.0743966,1.54816,2.84906,-.0695845,1.54735,2.87037,-.0773438,1.54735,2.88172,-.0783363,1.54735,2.85938,-.0743966,1.54735,2.84906,-.0695845,1.54735,2.87546,-.0485046,1.54735,2.88172,-.049052,1.54735,2.86939,-.0468786,1.54735,2.8637,-.0442237,1.54653,2.87553,-.0481026,1.54653,2.88172,-.0486437,1.54653,2.86953,-.0464949,1.54653,2.8639,-.0438701,1.64181,2.89299,-.0769417,1.64181,2.90392,-.074013,1.64181,2.91418,-.069231,1.63897,2.89324,-.0783363,1.63259,2.90549,-.0783363,1.62073,2.91943,-.0783363,1.62073,2.89324,-.0783363,1.62073,2.90549,-.0783363,1.54816,2.89324,-.0783363,1.54816,2.90549,-.0783363,1.54816,2.91943,-.0783363,1.54816,2.89306,-.0773438,1.54816,2.90406,-.0743966,1.54816,2.91438,-.0695845,1.54735,2.89306,-.0773438,1.54735,2.90406,-.0743966,1.54735,2.91438,-.0695845,1.54735,2.88798,-.0485046,1.54735,2.89404,-.0468786,1.54735,2.89974,-.0442237,1.54653,2.8879,-.0481026,1.54653,2.8939,-.0464949,1.54653,2.89953,-.0438701,1.64181,2.93145,-.0547394,1.64181,2.93794,-.0454704,1.64181,2.92344,-.0627407,1.63897,2.93253,-.0556496,1.641,2.93829,-.0456744,1.63259,2.9264,-.0662649,1.62073,2.93253,-.0556496,1.62073,2.93829,-.0456744,1.62073,2.9264,-.0662649,1.54816,2.93253,-.0556496,1.54816,2.93829,-.0456744,1.54816,2.9264,-.0662649,1.54816,2.93176,-.0550019,1.54816,2.92371,-.0630534,1.54735,2.93176,-.0550019,1.54735,2.93829,-.0456744,1.54735,2.92371,-.0630534,1.54735,2.90932,-.0361784,1.54735,2.91293,-.0310324,1.54735,2.90488,-.0406206,1.54653,2.90901,-.0359159,1.54653,2.91257,-.0308282,1.54653,2.90462,-.0403077,1.64181,2.94272,-.0352151,1.64181,2.94565,-.0242852,1.64181,2.94663,-.0130129,1.63897,2.94405,-.0356993,1.63259,2.95018,-.025084,1.62073,2.95715,-.0130129,1.62073,2.94405,-.0356993,1.62073,2.95018,-.025084,1.54816,2.94405,-.0356993,1.54816,2.95018,-.025084,1.54816,2.95715,-.0130129,1.54816,2.9431,-.0353548,1.54816,2.94605,-.0243561,1.54816,2.94704,-.0130129,1.54735,2.9431,-.0353548,1.54735,2.94605,-.0243561,1.54735,2.94704,-.0130129,1.54735,2.91558,-.0253389,1.54735,2.91721,-.019271,1.54735,2.91776,-.0130129,1.54653,2.9152,-.0251994,1.54653,2.91681,-.0192002,1.54653,2.91735,-.0130129,1.64181,2.94272,.00918945,1.64181,2.93794,.0194446,1.64181,2.94565,-.00174045,1.63897,2.94405,.00967368,1.641,2.93829,.0196487,1.63259,2.95018,-941528e-9,1.62073,2.94405,.00967368,1.62073,2.93829,.0196487,1.62073,2.95018,-941528e-9,1.54816,2.94405,.00967368,1.54816,2.93829,.0196487,1.54816,2.95018,-941528e-9,1.54816,2.9431,.00932896,1.54816,2.94605,-.00166956,1.54735,2.9431,.00932896,1.54735,2.93829,.0196487,1.54735,2.94605,-.00166956,1.54735,2.91558,-686645e-9,1.54735,2.91293,.0050066,1.54735,2.91721,-.00675465,1.54653,2.9152,-8263e-7,1.54653,2.91257,.00480249,1.54653,2.91681,-.00682567,1.64181,2.93145,.0287138,1.64181,2.92344,.0367148,1.64181,2.91418,.0432053,1.63897,2.93253,.0296239,1.63259,2.9264,.0402391,1.62073,2.91943,.0523104,1.62073,2.93253,.0296239,1.62073,2.9264,.0402391,1.54816,2.93253,.0296239,1.54816,2.9264,.0402391,1.54816,2.91943,.0523104,1.54816,2.93176,.0289762,1.54816,2.92371,.0370277,1.54816,2.91438,.0435588,1.54735,2.93176,.0289762,1.54735,2.92371,.0370277,1.54735,2.91438,.0435588,1.54735,2.90932,.0101525,1.54735,2.90488,.0145947,1.54735,2.89974,.0181979,1.54653,2.90901,.00989032,1.54653,2.90462,.014282,1.54653,2.89953,.0178444,1.64181,2.89299,.050916,1.64181,2.88172,.0519023,1.64181,2.90392,.0479874,1.63897,2.89324,.0523106,1.641,2.88172,.0523106,1.63259,2.90549,.0523106,1.62073,2.89324,.0523106,1.62073,2.88172,.0523106,1.62073,2.90549,.0523106,1.54816,2.89324,.0523106,1.54816,2.88172,.0523106,1.54816,2.90549,.0523106,1.54816,2.89306,.0513182,1.54816,2.90406,.048371,1.54735,2.89306,.0513182,1.54735,2.88172,.0523106,1.54735,2.90406,.048371,1.54735,2.88798,.0224788,1.54735,2.88172,.0230262,1.54735,2.89404,.0208529,1.54653,2.8879,.0220766,1.54653,2.88172,.022618,1.54653,2.8939,.0204693,1.64181,2.87045,.050916,1.64181,2.85952,.0479874,1.64181,2.84926,.0432053,1.63897,2.8702,.0523106,1.63259,2.85794,.0523106,1.62073,2.844,.0523106,1.62073,2.8702,.0523106,1.62073,2.85794,.0523106,1.54816,2.8702,.0523106,1.54816,2.85794,.0523106,1.54816,2.844,.0523106,1.54816,2.87037,.0513182,1.54816,2.85938,.048371,1.54816,2.84906,.0435588,1.54735,2.87037,.0513182,1.54735,2.85938,.048371,1.54735,2.84906,.0435588,1.54735,2.87546,.0224788,1.54735,2.86939,.0208529,1.54735,2.8637,.0181979,1.54653,2.87553,.0220766,1.54653,2.86953,.0204693,1.54653,2.8639,.0178444,1.64181,2.83199,.0287139,1.64181,2.8255,.0194446,1.64181,2.83999,.0367148,1.63897,2.8309,.0296239,1.641,2.82515,.0196487,1.63259,2.83703,.0402391,1.62073,2.8309,.0296239,1.62073,2.82515,.0196487,1.62073,2.83703,.0402391,1.54816,2.8309,.0296239,1.54816,2.82515,.0196487,1.54816,2.83703,.0402391,1.54816,2.83168,.0289762,1.54816,2.83973,.0370277,1.54735,2.83168,.0289762,1.54735,2.82515,.0196487,1.54735,2.83973,.0370277,1.54735,2.85411,.0101525,1.54735,2.85051,.0050066,1.54735,2.85855,.0145947,1.54653,2.85442,.00989032,1.54653,2.85086,.00480249,1.54653,2.85881,.014282,1.64181,2.82072,.00918945,1.64181,2.81779,-.00174044,1.64181,2.8168,-.0130129,1.63897,2.81939,.00967369,1.63259,2.81326,-941522e-9,1.62073,2.80629,-.0130129,1.62073,2.81939,.00967369,1.62073,2.81326,-941522e-9,1.54816,2.81939,.00967369,1.54816,2.81326,-941522e-9,1.54816,2.80629,-.0130129,1.54816,2.82033,.00932897,1.54816,2.81739,-.00166956,1.54816,2.81639,-.0130129,1.54735,2.82033,.00932897,1.54735,2.81739,-.00166956,1.54735,2.81639,-.0130129,1.54735,2.84785,-686642e-9,1.54735,2.84623,-.00675465,1.54735,2.84568,-.0130129,1.54653,2.84824,-826297e-9,1.54653,2.84663,-.00682567,1.54653,2.84609,-.0130129,1.64181,2.82072,-.0352151,1.64181,2.8255,-.0454704,1.64181,2.81779,-.0242852,1.63897,2.81939,-.0356993,1.641,2.82515,-.0456744,1.63259,2.81326,-.025084,1.62073,2.81939,-.0356993,1.62073,2.82515,-.0456744,1.62073,2.81326,-.025084,1.54816,2.81939,-.0356993,1.54816,2.82515,-.0456744,1.54816,2.81326,-.025084,1.54816,2.82033,-.0353548,1.54816,2.81739,-.0243561,1.54735,2.82033,-.0353548,1.54735,2.82515,-.0456744,1.54735,2.81739,-.0243561,1.54735,2.84785,-.0253389,1.54735,2.85051,-.0310323,1.54735,2.84623,-.019271,1.54653,2.84824,-.0251994,1.54653,2.85086,-.0308282,1.54653,2.84663,-.0192002,1.64181,2.83199,-.0547394,1.64181,2.83999,-.0627407,1.63897,2.8309,-.0556496,1.63259,2.83703,-.0662649,1.62073,2.8309,-.0556496,1.62073,2.83703,-.0662649,1.54816,2.8309,-.0556496,1.54816,2.83703,-.0662649,1.54816,2.83168,-.0550019,1.54816,2.83973,-.0630534,1.54735,2.83168,-.0550019,1.54735,2.83973,-.0630534,1.54735,2.85411,-.0361784,1.54735,2.85855,-.0406206,1.54653,2.85442,-.0359159,1.54653,2.85881,-.0403077,1.54625,2.89953,-.0438701,1.54579,2.8939,-.0464949,1.54532,2.8879,-.0481026,1.54486,2.88172,-.0486437,1.54606,2.8879,.0220766,1.5456,2.8939,.0204693,1.54514,2.89953,.0178444,1.54467,2.90462,.014282,1.54421,2.90901,.00989032,1.54375,2.91257,.00480249,1.54328,2.9152,-8263e-7,1.54282,2.91681,-.00682567,1.54236,2.91735,-.0130129,1.54189,2.91681,-.0192002,1.54143,2.9152,-.0251994,1.54097,2.91257,-.0308284,1.5405,2.90901,-.0359159,1.54004,2.90462,-.0403077,1.53958,2.89953,-.0438701,1.53911,2.8939,-.0464949,1.53865,2.8879,-.0481026,1.53819,2.88172,-.0486437,1.54625,2.8639,.0178444,1.54579,2.86953,.0204693,1.54532,2.87553,.0220766,1.54486,2.88172,.022618,1.5444,2.8879,.0220766,1.54393,2.8939,.0204693,1.54347,2.89953,.0178444,1.54301,2.90462,.014282,1.54254,2.90901,.00989032,1.54208,2.91257,.00480249,1.54162,2.9152,-8263e-7,1.54115,2.91681,-.00682567,1.54069,2.91735,-.0130129,1.54023,2.91681,-.0192002,1.53976,2.9152,-.0251994,1.5393,2.91257,-.0308284,1.53884,2.90901,-.0359159,1.53837,2.90462,-.0403077,1.53791,2.89953,-.0438701,1.53745,2.8939,-.0464949,1.53698,2.8879,-.0481026,1.53652,2.88172,-.0486437,1.54606,2.87553,-.0481026,1.5456,2.86953,-.0464949,1.54514,2.8639,-.0438701,1.54467,2.85881,-.0403077,1.54421,2.85442,-.0359159,1.54375,2.85086,-.0308284,1.54328,2.84824,-.0251994,1.54282,2.84663,-.0192002,1.54236,2.84609,-.0130129,1.54189,2.84663,-.00682567,1.54143,2.84824,-826297e-9,1.54097,2.85086,.00480249,1.5405,2.85442,.00989032,1.54004,2.85881,.014282,1.53958,2.8639,.0178444,1.53911,2.86953,.0204693,1.53865,2.87553,.0220766,1.53819,2.88172,.022618,1.53773,2.8879,.0220766,1.53726,2.8939,.0204693,1.5368,2.89953,.0178444,1.53634,2.90462,.014282,1.53587,2.90901,.00989032,1.53541,2.91257,.00480249,1.53495,2.9152,-8263e-7,1.53448,2.91681,-.00682567,1.53402,2.91735,-.0130129,1.53356,2.91681,-.0192002,1.53309,2.9152,-.0251994,1.53263,2.91257,-.0308284,1.53217,2.90901,-.0359159,1.5317,2.90462,-.0403077,1.53124,2.89953,-.0438701,1.53078,2.8939,-.0464949,1.5444,2.87553,-.0481026,1.54393,2.86953,-.0464949,1.54347,2.8639,-.0438701,1.54301,2.85881,-.0403077,1.54254,2.85442,-.0359159,1.54208,2.85086,-.0308284,1.54162,2.84824,-.0251994,1.54115,2.84663,-.0192002,1.54069,2.84609,-.0130129,1.54023,2.84663,-.00682567,1.53976,2.84824,-826297e-9,1.5393,2.85086,.00480249,1.53884,2.85442,.00989032,1.53837,2.85881,.014282,1.53791,2.8639,.0178444,1.53745,2.86953,.0204693,1.53698,2.87553,.0220766,1.53652,2.88172,.022618,1.53606,2.8879,.0220766,1.53559,2.8939,.0204693,1.53513,2.89953,.0178444,1.53467,2.90462,.014282,1.5342,2.90901,.00989032,1.53374,2.91257,.00480249,1.53328,2.9152,-8263e-7,1.53282,2.91681,-.00682567,1.53235,2.91735,-.0130129,1.53189,2.91681,-.0192002,1.53143,2.9152,-.0251994,1.53096,2.91257,-.0308284,1.53773,2.87555,-.0479793,1.53726,2.86962,-.0462601,1.5368,2.86409,-.0435453,1.53634,2.85914,-.0399247,1.53587,2.8549,-.0355143,1.53541,2.85151,-.0304533,1.53495,2.84906,-.0249,1.53448,2.84761,-.0190265,1.53402,2.84721,-.0130129,1.53356,2.84786,-.00704271,1.53309,2.84953,-.00129658,1.53263,2.85216,.00405263,1.53217,2.85567,.00884575,1.5317,2.85994,.0129414,1.53124,2.86484,.0162205,1.53078,2.87021,.0185898,1.53606,2.87555,-.0479793,1.53559,2.86962,-.0462601,1.53513,2.86409,-.0435453,1.53467,2.85914,-.0399247,1.5342,2.8549,-.0355143,1.53374,2.85151,-.0304533,1.53328,2.84906,-.0249,1.53282,2.84761,-.0190265,1.53235,2.84721,-.0130129,1.53189,2.84786,-.00704271,1.53143,2.84953,-.00129658,1.53096,2.85216,.00405263,1.59066,1.77196,-1.06291,1.59066,1.97754,-1.02434,1.59066,2.17164,-.946411,1.59066,2.34681,-.832111,1.59066,2.49631,-.685833,1.59066,2.61441,-.513199,1.59066,2.69655,-.320843,1.59066,2.73959,-.116158,1.59066,2.74187,.0929918,1.59066,2.70331,.298568,1.59066,2.62538,.49267,1.59066,2.51108,.667839,1.59066,2.3648,.817344,1.59066,2.19217,.935438,1.59066,1.99981,1.01758,1.59066,1.79513,1.06062,1.59066,1.58598,1.06291,1.59066,1.3804,1.02434,1.59066,1.1863,.946411,1.59066,1.01113,.83211,1.59066,.861624,.685832,1.59066,.743529,.513198,1.59066,.661383,.320842,1.59066,.618343,.116156,1.59066,.616061,-.0929935,1.59066,.654627,-.29857,1.59066,.732557,-.492672,1.59066,.846858,-.667841,1.59066,.993136,-.817345,1.59066,1.16577,-.935439,1.59066,1.35813,-1.01759,1.59066,1.56281,-1.06063,1.05769,1.70706,-.321051,1.05769,1.76915,-.309402,1.05769,1.82778,-.285864,1.05769,1.88069,-.251339,1.05769,1.92585,-.207156,1.05769,1.96152,-.155012,1.05769,1.98633,-.0969111,1.05769,1.99933,-.0350858,1.05769,2.00002,.0280877,1.05769,1.98837,.0901819,1.05769,1.96483,.14881,1.05769,1.93031,.20172,1.05769,1.88612,.246878,1.05769,1.83398,.282548,1.05769,1.77588,.307361,1.05769,1.71405,.320361,1.05769,1.65088,.32105,1.05769,1.58879,.309401,1.05769,1.53016,.285863,1.05769,1.47725,.251338,1.05769,1.43209,.207155,1.05769,1.39642,.155011,1.05769,1.37161,.0969098,1.05769,1.35861,.0350845,1.05769,1.35792,-.0280891,1.05769,1.36957,-.0901833,1.05769,1.39311,-.148812,1.05769,1.42763,-.201722,1.05769,1.47181,-.246879,1.05769,1.52396,-.28255,1.05769,1.58206,-.307362,1.05769,1.64388,-.320362,1.01873,1.70706,-.321051,1.01873,1.76915,-.309402,1.01873,1.82778,-.285864,1.01873,1.88069,-.251339,1.01873,1.92585,-.207156,1.01873,1.96152,-.155012,1.01873,1.98633,-.0969111,1.01873,1.99933,-.0350858,1.07172,2.00002,.0280877,1.01873,1.98837,.0901819,1.01873,1.96483,.14881,1.01873,1.93031,.20172,1.01873,1.88612,.246878,1.01873,1.83398,.282548,1.01873,1.77588,.307361,1.01873,1.71405,.320361,1.01873,1.65088,.32105,1.01873,1.58879,.309401,1.01873,1.53016,.285863,1.01873,1.47725,.251338,1.01873,1.43209,.207155,1.01873,1.39642,.155011,1.01873,1.37161,.0969098,1.01873,1.35861,.0350845,1.01873,1.35792,-.0280891,1.01873,1.36957,-.0901833,1.01873,1.39311,-.148812,1.01873,1.42763,-.201722,1.01873,1.47181,-.246879,1.01873,1.52396,-.28255,1.01873,1.58206,-.307362,1.01873,1.64388,-.320362,1.59066,.783065,.282476,1.59066,.745171,.102266,1.59066,1.76084,-.935806,1.59066,1.94183,-.901852,1.59066,2.41158,.58798,1.59066,2.28279,.719607,1.59066,1.5767,-.933797,1.59066,.959361,.603821,1.59066,.855388,.45183,1.59066,2.58082,.262865,1.59066,2.51221,.433757,1.59066,1.22714,-.823581,1.59066,1.39649,-.895903,1.59066,1.24521,.83324,1.59066,1.09099,.732607,1.59066,2.61276,-.102268,1.59066,2.61477,.0818719,1.59066,.946361,-.587981,1.59066,1.07515,-.719608,1.59066,1.5971,.935805,1.59066,1.4161,.901851,1.59066,2.50255,-.451832,1.59066,2.57487,-.282477,1.59066,.777116,-.262867,1.59066,.845728,-.433759,1.59066,2.26695,-.732608,1.59066,2.39857,-.603822,1.59066,1.96144,.895902,1.59066,1.78124,.933796,1.59066,.743163,-.0818736,1.59066,2.11273,-.833241,1.59066,2.1308,.823579,1.63103,.742504,.295265,1.63103,.701944,.308053,1.63103,1.76455,-.978173,1.63103,1.76825,-1.02054,1.63103,2.44474,.614599,1.63103,2.47791,.641219,1.63103,1.57207,-.976073,1.63103,1.56744,-1.01835,1.63103,.926782,.631158,1.63103,.894203,.658495,1.63103,2.62165,.274766,1.63103,2.66248,.286667,1.63103,1.20668,-.860867,1.63103,1.18623,-.898153,1.63103,1.22557,.870963,1.63103,1.20593,.908687,1.63103,2.65504,-.106898,1.63103,2.69732,-.111528,1.63103,.913193,-.614601,1.63103,.880025,-.641221,1.63103,1.59339,.978172,1.63103,1.58968,1.02054,1.63103,2.53983,-.472287,1.63103,2.57712,-.492743,1.63103,.736287,-.274768,1.63103,.695457,-.286669,1.63103,2.29357,-.765776,1.63103,2.32019,-.798944,1.63103,1.97423,.936463,1.63103,1.98702,.977024,1.63103,.660619,.111526,1.63103,.702895,.106896,1.63103,1.96564,-.983512,1.63103,1.95373,-.942682,1.63103,2.33746,.784765,1.63103,2.31013,.752186,1.63103,.780815,.492742,1.63103,.818102,.472286,1.63103,2.58766,.473032,1.63103,2.54993,.453395,1.63103,1.37091,-.977025,1.63103,1.3837,-.936464,1.63103,1.03775,.798943,1.63103,1.06437,.765775,1.63103,2.69951,.0892852,1.63103,2.65714,.0855786,1.63103,1.02047,-.784766,1.63103,1.04781,-.752187,1.63103,1.3923,.983511,1.63103,1.4042,.942681,1.63103,2.65599,-.308055,1.63103,2.61543,-.295266,1.63103,.770281,-.473034,1.63103,.808004,-.453396,1.63103,2.46373,-.658496,1.63103,2.43115,-.631159,1.63103,1.7905,1.01835,1.63103,1.78587,.976072,1.63103,.658428,-.0892869,1.63103,.700795,-.0855802,1.63103,2.152,-.908688,1.63103,2.13236,-.870964,1.63103,2.17171,.898152,1.63103,2.15126,.860866,1.47665,1.77196,-1.06291,1.47665,1.97754,-1.02434,1.47665,2.17164,-.946411,1.47665,2.34681,-.832111,1.47665,2.49631,-.685833,1.47665,2.61441,-.513199,1.47665,2.69655,-.320843,1.47665,2.73959,-.116158,1.47665,2.74187,.0929918,1.47665,2.70331,.298568,1.47665,2.62538,.49267,1.47665,2.51108,.667839,1.47665,2.3648,.817344,1.47665,2.19217,.935438,1.47665,1.99981,1.01758,1.47665,1.79513,1.06062,1.47665,1.58598,1.06291,1.47665,1.3804,1.02434,1.47665,1.1863,.946411,1.47665,1.01113,.83211,1.47665,.861624,.685832,1.47665,.743529,.513198,1.47665,.661383,.320842,1.47665,.618343,.116156,1.47665,.616061,-.0929935,1.47665,.654627,-.29857,1.47665,.732557,-.492672,1.47665,.846858,-.667841,1.47665,.993136,-.817345,1.47665,1.16577,-.935439,1.47665,1.35813,-1.01759,1.47665,1.56281,-1.06063,1.55934,1.56281,-1.06063,1.55934,1.35813,-1.01759,1.55934,1.16577,-.935439,1.55934,.993136,-.817345,1.55934,.846858,-.667841,1.55934,.732557,-.492672,1.55934,.654627,-.29857,1.55934,.616061,-.0929935,1.55934,.618343,.116156,1.55934,.661383,.320842,1.55934,.743529,.513198,1.55934,.861624,.685832,1.55934,1.01113,.83211,1.55934,1.1863,.946411,1.55934,1.3804,1.02434,1.55934,1.58598,1.06291,1.55934,1.79513,1.06062,1.55934,1.99981,1.01758,1.55934,2.19217,.935438,1.55934,2.3648,.817344,1.55934,2.51108,.667839,1.55934,2.62538,.49267,1.55934,2.70331,.298568,1.55934,2.74187,.0929918,1.55934,2.73959,-.116158,1.55934,2.69655,-.320843,1.55934,2.61441,-.513199,1.55934,2.49631,-.685833,1.55934,2.34681,-.832111,1.55934,2.17164,-.946411,1.55934,1.97754,-1.02434,1.55934,1.77196,-1.06291,1.58449,.793408,.279215,1.58449,1.7599,-.925002,1.58449,2.40312,.581191,1.58449,1.57788,-.923017,1.58449,.967668,.59685,1.58449,2.57041,.259831,1.58449,1.23235,-.814073,1.58449,1.25022,.82362,1.58449,2.60198,-.101087,1.58449,.954819,-.581193,1.58449,1.59804,.925001,1.58449,2.49304,-.446615,1.58449,.787528,-.259832,1.58449,2.26016,-.72415,1.58449,1.95818,.885559,1.58449,.755952,.101086,1.58449,1.9388,-.89144,1.58449,2.27582,.711299,1.58449,.864896,.446614,1.58449,2.50259,.428749,1.58449,1.39975,-.88556,1.58449,1.09778,.724149,1.58449,2.60397,.0809267,1.58449,1.08212,-.7113,1.58449,1.41914,.891439,1.58449,2.56453,-.279216,1.58449,.855348,-.428751,1.58449,2.39027,-.596851,1.58449,1.78005,.923016,1.58449,.753966,-.0809283,1.58449,2.10772,-.823621,1.58449,2.12558,.814071,1.06164,1.35225,.0357805,1.06164,1.77094,-.31554,1.06164,1.89023,.251775,1.06164,1.39081,.158086,1.06164,1.9705,.151762,1.06164,1.58014,-.313459,1.06164,1.47325,.256324,1.06164,2.00639,.0286449,1.06164,1.4677,-.251777,1.06164,1.587,.315539,1.06164,1.99243,-.0988335,1.06164,1.38743,-.151764,1.06164,1.93074,-.211266,1.06164,1.71475,.326716,1.06164,1.35155,-.0286463,1.06164,1.83073,-.291534,1.06164,1.83705,.288153,1.06164,1.36551,.0988322,1.06164,1.70761,-.32742,1.06164,1.93529,.205722,1.06164,1.64319,-.326717,1.06164,1.42719,.211264,1.06164,1.99451,.0919708,1.06164,1.52088,-.288155,1.06164,1.5272,.291533,1.06164,2.00568,-.0357818,1.06164,1.42264,-.205723,1.06164,1.65032,.327419,1.06164,1.96712,-.158087,1.06164,1.36343,-.0919722,1.06164,1.88469,-.256325,1.06164,1.7778,.313458,1.04471,1.35861,.0350845,1.04471,1.35792,-.0280891,1.04471,1.76915,-.309402,1.04471,1.82778,-.285864,1.04471,1.88612,.246878,1.04471,1.83398,.282548,1.04471,1.39642,.155011,1.04471,1.37161,.0969098,1.04471,1.96483,.14881,1.04471,1.93031,.20172,1.04471,1.58206,-.307362,1.04471,1.64388,-.320362,1.04471,1.47725,.251338,1.04471,1.43209,.207155,1.04471,2.00002,.0280877,1.04471,1.98837,.0901819,1.04471,1.47181,-.246879,1.04471,1.52396,-.28255,1.04471,1.58879,.309401,1.04471,1.53016,.285863,1.04471,1.98633,-.0969111,1.04471,1.99933,-.0350858,1.04471,1.39311,-.148812,1.04471,1.42763,-.201722,1.04471,1.92585,-.207156,1.04471,1.96152,-.155012,1.04471,1.71405,.320361,1.04471,1.65088,.32105,1.04471,1.36957,-.0901833,1.04471,1.88069,-.251339,1.04471,1.77588,.307361,1.04471,1.70706,-.321051,1.04694,1.70706,-.321051,1.04694,1.76915,-.309402,1.04694,1.82778,-.285864,1.04694,1.88069,-.251339,1.04694,1.92585,-.207156,1.04694,1.96152,-.155012,1.04694,1.98633,-.0969111,1.04694,1.99933,-.0350858,1.04694,2.00002,.0280877,1.04694,1.98837,.0901819,1.04694,1.96483,.14881,1.04694,1.93031,.20172,1.04694,1.88612,.246878,1.04694,1.83398,.282548,1.04694,1.77588,.307361,1.04694,1.71405,.320361,1.04694,1.65088,.32105,1.04694,1.58879,.309401,1.04694,1.53016,.285863,1.04694,1.47725,.251338,1.04694,1.43209,.207155,1.04694,1.39642,.155011,1.04694,1.37161,.0969098,1.04694,1.35861,.0350845,1.04694,1.35792,-.0280891,1.04694,1.36957,-.0901833,1.04694,1.39311,-.148812,1.04694,1.42763,-.201722,1.04694,1.47181,-.246879,1.04694,1.52396,-.28255,1.04694,1.58206,-.307362,1.04694,1.64388,-.320362,1.07583,1.70706,-.321051,1.07583,1.76915,-.309402,1.07583,1.82778,-.285864,1.07583,1.88069,-.251339,1.07583,1.92585,-.207156,1.07583,1.96152,-.155012,1.07583,1.98633,-.0969111,1.07583,1.99933,-.0350858,1.07583,2.00002,.0280877,1.07583,1.98837,.0901819,1.07583,1.96483,.14881,1.07583,1.93031,.20172,1.07583,1.88612,.246878,1.07583,1.83398,.282548,1.07583,1.77588,.307361,1.07583,1.71405,.320361,1.07583,1.65088,.32105,1.07583,1.58879,.309401,1.07583,1.53016,.285863,1.07583,1.47725,.251338,1.07583,1.43209,.207155,1.07583,1.39642,.155011,1.07583,1.37161,.0969098,1.07583,1.35861,.0350845,1.07583,1.35792,-.0280891,1.07583,1.36957,-.0901833,1.07583,1.39311,-.148812,1.07583,1.42763,-.201722,1.07583,1.47181,-.246879,1.07583,1.52396,-.28255,1.07583,1.58206,-.307362,1.07583,1.64388,-.320362,1.16993,1.69065,-.133541,1.16993,1.71648,-.128696,1.16993,1.74087,-.118905,1.16993,1.76287,-.104545,1.16993,1.78166,-.0861669,1.16993,1.79649,-.0644776,1.16993,1.80681,-.0403105,1.16993,1.81222,-.0145943,1.16993,1.81251,.0116827,1.16993,1.80766,.0375107,1.16993,1.79787,.0618972,1.16993,1.78351,.083905,1.16993,1.76513,.102688,1.16993,1.74345,.117525,1.16993,1.71928,.127846,1.16993,1.69356,.133254,1.16993,1.66728,.13354,1.16993,1.64146,.128695,1.16993,1.61707,.118904,1.16993,1.59506,.104544,1.16993,1.57628,.0861656,1.16993,1.56144,.0644763,1.16993,1.55112,.0403092,1.16993,1.54571,.014593,1.16993,1.54543,-.011684,1.16993,1.55027,-.0375121,1.16993,1.56006,-.0618986,1.16993,1.57442,-.0839063,1.16993,1.5928,-.10269,1.16993,1.61449,-.117527,1.16993,1.63866,-.127847,1.16993,1.66437,-.133255,1.3875,.897268,.246468,1.3875,1.7504,-.816516,1.3875,2.31819,.513028,1.3875,1.58974,-.814763,1.3875,1.05109,.52685,1.3875,2.46586,.229357,1.3875,1.28473,-.718597,1.3875,1.3005,.727024,1.3875,2.49373,-.0892315,1.3875,1.03975,-.51303,1.3875,1.60753,.816515,1.3875,2.39756,-.394235,1.3875,.892078,-.229359,1.3875,2.192,-.639221,1.3875,1.92544,.781699,1.3875,.864205,.08923,1.3875,1.90833,-.786891,1.3875,2.20582,.627876,1.3875,.960372,.394234,1.3875,2.40599,.378465,1.3875,1.4325,-.7817,1.3875,1.16594,.63922,1.3875,2.49548,.0714354,1.3875,1.15212,-.627878,1.3875,1.44961,.786889,1.3875,2.46067,-.246469,1.3875,.951944,-.378466,1.3875,2.30684,-.526851,1.3875,1.7682,.814763,1.3875,.862452,-.071437,1.3875,2.05743,-.727025,1.3875,2.0732,.718595,1.3875,.885373,.0869118,1.3875,1.90237,-.766447,1.3875,2.19213,.611564,1.3875,.979041,.383992,1.3875,2.3871,.368632,1.3875,1.4389,-.761392,1.3875,1.17927,.622613,1.3875,2.47427,.0695795,1.3875,1.16581,-.611565,1.3875,1.45557,.766446,1.3875,2.44036,-.240066,1.3875,.970832,-.368634,1.3875,2.29053,-.513164,1.3875,1.76588,.793595,1.3875,.883666,-.069581,1.3875,2.0476,-.708137,1.3875,2.06296,.699926,1.3875,.917577,.240065,1.3875,1.74855,-.795303,1.3875,2.30158,.499699,1.3875,1.59206,-.793596,1.3875,1.0674,.513162,1.3875,2.44541,.223398,1.3875,1.29498,-.699927,1.3875,1.31034,.708136,1.3875,2.47256,-.0869132,1.3875,1.05636,-.499701,1.3875,1.60939,.795302,1.3875,2.37889,-.383993,1.3875,.912522,-.2234,1.3875,2.17867,-.622614,1.3875,1.91903,.76139,1.34086,.945962,.0802762,1.34086,1.88531,-.70793,1.34086,2.15295,.564872,1.34086,1.03248,.354675,1.34086,2.33304,.340488,1.34086,1.45723,-.703261,1.34086,1.21742,.575077,1.34086,2.41355,.0642672,1.34086,1.20498,-.564873,1.34086,1.47263,.707929,1.34086,2.38223,-.221737,1.34086,1.0249,-.340489,1.34086,2.24384,-.473985,1.34086,1.75925,.733005,1.34086,.944385,-.0642687,1.34086,2.01946,-.654072,1.34086,2.03364,.646488,1.34086,.975708,.221736,1.34086,1.74324,-.734583,1.34086,2.25405,.461548,1.34086,1.59869,-.733006,1.34086,1.1141,.473983,1.34086,2.3869,.206342,1.34086,1.32429,-.646489,1.34086,1.33848,.654071,1.34086,2.41197,-.0802776,1.34086,1.10389,-.46155,1.34086,1.6147,.734582,1.34086,2.32546,-.354676,1.34086,.971038,-.206344,1.34086,2.14052,-.575078,1.34086,1.9007,.70326,1.34086,.966832,.0779906,1.34086,1.87944,-.687774,1.34086,2.13946,.548789,1.34086,1.05089,.344577,1.34086,2.31442,.330793,1.34086,1.46355,-.683238,1.34086,1.23056,.558704,1.34086,2.39264,.0624373,1.34086,1.21848,-.54879,1.34086,1.4785,.687773,1.34086,2.36221,-.215424,1.34086,1.04352,-.330795,1.34086,2.22776,-.46049,1.34086,1.75696,.712135,1.34086,.9653,-.0624389,1.34086,2.00976,-.63545,1.34086,2.02355,.628081,1.34086,.995731,.215423,1.34086,1.74141,-.713668,1.34086,2.23767,.448407,1.34086,1.60098,-.712136,1.34086,1.13018,.460488,1.34086,2.36674,.200467,1.34086,1.33439,-.628083,1.34086,1.34817,.635449,1.34086,2.3911,-.077992,1.34086,1.12026,-.448409,1.34086,1.61653,.713667,1.34086,2.30705,-.344578,1.34086,.991194,-.200469,1.34086,2.12738,-.558705,1.34086,1.89439,.683237,1.29356,1.02958,.0711182,1.29356,1.86177,-.627169,1.29356,2.09888,.500431,1.29356,1.10623,.314213,1.29356,2.25842,.301645,1.29356,1.48253,-.623033,1.29356,1.27007,.509472,1.29356,2.32975,.0569355,1.29356,1.25906,-.500432,1.29356,1.49616,.627168,1.29356,2.302,-.196442,1.29356,1.09951,-.301646,1.29356,2.1794,-.419912,1.29356,1.75009,.649384,1.29356,1.02819,-.056937,1.29356,1.98061,-.579455,1.29356,1.99318,.572736,1.29356,1.05594,.19644,1.29356,1.7359,-.650782,1.29356,2.18844,.408895,1.29356,1.60785,-.649385,1.29356,1.17854,.419911,1.29356,2.30614,.182803,1.29356,1.36475,-.572738,1.29356,1.37732,.579454,1.29356,2.32835,-.0711196,1.29356,1.1695,-.408896,1.29356,1.62203,.650781,1.29356,2.2517,-.314214,1.29356,1.0518,-.182804,1.29356,2.08786,-.509473,1.29356,1.87541,.623032,1.29356,1.04875,.0690188,1.29356,1.85637,-.608656,1.29356,2.08648,.485659,1.29356,1.12314,.304938,1.29356,2.24132,.29274,1.29356,1.48833,-.604641,1.29356,1.28214,.494433,1.29356,2.31054,.0552547,1.29356,1.27145,-.48566,1.29356,1.50156,.608655,1.29356,2.28361,-.190643,1.29356,1.11662,-.292742,1.29356,2.16463,-.407517,1.29356,1.74799,.630214,1.29356,1.0474,-.0552562,1.29356,1.97171,-.56235,1.29356,1.98391,.555829,1.29356,1.07433,.190641,1.29356,1.73422,-.631571,1.29356,2.1734,.396824,1.29356,1.60995,-.630215,1.29356,1.19331,.407516,1.29356,2.28762,.177406,1.29356,1.37403,-.55583,1.29356,1.38623,.562349,1.29356,2.30918,-.0690202,1.29356,1.18454,-.396826,1.29356,1.62371,.63157,1.29356,2.2348,-.304939,1.29356,1.07031,-.177408,1.29356,2.07579,-.494434,1.29356,1.86961,.60464,1.24533,1.11314,.0619676,1.24533,1.83825,-.546474,1.24533,2.04485,.436042,1.24533,1.17992,.273785,1.24533,2.18387,.262833,1.24533,1.5078,-.542869,1.24533,1.32268,.44392,1.24533,2.24602,.0496097,1.24533,1.31309,-.436044,1.24533,1.51969,.546473,1.24533,2.22184,-.171166,1.24533,1.17407,-.262834,1.24533,2.11501,-.365884,1.24533,1.74094,.56583,1.24533,1.11192,-.0496112,1.24533,1.9418,-.504899,1.24533,1.95275,.499044,1.24533,1.1361,.171165,1.24533,1.72858,-.567048,1.24533,2.12289,.356284,1.24533,1.617,-.565831,1.24533,1.24292,.365883,1.24533,2.22544,.159282,1.24533,1.40518,-.499045,1.24533,1.41613,.504898,1.24533,2.2448,-.061969,1.24533,1.23505,-.356285,1.24533,1.62936,.567047,1.24533,2.17801,-.273786,1.24533,1.13249,-.159283,1.24533,2.03525,-.443921,1.24533,1.85013,.542868,1.24533,1.13397,.0596865,1.24533,1.83239,-.526358,1.24533,2.03138,.419991,1.24533,1.19829,.263706,1.24533,2.16528,.253158,1.24533,1.5141,-.522886,1.24533,1.3358,.427579,1.24533,2.22514,.0477835,1.24533,1.32655,-.419993,1.24533,1.52555,.526357,1.24533,2.20185,-.164866,1.24533,1.19266,-.253159,1.24533,2.09896,-.352415,1.24533,1.73866,.545001,1.24533,1.13279,-.047785,1.24533,1.93213,-.486313,1.24533,1.94267,.480674,1.24533,1.15608,.164864,1.24533,1.72675,-.546174,1.24533,2.10655,.343168,1.24533,1.61928,-.545002,1.24533,1.25898,.352414,1.24533,2.20533,.153419,1.24533,1.41526,-.480675,1.24533,1.42581,.486312,1.24533,2.22397,-.0596879,1.24533,1.25139,-.34317,1.24533,1.63118,.546173,1.24533,2.15964,-.263707,1.24533,1.15261,-.15342,1.24533,2.02214,-.42758,1.24533,1.84383,.522885,1.20072,1.19259,.0532665,1.20072,1.81589,-.469742,1.20072,1.99348,.374817,1.20072,1.25,.235342,1.20072,2.11297,.225928,1.20072,1.53184,-.466644,1.20072,1.37271,.381588,1.20072,2.16639,.0426438,1.20072,1.36446,-.374818,1.20072,1.54205,.469741,1.20072,2.14561,-.147133,1.20072,1.24496,-.225929,1.20072,2.05379,-.314509,1.20072,1.73224,.48638,1.20072,1.19154,-.0426452,1.20072,1.9049,-.434005,1.20072,1.91431,.428972,1.20072,1.21232,.147131,1.20072,1.72161,-.487428,1.20072,2.06056,.306257,1.20072,1.6257,-.486381,1.20072,1.30415,.314508,1.20072,2.14871,.136917,1.20072,1.44363,-.428973,1.20072,1.45304,.434004,1.20072,2.16535,-.0532678,1.20072,1.29738,-.306258,1.20072,1.63632,.487426,1.20072,2.10794,-.235343,1.20072,1.20923,-.136918,1.20072,1.98523,-.381589,1.20072,1.8261,.466643,1.20072,1.21064,.0512892,1.20072,1.8108,-.452306,1.20072,1.9818,.360904,1.20072,1.26592,.226606,1.20072,2.09686,.217542,1.20072,1.5373,-.449322,1.20072,1.38408,.367424,1.20072,2.1483,.0410608,1.20072,1.37613,-.360905,1.20072,1.54713,.452305,1.20072,2.12829,-.141671,1.20072,1.26107,-.217543,1.20072,2.03987,-.302835,1.20072,1.73026,.468326,1.20072,1.20963,-.0410623,1.20072,1.89651,-.417895,1.20072,1.90557,.413049,1.20072,1.22965,.14167,1.20072,1.72003,-.469334,1.20072,2.04639,.294889,1.20072,1.62768,-.468327,1.20072,1.31806,.302834,1.20072,2.13127,.131834,1.20072,1.45236,-.41305,1.20072,1.46143,.417894,1.20072,2.14729,-.0512906,1.20072,1.31154,-.29489,1.20072,1.63791,.469333,1.20072,2.09202,-.226607,1.20072,1.22666,-.131836,1.20072,1.97386,-.367425,1.20072,1.82064,.449321,1.3875,.907423,.243266,1.3875,1.74948,-.805909,1.3875,2.30988,.506364,1.3875,1.5909,-.80418,1.3875,1.05925,.520006,1.3875,2.45564,.226378,1.3875,1.28986,-.709262,1.3875,1.30542,.71758,1.3875,2.48315,-.0880724,1.3875,1.04805,-.506365,1.3875,1.60846,.805909,1.3875,2.38823,-.389114,1.3875,.9023,-.226379,1.3875,2.18533,-.630917,1.3875,1.92224,.771545,1.3875,.874789,.0880709,1.3875,1.90535,-.776669,1.3875,2.19898,.61972,1.3875,.969707,.389113,1.3875,2.39655,.373548,1.3875,1.4357,-.771546,1.3875,1.1726,.630916,1.3875,2.48488,.0705074,1.3875,1.15896,-.619721,1.3875,1.45259,.776668,1.3875,2.45051,-.243268,1.3875,.961388,-.37355,1.3875,2.29869,-.520007,1.3875,1.76704,.804179,1.3875,.873059,-.070509,1.3875,2.05252,-.717581,1.3875,2.06808,.709261,1.34086,.985719,.21858,1.34086,1.74232,-.724126,1.34086,2.24586,.454978,1.34086,1.59983,-.722571,1.34086,1.12214,.467236,1.34086,2.37682,.203405,1.34086,1.32934,-.637286,1.34086,1.34333,.64476,1.34086,2.40154,-.0791348,1.34086,1.11208,-.454979,1.34086,1.61562,.724125,1.34086,2.31625,-.349627,1.34086,.981116,-.203406,1.34086,2.13395,-.566892,1.34086,1.89755,.693248,1.34086,.956397,.0791334,1.34086,1.88237,-.697852,1.34086,2.1462,.556831,1.34086,1.04168,.349626,1.34086,2.32373,.33564,1.34086,1.46039,-.693249,1.34086,1.22399,.566891,1.34086,2.40309,.0633522,1.34086,1.21173,-.556832,1.34086,1.47556,.697851,1.34086,2.37222,-.218581,1.34086,1.03421,-.335642,1.34086,2.2358,-.467237,1.34086,1.7581,.72257,1.34086,.954843,-.0633538,1.34086,2.01461,-.644761,1.34086,2.02859,.637285,1.29356,1.06513,.193541,1.29356,1.73506,-.641176,1.29356,2.18092,.402859,1.29356,1.6089,-.6398,1.29356,1.18592,.413713,1.29356,2.29688,.180104,1.29356,1.36939,-.564284,1.29356,1.38177,.570902,1.29356,2.31877,-.0700699,1.29356,1.17702,-.402861,1.29356,1.62287,.641175,1.29356,2.24325,-.309577,1.29356,1.06106,-.180106,1.29356,2.08183,-.501954,1.29356,1.87251,.613836,1.29356,1.03917,.0700685,1.29356,1.85907,-.617912,1.29356,2.09268,.493045,1.29356,1.11468,.309576,1.29356,2.24987,.297192,1.29356,1.48543,-.613837,1.29356,1.27611,.501952,1.29356,2.32014,.0560951,1.29356,1.26525,-.493046,1.29356,1.49886,.617912,1.29356,2.2928,-.193542,1.29356,1.10807,-.297194,1.29356,2.17201,-.413715,1.29356,1.74904,.639799,1.29356,1.03779,-.0560966,1.29356,1.97616,-.570903,1.29356,1.98854,.564283,1.24533,1.14609,.168015,1.24533,1.72767,-.556611,1.24533,2.11472,.349726,1.24533,1.61814,-.555416,1.24533,1.25095,.359148,1.24533,2.21538,.15635,1.24533,1.41022,-.48986,1.24533,1.42097,.495605,1.24533,2.23438,-.0608284,1.24533,1.24322,-.349727,1.24533,1.63027,.55661,1.24533,2.16883,-.268747,1.24533,1.14255,-.156352,1.24533,2.02869,-.435751,1.24533,1.84698,.532876,1.24533,1.12355,.060827,1.24533,1.83532,-.536416,1.24533,2.03812,.428017,1.24533,1.18911,.268745,1.24533,2.17457,.257995,1.24533,1.51095,-.532878,1.24533,1.32924,.43575,1.24533,2.23558,.0486966,1.24533,1.31982,-.428018,1.24533,1.52262,.536415,1.24533,2.21184,-.168016,1.24533,1.18336,-.257997,1.24533,2.10699,-.35915,1.24533,1.7398,.555415,1.24533,1.12236,-.0486981,1.24533,1.93696,-.495606,1.24533,1.94771,.489859,1.20072,1.22099,.1444,1.20072,1.72082,-.478381,1.20072,2.05347,.300573,1.20072,1.62669,-.477354,1.20072,1.31111,.308671,1.20072,2.13999,.134376,1.20072,1.44799,-.421012,1.20072,1.45723,.425949,1.20072,2.15632,-.0522792,1.20072,1.30446,-.300574,1.20072,1.63712,.47838,1.20072,2.09998,-.230975,1.20072,1.21794,-.134377,1.20072,1.97954,-.374507,1.20072,1.82337,.457982,1.20072,1.20161,.0522779,1.20072,1.81334,-.461024,1.20072,1.98764,.36786,1.20072,1.25796,.230974,1.20072,2.10492,.221735,1.20072,1.53457,-.457983,1.20072,1.37839,.374506,1.20072,2.15735,.0418523,1.20072,1.3703,-.367861,1.20072,1.54459,.461023,1.20072,2.13695,-.144402,1.20072,1.25302,-.221736,1.20072,2.04683,-.308672,1.20072,1.73125,.477353,1.20072,1.20059,-.0418538,1.20072,1.9007,-.42595,1.20072,1.90994,.421011,1.59066,1.77221,-1.06576,1.59066,1.97834,-1.02709,1.59066,2.17296,-.948948,1.59066,2.3486,-.834342,1.59066,2.4985,-.687672,1.59066,2.61691,-.514575,1.59066,2.69928,-.321704,1.59066,2.74244,-.116469,1.59066,2.74472,.0932411,1.59066,2.70606,.299368,1.59066,2.62792,.493991,1.59066,2.51331,.66963,1.59066,2.36664,.819535,1.59066,2.19354,.937946,1.59066,2.00067,1.02031,1.59066,1.79544,1.06347,1.59066,1.58573,1.06576,1.59066,1.3796,1.02709,1.59066,1.18498,.948948,1.59066,1.00934,.834341,1.59066,.859433,.687671,1.59066,.741021,.514574,1.59066,.658656,.321702,1.59066,.615499,.116468,1.59066,.613212,-.0932428,1.59066,.651881,-.29937,1.59066,.73002,-.493992,1.59066,.844627,-.669631,1.59066,.991297,-.819536,1.59066,1.16439,-.937947,1.59066,1.35727,-1.02031,1.59066,1.5625,-1.06347,1.59066,1.78811,-1.19655,1.59066,2.01531,-1.15393,1.59066,2.23396,-1.06614,1.59066,2.42755,-.93982,1.59066,2.60223,-.768911,1.59066,2.73275,-.578123,1.59066,2.82528,-.361433,1.59066,2.87285,-.135223,1.59066,2.87552,.109145,1.59066,2.8329,.336339,1.59066,2.74511,.554997,1.59066,2.61879,.748586,1.59066,2.44788,.923265,1.59066,2.25709,1.05378,1.59066,2.0404,1.14632,1.59066,1.81419,1.19388,1.59066,1.56982,1.19655,1.59066,1.34263,1.15393,1.59066,1.12397,1.06614,1.59066,.930381,.939819,1.59066,.755702,.76891,1.59066,.625189,.578122,1.59066,.532651,.361431,1.59066,.485085,.135221,1.59066,.482419,-.109147,1.59066,.52504,-.336341,1.59066,.612829,-.554998,1.59066,.739149,-.748588,1.59066,.910058,-.923267,1.59066,1.10085,-1.05378,1.59066,1.31754,-1.14632,1.59066,1.54375,-1.19388,1.58258,1.77221,-1.06576,1.58258,1.97834,-1.02709,1.58258,2.17296,-.948948,1.58258,2.3486,-.834342,1.58258,2.4985,-.687672,1.58258,2.61691,-.514575,1.58258,2.69928,-.321704,1.58258,2.74244,-.116469,1.58258,2.74472,.0932411,1.58258,2.70606,.299368,1.58258,2.62792,.493991,1.58258,2.51331,.66963,1.58258,2.36664,.819535,1.58258,2.19354,.937946,1.58258,2.00067,1.02031,1.58258,1.79544,1.06347,1.58258,1.58573,1.06576,1.58258,1.3796,1.02709,1.58258,1.18498,.948948,1.58258,1.00934,.834341,1.58258,.859433,.687671,1.58258,.741021,.514574,1.58258,.658656,.321702,1.58258,.615499,.116468,1.58258,.613212,-.0932428,1.58258,.651881,-.29937,1.58258,.73002,-.493992,1.58258,.844627,-.669631,1.58258,.991297,-.819536,1.58258,1.16439,-.937947,1.58258,1.35727,-1.02031,1.58258,1.5625,-1.06347,1.50385,1.77221,-1.06576,1.50385,1.97834,-1.02709,1.50385,2.17296,-.948948,1.50385,2.3486,-.834342,1.50385,2.4985,-.687672,1.50385,2.61691,-.514575,1.50385,2.69928,-.321704,1.50385,2.74244,-.116469,1.50385,2.74472,.0932411,1.50385,2.70606,.299368,1.50385,2.62792,.493991,1.50385,2.51331,.66963,1.50385,2.36664,.819535,1.50385,2.19354,.937946,1.50385,2.00067,1.02031,1.50385,1.79544,1.06347,1.50385,1.58573,1.06576,1.50385,1.3796,1.02709,1.50385,1.18498,.948948,1.50385,1.00934,.834341,1.50385,.859433,.687671,1.50385,.741022,.514574,1.50385,.658656,.321702,1.50385,.615499,.116468,1.50385,.613212,-.0932428,1.50385,.651881,-.29937,1.50385,.73002,-.493992,1.50385,.844627,-.669631,1.50385,.991297,-.819536,1.50385,1.16439,-.937947,1.50385,1.35727,-1.02031,1.50385,1.5625,-1.06347,1.55903,.446935,.388457,1.55903,1.79156,-1.28691,1.55903,2.68644,.808581,1.55903,1.53833,-1.28414,1.55903,.689374,.830367,1.55903,2.91918,.361489,1.55903,1.05762,-1.13258,1.55903,1.08247,1.14586,1.55903,2.96311,-.140637,1.55903,.671497,-.808583,1.55903,1.56638,1.28691,1.55903,2.81154,-.621352,1.55903,.438754,-.361491,1.55903,2.48755,-1.00747,1.55903,2.06743,1.23203,1.55903,.394824,.140635,1.55903,2.04046,-1.24021,1.55903,2.50934,.989593,1.55903,.546392,.621351,1.55903,2.82483,.596497,1.55903,1.29051,-1.23203,1.55903,.870386,1.00747,1.55903,2.96587,.112589,1.55903,.848602,-.989594,1.55903,1.31748,1.24021,1.55903,2.911,-.388459,1.55903,.533108,-.596498,1.55903,2.66856,-.830368,1.55903,1.8196,1.28414,1.55903,.392062,-.112591,1.55903,2.27547,-1.14586,1.55903,2.30032,1.13257,1.59066,2.74396,.0233377,1.59066,2.7432,-.0465657,1.59066,2.76431,.0282399,1.59066,2.76344,-.0519107,1.58258,2.74396,.0233377,1.58258,2.7432,-.0465657,1.50385,2.74396,.0233377,1.50385,2.7432,-.0465657,1.47878,2.30032,1.13257,1.47878,2.27547,-1.14586,1.59066,2.44853,-.736562,1.59066,2.39857,-.785452,1.59066,2.46639,-.747486,1.59066,2.4091,-.803543,1.58258,2.44853,-.736562,1.58258,2.39857,-.785452,1.50385,2.44853,-.736562,1.50385,2.39857,-.785452,1.47878,.392062,-.112591,1.47878,1.8196,1.28414,1.59066,1.70231,-1.06499,1.59066,1.6324,-1.06423,1.59066,1.70721,-1.08535,1.59066,1.62706,-1.08447,1.58258,1.70231,-1.06499,1.58258,1.6324,-1.06423,1.50385,1.70231,-1.06499,1.50385,1.6324,-1.06423,1.47878,2.66856,-.830368,1.47878,.533108,-.596498,1.59066,.942407,-.769568,1.59066,.893517,-.719599,1.59066,.931483,-.787425,1.59066,.875426,-.730131,1.58258,.942407,-.769568,1.58258,.893517,-.719599,1.50385,.942407,-.769568,1.50385,.893517,-.719599,1.47878,2.911,-.388459,1.47878,1.31748,1.24021,1.59066,.613974,-.0233394,1.59066,.614737,.0465641,1.59066,.593623,-.0282415,1.59066,.594498,.051909,1.58258,.613974,-.0233394,1.58258,.614737,.0465641,1.50385,.613974,-.0233394,1.50385,.614737,.0465641,1.47878,.848602,-.989594,1.47878,2.96587,.112589,1.59066,.909401,.736561,1.59066,.959369,.785451,1.59066,.891544,.747485,1.59066,.948837,.803542,1.58258,.909401,.736561,1.58258,.959369,.785451,1.50385,.909401,.736561,1.50385,.959369,.785451,1.47878,.870386,1.00747,1.47878,1.29051,-1.23203,1.59066,1.65563,1.06499,1.59066,1.72553,1.06423,1.59066,1.65073,1.08534,1.59066,1.73088,1.08447,1.58258,1.65563,1.06499,1.58258,1.72553,1.06423,1.50385,1.65563,1.06499,1.50385,1.72553,1.06423,1.47878,2.82483,.596497,1.47878,.546392,.621351,1.59066,2.41553,.769566,1.59066,2.46442,.719598,1.59066,2.42645,.787423,1.59066,2.48251,.73013,1.58258,2.41553,.769566,1.58258,2.46442,.719598,1.50385,2.41553,.769566,1.50385,2.46442,.719598,1.47878,2.50934,.989593,1.47878,2.04046,-1.24021,1.59066,2.74282,-.0815174,1.59066,2.83419,-.0975454,1.58258,2.74282,-.0815174,1.50385,2.74282,-.0815174,1.47878,.394824,.140635,1.59066,2.74434,.0582894,1.59066,2.83604,.0723203,1.58258,2.74434,.0582894,1.50385,2.74434,.0582894,1.47878,2.06743,1.23203,1.59066,2.47352,-.712117,1.59066,2.54828,-.767038,1.58258,2.47352,-.712117,1.50385,2.47352,-.712117,1.47878,2.48755,-1.00747,1.59066,2.37358,-.809897,1.59066,2.42686,-.885841,1.58258,2.37358,-.809897,1.50385,2.37358,-.809897,1.47878,.438754,-.361491,1.59066,1.73726,-1.06538,1.59066,1.75129,-1.15708,1.58258,1.73726,-1.06538,1.50385,1.73726,-1.06538,1.47878,2.81154,-.621352,1.59066,1.59745,-1.06385,1.59066,1.58142,-1.15522,1.58258,1.59745,-1.06385,1.50385,1.59745,-1.06385,1.47878,1.56638,1.28691,1.59066,.966852,-.794552,1.59066,.911932,-.869315,1.58258,.966852,-.794552,1.50385,.966852,-.794552,1.47878,.671497,-.808583,1.59066,.869072,-.694615,1.59066,.793129,-.747892,1.58258,.869072,-.694615,1.50385,.869072,-.694615,1.47878,2.96311,-.140637,1.59066,.613593,-.0582911,1.59066,.521893,-.0723221,1.58258,.613593,-.0582911,1.50385,.613593,-.0582911,1.47878,1.08247,1.14586,1.59066,.615118,.0815158,1.59066,.523746,.0975438,1.58258,.615118,.0815158,1.50385,.615118,.0815158,1.47878,1.05762,-1.13258,1.59066,.884417,.712116,1.59066,.809653,.767037,1.58258,.884417,.712116,1.50385,.884417,.712116,1.47878,2.91918,.361489,1.59066,.984353,.809896,1.59066,.931077,.88584,1.58258,.984353,.809896,1.50385,.984353,.809896,1.47878,.689374,.830367,1.59066,1.62068,1.06537,1.59066,1.60665,1.15707,1.58258,1.62068,1.06537,1.50385,1.62068,1.06537,1.47878,1.53833,-1.28414,1.59066,1.76048,1.06385,1.59066,1.77651,1.15522,1.58258,1.76048,1.06385,1.50385,1.76048,1.06385,1.47878,2.68644,.808581,1.59066,2.39108,.794551,1.59066,2.44601,.869314,1.58258,2.39108,.794551,1.50385,2.39108,.794551,1.47878,1.79156,-1.28691,1.59066,2.48886,.694614,1.59066,2.56481,.74789,1.58258,2.48886,.694614,1.50385,2.48886,.694614,1.47878,.446935,.388457,1.59066,1.98112,-1.03663,1.59066,1.77308,-1.07566,1.59066,2.17755,-.957766,1.59066,2.35482,-.842094,1.59066,2.3805,-.816968,1.59066,2.62563,-.519356,1.59066,2.50612,-.694061,1.59066,2.70876,-.324693,1.59066,2.75232,-.117551,1.59066,2.75271,-.0816253,1.59066,2.7156,.30215,1.59066,2.75463,.0941075,1.59066,2.63673,.498581,1.59066,2.52106,.675851,1.59066,2.49594,.701532,1.59066,2.19832,.946661,1.59066,2.37303,.827149,1.59066,2.00366,1.02979,1.59066,1.79652,1.07335,1.59066,1.76059,1.07374,1.59066,1.37682,1.03663,1.59066,1.58486,1.07566,1.59066,1.18039,.957765,1.59066,1.00312,.842093,1.59066,.977435,.816967,1.59066,.732307,.519355,1.59066,.851818,.69406,1.59066,.649175,.324691,1.59066,.605618,.11755,1.59066,.605226,.0816237,1.59066,.642338,-.302152,1.59066,.60331,-.0941092,1.59066,.721203,-.498582,1.59066,.836875,-.675853,1.59066,.862001,-.701533,1.59066,1.15961,-.946662,1.59066,.984908,-.827151,1.59066,1.35428,-1.02979,1.59066,1.56142,-1.07335,1.59066,1.59734,-1.07374,1.59066,2.01809,-1.16347,1.59066,1.78459,-1.20728,1.59066,2.23855,-1.07496,1.59066,2.43752,-.945132,1.59066,2.43675,-.885713,1.59066,2.74146,-.582904,1.59066,2.60733,-.778986,1.59066,2.83476,-.364422,1.59066,2.88365,-.131935,1.59066,2.84109,-.0904608,1.59066,2.84244,.339121,1.59066,2.88624,.105622,1.59066,2.75392,.559586,1.59066,2.6241,.758548,1.59066,2.56468,.757782,1.59066,2.26187,1.06249,1.59066,2.45795,.928359,1.59066,2.04339,1.1558,1.59066,1.8109,1.20468,1.59066,1.76943,1.16213,1.59066,1.33985,1.16347,1.59066,1.57334,1.20727,1.59066,1.11938,1.07496,1.59066,.920419,.945131,1.59066,.921185,.885712,1.59066,.616474,.582903,1.59066,.750609,.778985,1.59066,.523171,.36442,1.59066,.474284,.131933,1.59066,.516842,.0904592,1.59066,.515497,-.339122,1.59066,.471693,-.105624,1.59066,.604012,-.559588,1.59066,.733837,-.758549,1.59066,.793256,-.757783,1.59066,1.09607,-1.06249,1.59066,.899983,-.92836,1.59066,1.31455,-1.1558,1.59066,1.54704,-1.20468,1.59066,1.58851,-1.16213,1.59066,2.75423,.0581815,1.59066,2.75385,.0232298,1.59066,2.75309,-.0466736,1.59066,2.84279,.0650868,1.59066,2.77393,.0239945,1.59066,2.77315,-.0478762,1.59066,2.48044,-.719188,1.59066,2.45545,-.743633,1.59066,2.40548,-.792523,1.59066,2.54794,-.776924,1.59066,2.47019,-.757292,1.59066,2.41882,-.807558,1.59066,1.73715,-1.07527,1.59066,1.7022,-1.07489,1.59066,1.6323,-1.07412,1.59066,1.74406,-1.16382,1.59066,1.70296,-1.09497,1.59066,1.63109,-1.09418,1.59066,.959781,-.80147,1.59066,.935336,-.776486,1.59066,.886446,-.726518,1.59066,.902045,-.868972,1.59066,.921677,-.791227,1.59066,.871411,-.739852,1.59066,.603701,-.0581832,1.59066,.604083,-.0232315,1.59066,.604845,.046672,1.59066,.515145,-.0650886,1.59066,.584001,-.0239962,1.59066,.584785,.0478746,1.59066,.877498,.719187,1.59066,.902483,.743632,1.59066,.952451,.792522,1.59066,.809997,.776923,1.59066,.887742,.757291,1.59066,.939117,.807557,1.59066,1.62079,1.07527,1.59066,1.65574,1.07488,1.59066,1.72564,1.07412,1.59066,1.61388,1.16382,1.59066,1.65497,1.09497,1.59066,1.72684,1.09418,1.59066,2.39816,.801469,1.59066,2.4226,.776485,1.59066,2.47149,.726516,1.59066,2.45589,.868971,1.59066,2.43626,.791225,1.59066,2.48653,.73985,1.57653,2.01809,-1.16347,1.57653,1.78459,-1.20728,1.57653,2.23855,-1.07496,1.57653,2.43752,-.945132,1.57653,2.43675,-.885713,1.57653,2.74146,-.582904,1.57653,2.60733,-.778986,1.57653,2.83476,-.364422,1.57653,2.88365,-.131935,1.57653,2.84109,-.0904608,1.57653,2.84244,.339121,1.57653,2.88624,.105622,1.57653,2.75392,.559586,1.57653,2.6241,.758548,1.57653,2.56468,.757782,1.57653,2.26187,1.06249,1.57653,2.45795,.928359,1.57653,2.04339,1.1558,1.57653,1.8109,1.20468,1.57653,1.76943,1.16213,1.57653,1.33985,1.16347,1.57653,1.57334,1.20727,1.57653,1.11938,1.07496,1.57653,.920419,.945131,1.57653,.921185,.885712,1.57653,.616474,.582903,1.57653,.750609,.778985,1.57653,.523171,.36442,1.57653,.474284,.131933,1.57653,.516842,.0904592,1.57653,.515497,-.339122,1.57653,.471693,-.105624,1.57653,.604012,-.559588,1.57653,.733837,-.758549,1.57653,.793256,-.757783,1.57653,1.09607,-1.06249,1.57653,.899983,-.92836,1.57653,1.31455,-1.1558,1.57653,1.54704,-1.20468,1.57653,1.58851,-1.16213,1.57653,2.84279,.0650868,1.57653,2.77393,.0239945,1.57653,2.77315,-.0478762,1.57653,2.54794,-.776924,1.57653,2.47019,-.757292,1.57653,2.41882,-.807558,1.57653,1.74406,-1.16382,1.57653,1.70296,-1.09497,1.57653,1.63109,-1.09418,1.57653,.902045,-.868972,1.57653,.921677,-.791227,1.57653,.871411,-.739852,1.57653,.515145,-.0650886,1.57653,.584001,-.0239962,1.57653,.584785,.0478746,1.57653,.809997,.776923,1.57653,.887742,.757291,1.57653,.939117,.807557,1.57653,1.61388,1.16382,1.57653,1.65497,1.09497,1.57653,1.72684,1.09418,1.57653,2.45589,.868971,1.57653,2.43626,.791225,1.57653,2.48653,.73985,1.56075,2.01809,-1.16347,1.56075,1.78459,-1.20728,1.56075,2.23855,-1.07496,1.56075,2.43752,-.945132,1.56075,2.43675,-.885713,1.56075,2.74146,-.582904,1.56075,2.60733,-.778986,1.56075,2.83476,-.364422,1.56075,2.88365,-.131935,1.56075,2.84109,-.0904608,1.56075,2.84244,.339121,1.56075,2.88624,.105622,1.56075,2.75392,.559586,1.56075,2.6241,.758548,1.56075,2.56468,.757782,1.56075,2.26187,1.06249,1.56075,2.45795,.928359,1.56075,2.04339,1.1558,1.56075,1.8109,1.20468,1.56075,1.76943,1.16213,1.56075,1.33985,1.16347,1.56075,1.57334,1.20727,1.56075,1.11938,1.07496,1.56075,.920419,.945131,1.56075,.921185,.885712,1.56075,.616474,.582903,1.56075,.750608,.778985,1.56075,.523171,.36442,1.56075,.474284,.131933,1.56075,.516842,.0904592,1.56075,.515497,-.339122,1.56075,.471693,-.105624,1.56075,.604012,-.559588,1.56075,.733837,-.758549,1.56075,.793256,-.757783,1.56075,1.09607,-1.06249,1.56075,.899983,-.92836,1.56075,1.31455,-1.1558,1.56075,1.54704,-1.20468,1.56075,1.58851,-1.16213,1.56075,2.84279,.0650868,1.56075,2.77393,.0239945,1.56075,2.77315,-.0478762,1.56075,2.54794,-.776924,1.56075,2.47019,-.757292,1.56075,2.41882,-.807558,1.56075,1.74406,-1.16382,1.56075,1.70296,-1.09497,1.56075,1.63109,-1.09418,1.56075,.902045,-.868972,1.56075,.921677,-.791227,1.56075,.871411,-.739852,1.56075,.515145,-.0650886,1.56075,.584001,-.0239962,1.56075,.584785,.0478746,1.56075,.809997,.776923,1.56075,.887742,.757291,1.56075,.939117,.807557,1.56075,1.61388,1.16382,1.56075,1.65497,1.09497,1.56075,1.72684,1.09418,1.56075,2.45589,.868971,1.56075,2.43626,.791225,1.56075,2.48653,.73985,1.47878,.639415,.327769,1.47878,1.77397,-1.08585,1.47878,2.52904,.682257,1.47878,1.5603,-1.08352,1.47878,.843978,.700639,1.47878,2.72542,.305014,1.47878,1.15469,-.955635,1.47878,1.17566,.966843,1.47878,2.76249,-.118665,1.47878,.828893,-.682259,1.47878,1.58397,1.08585,1.47878,2.6346,-.524279,1.47878,.632512,-.305015,1.47878,2.36123,-.850076,1.47878,2.00674,1.03955,1.47878,.595445,.118664,1.47878,1.98398,-1.04646,1.47878,2.37961,.834989,1.47878,.723334,.524278,1.47878,2.64581,.503306,1.47878,1.3512,-1.03955,1.47878,.99671,.850075,1.47878,2.76482,.0949995,1.47878,.97833,-.834991,1.47878,1.37395,1.04646,1.47878,2.71852,-.32777,1.47878,.712125,-.503308,1.47878,2.51396,-.70064,1.47878,1.79763,1.08352,1.47878,.593114,-.0950012,1.47878,2.18227,-.966843,1.47878,2.20325,.955633,1.55903,2.20325,.955633,1.55903,2.18227,-.966843,1.55903,.593114,-.0950012,1.55903,1.79763,1.08352,1.55903,2.51396,-.70064,1.55903,.712125,-.503308,1.55903,2.71852,-.32777,1.55903,1.37395,1.04646,1.55903,.97833,-.834991,1.55903,2.76482,.0949995,1.55903,.99671,.850075,1.55903,1.3512,-1.03955,1.55903,2.64581,.503306,1.55903,.723334,.524278,1.55903,2.37961,.834989,1.55903,1.98398,-1.04646,1.55903,.595445,.118664,1.55903,2.00674,1.03955,1.55903,2.36123,-.850076,1.55903,.632512,-.305015,1.55903,2.6346,-.524279,1.55903,1.58397,1.08585,1.55903,.828893,-.682259,1.55903,2.76249,-.118665,1.55903,1.17566,.966843,1.55903,1.15469,-.955635,1.55903,2.72542,.305014,1.55903,.843978,.700639,1.55903,1.5603,-1.08352,1.55903,2.52904,.682257,1.55903,1.77397,-1.08585,1.55903,.639415,.327769,1.64048,2.52328,-.904584,1.64219,2.51428,-.906265,1.64219,2.52328,-.907052,1.64219,2.50555,-.903926,1.64219,2.49736,-.900107,1.64048,2.48053,-.879898,1.64219,2.48996,-.894924,1.64219,2.48357,-.888535,1.64219,2.47839,-.881132,1.64219,2.47457,-.872943,1.64219,2.47223,-.864214,1.64219,2.47144,-.855212,1.64048,2.48053,-.830527,1.64219,2.47223,-.84621,1.64219,2.47457,-.837482,1.64219,2.47839,-.829292,1.64219,2.48357,-.82189,1.64219,2.48996,-.8155,1.64219,2.49736,-.810317,1.64048,2.52328,-.805841,1.64219,2.50555,-.806499,1.64219,2.51428,-.80416,1.64219,2.52328,-.803372,1.57073,2.52328,-.904584,1.57073,2.48053,-.879898,1.57073,2.48053,-.830527,1.57073,2.52328,-.805841,1.64219,2.53228,-.906265,1.64219,2.54101,-.903926,1.64219,2.5492,-.900107,1.64048,2.56604,-.879898,1.64219,2.55661,-.894924,1.64219,2.56299,-.888535,1.64219,2.56818,-.881132,1.64219,2.572,-.872943,1.64219,2.57434,-.864214,1.64219,2.57512,-.855212,1.64048,2.56604,-.830527,1.64219,2.57434,-.84621,1.64219,2.572,-.837482,1.64219,2.56818,-.829292,1.64219,2.56299,-.82189,1.64219,2.55661,-.8155,1.64219,2.5492,-.810317,1.64219,2.54101,-.806499,1.64219,2.53228,-.80416,1.57073,2.56604,-.879898,1.57073,2.56604,-.830527,1.64219,2.51201,-.919141,1.64219,2.52328,-.920127,1.64219,2.50108,-.916213,1.64219,2.49082,-.91143,1.63935,2.51176,-.920536,1.64137,2.52328,-.920536,1.63297,2.49951,-.920536,1.62111,2.48557,-.920536,1.62111,2.51176,-.920536,1.62111,2.52328,-.920536,1.62111,2.49951,-.920536,1.54854,2.51176,-.920536,1.54854,2.52328,-.920536,1.54854,2.49951,-.920536,1.54854,2.48557,-.920536,1.54854,2.51194,-.919543,1.54854,2.50094,-.916596,1.54854,2.49062,-.911784,1.54772,2.51194,-.919543,1.54772,2.52328,-.920536,1.54772,2.50094,-.916596,1.54772,2.49062,-.911784,1.54772,2.51702,-.890704,1.54772,2.52328,-.891252,1.54772,2.51096,-.889078,1.54772,2.50526,-.886423,1.54691,2.5171,-.890302,1.54691,2.52328,-.890843,1.54691,2.5111,-.888694,1.54691,2.50547,-.88607,1.64219,2.53455,-.919141,1.64219,2.54549,-.916213,1.64219,2.55574,-.91143,1.63935,2.5348,-.920536,1.63297,2.54706,-.920536,1.62111,2.561,-.920536,1.62111,2.5348,-.920536,1.62111,2.54706,-.920536,1.54854,2.5348,-.920536,1.54854,2.54706,-.920536,1.54854,2.561,-.920536,1.54854,2.53463,-.919543,1.54854,2.54562,-.916596,1.54854,2.55594,-.911784,1.54772,2.53463,-.919543,1.54772,2.54562,-.916596,1.54772,2.55594,-.911784,1.54772,2.52954,-.890704,1.54772,2.53561,-.889078,1.54772,2.5413,-.886423,1.54691,2.52947,-.890302,1.54691,2.53547,-.888694,1.54691,2.5411,-.88607,1.64219,2.57301,-.896939,1.64219,2.5795,-.88767,1.64219,2.56501,-.90494,1.63935,2.5741,-.897849,1.64137,2.57985,-.887874,1.63297,2.56797,-.908464,1.62111,2.5741,-.897849,1.62111,2.57985,-.887874,1.62111,2.56797,-.908464,1.54854,2.5741,-.897849,1.54854,2.57985,-.887874,1.54854,2.56797,-.908464,1.54854,2.57332,-.897201,1.54854,2.56527,-.905253,1.54772,2.57332,-.897201,1.54772,2.57985,-.887874,1.54772,2.56527,-.905253,1.54772,2.55089,-.878378,1.54772,2.55449,-.873232,1.54772,2.54645,-.88282,1.54691,2.55058,-.878115,1.54691,2.55414,-.873028,1.54691,2.54619,-.882507,1.64219,2.58428,-.877415,1.64219,2.58721,-.866485,1.64219,2.5882,-.855212,1.63935,2.58561,-.877899,1.63297,2.59174,-.867284,1.62111,2.59871,-.855212,1.62111,2.58561,-.877899,1.62111,2.59174,-.867284,1.54854,2.58561,-.877899,1.54854,2.59174,-.867284,1.54854,2.59871,-.855212,1.54854,2.58467,-.877554,1.54854,2.58761,-.866556,1.54854,2.58861,-.855212,1.54772,2.58467,-.877554,1.54772,2.58761,-.866556,1.54772,2.58861,-.855212,1.54772,2.55715,-.867538,1.54772,2.55877,-.861471,1.54772,2.55932,-.855212,1.54691,2.55676,-.867399,1.54691,2.55837,-.8614,1.54691,2.55891,-.855212,1.64219,2.58428,-.83301,1.64219,2.5795,-.822755,1.64219,2.58721,-.84394,1.63935,2.58561,-.832526,1.64137,2.57985,-.822551,1.63297,2.59174,-.843141,1.62111,2.58561,-.832526,1.62111,2.57985,-.822551,1.62111,2.59174,-.843141,1.54854,2.58561,-.832526,1.54854,2.57985,-.822551,1.54854,2.59174,-.843141,1.54854,2.58467,-.832871,1.54854,2.58761,-.843869,1.54772,2.58467,-.832871,1.54772,2.57985,-.822551,1.54772,2.58761,-.843869,1.54772,2.55715,-.842886,1.54772,2.55449,-.837193,1.54772,2.55877,-.848954,1.54691,2.55676,-.843026,1.54691,2.55414,-.837397,1.54691,2.55837,-.849025,1.64219,2.57301,-.813486,1.64219,2.56501,-.805485,1.64219,2.55574,-.798994,1.63935,2.5741,-.812576,1.63297,2.56797,-.80196,1.62111,2.561,-.789889,1.62111,2.5741,-.812576,1.62111,2.56797,-.80196,1.54854,2.5741,-.812576,1.54854,2.56797,-.80196,1.54854,2.561,-.789889,1.54854,2.57332,-.813223,1.54854,2.56527,-.805172,1.54854,2.55594,-.798641,1.54772,2.57332,-.813223,1.54772,2.56527,-.805172,1.54772,2.55594,-.798641,1.54772,2.55089,-.832047,1.54772,2.54645,-.827605,1.54772,2.5413,-.824002,1.54691,2.55058,-.832309,1.54691,2.54619,-.827918,1.54691,2.5411,-.824355,1.64219,2.53455,-.791283,1.64219,2.52328,-.790297,1.64219,2.54549,-.794212,1.63935,2.5348,-.789889,1.64137,2.52328,-.789889,1.63297,2.54706,-.789889,1.62111,2.5348,-.789889,1.62111,2.52328,-.789889,1.62111,2.54706,-.789889,1.54854,2.5348,-.789889,1.54854,2.52328,-.789889,1.54854,2.54706,-.789889,1.54854,2.53463,-.790881,1.54854,2.54562,-.793829,1.54772,2.53463,-.790881,1.54772,2.52328,-.789889,1.54772,2.54562,-.793829,1.54772,2.52954,-.819721,1.54772,2.52328,-.819173,1.54772,2.53561,-.821347,1.54691,2.52947,-.820123,1.54691,2.52328,-.819582,1.54691,2.53547,-.82173,1.64219,2.51201,-.791283,1.64219,2.50108,-.794212,1.64219,2.49082,-.798994,1.63935,2.51176,-.789889,1.63297,2.49951,-.789889,1.62111,2.48557,-.789889,1.62111,2.51176,-.789889,1.62111,2.49951,-.789889,1.54854,2.51176,-.789889,1.54854,2.49951,-.789889,1.54854,2.48557,-.789889,1.54854,2.51194,-.790881,1.54854,2.50094,-.793829,1.54854,2.49062,-.798641,1.54772,2.51194,-.790881,1.54772,2.50094,-.793829,1.54772,2.49062,-.798641,1.54772,2.51702,-.819721,1.54772,2.51096,-.821347,1.54772,2.50526,-.824002,1.54691,2.5171,-.820123,1.54691,2.5111,-.82173,1.54691,2.50547,-.824355,1.64219,2.47355,-.813486,1.64219,2.46706,-.822755,1.64219,2.48156,-.805485,1.63935,2.47247,-.812576,1.64137,2.46671,-.822551,1.63297,2.4786,-.80196,1.62111,2.47247,-.812576,1.62111,2.46671,-.822551,1.62111,2.4786,-.80196,1.54854,2.47247,-.812576,1.54854,2.46671,-.822551,1.54854,2.4786,-.80196,1.54854,2.47324,-.813223,1.54854,2.48129,-.805172,1.54772,2.47324,-.813223,1.54772,2.46671,-.822551,1.54772,2.48129,-.805172,1.54772,2.49568,-.832047,1.54772,2.49207,-.837193,1.54772,2.50012,-.827605,1.54691,2.49599,-.832309,1.54691,2.49243,-.837397,1.54691,2.50038,-.827918,1.64219,2.46228,-.83301,1.64219,2.45935,-.84394,1.64219,2.45837,-.855212,1.63935,2.46095,-.832526,1.63297,2.45482,-.843141,1.62111,2.44785,-.855212,1.62111,2.46095,-.832526,1.62111,2.45482,-.843141,1.54854,2.46095,-.832526,1.54854,2.45482,-.843141,1.54854,2.44785,-.855212,1.54854,2.4619,-.832871,1.54854,2.45895,-.843869,1.54854,2.45796,-.855212,1.54772,2.4619,-.832871,1.54772,2.45895,-.843869,1.54772,2.45796,-.855212,1.54772,2.48942,-.842886,1.54772,2.48779,-.848954,1.54772,2.48724,-.855212,1.54691,2.4898,-.843026,1.54691,2.48819,-.849025,1.54691,2.48765,-.855212,1.64219,2.46228,-.877415,1.64219,2.46706,-.88767,1.64219,2.45935,-.866485,1.63935,2.46095,-.877899,1.64137,2.46671,-.887874,1.63297,2.45482,-.867284,1.62111,2.46095,-.877899,1.62111,2.46671,-.887874,1.62111,2.45482,-.867284,1.54854,2.46095,-.877899,1.54854,2.46671,-.887874,1.54854,2.45482,-.867284,1.54854,2.4619,-.877554,1.54854,2.45895,-.866556,1.54772,2.4619,-.877554,1.54772,2.46671,-.887874,1.54772,2.45895,-.866556,1.54772,2.48942,-.867538,1.54772,2.49207,-.873232,1.54772,2.48779,-.861471,1.54691,2.4898,-.867399,1.54691,2.49243,-.873028,1.54691,2.48819,-.8614,1.64219,2.47355,-.896939,1.64219,2.48156,-.90494,1.63935,2.47247,-.897849,1.63297,2.4786,-.908464,1.62111,2.47247,-.897849,1.62111,2.4786,-.908464,1.54854,2.47247,-.897849,1.54854,2.4786,-.908464,1.54854,2.47324,-.897201,1.54854,2.48129,-.905253,1.54772,2.47324,-.897201,1.54772,2.48129,-.905253,1.54772,2.49568,-.878378,1.54772,2.50012,-.88282,1.54691,2.49599,-.878115,1.54691,2.50038,-.882507,1.54663,2.5411,-.88607,1.54616,2.53547,-.888694,1.5457,2.52947,-.890302,1.54524,2.52328,-.890843,1.54644,2.52947,-.820123,1.54598,2.53547,-.82173,1.54552,2.5411,-.824355,1.54505,2.54619,-.827918,1.54459,2.55058,-.832309,1.54413,2.55414,-.837397,1.54366,2.55676,-.843026,1.5432,2.55837,-.849025,1.54274,2.55891,-.855212,1.54227,2.55837,-.8614,1.54181,2.55676,-.867399,1.54135,2.55414,-.873028,1.54088,2.55058,-.878115,1.54042,2.54619,-.882507,1.53996,2.5411,-.88607,1.53949,2.53547,-.888694,1.53903,2.52947,-.890302,1.53857,2.52328,-.890843,1.54663,2.50547,-.824355,1.54616,2.5111,-.82173,1.5457,2.5171,-.820123,1.54524,2.52328,-.819582,1.54477,2.52947,-.820123,1.54431,2.53547,-.82173,1.54385,2.5411,-.824355,1.54338,2.54619,-.827918,1.54292,2.55058,-.832309,1.54246,2.55414,-.837397,1.542,2.55676,-.843026,1.54153,2.55837,-.849025,1.54107,2.55891,-.855212,1.54061,2.55837,-.8614,1.54014,2.55676,-.867399,1.53968,2.55414,-.873028,1.53922,2.55058,-.878115,1.53875,2.54619,-.882507,1.53829,2.5411,-.88607,1.53783,2.53547,-.888694,1.53736,2.52947,-.890302,1.5369,2.52328,-.890843,1.54644,2.5171,-.890302,1.54598,2.5111,-.888694,1.54552,2.50547,-.88607,1.54505,2.50038,-.882507,1.54459,2.49599,-.878115,1.54413,2.49243,-.873028,1.54366,2.4898,-.867399,1.5432,2.48819,-.8614,1.54274,2.48765,-.855212,1.54227,2.48819,-.849025,1.54181,2.4898,-.843026,1.54135,2.49243,-.837397,1.54088,2.49599,-.832309,1.54042,2.50038,-.827918,1.53996,2.50547,-.824355,1.53949,2.5111,-.82173,1.53903,2.5171,-.820123,1.53857,2.52328,-.819582,1.5381,2.52947,-.820123,1.53764,2.53547,-.82173,1.53718,2.5411,-.824355,1.53671,2.54619,-.827918,1.53625,2.55058,-.832309,1.53579,2.55414,-.837397,1.53532,2.55676,-.843026,1.53486,2.55837,-.849025,1.5344,2.55891,-.855212,1.53394,2.55837,-.8614,1.53347,2.55677,-.867399,1.53301,2.55414,-.873028,1.53255,2.55058,-.878115,1.53208,2.54619,-.882507,1.53162,2.5411,-.88607,1.53116,2.53547,-.888694,1.54477,2.5171,-.890302,1.54431,2.5111,-.888694,1.54385,2.50547,-.88607,1.54338,2.50038,-.882507,1.54292,2.49599,-.878115,1.54246,2.49243,-.873028,1.542,2.4898,-.867399,1.54153,2.48819,-.8614,1.54107,2.48765,-.855212,1.54061,2.48819,-.849025,1.54014,2.4898,-.843026,1.53968,2.49243,-.837397,1.53922,2.49599,-.832309,1.53875,2.50038,-.827918,1.53829,2.50547,-.824355,1.53783,2.5111,-.82173,1.53736,2.5171,-.820123,1.5369,2.52328,-.819582,1.53644,2.52947,-.820123,1.53597,2.53547,-.82173,1.53551,2.5411,-.824355,1.53505,2.54619,-.827918,1.53458,2.55058,-.832309,1.53412,2.55414,-.837397,1.53366,2.55676,-.843026,1.53319,2.55837,-.849025,1.53273,2.55891,-.855212,1.53227,2.55837,-.8614,1.5318,2.55676,-.867399,1.53134,2.55414,-.873028,1.5381,2.51712,-.890179,1.53764,2.51118,-.88846,1.53718,2.50565,-.885745,1.53671,2.5007,-.882124,1.53625,2.49647,-.877714,1.53579,2.49307,-.872653,1.53532,2.49062,-.8671,1.53486,2.48918,-.861226,1.5344,2.48878,-.855212,1.53394,2.48942,-.849242,1.53347,2.49109,-.843496,1.53301,2.49372,-.838147,1.53255,2.49723,-.833354,1.53208,2.5015,-.829258,1.53162,2.5064,-.825979,1.53116,2.51178,-.82361,1.53644,2.51712,-.890179,1.53597,2.51118,-.88846,1.53551,2.50565,-.885745,1.53505,2.5007,-.882124,1.53458,2.49647,-.877714,1.53412,2.49307,-.872653,1.53366,2.49062,-.8671,1.53319,2.48918,-.861226,1.53273,2.48878,-.855212,1.53227,2.48942,-.849242,1.5318,2.49109,-.843496,1.53134,2.49372,-.838147,1.64048,1.66943,-1.24257,1.64219,1.66043,-1.24425,1.64219,1.66943,-1.24504,1.64219,1.6517,-1.24191,1.64219,1.64351,-1.23809,1.64048,1.62667,-1.21788,1.64219,1.63611,-1.23291,1.64219,1.62972,-1.22652,1.64219,1.62453,-1.21912,1.64219,1.62071,-1.21093,1.64219,1.61838,-1.2022,1.64219,1.61759,-1.1932,1.64048,1.62667,-1.16851,1.64219,1.61838,-1.18419,1.64219,1.62071,-1.17546,1.64219,1.62453,-1.16727,1.64219,1.62972,-1.15987,1.64219,1.63611,-1.15348,1.64219,1.64351,-1.1483,1.64048,1.66943,-1.14382,1.64219,1.6517,-1.14448,1.64219,1.66043,-1.14214,1.64219,1.66943,-1.14136,1.57073,1.66943,-1.24257,1.57073,1.62667,-1.21788,1.57073,1.62667,-1.16851,1.57073,1.66943,-1.14382,1.64219,1.67843,-1.24425,1.64219,1.68716,-1.24191,1.64219,1.69535,-1.23809,1.64048,1.71218,-1.21788,1.64219,1.70275,-1.23291,1.64219,1.70914,-1.22652,1.64219,1.71432,-1.21912,1.64219,1.71814,-1.21093,1.64219,1.72048,-1.2022,1.64219,1.72127,-1.1932,1.64048,1.71218,-1.16851,1.64219,1.72048,-1.18419,1.64219,1.71814,-1.17546,1.64219,1.71432,-1.16727,1.64219,1.70914,-1.15987,1.64219,1.70275,-1.15348,1.64219,1.69535,-1.1483,1.64219,1.68716,-1.14448,1.64219,1.67843,-1.14214,1.57073,1.71218,-1.21788,1.57073,1.71218,-1.16851,1.64219,1.65816,-1.25712,1.64219,1.66943,-1.25811,1.64219,1.64723,-1.2542,1.64219,1.63697,-1.24941,1.63935,1.65791,-1.25852,1.64137,1.66943,-1.25852,1.63297,1.64565,-1.25852,1.62111,1.63171,-1.25852,1.62111,1.65791,-1.25852,1.62111,1.66943,-1.25852,1.62111,1.64565,-1.25852,1.54854,1.65791,-1.25852,1.54854,1.66943,-1.25852,1.54854,1.64565,-1.25852,1.54854,1.63171,-1.25852,1.54854,1.65808,-1.25753,1.54854,1.64709,-1.25458,1.54854,1.63677,-1.24977,1.54772,1.65808,-1.25753,1.54772,1.66943,-1.25852,1.54772,1.64709,-1.25458,1.54772,1.63677,-1.24977,1.54772,1.66317,-1.22869,1.54772,1.66943,-1.22923,1.54772,1.6571,-1.22706,1.54772,1.65141,-1.22441,1.54691,1.66324,-1.22828,1.54691,1.66943,-1.22883,1.54691,1.65724,-1.22668,1.54691,1.65161,-1.22405,1.64219,1.6807,-1.25712,1.64219,1.69163,-1.2542,1.64219,1.70189,-1.24941,1.63935,1.68095,-1.25852,1.63297,1.6932,-1.25852,1.62111,1.70714,-1.25852,1.62111,1.68095,-1.25852,1.62111,1.6932,-1.25852,1.54854,1.68095,-1.25852,1.54854,1.6932,-1.25852,1.54854,1.70714,-1.25852,1.54854,1.68077,-1.25753,1.54854,1.69177,-1.25458,1.54854,1.70209,-1.24977,1.54772,1.68077,-1.25753,1.54772,1.69177,-1.25458,1.54772,1.70209,-1.24977,1.54772,1.67569,-1.22869,1.54772,1.68175,-1.22706,1.54772,1.68745,-1.22441,1.54691,1.67561,-1.22828,1.54691,1.68161,-1.22668,1.54691,1.68724,-1.22405,1.64219,1.71916,-1.23492,1.64219,1.72565,-1.22565,1.64219,1.71115,-1.24292,1.63935,1.72024,-1.23583,1.64137,1.726,-1.22586,1.63297,1.71411,-1.24645,1.62111,1.72024,-1.23583,1.62111,1.726,-1.22586,1.62111,1.71411,-1.24645,1.54854,1.72024,-1.23583,1.54854,1.726,-1.22586,1.54854,1.71411,-1.24645,1.54854,1.71947,-1.23518,1.54854,1.71142,-1.24324,1.54772,1.71947,-1.23518,1.54772,1.726,-1.22586,1.54772,1.71142,-1.24324,1.54772,1.69704,-1.21636,1.54772,1.70064,-1.21121,1.54772,1.69259,-1.2208,1.54691,1.69672,-1.2161,1.54691,1.70028,-1.21101,1.54691,1.69233,-1.22049,1.64219,1.73043,-1.2154,1.64219,1.73336,-1.20447,1.64219,1.73434,-1.1932,1.63935,1.73176,-1.21588,1.63297,1.73789,-1.20527,1.62111,1.74486,-1.1932,1.62111,1.73176,-1.21588,1.62111,1.73789,-1.20527,1.54854,1.73176,-1.21588,1.54854,1.73789,-1.20527,1.54854,1.74486,-1.1932,1.54854,1.73081,-1.21554,1.54854,1.73376,-1.20454,1.54854,1.73475,-1.1932,1.54772,1.73081,-1.21554,1.54772,1.73376,-1.20454,1.54772,1.73475,-1.1932,1.54772,1.70329,-1.20552,1.54772,1.70492,-1.19945,1.54772,1.70547,-1.1932,1.54691,1.70291,-1.20538,1.54691,1.70452,-1.19938,1.54691,1.70506,-1.1932,1.64219,1.73043,-1.17099,1.64219,1.72565,-1.16074,1.64219,1.73336,-1.18192,1.63935,1.73176,-1.17051,1.64137,1.726,-1.16053,1.63297,1.73789,-1.18112,1.62111,1.73176,-1.17051,1.62111,1.726,-1.16053,1.62111,1.73789,-1.18112,1.54854,1.73176,-1.17051,1.54854,1.726,-1.16053,1.54854,1.73789,-1.18112,1.54854,1.73081,-1.17085,1.54854,1.73376,-1.18185,1.54772,1.73081,-1.17085,1.54772,1.726,-1.16053,1.54772,1.73376,-1.18185,1.54772,1.70329,-1.18087,1.54772,1.70064,-1.17518,1.54772,1.70492,-1.18694,1.54691,1.70291,-1.18101,1.54691,1.70028,-1.17538,1.54691,1.70452,-1.18701,1.64219,1.71916,-1.15147,1.64219,1.71115,-1.14347,1.64219,1.70189,-1.13698,1.63935,1.72024,-1.15056,1.63297,1.71411,-1.13994,1.62111,1.70714,-1.12787,1.62111,1.72024,-1.15056,1.62111,1.71411,-1.13994,1.54854,1.72024,-1.15056,1.54854,1.71411,-1.13994,1.54854,1.70714,-1.12787,1.54854,1.71947,-1.15121,1.54854,1.71142,-1.14315,1.54854,1.70209,-1.13662,1.54772,1.71947,-1.15121,1.54772,1.71142,-1.14315,1.54772,1.70209,-1.13662,1.54772,1.69704,-1.17003,1.54772,1.69259,-1.16559,1.54772,1.68745,-1.16198,1.54691,1.69672,-1.17029,1.54691,1.69233,-1.1659,1.54691,1.68724,-1.16234,1.64219,1.6807,-1.12927,1.64219,1.66943,-1.12828,1.64219,1.69163,-1.13219,1.63935,1.68095,-1.12787,1.64137,1.66943,-1.12787,1.63297,1.6932,-1.12787,1.62111,1.68095,-1.12787,1.62111,1.66943,-1.12787,1.62111,1.6932,-1.12787,1.54854,1.68095,-1.12787,1.54854,1.66943,-1.12787,1.54854,1.6932,-1.12787,1.54854,1.68077,-1.12886,1.54854,1.69177,-1.13181,1.54772,1.68077,-1.12886,1.54772,1.66943,-1.12787,1.54772,1.69177,-1.13181,1.54772,1.67569,-1.1577,1.54772,1.66943,-1.15716,1.54772,1.68175,-1.15933,1.54691,1.67561,-1.15811,1.54691,1.66943,-1.15756,1.54691,1.68161,-1.15971,1.64219,1.65816,-1.12927,1.64219,1.64723,-1.13219,1.64219,1.63697,-1.13698,1.63935,1.65791,-1.12787,1.63297,1.64565,-1.12787,1.62111,1.63171,-1.12787,1.62111,1.65791,-1.12787,1.62111,1.64565,-1.12787,1.54854,1.65791,-1.12787,1.54854,1.64565,-1.12787,1.54854,1.63171,-1.12787,1.54854,1.65808,-1.12886,1.54854,1.64709,-1.13181,1.54854,1.63677,-1.13662,1.54772,1.65808,-1.12886,1.54772,1.64709,-1.13181,1.54772,1.63677,-1.13662,1.54772,1.66317,-1.1577,1.54772,1.6571,-1.15933,1.54772,1.65141,-1.16198,1.54691,1.66324,-1.15811,1.54691,1.65724,-1.15971,1.54691,1.65161,-1.16234,1.64219,1.6197,-1.15147,1.64219,1.61321,-1.16074,1.64219,1.6277,-1.14347,1.63935,1.61862,-1.15056,1.64137,1.61286,-1.16053,1.63297,1.62474,-1.13994,1.62111,1.61862,-1.15056,1.62111,1.61286,-1.16053,1.62111,1.62474,-1.13994,1.54854,1.61862,-1.15056,1.54854,1.61286,-1.16053,1.54854,1.62474,-1.13994,1.54854,1.61939,-1.15121,1.54854,1.62744,-1.14315,1.54772,1.61939,-1.15121,1.54772,1.61286,-1.16053,1.54772,1.62744,-1.14315,1.54772,1.64182,-1.17003,1.54772,1.63822,-1.17518,1.54772,1.64626,-1.16559,1.54691,1.64213,-1.17029,1.54691,1.63857,-1.17538,1.54691,1.64652,-1.1659,1.64219,1.60843,-1.17099,1.64219,1.6055,-1.18192,1.64219,1.60451,-1.1932,1.63935,1.6071,-1.17051,1.63297,1.60097,-1.18112,1.62111,1.594,-1.1932,1.62111,1.6071,-1.17051,1.62111,1.60097,-1.18112,1.54854,1.6071,-1.17051,1.54854,1.60097,-1.18112,1.54854,1.594,-1.1932,1.54854,1.60804,-1.17085,1.54854,1.6051,-1.18185,1.54854,1.6041,-1.1932,1.54772,1.60804,-1.17085,1.54772,1.6051,-1.18185,1.54772,1.6041,-1.1932,1.54772,1.63556,-1.18087,1.54772,1.63394,-1.18694,1.54772,1.63339,-1.1932,1.54691,1.63595,-1.18101,1.54691,1.63434,-1.18701,1.54691,1.6338,-1.1932,1.64219,1.60843,-1.2154,1.64219,1.61321,-1.22565,1.64219,1.6055,-1.20447,1.63935,1.6071,-1.21588,1.64137,1.61286,-1.22586,1.63297,1.60097,-1.20527,1.62111,1.6071,-1.21588,1.62111,1.61286,-1.22586,1.62111,1.60097,-1.20527,1.54854,1.6071,-1.21588,1.54854,1.61286,-1.22586,1.54854,1.60097,-1.20527,1.54854,1.60804,-1.21554,1.54854,1.6051,-1.20454,1.54772,1.60804,-1.21554,1.54772,1.61286,-1.22586,1.54772,1.6051,-1.20454,1.54772,1.63556,-1.20552,1.54772,1.63822,-1.21121,1.54772,1.63394,-1.19945,1.54691,1.63595,-1.20538,1.54691,1.63857,-1.21101,1.54691,1.63434,-1.19938,1.64219,1.6197,-1.23492,1.64219,1.6277,-1.24292,1.63935,1.61862,-1.23583,1.63297,1.62474,-1.24645,1.62111,1.61862,-1.23583,1.62111,1.62474,-1.24645,1.54854,1.61862,-1.23583,1.54854,1.62474,-1.24645,1.54854,1.61939,-1.23518,1.54854,1.62744,-1.24324,1.54772,1.61939,-1.23518,1.54772,1.62744,-1.24324,1.54772,1.64182,-1.21636,1.54772,1.64626,-1.2208,1.54691,1.64213,-1.2161,1.54691,1.64652,-1.22049,1.54663,1.68724,-1.22405,1.54616,1.68161,-1.22668,1.5457,1.67561,-1.22828,1.54524,1.66943,-1.22883,1.54644,1.67561,-1.15811,1.54598,1.68161,-1.15971,1.54552,1.68724,-1.16234,1.54505,1.69233,-1.1659,1.54459,1.69672,-1.17029,1.54413,1.70028,-1.17538,1.54366,1.70291,-1.18101,1.5432,1.70452,-1.18701,1.54274,1.70506,-1.1932,1.54227,1.70452,-1.19938,1.54181,1.70291,-1.20538,1.54135,1.70028,-1.21101,1.54088,1.69672,-1.2161,1.54042,1.69233,-1.22049,1.53996,1.68724,-1.22405,1.53949,1.68161,-1.22668,1.53903,1.67561,-1.22828,1.53857,1.66943,-1.22883,1.54663,1.65161,-1.16234,1.54616,1.65724,-1.15971,1.5457,1.66324,-1.15811,1.54524,1.66943,-1.15756,1.54477,1.67561,-1.15811,1.54431,1.68161,-1.15971,1.54385,1.68724,-1.16234,1.54338,1.69233,-1.1659,1.54292,1.69672,-1.17029,1.54246,1.70028,-1.17538,1.542,1.70291,-1.18101,1.54153,1.70452,-1.18701,1.54107,1.70506,-1.1932,1.54061,1.70452,-1.19938,1.54014,1.70291,-1.20538,1.53968,1.70028,-1.21101,1.53922,1.69672,-1.2161,1.53875,1.69233,-1.22049,1.53829,1.68724,-1.22405,1.53783,1.68161,-1.22668,1.53736,1.67561,-1.22828,1.5369,1.66943,-1.22883,1.54644,1.66324,-1.22828,1.54598,1.65724,-1.22668,1.54552,1.65161,-1.22405,1.54505,1.64652,-1.22049,1.54459,1.64213,-1.2161,1.54413,1.63857,-1.21101,1.54366,1.63595,-1.20538,1.5432,1.63434,-1.19938,1.54274,1.6338,-1.1932,1.54227,1.63434,-1.18701,1.54181,1.63595,-1.18101,1.54135,1.63857,-1.17538,1.54088,1.64213,-1.17029,1.54042,1.64652,-1.1659,1.53996,1.65161,-1.16234,1.53949,1.65724,-1.15971,1.53903,1.66324,-1.15811,1.53857,1.66943,-1.15756,1.5381,1.67561,-1.15811,1.53764,1.68161,-1.15971,1.53718,1.68724,-1.16234,1.53671,1.69233,-1.1659,1.53625,1.69672,-1.17029,1.53579,1.70028,-1.17538,1.53532,1.70291,-1.18101,1.53486,1.70452,-1.18701,1.5344,1.70506,-1.1932,1.53394,1.70452,-1.19938,1.53347,1.70291,-1.20538,1.53301,1.70028,-1.21101,1.53255,1.69672,-1.2161,1.53208,1.69233,-1.22049,1.53162,1.68724,-1.22405,1.53116,1.68161,-1.22668,1.54477,1.66324,-1.22828,1.54431,1.65724,-1.22668,1.54385,1.65161,-1.22405,1.54338,1.64652,-1.22049,1.54292,1.64213,-1.2161,1.54246,1.63857,-1.21101,1.542,1.63595,-1.20538,1.54153,1.63434,-1.19938,1.54107,1.6338,-1.1932,1.54061,1.63434,-1.18701,1.54014,1.63595,-1.18101,1.53968,1.63857,-1.17538,1.53922,1.64213,-1.17029,1.53875,1.64652,-1.1659,1.53829,1.65161,-1.16234,1.53783,1.65724,-1.15971,1.53736,1.66324,-1.15811,1.5369,1.66943,-1.15756,1.53644,1.67561,-1.15811,1.53597,1.68161,-1.15971,1.53551,1.68724,-1.16234,1.53505,1.69233,-1.1659,1.53458,1.69672,-1.17029,1.53412,1.70028,-1.17538,1.53366,1.70291,-1.18101,1.53319,1.70452,-1.18701,1.53273,1.70506,-1.1932,1.53227,1.70452,-1.19938,1.5318,1.70291,-1.20538,1.53134,1.70028,-1.21101,1.5381,1.66326,-1.22816,1.53764,1.65733,-1.22644,1.53718,1.6518,-1.22373,1.53671,1.64685,-1.22011,1.53625,1.64261,-1.2157,1.53579,1.63922,-1.21064,1.53532,1.63677,-1.20508,1.53486,1.63532,-1.19921,1.5344,1.63492,-1.1932,1.53394,1.63557,-1.18722,1.53347,1.63724,-1.18148,1.53301,1.63987,-1.17613,1.53255,1.64338,-1.17134,1.53208,1.64765,-1.16724,1.53162,1.65255,-1.16396,1.53116,1.65793,-1.16159,1.53644,1.66326,-1.22816,1.53597,1.65733,-1.22644,1.53551,1.6518,-1.22373,1.53505,1.64685,-1.22011,1.53458,1.64261,-1.2157,1.53412,1.63922,-1.21064,1.53366,1.63677,-1.20508,1.53319,1.63532,-1.19921,1.53273,1.63492,-1.1932,1.53227,1.63557,-1.18722,1.5318,1.63724,-1.18148,1.53134,1.63987,-1.17613,1.64048,.826442,-.882331,1.64219,.81744,-.884012,1.64219,.826442,-.884799,1.64219,.808712,-.881673,1.64219,.800522,-.877854,1.64048,.783685,-.857645,1.64219,.79312,-.872671,1.64219,.78673,-.866281,1.64219,.781547,-.858879,1.64219,.777728,-.85069,1.64219,.77539,-.841961,1.64219,.774602,-.832959,1.64048,.783685,-.808273,1.64219,.77539,-.823957,1.64219,.777728,-.815229,1.64219,.781547,-.807039,1.64219,.78673,-.799637,1.64219,.79312,-.793247,1.64219,.800522,-.788064,1.64048,.826442,-.783588,1.64219,.808712,-.784245,1.64219,.81744,-.781906,1.64219,.826442,-.781119,1.57073,.826442,-.882331,1.57073,.783685,-.857645,1.57073,.783685,-.808273,1.57073,.826442,-.783588,1.64219,.835444,-.884012,1.64219,.844173,-.881673,1.64219,.852362,-.877854,1.64048,.869199,-.857645,1.64219,.859764,-.872671,1.64219,.866154,-.866281,1.64219,.871337,-.858879,1.64219,.875156,-.85069,1.64219,.877495,-.841961,1.64219,.878282,-.832959,1.64048,.869199,-.808273,1.64219,.877495,-.823957,1.64219,.875156,-.815229,1.64219,.871337,-.807039,1.64219,.866154,-.799637,1.64219,.859764,-.793247,1.64219,.852362,-.788064,1.64219,.844173,-.784245,1.64219,.835444,-.781906,1.57073,.869199,-.857645,1.57073,.869199,-.808273,1.64219,.81517,-.896888,1.64219,.826442,-.897874,1.64219,.80424,-.893959,1.64219,.793984,-.889177,1.63935,.814924,-.898283,1.64137,.826442,-.898283,1.63297,.802666,-.898283,1.62111,.788728,-.898283,1.62111,.814924,-.898283,1.62111,.826442,-.898283,1.62111,.802666,-.898283,1.54854,.814924,-.898283,1.54854,.826442,-.898283,1.54854,.802666,-.898283,1.54854,.788728,-.898283,1.54854,.815099,-.89729,1.54854,.8041,-.894343,1.54854,.793781,-.889531,1.54772,.815099,-.89729,1.54772,.826442,-.898283,1.54772,.8041,-.894343,1.54772,.793781,-.889531,1.54772,.820184,-.868451,1.54772,.826442,-.868998,1.54772,.814116,-.866825,1.54772,.808423,-.86417,1.54691,.820255,-.868049,1.54691,.826442,-.86859,1.54691,.814256,-.866441,1.54691,.808627,-.863816,1.64219,.837714,-.896888,1.64219,.848644,-.893959,1.64219,.8589,-.889177,1.63935,.83796,-.898283,1.63297,.850218,-.898283,1.62111,.864156,-.898283,1.62111,.83796,-.898283,1.62111,.850218,-.898283,1.54854,.83796,-.898283,1.54854,.850218,-.898283,1.54854,.864156,-.898283,1.54854,.837785,-.89729,1.54854,.848784,-.894343,1.54854,.859104,-.889531,1.54772,.837785,-.89729,1.54772,.848784,-.894343,1.54772,.859104,-.889531,1.54772,.8327,-.868451,1.54772,.838768,-.866825,1.54772,.844462,-.86417,1.54691,.832629,-.868049,1.54691,.838629,-.866441,1.54691,.844258,-.863816,1.64219,.87617,-.874686,1.64219,.88266,-.865417,1.64219,.868169,-.882687,1.63935,.877255,-.875596,1.64137,.883014,-.865621,1.63297,.871126,-.886211,1.62111,.877255,-.875596,1.62111,.883014,-.865621,1.62111,.871126,-.886211,1.54854,.877255,-.875596,1.54854,.883014,-.865621,1.54854,.871126,-.886211,1.54854,.876483,-.874948,1.54854,.868431,-.883,1.54772,.876483,-.874948,1.54772,.883014,-.865621,1.54772,.868431,-.883,1.54772,.85405,-.856125,1.54772,.857653,-.850979,1.54772,.849608,-.860567,1.54691,.853737,-.855862,1.54691,.857299,-.850775,1.54691,.849345,-.860254,1.64219,.887443,-.855161,1.64219,.890371,-.844231,1.64219,.891357,-.832959,1.63935,.888773,-.855646,1.63297,.894902,-.845031,1.62111,.901871,-.832959,1.62111,.888773,-.855646,1.62111,.894902,-.845031,1.54854,.888773,-.855646,1.54854,.894902,-.845031,1.54854,.901871,-.832959,1.54854,.887826,-.855301,1.54854,.890773,-.844302,1.54854,.891765,-.832959,1.54772,.887826,-.855301,1.54772,.890773,-.844302,1.54772,.891765,-.832959,1.54772,.860308,-.845285,1.54772,.861934,-.839217,1.54772,.862481,-.832959,1.54691,.859924,-.845146,1.54691,.861532,-.839147,1.54691,.862073,-.832959,1.64219,.887443,-.810757,1.64219,.88266,-.800502,1.64219,.890371,-.821687,1.63935,.888773,-.810273,1.64137,.883014,-.800298,1.63297,.894902,-.820888,1.62111,.888773,-.810273,1.62111,.883014,-.800298,1.62111,.894902,-.820888,1.54854,.888773,-.810273,1.54854,.883014,-.800298,1.54854,.894902,-.820888,1.54854,.887826,-.810617,1.54854,.890773,-.821616,1.54772,.887826,-.810617,1.54772,.883014,-.800298,1.54772,.890773,-.821616,1.54772,.860308,-.820633,1.54772,.857653,-.81494,1.54772,.861934,-.826701,1.54691,.859924,-.820773,1.54691,.857299,-.815144,1.54691,.861532,-.826772,1.64219,.87617,-.791232,1.64219,.868169,-.783231,1.64219,.8589,-.776741,1.63935,.877255,-.790322,1.63297,.871126,-.779707,1.62111,.864156,-.767636,1.62111,.877255,-.790322,1.62111,.871126,-.779707,1.54854,.877255,-.790322,1.54854,.871126,-.779707,1.54854,.864156,-.767636,1.54854,.876483,-.79097,1.54854,.868431,-.782919,1.54854,.859104,-.776388,1.54772,.876483,-.79097,1.54772,.868431,-.782919,1.54772,.859104,-.776388,1.54772,.85405,-.809794,1.54772,.849608,-.805352,1.54772,.844462,-.801748,1.54691,.853737,-.810056,1.54691,.849345,-.805664,1.54691,.844258,-.802102,1.64219,.837714,-.76903,1.64219,.826442,-.768044,1.64219,.848644,-.771959,1.63935,.83796,-.767636,1.64137,.826442,-.767636,1.63297,.850218,-.767636,1.62111,.83796,-.767636,1.62111,.826442,-.767636,1.62111,.850218,-.767636,1.54854,.83796,-.767636,1.54854,.826442,-.767636,1.54854,.850218,-.767636,1.54854,.837785,-.768628,1.54854,.848784,-.771575,1.54772,.837785,-.768628,1.54772,.826442,-.767636,1.54772,.848784,-.771575,1.54772,.8327,-.797468,1.54772,.826442,-.79692,1.54772,.838768,-.799093,1.54691,.832629,-.79787,1.54691,.826442,-.797328,1.54691,.838629,-.799477,1.64219,.81517,-.76903,1.64219,.80424,-.771959,1.64219,.793984,-.776741,1.63935,.814924,-.767636,1.63297,.802666,-.767636,1.62111,.788728,-.767636,1.62111,.814924,-.767636,1.62111,.802666,-.767636,1.54854,.814924,-.767636,1.54854,.802666,-.767636,1.54854,.788728,-.767636,1.54854,.815099,-.768628,1.54854,.8041,-.771575,1.54854,.793781,-.776388,1.54772,.815099,-.768628,1.54772,.8041,-.771575,1.54772,.793781,-.776388,1.54772,.820184,-.797468,1.54772,.814116,-.799093,1.54772,.808423,-.801748,1.54691,.820255,-.79787,1.54691,.814256,-.799477,1.54691,.808627,-.802102,1.64219,.776714,-.791232,1.64219,.770224,-.800502,1.64219,.784715,-.783231,1.63935,.77563,-.790322,1.64137,.76987,-.800298,1.63297,.781758,-.779707,1.62111,.77563,-.790322,1.62111,.76987,-.800298,1.62111,.781758,-.779707,1.54854,.77563,-.790322,1.54854,.76987,-.800298,1.54854,.781758,-.779707,1.54854,.776401,-.79097,1.54854,.784453,-.782919,1.54772,.776401,-.79097,1.54772,.76987,-.800298,1.54772,.784453,-.782919,1.54772,.798834,-.809794,1.54772,.795231,-.81494,1.54772,.803277,-.805352,1.54691,.799147,-.810056,1.54691,.795585,-.815144,1.54691,.803539,-.805664,1.64219,.765442,-.810757,1.64219,.762513,-.821687,1.64219,.761527,-.832959,1.63935,.764111,-.810273,1.63297,.757982,-.820888,1.62111,.751013,-.832959,1.62111,.764111,-.810273,1.62111,.757982,-.820888,1.54854,.764111,-.810273,1.54854,.757982,-.820888,1.54854,.751013,-.832959,1.54854,.765058,-.810617,1.54854,.762111,-.821616,1.54854,.761119,-.832959,1.54772,.765058,-.810617,1.54772,.762111,-.821616,1.54772,.761119,-.832959,1.54772,.792576,-.820633,1.54772,.790951,-.826701,1.54772,.790403,-.832959,1.54691,.79296,-.820773,1.54691,.791352,-.826772,1.54691,.790811,-.832959,1.64219,.765442,-.855161,1.64219,.770224,-.865417,1.64219,.762513,-.844231,1.63935,.764111,-.855646,1.64137,.76987,-.865621,1.63297,.757983,-.845031,1.62111,.764111,-.855646,1.62111,.76987,-.865621,1.62111,.757983,-.845031,1.54854,.764111,-.855646,1.54854,.76987,-.865621,1.54854,.757983,-.845031,1.54854,.765058,-.855301,1.54854,.762111,-.844302,1.54772,.765058,-.855301,1.54772,.76987,-.865621,1.54772,.762111,-.844302,1.54772,.792576,-.845285,1.54772,.795231,-.850979,1.54772,.790951,-.839217,1.54691,.79296,-.845146,1.54691,.795585,-.850775,1.54691,.791352,-.839147,1.64219,.776714,-.874686,1.64219,.784715,-.882687,1.63935,.77563,-.875596,1.63297,.781758,-.886211,1.62111,.77563,-.875596,1.62111,.781758,-.886211,1.54854,.77563,-.875596,1.54854,.781758,-.886211,1.54854,.776401,-.874948,1.54854,.784453,-.883,1.54772,.776401,-.874948,1.54772,.784453,-.883,1.54772,.798834,-.856125,1.54772,.803277,-.860567,1.54691,.799147,-.855862,1.54691,.803539,-.860254,1.54663,.844258,-.863816,1.54616,.838629,-.866441,1.5457,.832629,-.868049,1.54524,.826442,-.86859,1.54644,.832629,-.79787,1.54598,.838629,-.799477,1.54552,.844258,-.802102,1.54505,.849345,-.805664,1.54459,.853737,-.810056,1.54413,.857299,-.815144,1.54366,.859924,-.820773,1.5432,.861532,-.826772,1.54274,.862073,-.832959,1.54227,.861532,-.839147,1.54181,.859924,-.845146,1.54135,.857299,-.850775,1.54088,.853737,-.855862,1.54042,.849345,-.860254,1.53996,.844258,-.863816,1.53949,.838629,-.866441,1.53903,.832629,-.868049,1.53857,.826442,-.86859,1.54663,.808627,-.802102,1.54616,.814256,-.799477,1.5457,.820255,-.79787,1.54524,.826442,-.797328,1.54477,.832629,-.79787,1.54431,.838629,-.799477,1.54385,.844258,-.802102,1.54338,.849345,-.805664,1.54292,.853737,-.810056,1.54246,.857299,-.815144,1.542,.859924,-.820773,1.54153,.861532,-.826772,1.54107,.862073,-.832959,1.54061,.861532,-.839147,1.54014,.859924,-.845146,1.53968,.857299,-.850775,1.53922,.853737,-.855862,1.53875,.849345,-.860254,1.53829,.844258,-.863816,1.53783,.838629,-.866441,1.53736,.832629,-.868049,1.5369,.826442,-.86859,1.54644,.820255,-.868049,1.54598,.814256,-.866441,1.54552,.808627,-.863816,1.54505,.803539,-.860254,1.54459,.799147,-.855862,1.54413,.795585,-.850775,1.54366,.79296,-.845146,1.5432,.791352,-.839147,1.54274,.790811,-.832959,1.54227,.791352,-.826772,1.54181,.79296,-.820773,1.54135,.795585,-.815144,1.54088,.799147,-.810056,1.54042,.803539,-.805664,1.53996,.808627,-.802102,1.53949,.814256,-.799477,1.53903,.820255,-.79787,1.53857,.826442,-.797328,1.5381,.832629,-.79787,1.53764,.838629,-.799477,1.53718,.844258,-.802102,1.53671,.849345,-.805664,1.53625,.853737,-.810056,1.53579,.857299,-.815144,1.53532,.859924,-.820773,1.53486,.861532,-.826772,1.5344,.862073,-.832959,1.53394,.861532,-.839147,1.53347,.859924,-.845146,1.53301,.857299,-.850775,1.53255,.853737,-.855862,1.53208,.849345,-.860254,1.53162,.844258,-.863816,1.53116,.838629,-.866441,1.54477,.820255,-.868049,1.54431,.814256,-.866441,1.54385,.808627,-.863816,1.54338,.803539,-.860254,1.54292,.799147,-.855862,1.54246,.795585,-.850775,1.542,.79296,-.845146,1.54153,.791352,-.839147,1.54107,.790811,-.832959,1.54061,.791352,-.826772,1.54014,.79296,-.820773,1.53968,.795585,-.815144,1.53922,.799147,-.810056,1.53875,.803539,-.805664,1.53829,.808627,-.802102,1.53783,.814256,-.799477,1.53736,.820255,-.79787,1.5369,.826442,-.797328,1.53644,.832629,-.79787,1.53597,.838629,-.799477,1.53551,.844258,-.802102,1.53505,.849345,-.805664,1.53458,.853737,-.810056,1.53412,.857299,-.815144,1.53366,.859924,-.820773,1.53319,.861532,-.826772,1.53273,.862073,-.832959,1.53227,.861532,-.839147,1.5318,.859924,-.845146,1.53134,.857299,-.850775,1.5381,.820277,-.867926,1.53764,.814341,-.866206,1.53718,.808814,-.863492,1.53671,.80386,-.859871,1.53625,.799626,-.855461,1.53579,.796234,-.8504,1.53532,.793782,-.844846,1.53486,.792338,-.838973,1.5344,.791936,-.832959,1.53394,.792583,-.826989,1.53347,.794252,-.821243,1.53301,.796884,-.815894,1.53255,.800392,-.811101,1.53208,.804664,-.807005,1.53162,.809564,-.803726,1.53116,.81494,-.801356,1.53644,.820277,-.867926,1.53597,.814341,-.866206,1.53551,.808814,-.863492,1.53505,.80386,-.859871,1.53458,.799626,-.855461,1.53412,.796234,-.8504,1.53366,.793782,-.844846,1.53319,.792338,-.838973,1.53273,.791936,-.832959,1.53227,.792583,-.826989,1.5318,.794252,-.821243,1.53134,.796884,-.815894,1.64048,.485599,-.0366081,1.64219,.476597,-.038289,1.64219,.485599,-.0390766,1.64219,.467869,-.0359503,1.64219,.459679,-.0321314,1.64048,.442842,-.0119224,1.64219,.452277,-.0269482,1.64219,.445887,-.0205588,1.64219,.440704,-.0131565,1.64219,.436885,-.00496684,1.64219,.434547,.00376146,1.64219,.433759,.0127635,1.64048,.442842,.0374494,1.64219,.434547,.0217656,1.64219,.436885,.0304939,1.64219,.440704,.0386838,1.64219,.445887,.0460859,1.64219,.452277,.0524755,1.64219,.459679,.0576587,1.64048,.485599,.0621351,1.64219,.467869,.0614774,1.64219,.476597,.0638163,1.64219,.485599,.0646038,1.57073,.485599,-.0366081,1.57073,.442842,-.0119224,1.57073,.442842,.0374494,1.57073,.485599,.0621351,1.64219,.494601,-.038289,1.64219,.50333,-.0359503,1.64219,.511519,-.0321314,1.64048,.528356,-.0119224,1.64219,.518922,-.0269482,1.64219,.525311,-.0205588,1.64219,.530494,-.0131565,1.64219,.534314,-.00496684,1.64219,.536652,.00376145,1.64219,.537439,.0127635,1.64048,.528356,.0374494,1.64219,.536652,.0217656,1.64219,.534314,.0304939,1.64219,.530494,.0386838,1.64219,.525311,.0460859,1.64219,.518922,.0524755,1.64219,.511519,.0576587,1.64219,.50333,.0614774,1.64219,.494601,.0638163,1.57073,.528356,-.0119224,1.57073,.528356,.0374494,1.64219,.474327,-.0511653,1.64219,.485599,-.0521515,1.64219,.463397,-.0482365,1.64219,.453141,-.0434546,1.63935,.474081,-.0525599,1.64137,.485599,-.0525599,1.63297,.461823,-.0525599,1.62111,.447885,-.0525599,1.62111,.474081,-.0525599,1.62111,.485599,-.0525599,1.62111,.461823,-.0525599,1.54854,.474081,-.0525599,1.54854,.485599,-.0525599,1.54854,.461823,-.0525599,1.54854,.447885,-.0525599,1.54854,.474256,-.0515673,1.54854,.463258,-.0486203,1.54854,.452938,-.0438081,1.54772,.474256,-.0515673,1.54772,.485599,-.0525599,1.54772,.463258,-.0486203,1.54772,.452938,-.0438081,1.54772,.479341,-.022728,1.54772,.485599,-.0232756,1.54772,.473273,-.021102,1.54772,.46758,-.0184472,1.54691,.479412,-.022326,1.54691,.485599,-.0228672,1.54691,.473413,-.0207185,1.54691,.467784,-.0180937,1.64219,.496872,-.0511653,1.64219,.507801,-.0482365,1.64219,.518057,-.0434546,1.63935,.497117,-.0525599,1.63297,.509375,-.0525599,1.62111,.523314,-.0525599,1.62111,.497117,-.0525599,1.62111,.509375,-.0525599,1.54854,.497117,-.0525599,1.54854,.509375,-.0525599,1.54854,.523314,-.0525599,1.54854,.496942,-.0515673,1.54854,.507941,-.0486203,1.54854,.518261,-.0438081,1.54772,.496942,-.0515673,1.54772,.507941,-.0486203,1.54772,.518261,-.0438081,1.54772,.491858,-.022728,1.54772,.497926,-.021102,1.54772,.503619,-.0184472,1.54691,.491786,-.022326,1.54691,.497786,-.0207185,1.54691,.503415,-.0180937,1.64219,.535327,-.028963,1.64219,.541817,-.0196939,1.64219,.527326,-.0369644,1.63935,.536412,-.0298732,1.64137,.542171,-.0198979,1.63297,.530283,-.0404885,1.62111,.536412,-.0298732,1.62111,.542171,-.0198979,1.62111,.530283,-.0404885,1.54854,.536412,-.0298732,1.54854,.542171,-.0198979,1.54854,.530283,-.0404885,1.54854,.53564,-.0292255,1.54854,.527588,-.0372769,1.54772,.53564,-.0292255,1.54772,.542171,-.0198979,1.54772,.527588,-.0372769,1.54772,.513207,-.0104021,1.54772,.51681,-.00525594,1.54772,.508765,-.014844,1.54691,.512895,-.0101394,1.54691,.516456,-.00505194,1.54691,.508502,-.0145312,1.64219,.5466,-.00943856,1.64219,.549528,.0014912,1.64219,.550514,.0127635,1.63935,.54793,-.00992291,1.63297,.554059,692295e-9,1.62111,.561029,.0127635,1.62111,.54793,-.00992291,1.62111,.554059,692295e-9,1.54854,.54793,-.00992291,1.54854,.554059,692295e-9,1.54854,.561029,.0127635,1.54854,.546983,-.00957833,1.54854,.54993,.00142042,1.54854,.550922,.0127635,1.54772,.546983,-.00957833,1.54772,.54993,.00142042,1.54772,.550922,.0127635,1.54772,.519465,437593e-9,1.54772,.521091,.00650533,1.54772,.521638,.0127635,1.54691,.519081,576972e-9,1.54691,.520689,.00657611,1.54691,.52123,.0127635,1.64219,.5466,.034966,1.64219,.541817,.0452209,1.64219,.549528,.0240359,1.63935,.54793,.03545,1.64137,.542171,.0454252,1.63297,.554059,.0248348,1.62111,.54793,.03545,1.62111,.542171,.0454252,1.62111,.554059,.0248348,1.54854,.54793,.03545,1.54854,.542171,.0454252,1.54854,.554059,.0248348,1.54854,.546983,.0351054,1.54854,.54993,.0241069,1.54772,.546983,.0351054,1.54772,.542171,.0454252,1.54772,.54993,.0241069,1.54772,.519465,.0250897,1.54772,.51681,.030783,1.54772,.521091,.0190218,1.54691,.519081,.0249501,1.54691,.516456,.030579,1.54691,.520689,.0189508,1.64219,.535327,.0544903,1.64219,.527326,.0624914,1.64219,.518057,.0689817,1.63935,.536412,.0554003,1.63297,.530283,.0660155,1.62111,.523314,.078087,1.62111,.536412,.0554003,1.62111,.530283,.0660155,1.54854,.536412,.0554003,1.54854,.530283,.0660155,1.54854,.523314,.078087,1.54854,.53564,.0547525,1.54854,.527588,.062804,1.54854,.518261,.0693352,1.54772,.53564,.0547525,1.54772,.527588,.062804,1.54772,.518261,.0693352,1.54772,.513207,.035929,1.54772,.508765,.0403711,1.54772,.503619,.0439743,1.54691,.512895,.0356667,1.54691,.508502,.0400585,1.54691,.503415,.0436208,1.64219,.496872,.0766924,1.64219,.485599,.0776788,1.64219,.507801,.073764,1.63935,.497117,.078087,1.64137,.485599,.078087,1.63297,.509375,.078087,1.62111,.497117,.078087,1.62111,.485599,.078087,1.62111,.509375,.078087,1.54854,.497117,.078087,1.54854,.485599,.078087,1.54854,.509375,.078087,1.54854,.496942,.0770946,1.54854,.507941,.0741473,1.54772,.496942,.0770946,1.54772,.485599,.078087,1.54772,.507941,.0741473,1.54772,.491858,.0482551,1.54772,.485599,.0488027,1.54772,.497926,.0466293,1.54691,.491786,.0478531,1.54691,.485599,.0483943,1.54691,.497786,.0462457,1.64219,.474327,.0766924,1.64219,.463397,.073764,1.64219,.453141,.0689817,1.63935,.474081,.078087,1.63297,.461823,.078087,1.62111,.447885,.078087,1.62111,.474081,.078087,1.62111,.461823,.078087,1.54854,.474081,.078087,1.54854,.461823,.078087,1.54854,.447885,.078087,1.54854,.474256,.0770946,1.54854,.463258,.0741473,1.54854,.452938,.0693352,1.54772,.474256,.0770946,1.54772,.463258,.0741473,1.54772,.452938,.0693352,1.54772,.479341,.0482551,1.54772,.473273,.0466293,1.54772,.46758,.0439743,1.54691,.479412,.0478531,1.54691,.473413,.0462457,1.54691,.467784,.0436208,1.64219,.435871,.0544903,1.64219,.429381,.045221,1.64219,.443873,.0624914,1.63935,.434787,.0554003,1.64137,.429028,.0454252,1.63297,.440915,.0660155,1.62111,.434787,.0554003,1.62111,.429028,.0454252,1.62111,.440915,.0660155,1.54854,.434787,.0554003,1.54854,.429028,.0454252,1.54854,.440915,.0660155,1.54854,.435559,.0547525,1.54854,.44361,.062804,1.54772,.435559,.0547525,1.54772,.429028,.0454252,1.54772,.44361,.062804,1.54772,.457992,.035929,1.54772,.454388,.030783,1.54772,.462434,.0403711,1.54691,.458304,.0356667,1.54691,.454742,.030579,1.54691,.462696,.0400585,1.64219,.424599,.034966,1.64219,.42167,.0240359,1.64219,.420684,.0127635,1.63935,.423268,.03545,1.63297,.41714,.0248348,1.62111,.410171,.0127635,1.62111,.423268,.03545,1.62111,.41714,.0248348,1.54854,.423268,.03545,1.54854,.41714,.0248348,1.54854,.410171,.0127635,1.54854,.424215,.0351054,1.54854,.421268,.0241069,1.54854,.420276,.0127635,1.54772,.424215,.0351054,1.54772,.421268,.0241069,1.54772,.420276,.0127635,1.54772,.451734,.0250897,1.54772,.450108,.0190218,1.54772,.44956,.0127635,1.54691,.452117,.0249501,1.54691,.45051,.0189508,1.54691,.449968,.0127635,1.64219,.424599,-.00943855,1.64219,.429381,-.0196939,1.64219,.42167,.0014912,1.63935,.423268,-.0099229,1.64137,.429028,-.0198979,1.63297,.41714,692301e-9,1.62111,.423268,-.0099229,1.62111,.429028,-.0198979,1.62111,.41714,692301e-9,1.54854,.423268,-.0099229,1.54854,.429028,-.0198979,1.54854,.41714,692301e-9,1.54854,.424215,-.00957833,1.54854,.421268,.00142042,1.54772,.424215,-.00957833,1.54772,.429028,-.0198979,1.54772,.421268,.00142042,1.54772,.451734,437595e-9,1.54772,.454388,-.00525594,1.54772,.450108,.00650533,1.54691,.452117,576975e-9,1.54691,.454742,-.00505194,1.54691,.45051,.00657611,1.64219,.435871,-.028963,1.64219,.443873,-.0369644,1.63935,.434787,-.0298732,1.63297,.440915,-.0404885,1.62111,.434787,-.0298732,1.62111,.440915,-.0404885,1.54854,.434787,-.0298732,1.54854,.440915,-.0404885,1.54854,.435559,-.0292254,1.54854,.44361,-.0372769,1.54772,.435559,-.0292254,1.54772,.44361,-.0372769,1.54772,.457992,-.0104021,1.54772,.462434,-.014844,1.54691,.458304,-.0101394,1.54691,.462696,-.0145312,1.54663,.503415,-.0180937,1.54616,.497786,-.0207185,1.5457,.491786,-.022326,1.54524,.485599,-.0228672,1.54644,.491786,.0478531,1.54598,.497786,.0462457,1.54552,.503415,.0436208,1.54505,.508502,.0400585,1.54459,.512895,.0356667,1.54413,.516456,.030579,1.54366,.519081,.0249501,1.5432,.520689,.0189508,1.54274,.52123,.0127635,1.54227,.520689,.00657611,1.54181,.519081,576972e-9,1.54135,.516456,-.00505194,1.54088,.512895,-.0101394,1.54042,.508502,-.0145312,1.53996,.503415,-.0180937,1.53949,.497786,-.0207185,1.53903,.491786,-.022326,1.53857,.485599,-.0228672,1.54663,.467784,.0436208,1.54616,.473413,.0462457,1.5457,.479412,.0478531,1.54524,.485599,.0483943,1.54477,.491786,.0478531,1.54431,.497786,.0462457,1.54385,.503415,.0436208,1.54338,.508502,.0400585,1.54292,.512895,.0356667,1.54246,.516456,.030579,1.542,.519081,.0249501,1.54153,.520689,.0189508,1.54107,.52123,.0127635,1.54061,.520689,.00657611,1.54014,.519081,576972e-9,1.53968,.516456,-.00505194,1.53922,.512895,-.0101394,1.53875,.508502,-.0145312,1.53829,.503415,-.0180937,1.53783,.497786,-.0207185,1.53736,.491786,-.022326,1.5369,.485599,-.0228672,1.54644,.479412,-.022326,1.54598,.473413,-.0207185,1.54552,.467784,-.0180937,1.54505,.462696,-.0145312,1.54459,.458304,-.0101394,1.54413,.454742,-.00505194,1.54366,.452117,576975e-9,1.5432,.45051,.00657611,1.54274,.449968,.0127635,1.54227,.45051,.0189508,1.54181,.452117,.0249501,1.54135,.454742,.030579,1.54088,.458304,.0356667,1.54042,.462696,.0400585,1.53996,.467784,.0436208,1.53949,.473413,.0462457,1.53903,.479412,.0478531,1.53857,.485599,.0483943,1.5381,.491786,.0478531,1.53764,.497786,.0462457,1.53718,.503415,.0436208,1.53671,.508502,.0400585,1.53625,.512895,.0356667,1.53579,.516456,.030579,1.53532,.519081,.0249501,1.53486,.520689,.0189508,1.5344,.52123,.0127635,1.53394,.520689,.00657611,1.53347,.519081,576972e-9,1.53301,.516456,-.00505194,1.53255,.512895,-.0101394,1.53208,.508502,-.0145312,1.53162,.503415,-.0180937,1.53116,.497786,-.0207185,1.54477,.479412,-.022326,1.54431,.473413,-.0207185,1.54385,.467784,-.0180937,1.54338,.462696,-.0145312,1.54292,.458304,-.0101394,1.54246,.454742,-.00505194,1.542,.452117,576975e-9,1.54153,.45051,.00657611,1.54107,.449968,.0127635,1.54061,.45051,.0189508,1.54014,.452117,.0249501,1.53968,.454742,.030579,1.53922,.458304,.0356667,1.53875,.462696,.0400585,1.53829,.467784,.0436208,1.53783,.473413,.0462457,1.53736,.479412,.0478531,1.5369,.485599,.0483943,1.53644,.491786,.0478531,1.53597,.497786,.0462457,1.53551,.503415,.0436208,1.53505,.508502,.0400585,1.53458,.512895,.0356667,1.53412,.516456,.030579,1.53366,.519081,.0249501,1.53319,.520689,.0189508,1.53273,.52123,.0127635,1.53227,.520689,.00657611,1.5318,.519081,576972e-9,1.53134,.516456,-.00505194,1.5381,.479434,-.0222029,1.53764,.473498,-.0204836,1.53718,.467971,-.0177688,1.53671,.463017,-.0141483,1.53625,.458783,-.0097378,1.53579,.455391,-.00467694,1.53532,.452939,876416e-9,1.53486,.451495,.00674989,1.5344,.451094,.0127635,1.53394,.451741,.0187339,1.53347,.453409,.0244799,1.53301,.456041,.029829,1.53255,.459549,.0346221,1.53208,.463821,.038718,1.53162,.468721,.0419971,1.53116,.474097,.0443664,1.53644,.479434,-.0222029,1.53597,.473498,-.0204836,1.53551,.467971,-.0177688,1.53505,.463017,-.0141483,1.53458,.458783,-.0097378,1.53412,.455392,-.00467694,1.53366,.452939,876416e-9,1.53319,.451495,.00674989,1.53273,.451094,.0127635,1.53227,.451741,.0187339,1.5318,.453409,.0244799,1.53134,.456041,.029829,1.64048,.843923,.802992,1.64219,.834921,.801311,1.64219,.843923,.800523,1.64219,.826193,.80365,1.64219,.818004,.807469,1.64048,.801166,.827678,1.64219,.810601,.812652,1.64219,.804212,.819041,1.64219,.799028,.826444,1.64219,.79521,.834633,1.64219,.792871,.843361,1.64219,.792083,.852364,1.64048,.801166,.877049,1.64219,.792871,.861366,1.64219,.79521,.870094,1.64219,.799028,.878284,1.64219,.804212,.885686,1.64219,.810601,.892076,1.64219,.818004,.897259,1.64048,.843923,.901735,1.64219,.826193,.901077,1.64219,.834921,.903416,1.64219,.843923,.904204,1.57073,.843923,.802992,1.57073,.801166,.827678,1.57073,.801166,.877049,1.57073,.843923,.901735,1.64219,.852926,.801311,1.64219,.861654,.80365,1.64219,.869844,.807469,1.64048,.886681,.827678,1.64219,.877246,.812652,1.64219,.883635,.819041,1.64219,.888819,.826444,1.64219,.892638,.834633,1.64219,.894976,.843361,1.64219,.895764,.852364,1.64048,.886681,.877049,1.64219,.894976,.861366,1.64219,.892638,.870094,1.64219,.888819,.878284,1.64219,.883635,.885686,1.64219,.877246,.892076,1.64219,.869844,.897259,1.64219,.861654,.901077,1.64219,.852926,.903416,1.57073,.886681,.827678,1.57073,.886681,.877049,1.64219,.832651,.788435,1.64219,.843923,.787449,1.64219,.821721,.791363,1.64219,.811466,.796145,1.63935,.832405,.78704,1.64137,.843923,.78704,1.63297,.820148,.78704,1.62111,.806209,.78704,1.62111,.832405,.78704,1.62111,.843923,.78704,1.62111,.820148,.78704,1.54854,.832405,.78704,1.54854,.843923,.78704,1.54854,.820148,.78704,1.54854,.806209,.78704,1.54854,.83258,.788033,1.54854,.821582,.79098,1.54854,.811262,.795792,1.54772,.83258,.788033,1.54772,.843923,.78704,1.54772,.821582,.79098,1.54772,.811262,.795792,1.54772,.837665,.816872,1.54772,.843923,.816324,1.54772,.831597,.818498,1.54772,.825904,.821153,1.54691,.837736,.817274,1.54691,.843923,.816733,1.54691,.831737,.818882,1.54691,.826108,.821506,1.64219,.855196,.788435,1.64219,.866126,.791363,1.64219,.876381,.796145,1.63935,.855442,.78704,1.63297,.8677,.78704,1.62111,.881638,.78704,1.62111,.855442,.78704,1.62111,.8677,.78704,1.54854,.855442,.78704,1.54854,.8677,.78704,1.54854,.881638,.78704,1.54854,.855267,.788033,1.54854,.866265,.79098,1.54854,.876585,.795792,1.54772,.855267,.788033,1.54772,.866265,.79098,1.54772,.876585,.795792,1.54772,.850182,.816872,1.54772,.85625,.818498,1.54772,.861943,.821153,1.54691,.850111,.817274,1.54691,.85611,.818882,1.54691,.861739,.821506,1.64219,.893651,.810637,1.64219,.900141,.819906,1.64219,.88565,.802636,1.63935,.894736,.809727,1.64137,.900495,.819702,1.63297,.888607,.799111,1.62111,.894736,.809727,1.62111,.900495,.819702,1.62111,.888607,.799111,1.54854,.894736,.809727,1.54854,.900495,.819702,1.54854,.888607,.799111,1.54854,.893964,.810375,1.54854,.885912,.802323,1.54772,.893964,.810375,1.54772,.900495,.819702,1.54772,.885912,.802323,1.54772,.871531,.829198,1.54772,.875134,.834344,1.54772,.867089,.824756,1.54691,.871219,.829461,1.54691,.874781,.834548,1.54691,.866826,.825069,1.64219,.904924,.830161,1.64219,.907852,.841091,1.64219,.908838,.852364,1.63935,.906254,.829677,1.63297,.912383,.840292,1.62111,.919353,.852364,1.62111,.906254,.829677,1.62111,.912383,.840292,1.54854,.906254,.829677,1.54854,.912383,.840292,1.54854,.919353,.852364,1.54854,.905307,.830022,1.54854,.908255,.84102,1.54854,.909247,.852364,1.54772,.905307,.830022,1.54772,.908255,.84102,1.54772,.909247,.852364,1.54772,.87779,.840038,1.54772,.879415,.846105,1.54772,.879963,.852364,1.54691,.877406,.840177,1.54691,.879013,.846176,1.54691,.879554,.852364,1.64219,.904924,.874566,1.64219,.900141,.884821,1.64219,.907852,.863636,1.63935,.906254,.87505,1.64137,.900495,.885025,1.63297,.912383,.864435,1.62111,.906254,.87505,1.62111,.900495,.885025,1.62111,.912383,.864435,1.54854,.906254,.87505,1.54854,.900495,.885025,1.54854,.912383,.864435,1.54854,.905307,.874705,1.54854,.908255,.863707,1.54772,.905307,.874705,1.54772,.900495,.885025,1.54772,.908255,.863707,1.54772,.87779,.86469,1.54772,.875134,.870383,1.54772,.879415,.858622,1.54691,.877406,.86455,1.54691,.874781,.870179,1.54691,.879013,.858551,1.64219,.893651,.89409,1.64219,.88565,.902091,1.64219,.876381,.908582,1.63935,.894736,.895,1.63297,.888607,.905615,1.62111,.881638,.917687,1.62111,.894736,.895,1.62111,.888607,.905615,1.54854,.894736,.895,1.54854,.888607,.905615,1.54854,.881638,.917687,1.54854,.893964,.894353,1.54854,.885912,.902404,1.54854,.876585,.908935,1.54772,.893964,.894353,1.54772,.885912,.902404,1.54772,.876585,.908935,1.54772,.871531,.875529,1.54772,.867089,.879971,1.54772,.861943,.883574,1.54691,.871219,.875267,1.54691,.866826,.879659,1.54691,.861739,.883221,1.64219,.855196,.916292,1.64219,.843923,.917279,1.64219,.866126,.913364,1.63935,.855442,.917687,1.64137,.843923,.917687,1.63297,.8677,.917687,1.62111,.855442,.917687,1.62111,.843923,.917687,1.62111,.8677,.917687,1.54854,.855442,.917687,1.54854,.843923,.917687,1.54854,.8677,.917687,1.54854,.855267,.916695,1.54854,.866265,.913747,1.54772,.855267,.916695,1.54772,.843923,.917687,1.54772,.866265,.913747,1.54772,.850182,.887855,1.54772,.843923,.888403,1.54772,.85625,.886229,1.54691,.850111,.887453,1.54691,.843923,.887994,1.54691,.85611,.885846,1.64219,.832651,.916292,1.64219,.821721,.913364,1.64219,.811466,.908582,1.63935,.832405,.917687,1.63297,.820148,.917687,1.62111,.806209,.917687,1.62111,.832405,.917687,1.62111,.820148,.917687,1.54854,.832405,.917687,1.54854,.820148,.917687,1.54854,.806209,.917687,1.54854,.83258,.916695,1.54854,.821582,.913747,1.54854,.811262,.908935,1.54772,.83258,.916695,1.54772,.821582,.913747,1.54772,.811262,.908935,1.54772,.837665,.887855,1.54772,.831597,.886229,1.54772,.825904,.883574,1.54691,.837736,.887453,1.54691,.831737,.885846,1.54691,.826108,.883221,1.64219,.794196,.89409,1.64219,.787705,.884821,1.64219,.802197,.902091,1.63935,.793111,.895,1.64137,.787352,.885025,1.63297,.79924,.905615,1.62111,.793111,.895,1.62111,.787352,.885025,1.62111,.79924,.905615,1.54854,.793111,.895,1.54854,.787352,.885025,1.54854,.79924,.905615,1.54854,.793883,.894353,1.54854,.801934,.902404,1.54772,.793883,.894353,1.54772,.787352,.885025,1.54772,.801934,.902404,1.54772,.816316,.875529,1.54772,.812713,.870383,1.54772,.820758,.879971,1.54691,.816629,.875267,1.54691,.813066,.870179,1.54691,.82102,.879659,1.64219,.782923,.874566,1.64219,.779995,.863636,1.64219,.779009,.852364,1.63935,.781593,.87505,1.63297,.775464,.864435,1.62111,.768495,.852364,1.62111,.781593,.87505,1.62111,.775464,.864435,1.54854,.781593,.87505,1.54854,.775464,.864435,1.54854,.768495,.852364,1.54854,.782539,.874705,1.54854,.779593,.863707,1.54854,.7786,.852364,1.54772,.782539,.874705,1.54772,.779593,.863707,1.54772,.7786,.852364,1.54772,.810058,.86469,1.54772,.808432,.858622,1.54772,.807884,.852364,1.54691,.810442,.86455,1.54691,.808834,.858551,1.54691,.808292,.852364,1.64219,.782923,.830161,1.64219,.787705,.819906,1.64219,.779995,.841091,1.63935,.781593,.829677,1.64137,.787352,.819702,1.63297,.775464,.840292,1.62111,.781593,.829677,1.62111,.787352,.819702,1.62111,.775464,.840292,1.54854,.781593,.829677,1.54854,.787352,.819702,1.54854,.775464,.840292,1.54854,.782539,.830022,1.54854,.779593,.84102,1.54772,.782539,.830022,1.54772,.787352,.819702,1.54772,.779593,.84102,1.54772,.810058,.840038,1.54772,.812713,.834344,1.54772,.808432,.846105,1.54691,.810442,.840177,1.54691,.813066,.834548,1.54691,.808834,.846176,1.64219,.794196,.810637,1.64219,.802197,.802636,1.63935,.793111,.809727,1.63297,.79924,.799111,1.62111,.793111,.809727,1.62111,.79924,.799111,1.54854,.793111,.809727,1.54854,.79924,.799111,1.54854,.793883,.810375,1.54854,.801934,.802323,1.54772,.793883,.810375,1.54772,.801934,.802323,1.54772,.816316,.829198,1.54772,.820758,.824756,1.54691,.816629,.829461,1.54691,.82102,.825069,1.54663,.861739,.821506,1.54616,.85611,.818882,1.5457,.850111,.817274,1.54524,.843923,.816733,1.54644,.850111,.887453,1.54598,.85611,.885846,1.54552,.861739,.883221,1.54505,.866826,.879659,1.54459,.871219,.875267,1.54413,.874781,.870179,1.54366,.877406,.86455,1.5432,.879013,.858551,1.54274,.879554,.852364,1.54227,.879013,.846176,1.54181,.877406,.840177,1.54135,.874781,.834548,1.54088,.871219,.829461,1.54042,.866826,.825069,1.53996,.861739,.821506,1.53949,.85611,.818882,1.53903,.850111,.817274,1.53857,.843923,.816733,1.54663,.826108,.883221,1.54616,.831737,.885846,1.5457,.837736,.887453,1.54524,.843923,.887994,1.54477,.850111,.887453,1.54431,.85611,.885846,1.54385,.861739,.883221,1.54338,.866826,.879659,1.54292,.871219,.875267,1.54246,.874781,.870179,1.542,.877406,.86455,1.54153,.879013,.858551,1.54107,.879554,.852364,1.54061,.879013,.846176,1.54014,.877406,.840177,1.53968,.874781,.834548,1.53922,.871219,.829461,1.53875,.866826,.825069,1.53829,.861739,.821506,1.53783,.85611,.818882,1.53736,.850111,.817274,1.5369,.843923,.816733,1.54644,.837736,.817274,1.54598,.831737,.818882,1.54552,.826108,.821506,1.54505,.82102,.825069,1.54459,.816629,.829461,1.54413,.813066,.834548,1.54366,.810442,.840177,1.5432,.808834,.846176,1.54274,.808292,.852364,1.54227,.808834,.858551,1.54181,.810442,.86455,1.54135,.813066,.870179,1.54088,.816629,.875267,1.54042,.82102,.879659,1.53996,.826108,.883221,1.53949,.831737,.885846,1.53903,.837736,.887453,1.53857,.843923,.887994,1.5381,.850111,.887453,1.53764,.85611,.885846,1.53718,.861739,.883221,1.53671,.866826,.879659,1.53625,.871219,.875267,1.53579,.874781,.870179,1.53533,.877406,.86455,1.53486,.879013,.858551,1.5344,.879554,.852364,1.53394,.879013,.846176,1.53347,.877406,.840177,1.53301,.874781,.834548,1.53255,.871219,.829461,1.53208,.866826,.825069,1.53162,.861739,.821506,1.53116,.85611,.818882,1.54477,.837736,.817274,1.54431,.831737,.818882,1.54385,.826108,.821506,1.54338,.82102,.825069,1.54292,.816629,.829461,1.54246,.813066,.834548,1.542,.810442,.840177,1.54153,.808834,.846176,1.54107,.808292,.852364,1.54061,.808834,.858551,1.54014,.810442,.86455,1.53968,.813066,.870179,1.53922,.816629,.875267,1.53875,.82102,.879659,1.53829,.826108,.883221,1.53783,.831737,.885846,1.53736,.837736,.887453,1.5369,.843923,.887994,1.53644,.850111,.887453,1.53597,.85611,.885846,1.53551,.861739,.883221,1.53505,.866826,.879659,1.53458,.871219,.875267,1.53412,.874781,.870179,1.53366,.877406,.86455,1.53319,.879013,.858551,1.53273,.879554,.852364,1.53227,.879013,.846176,1.5318,.877406,.840177,1.53134,.874781,.834548,1.5381,.837758,.817397,1.53764,.831823,.819116,1.53718,.826296,.821831,1.53671,.821342,.825452,1.53625,.817107,.829862,1.53579,.813716,.834923,1.53532,.811264,.840477,1.53486,.809819,.84635,1.5344,.809418,.852364,1.53394,.810065,.858334,1.53347,.811734,.86408,1.53301,.814366,.869429,1.53255,.817873,.874222,1.53208,.822145,.878318,1.53162,.827046,.881597,1.53116,.832421,.883966,1.53644,.837758,.817397,1.53597,.831823,.819116,1.53551,.826296,.821831,1.53505,.821342,.825452,1.53458,.817107,.829862,1.53412,.813716,.834923,1.53366,.811264,.840477,1.53319,.809819,.84635,1.53273,.809418,.852364,1.53227,.810065,.858334,1.5318,.811734,.86408,1.53134,.814366,.869429,1.64048,1.68885,1.15276,1.64219,1.67985,1.15108,1.64219,1.68885,1.15029,1.64219,1.67112,1.15342,1.64219,1.66293,1.15724,1.64048,1.64609,1.17745,1.64219,1.65553,1.16242,1.64219,1.64914,1.16881,1.64219,1.64395,1.17621,1.64219,1.64014,1.1844,1.64219,1.6378,1.19313,1.64219,1.63701,1.20213,1.64048,1.64609,1.22682,1.64219,1.6378,1.21114,1.64219,1.64014,1.21986,1.64219,1.64395,1.22805,1.64219,1.64914,1.23546,1.64219,1.65553,1.24185,1.64219,1.66293,1.24703,1.64048,1.68885,1.25151,1.64219,1.67112,1.25085,1.64219,1.67985,1.25319,1.64219,1.68885,1.25397,1.57073,1.68885,1.15276,1.57073,1.64609,1.17745,1.57073,1.64609,1.22682,1.57073,1.68885,1.25151,1.64219,1.69785,1.15108,1.64219,1.70658,1.15342,1.64219,1.71477,1.15724,1.64048,1.73161,1.17745,1.64219,1.72217,1.16242,1.64219,1.72856,1.16881,1.64219,1.73374,1.17621,1.64219,1.73756,1.1844,1.64219,1.7399,1.19313,1.64219,1.74069,1.20213,1.64048,1.73161,1.22682,1.64219,1.7399,1.21114,1.64219,1.73756,1.21986,1.64219,1.73374,1.22805,1.64219,1.72856,1.23546,1.64219,1.72217,1.24185,1.64219,1.71477,1.24703,1.64219,1.70658,1.25085,1.64219,1.69785,1.25319,1.57073,1.73161,1.17745,1.57073,1.73161,1.22682,1.64219,1.67758,1.1382,1.64219,1.68885,1.13722,1.64219,1.66665,1.14113,1.64219,1.65639,1.14592,1.63935,1.67733,1.13681,1.64137,1.68885,1.13681,1.63297,1.66507,1.13681,1.62111,1.65114,1.13681,1.62111,1.67733,1.13681,1.62111,1.68885,1.13681,1.62111,1.66507,1.13681,1.54854,1.67733,1.13681,1.54854,1.68885,1.13681,1.54854,1.66507,1.13681,1.54854,1.65114,1.13681,1.54854,1.67751,1.1378,1.54854,1.66651,1.14075,1.54854,1.65619,1.14556,1.54772,1.67751,1.1378,1.54772,1.68885,1.13681,1.54772,1.66651,1.14075,1.54772,1.65619,1.14556,1.54772,1.68259,1.16664,1.54772,1.68885,1.16609,1.54772,1.67652,1.16827,1.54772,1.67083,1.17092,1.54691,1.68266,1.16704,1.54691,1.68885,1.1665,1.54691,1.67666,1.16865,1.54691,1.67103,1.17128,1.64219,1.70012,1.1382,1.64219,1.71105,1.14113,1.64219,1.72131,1.14592,1.63935,1.70037,1.13681,1.63297,1.71263,1.13681,1.62111,1.72656,1.13681,1.62111,1.70037,1.13681,1.62111,1.71263,1.13681,1.54854,1.70037,1.13681,1.54854,1.71263,1.13681,1.54854,1.72656,1.13681,1.54854,1.70019,1.1378,1.54854,1.71119,1.14075,1.54854,1.72151,1.14556,1.54772,1.70019,1.1378,1.54772,1.71119,1.14075,1.54772,1.72151,1.14556,1.54772,1.69511,1.16664,1.54772,1.70118,1.16827,1.54772,1.70687,1.17092,1.54691,1.69504,1.16704,1.54691,1.70104,1.16865,1.54691,1.70667,1.17128,1.64219,1.73858,1.16041,1.64219,1.74507,1.16968,1.64219,1.73058,1.15241,1.63935,1.73966,1.1595,1.64137,1.74542,1.16947,1.63297,1.73353,1.14888,1.62111,1.73966,1.1595,1.62111,1.74542,1.16947,1.62111,1.73353,1.14888,1.54854,1.73966,1.1595,1.54854,1.74542,1.16947,1.54854,1.73353,1.14888,1.54854,1.73889,1.16014,1.54854,1.73084,1.15209,1.54772,1.73889,1.16014,1.54772,1.74542,1.16947,1.54772,1.73084,1.15209,1.54772,1.71646,1.17897,1.54772,1.72006,1.18411,1.54772,1.71202,1.17453,1.54691,1.71614,1.17923,1.54691,1.71971,1.18432,1.54691,1.71175,1.17484,1.64219,1.74985,1.17993,1.64219,1.75278,1.19086,1.64219,1.75376,1.20213,1.63935,1.75118,1.17945,1.63297,1.75731,1.19006,1.62111,1.76428,1.20213,1.62111,1.75118,1.17945,1.62111,1.75731,1.19006,1.54854,1.75118,1.17945,1.54854,1.75731,1.19006,1.54854,1.76428,1.20213,1.54854,1.75023,1.17979,1.54854,1.75318,1.19079,1.54854,1.75417,1.20213,1.54772,1.75023,1.17979,1.54772,1.75318,1.19079,1.54772,1.75417,1.20213,1.54772,1.72272,1.18981,1.54772,1.72434,1.19588,1.54772,1.72489,1.20213,1.54691,1.72233,1.18995,1.54691,1.72394,1.19595,1.54691,1.72448,1.20213,1.64219,1.74985,1.22434,1.64219,1.74507,1.23459,1.64219,1.75278,1.21341,1.63935,1.75118,1.22482,1.64137,1.74542,1.2348,1.63297,1.75731,1.2142,1.62111,1.75118,1.22482,1.62111,1.74542,1.2348,1.62111,1.75731,1.2142,1.54854,1.75118,1.22482,1.54854,1.74542,1.2348,1.54854,1.75731,1.2142,1.54854,1.75023,1.22448,1.54854,1.75318,1.21348,1.54772,1.75023,1.22448,1.54772,1.74542,1.2348,1.54772,1.75318,1.21348,1.54772,1.72272,1.21446,1.54772,1.72006,1.22015,1.54772,1.72434,1.20839,1.54691,1.72233,1.21432,1.54691,1.71971,1.21995,1.54691,1.72394,1.20832,1.64219,1.73858,1.24386,1.64219,1.73058,1.25186,1.64219,1.72131,1.25835,1.63935,1.73966,1.24477,1.63297,1.73353,1.25539,1.62111,1.72656,1.26746,1.62111,1.73966,1.24477,1.62111,1.73353,1.25539,1.54854,1.73966,1.24477,1.54854,1.73353,1.25539,1.54854,1.72656,1.26746,1.54854,1.73889,1.24412,1.54854,1.73084,1.25217,1.54854,1.72151,1.25871,1.54772,1.73889,1.24412,1.54772,1.73084,1.25217,1.54772,1.72151,1.25871,1.54772,1.71646,1.2253,1.54772,1.71202,1.22974,1.54772,1.70687,1.23334,1.54691,1.71614,1.22504,1.54691,1.71175,1.22943,1.54691,1.70667,1.23299,1.64219,1.70012,1.26606,1.64219,1.68885,1.26705,1.64219,1.71105,1.26313,1.63935,1.70037,1.26746,1.64137,1.68885,1.26746,1.63297,1.71263,1.26746,1.62111,1.70037,1.26746,1.62111,1.68885,1.26746,1.62111,1.71263,1.26746,1.54854,1.70037,1.26746,1.54854,1.68885,1.26746,1.54854,1.71263,1.26746,1.54854,1.70019,1.26646,1.54854,1.71119,1.26352,1.54772,1.70019,1.26646,1.54772,1.68885,1.26746,1.54772,1.71119,1.26352,1.54772,1.69511,1.23763,1.54772,1.68885,1.23817,1.54772,1.70118,1.236,1.54691,1.69504,1.23722,1.54691,1.68885,1.23776,1.54691,1.70104,1.23562,1.64219,1.67758,1.26606,1.64219,1.66665,1.26313,1.64219,1.65639,1.25835,1.63935,1.67733,1.26746,1.63297,1.66507,1.26746,1.62111,1.65114,1.26746,1.62111,1.67733,1.26746,1.62111,1.66507,1.26746,1.54854,1.67733,1.26746,1.54854,1.66507,1.26746,1.54854,1.65114,1.26746,1.54854,1.67751,1.26646,1.54854,1.66651,1.26352,1.54854,1.65619,1.25871,1.54772,1.67751,1.26646,1.54772,1.66651,1.26352,1.54772,1.65619,1.25871,1.54772,1.68259,1.23763,1.54772,1.67652,1.236,1.54772,1.67083,1.23334,1.54691,1.68266,1.23722,1.54691,1.67666,1.23562,1.54691,1.67103,1.23299,1.64219,1.63912,1.24386,1.64219,1.63263,1.23459,1.64219,1.64712,1.25186,1.63935,1.63804,1.24477,1.64137,1.63228,1.2348,1.63297,1.64417,1.25539,1.62111,1.63804,1.24477,1.62111,1.63228,1.2348,1.62111,1.64417,1.25539,1.54854,1.63804,1.24477,1.54854,1.63228,1.2348,1.54854,1.64417,1.25539,1.54854,1.63881,1.24412,1.54854,1.64686,1.25217,1.54772,1.63881,1.24412,1.54772,1.63228,1.2348,1.54772,1.64686,1.25217,1.54772,1.66124,1.2253,1.54772,1.65764,1.22015,1.54772,1.66568,1.22974,1.54691,1.66155,1.22504,1.54691,1.65799,1.21995,1.54691,1.66595,1.22943,1.64219,1.62785,1.22434,1.64219,1.62492,1.21341,1.64219,1.62393,1.20213,1.63935,1.62652,1.22482,1.63297,1.62039,1.2142,1.62111,1.61342,1.20213,1.62111,1.62652,1.22482,1.62111,1.62039,1.2142,1.54854,1.62652,1.22482,1.54854,1.62039,1.2142,1.54854,1.61342,1.20213,1.54854,1.62747,1.22448,1.54854,1.62452,1.21348,1.54854,1.62353,1.20213,1.54772,1.62747,1.22448,1.54772,1.62452,1.21348,1.54772,1.62353,1.20213,1.54772,1.65498,1.21446,1.54772,1.65336,1.20839,1.54772,1.65281,1.20213,1.54691,1.65537,1.21432,1.54691,1.65376,1.20832,1.54691,1.65322,1.20213,1.64219,1.62785,1.17993,1.64219,1.63263,1.16968,1.64219,1.62492,1.19086,1.63935,1.62652,1.17945,1.64137,1.63228,1.16947,1.63297,1.62039,1.19006,1.62111,1.62652,1.17945,1.62111,1.63228,1.16947,1.62111,1.62039,1.19006,1.54854,1.62652,1.17945,1.54854,1.63228,1.16947,1.54854,1.62039,1.19006,1.54854,1.62747,1.17979,1.54854,1.62452,1.19079,1.54772,1.62747,1.17979,1.54772,1.63228,1.16947,1.54772,1.62452,1.19079,1.54772,1.65498,1.18981,1.54772,1.65764,1.18411,1.54772,1.65336,1.19588,1.54691,1.65537,1.18995,1.54691,1.65799,1.18432,1.54691,1.65376,1.19595,1.64219,1.63912,1.16041,1.64219,1.64712,1.15241,1.63935,1.63804,1.1595,1.63297,1.64417,1.14888,1.62111,1.63804,1.1595,1.62111,1.64417,1.14888,1.54854,1.63804,1.1595,1.54854,1.64417,1.14888,1.54854,1.63881,1.16014,1.54854,1.64686,1.15209,1.54772,1.63881,1.16014,1.54772,1.64686,1.15209,1.54772,1.66124,1.17897,1.54772,1.66568,1.17453,1.54691,1.66155,1.17923,1.54691,1.66595,1.17484,1.54663,1.70667,1.17128,1.54616,1.70104,1.16865,1.5457,1.69504,1.16704,1.54524,1.68885,1.1665,1.54644,1.69504,1.23722,1.54598,1.70104,1.23562,1.54552,1.70667,1.23299,1.54505,1.71175,1.22943,1.54459,1.71614,1.22504,1.54413,1.71971,1.21995,1.54366,1.72233,1.21432,1.5432,1.72394,1.20832,1.54274,1.72448,1.20213,1.54227,1.72394,1.19595,1.54181,1.72233,1.18995,1.54135,1.71971,1.18432,1.54088,1.71614,1.17923,1.54042,1.71175,1.17484,1.53996,1.70667,1.17128,1.53949,1.70104,1.16865,1.53903,1.69504,1.16704,1.53857,1.68885,1.1665,1.54663,1.67103,1.23299,1.54616,1.67666,1.23562,1.5457,1.68266,1.23722,1.54524,1.68885,1.23776,1.54477,1.69504,1.23722,1.54431,1.70104,1.23562,1.54385,1.70667,1.23299,1.54338,1.71175,1.22943,1.54292,1.71614,1.22504,1.54246,1.71971,1.21995,1.542,1.72233,1.21432,1.54153,1.72394,1.20832,1.54107,1.72448,1.20213,1.54061,1.72394,1.19595,1.54014,1.72233,1.18995,1.53968,1.71971,1.18432,1.53922,1.71614,1.17923,1.53875,1.71175,1.17484,1.53829,1.70667,1.17128,1.53783,1.70104,1.16865,1.53736,1.69504,1.16704,1.5369,1.68885,1.1665,1.54644,1.68266,1.16704,1.54598,1.67666,1.16865,1.54552,1.67103,1.17128,1.54505,1.66595,1.17484,1.54459,1.66155,1.17923,1.54413,1.65799,1.18432,1.54366,1.65537,1.18995,1.5432,1.65376,1.19595,1.54274,1.65322,1.20213,1.54227,1.65376,1.20832,1.54181,1.65537,1.21432,1.54135,1.65799,1.21995,1.54088,1.66155,1.22504,1.54042,1.66595,1.22943,1.53996,1.67103,1.23299,1.53949,1.67666,1.23562,1.53903,1.68266,1.23722,1.53857,1.68885,1.23776,1.5381,1.69504,1.23722,1.53764,1.70104,1.23562,1.53718,1.70667,1.23299,1.53671,1.71175,1.22943,1.53625,1.71614,1.22504,1.53579,1.71971,1.21995,1.53532,1.72233,1.21432,1.53486,1.72394,1.20832,1.5344,1.72448,1.20213,1.53394,1.72394,1.19595,1.53347,1.72233,1.18995,1.53301,1.71971,1.18432,1.53255,1.71614,1.17923,1.53208,1.71175,1.17484,1.53162,1.70667,1.17128,1.53116,1.70104,1.16865,1.54477,1.68266,1.16704,1.54431,1.67666,1.16865,1.54385,1.67103,1.17128,1.54338,1.66595,1.17484,1.54292,1.66155,1.17923,1.54246,1.65799,1.18432,1.542,1.65537,1.18995,1.54153,1.65376,1.19595,1.54107,1.65322,1.20213,1.54061,1.65376,1.20832,1.54014,1.65537,1.21432,1.53968,1.65799,1.21995,1.53922,1.66155,1.22504,1.53875,1.66595,1.22943,1.53829,1.67103,1.23299,1.53783,1.67666,1.23562,1.53736,1.68266,1.23722,1.5369,1.68885,1.23776,1.53644,1.69504,1.23722,1.53597,1.70104,1.23562,1.53551,1.70667,1.23299,1.53505,1.71175,1.22943,1.53458,1.71614,1.22504,1.53412,1.71971,1.21995,1.53366,1.72233,1.21432,1.53319,1.72394,1.20832,1.53273,1.72448,1.20213,1.53227,1.72394,1.19595,1.5318,1.72233,1.18995,1.53134,1.71971,1.18432,1.5381,1.68268,1.16717,1.53764,1.67675,1.16889,1.53718,1.67122,1.1716,1.53671,1.66627,1.17522,1.53625,1.66203,1.17963,1.53579,1.65864,1.18469,1.53532,1.65619,1.19025,1.53486,1.65475,1.19612,1.5344,1.65434,1.20213,1.53394,1.65499,1.2081,1.53347,1.65666,1.21385,1.53301,1.65929,1.2192,1.53255,1.6628,1.22399,1.53208,1.66707,1.22809,1.53162,1.67197,1.23137,1.53116,1.67735,1.23374,1.53644,1.68268,1.16717,1.53597,1.67675,1.16889,1.53551,1.67122,1.1716,1.53505,1.66627,1.17522,1.53458,1.66203,1.17963,1.53412,1.65864,1.18469,1.53366,1.65619,1.19025,1.53319,1.65475,1.19612,1.53273,1.65434,1.20213,1.53227,1.65499,1.2081,1.5318,1.65666,1.21385,1.53134,1.65929,1.2192,1.64048,2.53243,.790284,1.64219,2.52342,.788603,1.64219,2.53243,.787815,1.64219,2.5147,.790942,1.64219,2.50651,.794761,1.64048,2.48967,.81497,1.64219,2.4991,.799944,1.64219,2.49271,.806333,1.64219,2.48753,.813735,1.64219,2.48371,.821925,1.64219,2.48137,.830653,1.64219,2.48059,.839655,1.64048,2.48967,.864341,1.64219,2.48137,.848657,1.64219,2.48371,.857386,1.64219,2.48753,.865576,1.64219,2.49271,.872978,1.64219,2.4991,.879367,1.64219,2.50651,.884551,1.64048,2.53243,.889027,1.64219,2.5147,.888369,1.64219,2.52342,.890708,1.64219,2.53243,.891496,1.57073,2.53243,.790284,1.57073,2.48967,.81497,1.57073,2.48967,.864341,1.57073,2.53243,.889027,1.64219,2.54143,.788603,1.64219,2.55016,.790942,1.64219,2.55835,.794761,1.64048,2.57518,.81497,1.64219,2.56575,.799944,1.64219,2.57214,.806333,1.64219,2.57732,.813735,1.64219,2.58114,.821925,1.64219,2.58348,.830653,1.64219,2.58427,.839655,1.64048,2.57518,.864341,1.64219,2.58348,.848657,1.64219,2.58114,.857386,1.64219,2.57732,.865576,1.64219,2.57214,.872978,1.64219,2.56575,.879367,1.64219,2.55835,.884551,1.64219,2.55016,.888369,1.64219,2.54143,.890708,1.57073,2.57518,.81497,1.57073,2.57518,.864341,1.64219,2.52115,.775727,1.64219,2.53243,.77474,1.64219,2.51022,.778655,1.64219,2.49997,.783437,1.63935,2.52091,.774332,1.64137,2.53243,.774332,1.63297,2.50865,.774332,1.62111,2.49471,.774332,1.62111,2.52091,.774332,1.62111,2.53243,.774332,1.62111,2.50865,.774332,1.54854,2.52091,.774332,1.54854,2.53243,.774332,1.54854,2.50865,.774332,1.54854,2.49471,.774332,1.54854,2.52108,.775325,1.54854,2.51009,.778272,1.54854,2.49977,.783084,1.54772,2.52108,.775325,1.54772,2.53243,.774332,1.54772,2.51009,.778272,1.54772,2.49977,.783084,1.54772,2.52617,.804164,1.54772,2.53243,.803616,1.54772,2.5201,.80579,1.54772,2.51441,.808445,1.54691,2.52624,.804566,1.54691,2.53243,.804025,1.54691,2.52024,.806173,1.54691,2.51461,.808798,1.64219,2.5437,.775727,1.64219,2.55463,.778655,1.64219,2.56488,.783437,1.63935,2.54394,.774332,1.63297,2.5562,.774332,1.62111,2.57014,.774332,1.62111,2.54394,.774332,1.62111,2.5562,.774332,1.54854,2.54394,.774332,1.54854,2.5562,.774332,1.54854,2.57014,.774332,1.54854,2.54377,.775325,1.54854,2.55477,.778272,1.54854,2.56509,.783084,1.54772,2.54377,.775325,1.54772,2.55477,.778272,1.54772,2.56509,.783084,1.54772,2.53868,.804164,1.54772,2.54475,.80579,1.54772,2.55045,.808445,1.54691,2.53861,.804566,1.54691,2.54461,.806173,1.54691,2.55024,.808798,1.64219,2.58215,.797929,1.64219,2.58864,.807198,1.64219,2.57415,.789928,1.63935,2.58324,.797019,1.64137,2.589,.806994,1.63297,2.57711,.786403,1.62111,2.58324,.797019,1.62111,2.589,.806994,1.62111,2.57711,.786403,1.54854,2.58324,.797019,1.54854,2.589,.806994,1.54854,2.57711,.786403,1.54854,2.58247,.797666,1.54854,2.57442,.789615,1.54772,2.58247,.797666,1.54772,2.589,.806994,1.54772,2.57442,.789615,1.54772,2.56003,.81649,1.54772,2.56364,.821636,1.54772,2.55559,.812048,1.54691,2.55972,.816752,1.54691,2.56328,.82184,1.54691,2.55533,.812361,1.64219,2.59343,.817453,1.64219,2.59636,.828383,1.64219,2.59734,.839655,1.63935,2.59476,.816969,1.63297,2.60089,.827584,1.62111,2.60786,.839655,1.62111,2.59476,.816969,1.62111,2.60089,.827584,1.54854,2.59476,.816969,1.54854,2.60089,.827584,1.54854,2.60786,.839655,1.54854,2.59381,.817314,1.54854,2.59676,.828312,1.54854,2.59775,.839655,1.54772,2.59381,.817314,1.54772,2.59676,.828312,1.54772,2.59775,.839655,1.54772,2.56629,.82733,1.54772,2.56792,.833397,1.54772,2.56847,.839655,1.54691,2.56591,.827469,1.54691,2.56752,.833468,1.54691,2.56806,.839655,1.64219,2.59343,.861858,1.64219,2.58864,.872113,1.64219,2.59636,.850928,1.63935,2.59476,.862342,1.64137,2.589,.872317,1.63297,2.60089,.851727,1.62111,2.59476,.862342,1.62111,2.589,.872317,1.62111,2.60089,.851727,1.54854,2.59476,.862342,1.54854,2.589,.872317,1.54854,2.60089,.851727,1.54854,2.59381,.861997,1.54854,2.59676,.850999,1.54772,2.59381,.861997,1.54772,2.589,.872317,1.54772,2.59676,.850999,1.54772,2.56629,.851982,1.54772,2.56364,.857675,1.54772,2.56792,.845914,1.54691,2.56591,.851842,1.54691,2.56328,.857471,1.54691,2.56752,.845843,1.64219,2.58215,.881382,1.64219,2.57415,.889383,1.64219,2.56488,.895874,1.63935,2.58324,.882292,1.63297,2.57711,.892907,1.62111,2.57014,.904979,1.62111,2.58324,.882292,1.62111,2.57711,.892907,1.54854,2.58324,.882292,1.54854,2.57711,.892907,1.54854,2.57014,.904979,1.54854,2.58247,.881644,1.54854,2.57442,.889696,1.54854,2.56509,.896227,1.54772,2.58247,.881644,1.54772,2.57442,.889696,1.54772,2.56509,.896227,1.54772,2.56003,.862821,1.54772,2.55559,.867263,1.54772,2.55045,.870866,1.54691,2.55972,.862559,1.54691,2.55533,.86695,1.54691,2.55024,.870513,1.64219,2.5437,.903584,1.64219,2.53243,.904571,1.64219,2.55463,.900656,1.63935,2.54394,.904979,1.64137,2.53243,.904979,1.63297,2.5562,.904979,1.62111,2.54394,.904979,1.62111,2.53243,.904979,1.62111,2.5562,.904979,1.54854,2.54394,.904979,1.54854,2.53243,.904979,1.54854,2.5562,.904979,1.54854,2.54377,.903987,1.54854,2.55477,.901039,1.54772,2.54377,.903987,1.54772,2.53243,.904979,1.54772,2.55477,.901039,1.54772,2.53868,.875147,1.54772,2.53243,.875695,1.54772,2.54475,.873521,1.54691,2.53861,.874745,1.54691,2.53243,.875286,1.54691,2.54461,.873138,1.64219,2.52115,.903584,1.64219,2.51022,.900656,1.64219,2.49997,.895874,1.63935,2.52091,.904979,1.63297,2.50865,.904979,1.62111,2.49471,.904979,1.62111,2.52091,.904979,1.62111,2.50865,.904979,1.54854,2.52091,.904979,1.54854,2.50865,.904979,1.54854,2.49471,.904979,1.54854,2.52108,.903987,1.54854,2.51009,.901039,1.54854,2.49977,.896227,1.54772,2.52108,.903987,1.54772,2.51009,.901039,1.54772,2.49977,.896227,1.54772,2.52617,.875147,1.54772,2.5201,.873521,1.54772,2.51441,.870866,1.54691,2.52624,.874745,1.54691,2.52024,.873138,1.54691,2.51461,.870513,1.64219,2.4827,.881382,1.64219,2.47621,.872113,1.64219,2.4907,.889383,1.63935,2.48161,.882292,1.64137,2.47586,.872317,1.63297,2.48774,.892907,1.62111,2.48161,.882292,1.62111,2.47586,.872317,1.62111,2.48774,.892907,1.54854,2.48161,.882292,1.54854,2.47586,.872317,1.54854,2.48774,.892907,1.54854,2.48239,.881644,1.54854,2.49044,.889696,1.54772,2.48239,.881644,1.54772,2.47586,.872317,1.54772,2.49044,.889696,1.54772,2.50482,.862821,1.54772,2.50122,.857675,1.54772,2.50926,.867263,1.54691,2.50513,.862559,1.54691,2.50157,.857471,1.54691,2.50952,.86695,1.64219,2.47143,.861858,1.64219,2.4685,.850928,1.64219,2.46751,.839655,1.63935,2.4701,.862342,1.63297,2.46397,.851727,1.62111,2.457,.839655,1.62111,2.4701,.862342,1.62111,2.46397,.851727,1.54854,2.4701,.862342,1.54854,2.46397,.851727,1.54854,2.457,.839655,1.54854,2.47104,.861997,1.54854,2.4681,.850999,1.54854,2.4671,.839655,1.54772,2.47104,.861997,1.54772,2.4681,.850999,1.54772,2.4671,.839655,1.54772,2.49856,.851982,1.54772,2.49694,.845914,1.54772,2.49639,.839655,1.54691,2.49894,.851842,1.54691,2.49734,.845843,1.54691,2.4968,.839655,1.64219,2.47143,.817453,1.64219,2.47621,.807198,1.64219,2.4685,.828383,1.63935,2.4701,.816969,1.64137,2.47586,.806994,1.63297,2.46397,.827584,1.62111,2.4701,.816969,1.62111,2.47586,.806994,1.62111,2.46397,.827584,1.54854,2.4701,.816969,1.54854,2.47586,.806994,1.54854,2.46397,.827584,1.54854,2.47104,.817314,1.54854,2.4681,.828312,1.54772,2.47104,.817314,1.54772,2.47586,.806994,1.54772,2.4681,.828312,1.54772,2.49856,.82733,1.54772,2.50122,.821636,1.54772,2.49694,.833397,1.54691,2.49894,.827469,1.54691,2.50157,.82184,1.54691,2.49734,.833468,1.64219,2.4827,.797929,1.64219,2.4907,.789928,1.63935,2.48161,.797019,1.63297,2.48774,.786403,1.62111,2.48161,.797019,1.62111,2.48774,.786403,1.54854,2.48161,.797019,1.54854,2.48774,.786403,1.54854,2.48239,.797666,1.54854,2.49044,.789615,1.54772,2.48239,.797666,1.54772,2.49044,.789615,1.54772,2.50482,.81649,1.54772,2.50926,.812048,1.54691,2.50513,.816752,1.54691,2.50952,.812361,1.54663,2.55024,.808798,1.54616,2.54461,.806173,1.5457,2.53861,.804566,1.54524,2.53243,.804025,1.54644,2.53861,.874745,1.54598,2.54461,.873138,1.54552,2.55024,.870513,1.54505,2.55533,.86695,1.54459,2.55972,.862559,1.54413,2.56328,.857471,1.54366,2.56591,.851842,1.5432,2.56752,.845843,1.54274,2.56806,.839655,1.54227,2.56752,.833468,1.54181,2.56591,.827469,1.54135,2.56328,.82184,1.54088,2.55972,.816752,1.54042,2.55533,.812361,1.53996,2.55024,.808798,1.53949,2.54461,.806173,1.53903,2.53861,.804566,1.53857,2.53243,.804025,1.54663,2.51461,.870513,1.54616,2.52024,.873138,1.5457,2.52624,.874745,1.54524,2.53243,.875286,1.54477,2.53861,.874745,1.54431,2.54461,.873138,1.54385,2.55024,.870513,1.54338,2.55533,.86695,1.54292,2.55972,.862559,1.54246,2.56328,.857471,1.542,2.56591,.851842,1.54153,2.56752,.845843,1.54107,2.56806,.839655,1.54061,2.56752,.833468,1.54014,2.56591,.827469,1.53968,2.56328,.82184,1.53922,2.55972,.816752,1.53875,2.55533,.812361,1.53829,2.55024,.808798,1.53783,2.54461,.806173,1.53736,2.53861,.804566,1.5369,2.53243,.804025,1.54644,2.52624,.804566,1.54598,2.52024,.806173,1.54552,2.51461,.808798,1.54505,2.50952,.812361,1.54459,2.50513,.816752,1.54413,2.50157,.82184,1.54366,2.49894,.827469,1.5432,2.49734,.833468,1.54274,2.4968,.839655,1.54227,2.49734,.845843,1.54181,2.49894,.851842,1.54135,2.50157,.857471,1.54088,2.50513,.862559,1.54042,2.50952,.86695,1.53996,2.51461,.870513,1.53949,2.52024,.873138,1.53903,2.52624,.874745,1.53857,2.53243,.875286,1.5381,2.53861,.874745,1.53764,2.54461,.873138,1.53718,2.55024,.870513,1.53671,2.55533,.86695,1.53625,2.55972,.862559,1.53579,2.56328,.857471,1.53532,2.56591,.851842,1.53486,2.56752,.845843,1.5344,2.56806,.839655,1.53394,2.56752,.833468,1.53347,2.56591,.827469,1.53301,2.56328,.82184,1.53255,2.55972,.816752,1.53208,2.55533,.812361,1.53162,2.55024,.808798,1.53116,2.54461,.806173,1.54477,2.52624,.804566,1.54431,2.52024,.806173,1.54385,2.51461,.808798,1.54338,2.50952,.812361,1.54292,2.50513,.816752,1.54246,2.50157,.82184,1.542,2.49894,.827469,1.54153,2.49734,.833468,1.54107,2.4968,.839655,1.54061,2.49734,.845843,1.54014,2.49894,.851842,1.53968,2.50157,.857471,1.53922,2.50513,.862559,1.53875,2.50952,.86695,1.53829,2.51461,.870513,1.53783,2.52024,.873138,1.53736,2.52624,.874745,1.5369,2.53243,.875286,1.53644,2.53861,.874745,1.53597,2.54461,.873138,1.53551,2.55024,.870513,1.53505,2.55533,.86695,1.53458,2.55972,.862559,1.53412,2.56328,.857471,1.53366,2.56591,.851842,1.53319,2.56752,.845843,1.53273,2.56806,.839655,1.53227,2.56752,.833468,1.5318,2.56591,.827469,1.53134,2.56328,.82184,1.5381,2.52626,.804689,1.53764,2.52033,.806408,1.53718,2.5148,.809123,1.53671,2.50984,.812744,1.53625,2.50561,.817154,1.53579,2.50222,.822215,1.53532,2.49977,.827768,1.53486,2.49832,.833642,1.5344,2.49792,.839655,1.53394,2.49857,.845626,1.53347,2.50024,.851372,1.53301,2.50287,.856721,1.53255,2.50638,.861514,1.53208,2.51065,.86561,1.53162,2.51555,.868889,1.53116,2.52092,.871258,1.53644,2.52626,.804689,1.53597,2.52033,.806408,1.53551,2.5148,.809123,1.53505,2.50984,.812744,1.53458,2.50561,.817154,1.53412,2.50222,.822215,1.53366,2.49977,.827768,1.53319,2.49832,.833642,1.53273,2.49792,.839655,1.53227,2.49857,.845626,1.5318,2.50024,.851372,1.53134,2.50287,.856721,1.12718,1.44272,-.0206697,1.12718,1.45129,-.0663621,1.12718,1.78847,-.210355,1.12718,1.82741,-.18495,1.12718,1.79303,.207915,1.12718,1.75028,.226173,1.12718,1.45279,.0713115,1.12718,1.44323,.025817,1.12718,1.69964,-.236248,1.12718,1.74533,-.227676,1.12718,1.86392,.148437,1.12718,1.8314,.181667,1.12718,1.65315,-.235741,1.12718,1.4973,.152436,1.12718,1.47105,.114066,1.12718,1.90664,.0663607,1.12718,1.88932,.109503,1.12718,1.5649,-.207916,1.12718,1.60766,-.226174,1.12718,1.56946,.210354,1.12718,1.53053,.184949,1.12718,1.91471,-.0258183,1.12718,1.91522,.0206684,1.12718,1.49402,-.148438,1.12718,1.52653,-.181668,1.12718,1.6583,.236247,1.12718,1.61261,.227675,1.12718,1.88688,-.114067,1.12718,1.90514,-.0713128,1.12718,1.46861,-.109504,1.12718,1.86064,-.152437,1.12718,1.70479,.235739,1.57609,.783065,.282476,1.57609,.745171,.102266,1.57609,1.76084,-.935806,1.57609,1.94183,-.901852,1.57609,2.41158,.58798,1.57609,2.28279,.719607,1.57609,1.5767,-.933797,1.57609,.959361,.603821,1.57609,.855388,.45183,1.57609,2.58082,.262865,1.57609,2.51221,.433757,1.57609,1.22714,-.823581,1.57609,1.39649,-.895903,1.57609,1.24521,.83324,1.57609,1.09099,.732607,1.57609,2.61276,-.102268,1.57609,2.61477,.0818719,1.57609,.946361,-.587981,1.57609,1.07515,-.719608,1.57609,1.5971,.935805,1.57609,1.4161,.901851,1.57609,2.50255,-.451832,1.57609,2.57487,-.282477,1.57609,.777116,-.262867,1.57609,.845728,-.433759,1.57609,2.26695,-.732608,1.57609,2.39857,-.603822,1.57609,1.96144,.895902,1.57609,1.78124,.933796,1.57609,.743163,-.0818736,1.57609,2.11273,-.833241,1.57609,2.1308,.823579,1.53932,.783065,.282476,1.53932,.745171,.102266,1.53932,1.76084,-.935806,1.53932,1.94183,-.901852,1.53932,2.41158,.58798,1.53932,2.28279,.719607,1.53932,1.5767,-.933797,1.53932,.959361,.603821,1.53932,.855388,.45183,1.53932,2.58082,.262865,1.53932,2.51221,.433757,1.53932,1.22714,-.823581,1.53932,1.39649,-.895903,1.53932,1.24521,.83324,1.53932,1.09099,.732607,1.53932,2.61276,-.102268,1.53932,2.61477,.0818719,1.53932,.946361,-.587981,1.53932,1.07515,-.719608,1.53932,1.5971,.935805,1.53932,1.4161,.901851,1.53932,2.50255,-.451832,1.53932,2.57487,-.282477,1.53932,.777116,-.262867,1.53932,.845728,-.433759,1.53932,2.26695,-.732608,1.53932,2.39857,-.603822,1.53932,1.96144,.895902,1.53932,1.78124,.933796,1.53932,.743163,-.0818736,1.53932,2.11273,-.833241,1.53932,2.1308,.823579,1.58449,.785681,.281651,1.58449,1.7606,-.933073,1.58449,2.40944,.586263,1.58449,1.577,-.931071,1.58449,.961462,.602058,1.58449,2.57819,.262098,1.58449,1.22846,-.821176,1.58449,1.24648,.830807,1.58449,2.61004,-.101969,1.58449,.9485,-.586264,1.58449,1.59733,.933072,1.58449,2.50014,-.450512,1.58449,.77975,-.262099,1.58449,2.26523,-.730469,1.58449,1.96062,.893286,1.58449,.747898,.101968,1.58449,1.94107,-.899218,1.58449,2.28103,.717505,1.58449,.857793,.450511,1.58449,2.50978,.43249,1.58449,1.39732,-.893287,1.58449,1.0927,.730468,1.58449,2.61204,.0816328,1.58449,1.07691,-.717507,1.58449,1.41687,.899218,1.58449,2.57225,-.281653,1.58449,.848161,-.432492,1.58449,2.39647,-.602059,1.58449,1.78094,.931069,1.58449,.745895,-.0816345,1.58449,2.11146,-.830807,1.58449,2.12948,.821174,1.58142,.785681,.281651,1.58142,1.7606,-.933073,1.58142,2.40944,.586263,1.58142,1.577,-.931071,1.58142,.961462,.602058,1.58142,2.57819,.262098,1.58142,1.22846,-.821176,1.58142,1.24648,.830807,1.58142,2.61004,-.101969,1.58142,.9485,-.586264,1.58142,1.59733,.933072,1.58142,2.50014,-.450512,1.58142,.77975,-.262099,1.58142,2.26523,-.730469,1.58142,1.96062,.893286,1.58142,.747898,.101968,1.58142,1.94107,-.899218,1.58142,2.28103,.717505,1.58142,.857793,.450511,1.58142,2.50978,.43249,1.58142,1.39732,-.893287,1.58142,1.0927,.730468,1.58142,2.61204,.0816328,1.58142,1.07691,-.717507,1.58142,1.41687,.899218,1.58142,2.57225,-.281653,1.58142,.848161,-.432492,1.58142,2.39647,-.602059,1.58142,1.78094,.931069,1.58142,.745895,-.0816345,1.58142,2.11146,-.830807,1.58142,2.12948,.821174,1.53475,.785681,.281651,1.53475,1.7606,-.933073,1.53475,2.40944,.586263,1.53475,1.577,-.931071,1.53475,.961462,.602058,1.53475,2.57819,.262098,1.53475,1.22846,-.821176,1.53475,1.24648,.830807,1.53475,2.61004,-.101969,1.53475,.9485,-.586264,1.53475,1.59733,.933072,1.53475,2.50014,-.450512,1.53475,.77975,-.262099,1.53475,2.26523,-.730469,1.53475,1.96062,.893286,1.53475,.747898,.101968,1.53475,1.94107,-.899218,1.53475,2.28103,.717505,1.53475,.857793,.450511,1.53475,2.50978,.43249,1.53475,1.39732,-.893287,1.53475,1.0927,.730468,1.53475,2.61204,.0816328,1.53475,1.07691,-.717507,1.53475,1.41687,.899218,1.53475,2.57225,-.281653,1.53475,.848161,-.432492,1.53475,2.39647,-.602059,1.53475,1.78094,.931069,1.53475,.745895,-.0816345,1.53475,2.11146,-.830807,1.53475,2.12948,.821174,1.58449,2.60601,-.101528,1.58449,2.56839,-.280434,1.58449,1.76025,-.929038,1.58449,1.57744,-.927044,1.58449,1.7805,.927043,1.58449,1.9594,.889423,1.58449,1.23041,-.817624,1.58449,1.07951,-.714403,1.58449,1.93993,-.895329,1.58449,.851754,-.430622,1.58449,.783639,-.260966,1.58449,.964565,.599454,1.58449,1.09524,.727309,1.58449,1.418,.895329,1.58449,1.59769,.929037,1.58449,2.2627,-.72731,1.58449,2.10959,-.827214,1.58449,2.40628,.583727,1.58449,2.50618,.43062,1.58449,2.60801,.0812798,1.58449,2.12753,.817623,1.58449,2.27842,.714402,1.58449,1.39854,-.889424,1.58449,.951659,-.583729,1.58449,.861344,.448563,1.58449,.749931,-.0812814,1.58449,.751925,.101527,1.58449,1.24835,.827213,1.58449,2.39337,-.599455,1.58449,2.5743,.260964,1.58449,.789544,.280433,1.58449,2.49659,-.448564,1.17021,1.68136,-.0273729,1.17021,1.68666,-.0263798,1.17021,1.69166,-.0243729,1.17021,1.69617,-.0214294,1.17021,1.70002,-.0176624,1.17021,1.70306,-.0132167,1.17021,1.70517,-.00826307,1.17021,1.70628,-.00299194,1.17021,1.70634,.00239414,1.17021,1.70535,.0076882,1.17021,1.70334,.0126868,1.17021,1.7004,.0171978,1.17021,1.69663,.0210479,1.17021,1.69218,.0240891,1.17021,1.68723,.0262045,1.17021,1.68196,.0273129,1.17021,1.67657,.0273717,1.17021,1.67128,.0263785,1.17021,1.66628,.0243716,1.17021,1.66177,.0214281,1.17021,1.65792,.0176611,1.17021,1.65488,.0132154,1.17021,1.65276,.00826181,1.17021,1.65165,.00299068,1.17021,1.6516,-.00239541,1.17021,1.65259,-.00768946,1.17021,1.6546,-.012688,1.17021,1.65754,-.017199,1.17021,1.66131,-.0210491,1.17021,1.66575,-.0240903,1.17021,1.67071,-.0262058,1.17021,1.67598,-.0273142,1.17021,1.67897,-6.27585e-7,1.54674,2.81154,-.621352,1.49106,2.81154,-.621352,1.54674,.870385,1.00747,1.49106,.870385,1.00747,1.49106,1.79156,-1.28691,1.54674,1.79156,-1.28691,1.49106,.671497,-.808583,1.54674,.671497,-.808583,1.49106,2.82483,.596497,1.54674,2.82483,.596497,1.54674,.533108,-.596499,1.49106,.533108,-.596499,1.54674,1.53833,-1.28414,1.49106,1.53833,-1.28414,1.54674,.546392,.621351,1.49106,.546392,.621351,1.54674,.394824,.140635,1.49106,.394824,.140635,1.49106,2.50934,.989593,1.54674,2.50934,.989593,1.49106,.689374,.830367,1.54674,.689374,.830367,1.49106,1.29051,-1.23203,1.54674,1.29051,-1.23203,1.49106,.848602,-.989595,1.54674,.848602,-.989595,1.49106,2.66856,-.830368,1.54674,2.66856,-.830368,1.49106,2.911,-.388459,1.54674,2.911,-.388459,1.49106,1.8196,1.28414,1.54674,1.8196,1.28414,1.49106,.438754,-.361491,1.54674,.438754,-.361491,1.49106,2.27547,-1.14586,1.54674,2.27547,-1.14586,1.49106,2.30032,1.13257,1.54674,2.30032,1.13257,1.54674,2.04046,-1.24021,1.49106,2.04046,-1.24021,1.49106,.446934,.388457,1.54674,.446934,.388457,1.49106,2.91918,.361489,1.54674,2.91918,.361489,1.49106,1.08247,1.14586,1.54674,1.08247,1.14586,1.54674,1.31748,1.24021,1.49106,1.31748,1.24021,1.49106,1.56638,1.28691,1.54674,1.56638,1.28691,1.49106,2.96587,.112589,1.54674,2.96587,.112589,1.49106,2.48755,-1.00747,1.54674,2.48755,-1.00747,1.49106,2.68644,.808582,1.54674,2.68644,.808582,1.54674,1.05762,-1.13258,1.49106,1.05762,-1.13258,1.54674,.392061,-.112591,1.49106,.392061,-.112591,1.54674,2.96311,-.140637,1.49106,2.96311,-.140637,1.54674,2.06743,1.23203,1.49106,2.06743,1.23203,1.55903,2.89624,-.133313,1.55903,2.82936,-.125989,1.55903,1.31074,-1.16787,1.55903,1.33097,-1.10371,1.55903,2.2444,-1.08619,1.55903,2.21334,-1.02652,1.55903,.912494,.955006,1.55903,.954602,.90254,1.55903,2.89886,.106726,1.55903,2.83184,.100863,1.55903,.50334,-.342666,1.55903,.567926,-.32384,1.55903,.891844,-.93806,1.55903,.935087,-.886525,1.55903,1.54566,-1.21727,1.55903,1.55298,-1.1504,1.55903,1.80496,1.1504,1.55903,1.81228,1.21727,1.55903,2.78268,-.348,1.55903,2.84684,-.368229,1.55903,2.0472,1.16787,1.55903,2.02697,1.10371,1.55903,.511095,.368228,1.55903,.575255,.347998,1.55903,2.42285,.886524,1.55903,2.46609,.938058,1.55903,1.1446,1.02651,1.55903,1.11353,1.08619,1.55903,2.76516,.565433,1.55903,2.70548,.53437,1.55903,1.57224,1.21989,1.55903,1.5781,1.15287,1.55903,.605373,.588993,1.55903,.664353,.556635,1.55903,.526097,-.100864,1.55903,.459079,-.106728,1.55903,2.56549,-.743882,1.55903,2.61703,-.787125,1.55903,.723962,-.766475,1.55903,.776428,-.724367,1.55903,.461697,.133312,1.55903,.528571,.125988,1.55903,2.00281,-1.11104,1.55903,2.02163,-1.17563,1.55903,1.12233,-1.01462,1.55903,1.08998,-1.0736,1.55903,2.69358,-.556637,1.55903,2.75256,-.588995,1.55903,.792443,.743881,1.55903,.740909,.787124,1.55903,2.44544,-.955007,1.55903,2.40333,-.902541,1.55903,1.77983,-1.15287,1.55903,1.78569,-1.21989,1.55903,2.79001,.323839,1.55903,2.8546,.342664,1.55903,2.63397,.766473,1.55903,2.58151,.724365,1.55903,.652453,-.534371,1.55903,.592781,-.565435,1.55903,2.26796,1.07359,1.55903,2.2356,1.01461,1.55903,1.3363,1.17563,1.55903,1.35513,1.11104,1.53228,.593114,-.0950012,1.50553,.593114,-.0950012,1.50553,2.72542,.305014,1.53228,2.72542,.305014,1.50553,.632512,-.305015,1.53228,.632512,-.305015,1.50553,2.52904,.682257,1.53228,2.52904,.682257,1.50553,2.18227,-.966843,1.53228,2.18227,-.966843,1.50553,1.79763,1.08352,1.53228,1.79763,1.08352,1.50553,2.71852,-.32777,1.53228,2.71852,-.32777,1.50553,1.58397,1.08585,1.53228,1.58397,1.08585,1.50553,.639415,.327769,1.53228,.639415,.327769,1.50553,.97833,-.834991,1.53228,.97833,-.834991,1.50553,1.17566,.966843,1.53228,1.17566,.966843,1.50553,2.51396,-.70064,1.53228,2.51396,-.70064,1.50553,1.3512,-1.03955,1.53228,1.3512,-1.03955,1.50553,.843978,.700639,1.53228,.843978,.700639,1.53228,2.00674,1.03955,1.50553,2.00674,1.03955,1.53228,1.98398,-1.04646,1.50553,1.98398,-1.04646,1.53228,.595445,.118664,1.50553,.595445,.118664,1.50553,2.64581,.503306,1.53228,2.64581,.503306,1.53228,2.76249,-.118665,1.50553,2.76249,-.118665,1.53228,.723334,.524278,1.50553,.723334,.524278,1.50553,.828893,-.682259,1.53228,.828893,-.682259,1.53228,1.15469,-.955635,1.50553,1.15469,-.955635,1.50553,2.37961,.834989,1.53228,2.37961,.834989,1.50553,1.77397,-1.08585,1.53228,1.77397,-1.08585,1.50553,2.36123,-.850076,1.53228,2.36123,-.850076,1.53228,1.5603,-1.08352,1.50553,1.5603,-1.08352,1.53228,.99671,.850075,1.50553,.99671,.850075,1.50553,2.76482,.0949995,1.53228,2.76482,.0949995,1.50553,2.20325,.955633,1.53228,2.20325,.955633,1.53228,.712125,-.503308,1.50553,.712125,-.503308,1.53228,2.6346,-.524279,1.50553,2.6346,-.524279,1.53228,1.37395,1.04646,1.50553,1.37395,1.04646],faces:[42,0,1,2,1,0,0,0,0,1,2,42,0,3,1,1,0,0,0,0,3,1,42,0,4,3,1,0,0,0,0,4,3,42,0,5,4,1,0,0,0,0,5,4,42,5,6,4,1,0,0,0,5,6,4,42,5,7,6,1,0,0,0,5,7,6,42,5,8,7,1,0,0,0,5,8,7,42,5,9,8,1,0,0,0,5,9,8,42,5,10,9,1,0,0,0,5,10,9,42,5,11,10,1,0,0,0,5,11,10,42,5,12,11,1,0,0,0,5,12,11,42,12,13,11,1,0,0,0,12,13,11,42,12,14,13,1,0,0,0,12,14,13,42,12,15,14,1,0,0,0,12,15,14,42,12,16,15,1,0,0,0,12,16,15,42,12,17,16,1,0,0,0,12,17,16,42,12,18,17,1,0,0,0,12,18,17,42,12,19,18,1,0,0,0,12,19,18,42,19,20,18,1,0,0,0,19,20,18,42,19,21,20,1,0,0,0,19,21,20,42,19,22,21,1,0,0,0,19,22,21,43,0,23,24,5,1,0,0,0,0,0,23,24,5,43,5,24,25,12,1,0,0,0,0,5,24,25,12,43,12,25,26,19,1,0,0,0,0,12,25,26,19,42,23,25,24,1,0,0,0,23,25,24,42,23,26,25,1,0,0,0,23,26,25,42,2,27,0,1,0,0,0,2,27,0,42,27,28,0,1,0,0,0,27,28,0,42,28,29,0,1,0,0,0,28,29,0,42,29,30,0,1,0,0,0,29,30,0,42,29,31,30,1,0,0,0,29,31,30,42,31,32,30,1,0,0,0,31,32,30,42,32,33,30,1,0,0,0,32,33,30,42,33,34,30,1,0,0,0,33,34,30,42,34,35,30,1,0,0,0,34,35,30,42,35,36,30,1,0,0,0,35,36,30,42,36,37,30,1,0,0,0,36,37,30,42,36,38,37,1,0,0,0,36,38,37,42,38,39,37,1,0,0,0,38,39,37,42,39,40,37,1,0,0,0,39,40,37,42,40,41,37,1,0,0,0,40,41,37,42,41,42,37,1,0,0,0,41,42,37,42,42,43,37,1,0,0,0,42,43,37,42,43,19,37,1,0,0,0,43,19,37,42,43,44,19,1,0,0,0,43,44,19,42,44,45,19,1,0,0,0,44,45,19,42,45,22,19,1,0,0,0,45,22,19,43,23,0,30,46,1,0,0,0,0,23,0,30,46,43,37,47,46,30,1,0,0,0,0,37,47,46,30,43,19,26,47,37,1,0,0,0,0,19,26,47,37,42,46,47,23,1,0,0,0,46,47,23,42,47,26,23,1,0,0,0,47,26,23,43,1,48,49,2,1,0,0,0,0,1,48,49,2,43,3,50,48,1,1,0,0,0,0,3,50,48,1,43,4,51,50,3,1,0,0,0,0,4,51,50,3,43,48,52,53,49,1,0,0,0,0,48,52,53,49,43,50,54,52,48,1,0,0,0,0,50,54,52,48,43,51,55,54,50,1,0,0,0,0,51,55,54,50,43,52,56,57,53,1,0,0,0,0,52,56,56,53,43,54,58,56,52,1,0,0,0,0,54,56,56,52,42,55,58,54,1,0,0,0,55,56,54,43,56,59,60,57,1,0,0,0,0,56,57,58,56,43,58,61,59,56,1,0,0,0,0,56,57,57,56,43,55,62,61,58,1,0,0,0,0,55,59,57,56,42,59,63,60,1,0,0,0,57,60,58,43,61,64,63,59,1,0,0,0,0,57,61,60,57,43,62,65,64,61,1,0,0,0,0,59,62,61,57,43,63,66,67,60,1,0,0,0,0,60,63,64,58,43,64,68,66,63,1,0,0,0,0,61,65,63,60,43,65,69,68,64,1,0,0,0,0,62,66,65,61,43,66,70,71,67,1,0,0,0,0,63,67,68,64,43,68,72,70,66,1,0,0,0,0,65,69,67,63,43,69,73,72,68,1,0,0,0,0,66,70,69,65,43,70,74,75,71,1,0,0,0,0,67,71,72,68,43,72,76,74,70,1,0,0,0,0,69,73,71,67,43,73,77,76,72,1,0,0,0,0,70,74,73,69,43,2,49,78,27,1,0,0,0,0,2,49,75,27,43,27,78,79,28,1,0,0,0,0,27,75,76,28,43,28,79,80,29,1,0,0,0,0,28,76,77,29,43,49,53,81,78,1,0,0,0,0,49,53,78,75,43,78,81,82,79,1,0,0,0,0,75,78,79,76,43,79,82,83,80,1,0,0,0,0,76,79,80,77,43,53,57,84,81,1,0,0,0,0,53,56,56,78,43,81,84,85,82,1,0,0,0,0,78,56,56,79,42,82,85,83,1,0,0,0,79,56,80,43,57,60,86,84,1,0,0,0,0,56,58,57,56,43,84,86,87,85,1,0,0,0,0,56,57,57,56,43,85,87,88,83,1,0,0,0,0,56,57,81,80,42,60,89,86,1,0,0,0,58,82,57,43,86,89,90,87,1,0,0,0,0,57,82,83,57,43,87,90,91,88,1,0,0,0,0,57,83,84,81,43,60,67,92,89,1,0,0,0,0,58,64,85,82,43,89,92,93,90,1,0,0,0,0,82,85,86,83,43,90,93,94,91,1,0,0,0,0,83,86,87,84,43,67,71,95,92,1,0,0,0,0,64,68,88,85,43,92,95,96,93,1,0,0,0,0,85,88,89,86,43,93,96,97,94,1,0,0,0,0,86,89,90,87,43,71,75,98,95,1,0,0,0,0,68,72,91,88,43,95,98,99,96,1,0,0,0,0,88,91,92,89,43,96,99,100,97,1,0,0,0,0,89,92,93,90,43,32,101,102,33,1,0,0,0,0,32,94,95,33,43,31,103,101,32,1,0,0,0,0,31,96,94,32,43,29,80,103,31,1,0,0,0,0,29,77,96,31,43,101,104,105,102,1,0,0,0,0,94,97,98,95,43,103,106,104,101,1,0,0,0,0,96,99,97,94,43,80,83,106,103,1,0,0,0,0,77,80,99,96,43,104,107,108,105,1,0,0,0,0,97,100,100,98,43,106,109,107,104,1,0,0,0,0,99,101,100,97,42,83,109,106,1,0,0,0,80,101,99,43,107,110,111,108,1,0,0,0,0,100,102,103,100,43,109,112,110,107,1,0,0,0,0,101,104,102,100,43,83,88,112,109,1,0,0,0,0,80,81,104,101,42,110,113,111,1,0,0,0,102,105,103,43,112,114,113,110,1,0,0,0,0,104,106,105,102,43,88,91,114,112,1,0,0,0,0,81,84,106,104,43,113,115,116,111,1,0,0,0,0,105,107,108,103,43,114,117,115,113,1,0,0,0,0,106,109,107,105,43,91,94,117,114,1,0,0,0,0,84,87,109,106,43,115,118,119,116,1,0,0,0,0,107,110,111,108,43,117,120,118,115,1,0,0,0,0,109,112,110,107,43,94,97,120,117,1,0,0,0,0,87,90,112,109,43,118,121,122,119,1,0,0,0,0,110,113,114,111,43,120,123,121,118,1,0,0,0,0,112,115,113,110,43,97,100,123,120,1,0,0,0,0,90,93,115,112,43,33,102,124,34,1,0,0,0,0,33,95,116,34,43,34,124,125,35,1,0,0,0,0,34,116,117,35,43,35,125,126,36,1,0,0,0,0,35,117,118,36,43,102,105,127,124,1,0,0,0,0,95,98,119,116,43,124,127,128,125,1,0,0,0,0,116,119,120,117,43,125,128,129,126,1,0,0,0,0,117,120,121,118,43,105,108,130,127,1,0,0,0,0,98,100,100,119,43,127,130,131,128,1,0,0,0,0,119,100,101,120,42,128,131,129,1,0,0,0,120,101,121,43,108,111,132,130,1,0,0,0,0,100,103,102,100,43,130,132,133,131,1,0,0,0,0,100,102,122,101,43,131,133,134,129,1,0,0,0,0,101,122,123,121,42,111,135,132,1,0,0,0,103,124,102,43,132,135,136,133,1,0,0,0,0,102,124,125,122,43,133,136,137,134,1,0,0,0,0,122,125,126,123,43,111,116,138,135,1,0,0,0,0,103,108,127,124,43,135,138,139,136,1,0,0,0,0,124,127,128,125,43,136,139,140,137,1,0,0,0,0,125,128,129,126,43,116,119,141,138,1,0,0,0,0,108,111,130,127,43,138,141,142,139,1,0,0,0,0,127,130,131,128,43,139,142,143,140,1,0,0,0,0,128,131,132,129,43,119,122,144,141,1,0,0,0,0,111,114,133,130,43,141,144,145,142,1,0,0,0,0,130,133,134,131,43,142,145,146,143,1,0,0,0,0,131,134,135,132,43,39,147,148,40,1,0,0,0,0,39,136,137,40,43,38,149,147,39,1,0,0,0,0,38,138,136,39,43,36,126,149,38,1,0,0,0,0,36,118,138,38,43,147,150,151,148,1,0,0,0,0,136,139,140,137,43,149,152,150,147,1,0,0,0,0,138,141,139,136,43,126,129,152,149,1,0,0,0,0,118,121,141,138,43,150,153,154,151,1,0,0,0,0,139,142,142,140,43,152,155,153,150,1,0,0,0,0,141,143,142,139,42,129,155,152,1,0,0,0,121,143,141,43,153,156,157,154,1,0,0,0,0,142,144,145,142,43,155,158,156,153,1,0,0,0,0,143,144,144,142,43,129,134,158,155,1,0,0,0,0,121,123,144,143,42,156,159,157,1,0,0,0,144,146,145,43,158,160,159,156,1,0,0,0,0,144,147,146,144,43,134,137,160,158,1,0,0,0,0,123,126,147,144,43,159,161,162,157,1,0,0,0,0,146,148,149,145,43,160,163,161,159,1,0,0,0,0,147,150,148,146,43,137,140,163,160,1,0,0,0,0,126,129,150,147,43,161,164,165,162,1,0,0,0,0,148,151,152,149,43,163,166,164,161,1,0,0,0,0,150,153,151,148,43,140,143,166,163,1,0,0,0,0,129,132,153,150,43,164,167,168,165,1,0,0,0,0,151,154,155,152,43,166,169,167,164,1,0,0,0,0,153,156,154,151,43,143,146,169,166,1,0,0,0,0,132,135,156,153,43,40,148,170,41,1,0,0,0,0,40,137,157,41,43,41,170,171,42,1,0,0,0,0,41,157,158,42,43,42,171,172,43,1,0,0,0,0,42,158,159,43,43,148,151,173,170,1,0,0,0,0,137,140,160,157,43,170,173,174,171,1,0,0,0,0,157,160,161,158,43,171,174,175,172,1,0,0,0,0,158,161,162,159,43,151,154,176,173,1,0,0,0,0,140,142,142,160,43,173,176,177,174,1,0,0,0,0,160,142,143,161,42,174,177,175,1,0,0,0,161,143,162,43,154,157,178,176,1,0,0,0,0,142,145,163,142,43,176,178,179,177,1,0,0,0,0,142,163,163,143,43,177,179,180,175,1,0,0,0,0,143,163,164,162,42,157,181,178,1,0,0,0,145,165,163,43,178,181,182,179,1,0,0,0,0,163,165,166,163,43,179,182,183,180,1,0,0,0,0,163,166,167,164,43,157,162,184,181,1,0,0,0,0,145,149,168,165,43,181,184,185,182,1,0,0,0,0,165,168,169,166,43,182,185,186,183,1,0,0,0,0,166,169,170,167,43,162,165,187,184,1,0,0,0,0,149,152,171,168,43,184,187,188,185,1,0,0,0,0,168,171,172,169,43,185,188,189,186,1,0,0,0,0,169,172,173,170,43,165,168,190,187,1,0,0,0,0,152,155,174,171,43,187,190,191,188,1,0,0,0,0,171,174,175,172,43,188,191,192,189,1,0,0,0,0,172,175,176,173,43,45,193,194,22,1,0,0,0,0,45,177,178,22,43,44,195,193,45,1,0,0,0,0,44,179,177,45,43,43,172,195,44,1,0,0,0,0,43,159,179,44,43,193,196,197,194,1,0,0,0,0,177,180,181,178,43,195,198,196,193,1,0,0,0,0,179,182,180,177,43,172,175,198,195,1,0,0,0,0,159,162,182,179,43,196,199,200,197,1,0,0,0,0,180,183,183,181,43,198,201,199,196,1,0,0,0,0,182,183,183,180,42,175,201,198,1,0,0,0,162,183,182,43,199,202,203,200,1,0,0,0,0,183,184,185,183,43,201,204,202,199,1,0,0,0,0,183,184,184,183,43,175,180,204,201,1,0,0,0,0,162,164,184,183,42,202,205,203,1,0,0,0,184,186,185,43,204,206,205,202,1,0,0,0,0,184,187,186,184,43,180,183,206,204,1,0,0,0,0,164,167,187,184,43,205,207,208,203,1,0,0,0,0,186,188,189,185,43,206,209,207,205,1,0,0,0,0,187,190,188,186,43,183,186,209,206,1,0,0,0,0,167,170,190,187,43,207,210,211,208,1,0,0,0,0,188,191,192,189,43,209,212,210,207,1,0,0,0,0,190,193,191,188,43,186,189,212,209,1,0,0,0,0,170,173,193,190,43,210,213,214,211,1,0,0,0,0,191,194,195,192,43,212,215,213,210,1,0,0,0,0,193,196,194,191,43,189,192,215,212,1,0,0,0,0,173,176,196,193,43,22,194,216,21,1,0,0,0,0,22,178,197,21,43,21,216,217,20,1,0,0,0,0,21,197,198,20,43,20,217,218,18,1,0,0,0,0,20,198,199,18,43,194,197,219,216,1,0,0,0,0,178,181,200,197,43,216,219,220,217,1,0,0,0,0,197,200,201,198,43,217,220,221,218,1,0,0,0,0,198,201,202,199,43,197,200,222,219,1,0,0,0,0,181,183,183,200,43,219,222,223,220,1,0,0,0,0,200,183,183,201,42,220,223,221,1,0,0,0,201,183,202,43,200,203,224,222,1,0,0,0,0,183,185,184,183,43,222,224,225,223,1,0,0,0,0,183,184,184,183,43,223,225,226,221,1,0,0,0,0,183,184,203,202,42,203,227,224,1,0,0,0,185,204,184,43,224,227,228,225,1,0,0,0,0,184,204,205,184,43,225,228,229,226,1,0,0,0,0,184,205,206,203,43,203,208,230,227,1,0,0,0,0,185,189,207,204,43,227,230,231,228,1,0,0,0,0,204,207,208,205,43,228,231,232,229,1,0,0,0,0,205,208,209,206,43,208,211,233,230,1,0,0,0,0,189,192,210,207,43,230,233,234,231,1,0,0,0,0,207,210,211,208,43,231,234,235,232,1,0,0,0,0,208,211,212,209,43,211,214,236,233,1,0,0,0,0,192,195,213,210,43,233,236,237,234,1,0,0,0,0,210,213,214,211,43,234,237,238,235,1,0,0,0,0,211,214,215,212,43,16,239,240,15,1,0,0,0,0,16,216,217,15,43,17,241,239,16,1,0,0,0,0,17,218,216,16,43,18,218,241,17,1,0,0,0,0,18,199,218,17,43,239,242,243,240,1,0,0,0,0,216,219,220,217,43,241,244,242,239,1,0,0,0,0,218,221,219,216,43,218,221,244,241,1,0,0,0,0,199,202,221,218,43,242,245,246,243,1,0,0,0,0,219,222,223,220,43,244,247,245,242,1,0,0,0,0,221,222,222,219,42,221,247,244,1,0,0,0,202,222,221,43,245,248,249,246,1,0,0,0,0,222,224,225,223,43,247,250,248,245,1,0,0,0,0,222,224,224,222,43,221,226,250,247,1,0,0,0,0,202,203,224,222,42,248,251,249,1,0,0,0,224,226,225,43,250,252,251,248,1,0,0,0,0,224,227,226,224,43,226,229,252,250,1,0,0,0,0,203,206,227,224,43,251,253,254,249,1,0,0,0,0,226,228,229,225,43,252,255,253,251,1,0,0,0,0,227,230,228,226,43,229,232,255,252,1,0,0,0,0,206,209,230,227,43,253,256,257,254,1,0,0,0,0,228,231,232,229,43,255,258,256,253,1,0,0,0,0,230,233,231,228,43,232,235,258,255,1,0,0,0,0,209,212,233,230,43,256,259,260,257,1,0,0,0,0,231,234,235,232,43,258,261,259,256,1,0,0,0,0,233,236,234,231,43,235,238,261,258,1,0,0,0,0,212,215,236,233,43,15,240,262,14,1,0,0,0,0,15,217,237,14,43,14,262,263,13,1,0,0,0,0,14,237,238,13,43,13,263,264,11,1,0,0,0,0,13,238,239,11,43,240,243,265,262,1,0,0,0,0,217,220,240,237,43,262,265,266,263,1,0,0,0,0,237,240,241,238,43,263,266,267,264,1,0,0,0,0,238,241,242,239,43,243,246,268,265,1,0,0,0,0,220,223,243,240,43,265,268,269,266,1,0,0,0,0,240,243,223,241,42,266,269,267,1,0,0,0,241,223,242,43,246,249,270,268,1,0,0,0,0,223,225,244,243,43,268,270,271,269,1,0,0,0,0,243,244,245,223,43,269,271,272,267,1,0,0,0,0,223,245,246,242,42,249,273,270,1,0,0,0,225,247,244,43,270,273,274,271,1,0,0,0,0,244,247,248,245,43,271,274,275,272,1,0,0,0,0,245,248,249,246,43,249,254,276,273,1,0,0,0,0,225,229,250,247,43,273,276,277,274,1,0,0,0,0,247,250,251,248,43,274,277,278,275,1,0,0,0,0,248,251,252,249,43,254,257,279,276,1,0,0,0,0,229,232,253,250,43,276,279,280,277,1,0,0,0,0,250,253,254,251,43,277,280,281,278,1,0,0,0,0,251,254,255,252,43,257,260,282,279,1,0,0,0,0,232,235,256,253,43,279,282,283,280,1,0,0,0,0,253,256,257,254,43,280,283,284,281,1,0,0,0,0,254,257,258,255,43,9,285,286,8,1,0,0,0,0,9,259,260,8,43,10,287,285,9,1,0,0,0,0,10,261,259,9,43,11,264,287,10,1,0,0,0,0,11,239,261,10,43,285,288,289,286,1,0,0,0,0,259,262,263,260,43,287,290,288,285,1,0,0,0,0,261,264,262,259,43,264,267,290,287,1,0,0,0,0,239,242,264,261,43,288,291,292,289,1,0,0,0,0,262,265,265,263,43,290,293,291,288,1,0,0,0,0,264,266,265,262,42,267,293,290,1,0,0,0,242,266,264,43,291,294,295,292,1,0,0,0,0,265,267,268,265,43,293,296,294,291,1,0,0,0,0,266,269,267,265,43,267,272,296,293,1,0,0,0,0,242,246,269,266,42,294,297,295,1,0,0,0,267,270,268,43,296,298,297,294,1,0,0,0,0,269,271,270,267,43,272,275,298,296,1,0,0,0,0,246,249,271,269,43,297,299,300,295,1,0,0,0,0,270,272,273,268,43,298,301,299,297,1,0,0,0,0,271,274,272,270,43,275,278,301,298,1,0,0,0,0,249,252,274,271,43,299,302,303,300,1,0,0,0,0,272,275,276,273,43,301,304,302,299,1,0,0,0,0,274,277,275,272,43,278,281,304,301,1,0,0,0,0,252,255,277,274,43,302,305,306,303,1,0,0,0,0,275,278,279,276,43,304,307,305,302,1,0,0,0,0,277,280,278,275,43,281,284,307,304,1,0,0,0,0,255,258,280,277,43,8,286,308,7,1,0,0,0,0,8,260,281,7,43,7,308,309,6,1,0,0,0,0,7,281,282,6,43,6,309,51,4,1,0,0,0,0,6,282,51,4,43,286,289,310,308,1,0,0,0,0,260,263,283,281,43,308,310,311,309,1,0,0,0,0,281,283,284,282,43,309,311,55,51,1,0,0,0,0,282,284,55,51,43,289,292,312,310,1,0,0,0,0,263,265,266,283,43,310,312,313,311,1,0,0,0,0,283,266,285,284,42,311,313,55,1,0,0,0,284,285,55,43,292,295,314,312,1,0,0,0,0,265,268,286,266,43,312,314,315,313,1,0,0,0,0,266,286,286,285,43,313,315,62,55,1,0,0,0,0,285,286,59,55,42,295,316,314,1,0,0,0,268,287,286,43,314,316,317,315,1,0,0,0,0,286,287,288,286,43,315,317,65,62,1,0,0,0,0,286,288,62,59,43,295,300,318,316,1,0,0,0,0,268,273,289,287,43,316,318,319,317,1,0,0,0,0,287,289,290,288,43,317,319,69,65,1,0,0,0,0,288,290,66,62,43,300,303,320,318,1,0,0,0,0,273,276,291,289,43,318,320,321,319,1,0,0,0,0,289,291,292,290,43,319,321,73,69,1,0,0,0,0,290,292,70,66,43,303,306,322,320,1,0,0,0,0,276,279,293,291,43,320,322,323,321,1,0,0,0,0,291,293,294,292,43,321,323,77,73,1,0,0,0,0,292,294,74,70,42,100,324,123,1,0,0,0,93,295,115,43,99,325,324,100,1,0,0,0,0,92,296,295,93,43,98,326,325,99,1,0,0,0,0,91,297,296,92,43,75,327,326,98,1,0,0,0,0,72,298,297,91,42,213,328,214,1,0,0,0,194,299,195,43,215,329,328,213,1,0,0,0,0,196,300,299,194,43,192,330,329,215,1,0,0,0,0,176,301,300,196,43,191,331,330,192,1,0,0,0,0,175,302,301,176,43,190,332,331,191,1,0,0,0,0,174,303,302,175,43,168,333,332,190,1,0,0,0,0,155,304,303,174,43,167,334,333,168,1,0,0,0,0,154,305,304,155,43,169,335,334,167,1,0,0,0,0,156,306,305,154,43,146,336,335,169,1,0,0,0,0,135,307,306,156,43,145,337,336,146,1,0,0,0,0,134,308,307,135,43,144,338,337,145,1,0,0,0,0,133,309,308,134,43,122,339,338,144,1,0,0,0,0,114,100,309,133,43,121,340,339,122,1,0,0,0,0,113,310,100,114,43,123,341,340,121,1,0,0,0,0,115,311,310,113,43,324,342,341,123,1,0,0,0,0,295,312,311,115,43,325,343,342,324,1,0,0,0,0,296,313,312,295,43,326,344,343,325,1,0,0,0,0,297,314,313,296,43,327,345,344,326,1,0,0,0,0,298,315,314,297,42,238,346,261,1,0,0,0,215,316,236,43,237,347,346,238,1,0,0,0,0,214,317,316,215,43,236,348,347,237,1,0,0,0,0,213,318,317,214,43,214,349,348,236,1,0,0,0,0,195,183,318,213,43,328,350,349,214,1,0,0,0,0,299,299,183,195,43,329,351,350,328,1,0,0,0,0,300,319,299,299,43,330,352,351,329,1,0,0,0,0,301,301,319,300,43,331,353,352,330,1,0,0,0,0,302,302,301,301,43,332,354,353,331,1,0,0,0,0,303,303,302,302,43,333,355,354,332,1,0,0,0,0,304,304,303,303,43,334,356,355,333,1,0,0,0,0,305,305,304,304,43,335,357,356,334,1,0,0,0,0,306,306,305,305,43,336,358,357,335,1,0,0,0,0,307,307,306,306,43,337,359,358,336,1,0,0,0,0,308,320,307,307,43,338,360,359,337,1,0,0,0,0,309,321,320,308,43,339,361,360,338,1,0,0,0,0,100,100,321,309,43,340,362,361,339,1,0,0,0,0,310,310,100,100,43,341,363,362,340,1,0,0,0,0,311,311,310,310,43,342,364,363,341,1,0,0,0,0,312,322,311,311,43,343,365,364,342,1,0,0,0,0,313,323,322,312,43,344,366,365,343,1,0,0,0,0,314,324,323,313,43,345,367,366,344,1,0,0,0,0,315,325,324,314,42,74,368,75,1,0,0,0,71,326,72,43,76,369,368,74,1,0,0,0,0,73,327,326,71,43,77,370,369,76,1,0,0,0,0,74,328,327,73,43,323,371,370,77,1,0,0,0,0,294,329,328,74,43,322,372,371,323,1,0,0,0,0,293,330,329,294,43,306,373,372,322,1,0,0,0,0,279,285,330,293,43,305,374,373,306,1,0,0,0,0,278,331,285,279,43,307,375,374,305,1,0,0,0,0,280,332,331,278,43,284,376,375,307,1,0,0,0,0,258,333,332,280,43,283,377,376,284,1,0,0,0,0,257,334,333,258,43,282,378,377,283,1,0,0,0,0,256,335,334,257,43,260,379,378,282,1,0,0,0,0,235,336,335,256,43,259,380,379,260,1,0,0,0,0,234,337,336,235,43,261,381,380,259,1,0,0,0,0,236,338,337,234,43,346,382,381,261,1,0,0,0,0,316,316,338,236,43,347,383,382,346,1,0,0,0,0,317,317,316,316,43,348,384,383,347,1,0,0,0,0,318,318,317,317,43,349,385,384,348,1,0,0,0,0,183,339,318,318,43,350,386,385,349,1,0,0,0,0,299,299,339,183,43,351,387,386,350,1,0,0,0,0,319,319,299,299,43,352,388,387,351,1,0,0,0,0,301,301,319,319,43,353,389,388,352,1,0,0,0,0,302,302,301,301,43,354,390,389,353,1,0,0,0,0,303,340,302,302,43,355,391,390,354,1,0,0,0,0,304,304,340,303,43,356,392,391,355,1,0,0,0,0,305,305,304,304,43,357,393,392,356,1,0,0,0,0,306,341,305,305,43,358,394,393,357,1,0,0,0,0,307,342,341,306,43,359,395,394,358,1,0,0,0,0,320,343,342,307,43,360,396,395,359,1,0,0,0,0,321,321,343,320,43,361,397,396,360,1,0,0,0,0,100,344,321,321,43,362,398,397,361,1,0,0,0,0,310,345,344,100,43,363,399,398,362,1,0,0,0,0,311,346,345,310,43,364,400,399,363,1,0,0,0,0,322,347,346,311,43,365,401,400,364,1,0,0,0,0,323,348,347,322,43,368,402,327,75,1,0,0,0,0,326,349,298,72,43,369,403,402,368,1,0,0,0,0,327,350,349,326,43,370,404,403,369,1,0,0,0,0,328,351,350,327,43,371,405,404,370,1,0,0,0,0,329,352,351,328,43,372,406,405,371,1,0,0,0,0,330,353,352,329,43,373,407,406,372,1,0,0,0,0,285,354,353,330,43,374,408,407,373,1,0,0,0,0,331,355,354,285,43,375,409,408,374,1,0,0,0,0,332,356,355,331,43,376,410,409,375,1,0,0,0,0,333,357,356,332,43,377,411,410,376,1,0,0,0,0,334,358,357,333,43,378,412,411,377,1,0,0,0,0,335,359,358,334,43,379,413,412,378,1,0,0,0,0,336,360,359,335,43,380,414,413,379,1,0,0,0,0,337,361,360,336,43,381,415,414,380,1,0,0,0,0,338,362,361,337,43,382,416,415,381,1,0,0,0,0,316,363,362,338,43,383,417,416,382,1,0,0,0,0,317,364,363,316,43,384,418,417,383,1,0,0,0,0,318,365,364,317,43,385,419,418,384,1,0,0,0,0,339,366,365,318,43,386,420,419,385,1,0,0,0,0,299,367,366,339,43,387,421,420,386,1,0,0,0,0,319,368,367,299,43,388,422,421,387,1,0,0,0,0,301,369,368,319,43,389,423,422,388,1,0,0,0,0,302,370,369,301,43,390,424,423,389,1,0,0,0,0,340,371,370,302,43,391,425,424,390,1,0,0,0,0,304,372,371,340,43,392,426,425,391,1,0,0,0,0,305,373,372,304,43,393,427,426,392,1,0,0,0,0,341,374,373,305,43,394,428,427,393,1,0,0,0,0,342,375,374,341,43,395,429,428,394,1,0,0,0,0,343,376,375,342,43,396,430,429,395,1,0,0,0,0,321,377,376,343,43,397,431,430,396,1,0,0,0,0,344,378,377,321,43,402,432,345,327,1,0,0,0,0,349,379,315,298,43,403,433,432,402,1,0,0,0,0,350,380,379,349,43,404,434,433,403,1,0,0,0,0,351,381,380,350,43,405,435,434,404,1,0,0,0,0,352,382,381,351,43,406,436,435,405,1,0,0,0,0,353,383,382,352,43,407,437,436,406,1,0,0,0,0,354,384,383,353,43,408,438,437,407,1,0,0,0,0,355,385,384,354,43,409,439,438,408,1,0,0,0,0,356,386,385,355,43,410,440,439,409,1,0,0,0,0,357,387,386,356,43,411,441,440,410,1,0,0,0,0,358,388,387,357,43,412,442,441,411,1,0,0,0,0,359,389,388,358,43,413,443,442,412,1,0,0,0,0,360,390,389,359,43,414,444,443,413,1,0,0,0,0,361,391,390,360,43,415,445,444,414,1,0,0,0,0,362,392,391,361,43,416,446,445,415,1,0,0,0,0,363,393,392,362,43,417,447,446,416,1,0,0,0,0,364,394,393,363,43,432,448,367,345,1,0,0,0,0,379,395,325,315,43,433,449,448,432,1,0,0,0,0,380,396,395,379,43,434,450,449,433,1,0,0,0,0,381,397,396,380,43,435,451,450,434,1,0,0,0,0,382,398,397,381,43,436,452,451,435,1,0,0,0,0,383,399,398,382,43,437,453,452,436,1,0,0,0,0,384,400,399,383,43,438,454,453,437,1,0,0,0,0,385,401,400,384,43,439,455,454,438,1,0,0,0,0,386,402,401,385,43,440,456,455,439,1,0,0,0,0,387,403,402,386,43,441,457,456,440,1,0,0,0,0,388,404,403,387,43,442,458,457,441,1,0,0,0,0,389,405,404,388,43,443,459,458,442,1,0,0,0,0,390,406,405,389,43,765,748,515,514,0,1,2,3,4,407,408,409,410,43,766,749,493,492,0,5,6,7,8,411,412,413,414,43,767,750,504,503,0,9,10,11,12,415,416,417,418,43,768,766,492,523,0,13,5,8,14,419,411,414,420,43,769,751,513,512,0,15,16,17,18,421,422,423,424,43,770,752,502,501,0,19,20,21,22,425,426,427,428,43,771,753,522,521,0,23,24,25,26,429,430,431,432,43,772,754,511,510,0,27,28,29,30,433,434,435,436,43,773,755,500,499,0,31,32,33,34,437,438,439,440,43,774,756,520,519,0,35,36,37,38,441,442,443,444,43,775,757,509,508,0,39,40,41,42,445,446,447,448,43,776,758,498,497,0,43,44,45,46,449,450,451,452,43,777,759,518,517,0,47,48,49,50,453,454,455,456,43,778,760,496,495,0,51,52,53,54,457,458,459,460,43,779,761,507,506,0,55,56,57,58,461,462,463,464,43,748,762,516,515,0,2,59,60,3,408,465,466,409,43,749,763,494,493,0,6,61,62,7,412,467,468,413,43,750,764,505,504,0,10,63,64,11,416,469,470,417,43,751,765,514,513,0,16,1,4,17,422,407,410,423,43,752,767,503,502,0,20,9,12,21,426,415,418,427,43,753,768,523,522,0,24,13,14,25,430,419,420,431,43,754,769,512,511,0,28,15,18,29,434,421,424,435,43,755,770,501,500,0,32,19,22,33,438,425,428,439,43,756,771,521,520,0,36,23,26,37,442,429,432,443,43,757,772,510,509,0,40,27,30,41,446,433,436,447,43,758,773,499,498,0,44,31,34,45,450,437,440,451,43,759,774,519,518,0,48,35,38,49,454,441,444,455,43,760,776,497,496,0,52,43,46,53,458,449,452,459,43,761,775,508,507,0,56,39,42,57,462,445,448,463,43,762,777,517,516,0,59,47,50,60,465,453,456,466,43,763,778,495,494,0,61,51,54,62,467,457,460,468,43,764,779,506,505,0,63,55,58,64,469,461,464,470,43,780,781,548,547,0,65,66,67,68,471,472,472,471,43,782,783,526,525,0,69,70,71,72,473,474,474,473,43,784,785,537,536,0,73,74,75,76,475,476,476,475,43,786,787,546,545,0,77,78,79,80,477,478,478,477,43,788,789,535,534,0,81,82,83,84,479,480,480,479,43,790,791,555,554,0,85,86,87,88,481,482,482,481,43,792,793,544,543,0,89,90,91,92,483,310,310,483,43,794,795,533,532,0,93,94,95,96,484,485,486,472,43,796,797,553,552,0,97,98,99,100,487,488,488,487,43,798,799,542,541,0,101,102,103,104,489,490,490,489,43,800,801,531,530,0,105,106,107,108,491,492,493,491,43,802,803,551,550,0,109,110,111,112,494,495,495,494,43,804,805,529,528,0,113,114,115,116,496,497,497,496,43,806,807,540,539,0,117,118,119,120,498,499,499,498,43,781,808,549,548,0,66,121,122,67,472,500,500,472,43,783,809,527,526,0,70,123,124,71,474,501,501,474,43,785,810,538,537,0,74,125,126,75,476,502,502,476,43,787,780,547,546,0,78,65,68,79,478,471,471,478,43,811,782,525,524,0,127,69,72,128,503,473,473,503,43,789,784,536,535,0,82,73,76,83,480,475,475,480,43,791,811,524,555,0,86,127,128,87,482,503,503,482,43,793,786,545,544,0,90,77,80,91,310,477,477,310,43,795,788,534,533,0,94,81,84,95,485,479,479,486,43,797,790,554,553,0,98,85,88,99,488,481,481,488,43,799,792,543,542,0,102,89,92,103,490,483,483,490,43,801,794,532,531,0,106,93,96,107,492,484,472,493,43,803,796,552,551,0,110,97,100,111,495,487,487,495,43,807,798,541,540,0,118,101,104,119,499,489,489,499,43,805,800,530,529,0,114,105,108,115,497,491,491,497,43,808,802,550,549,0,121,109,112,122,500,494,494,500,43,809,804,528,527,0,123,113,116,124,501,496,496,501,43,810,806,539,538,0,125,117,120,126,502,498,498,502,43,588,619,557,556,3,129,130,131,132,504,505,506,507,43,590,621,559,558,3,133,134,135,136,508,509,510,511,43,592,623,561,560,3,137,138,139,140,512,513,514,515,43,594,590,558,562,3,141,133,136,142,516,508,511,517,43,596,625,564,563,3,143,144,145,146,518,519,520,521,43,598,627,566,565,3,147,148,149,150,522,523,524,525,43,600,629,568,567,3,151,152,153,154,526,527,528,529,43,602,631,570,569,3,155,156,157,158,530,531,532,533,43,604,633,572,571,3,159,160,161,162,534,535,536,537,43,606,635,574,573,3,163,164,165,166,538,539,540,541,43,608,637,576,575,3,167,168,169,170,542,543,544,545,43,610,639,578,577,3,171,172,173,174,546,547,548,549,43,612,641,580,579,3,175,176,177,178,550,551,552,553,43,614,643,582,581,3,179,180,181,182,554,555,556,557,43,616,645,584,583,3,183,184,185,186,558,559,560,561,43,619,647,585,557,3,130,187,188,131,505,562,563,506,43,621,649,586,559,3,134,189,190,135,509,564,565,510,43,623,651,587,561,3,138,191,192,139,513,566,567,514,43,625,588,556,564,3,144,129,132,145,519,504,507,520,43,627,592,560,566,3,148,137,140,149,523,512,515,524,43,629,594,562,568,3,152,141,142,153,527,516,517,528,43,631,596,563,570,3,156,143,146,157,531,518,521,532,43,633,598,565,572,3,160,147,150,161,535,522,525,536,43,635,600,567,574,3,164,151,154,165,539,526,529,540,43,637,602,569,576,3,168,155,158,169,543,530,533,544,43,639,604,571,578,3,172,159,162,173,547,534,537,548,43,641,606,573,580,3,176,163,166,177,551,538,541,552,43,643,610,577,582,3,180,171,174,181,555,546,549,556,43,645,608,575,584,3,184,167,170,185,559,542,545,560,43,647,612,579,585,3,187,175,178,188,562,550,553,563,43,649,614,581,586,3,189,179,182,190,564,554,557,565,43,651,616,583,587,3,191,183,186,192,566,558,561,567,43,482,483,618,589,3,193,194,195,196,568,569,570,571,43,589,618,619,588,3,196,195,130,129,571,570,505,504,43,460,461,620,591,3,197,198,199,200,572,573,574,575,43,591,620,621,590,3,200,199,134,133,575,574,509,508,43,471,472,622,593,3,201,202,203,204,576,577,578,579,43,593,622,623,592,3,204,203,138,137,579,578,513,512,43,491,460,591,595,3,205,197,200,206,580,572,575,581,43,595,591,590,594,3,206,200,133,141,581,575,508,516,43,480,481,624,597,3,207,208,209,210,582,583,584,585,43,597,624,625,596,3,210,209,144,143,585,584,519,518,43,469,470,626,599,3,211,212,213,214,586,587,588,589,43,599,626,627,598,3,214,213,148,147,589,588,523,522,43,489,490,628,601,3,215,216,217,218,590,591,592,593,43,601,628,629,600,3,218,217,152,151,593,592,527,526,43,478,479,630,603,3,219,220,221,222,594,595,596,597,43,603,630,631,602,3,222,221,156,155,597,596,531,530,43,467,468,632,605,3,223,224,225,226,598,599,600,601,43,605,632,633,604,3,226,225,160,159,601,600,535,534,43,487,488,634,607,3,227,228,229,230,602,603,604,605,43,607,634,635,606,3,230,229,164,163,605,604,539,538,43,476,477,636,609,3,231,232,233,234,606,607,608,609,43,609,636,637,608,3,234,233,168,167,609,608,543,542,43,465,466,638,611,3,235,236,237,238,610,611,612,613,43,611,638,639,610,3,238,237,172,171,613,612,547,546,43,485,486,640,613,3,239,240,241,242,614,615,616,617,43,613,640,641,612,3,242,241,176,175,617,616,551,550,43,463,464,642,615,3,243,244,245,246,618,619,620,621,43,615,642,643,614,3,246,245,180,179,621,620,555,554,43,474,475,644,617,3,247,248,249,250,622,623,624,625,43,617,644,645,616,3,250,249,184,183,625,624,559,558,43,483,484,646,618,3,194,251,252,195,569,626,627,570,43,618,646,647,619,3,195,252,187,130,570,627,562,505,43,461,462,648,620,3,198,253,254,199,573,628,629,574,43,620,648,649,621,3,199,254,189,134,574,629,564,509,43,472,473,650,622,3,202,255,256,203,577,630,631,578,43,622,650,651,623,3,203,256,191,138,578,631,566,513,43,481,482,589,624,3,208,193,196,209,583,568,571,584,43,624,589,588,625,3,209,196,129,144,584,571,504,519,43,470,471,593,626,3,212,201,204,213,587,576,579,588,43,626,593,592,627,3,213,204,137,148,588,579,512,523,43,490,491,595,628,3,216,205,206,217,591,580,581,592,43,628,595,594,629,3,217,206,141,152,592,581,516,527,43,479,480,597,630,3,220,207,210,221,595,582,585,596,43,630,597,596,631,3,221,210,143,156,596,585,518,531,43,468,469,599,632,3,224,211,214,225,599,586,589,600,43,632,599,598,633,3,225,214,147,160,600,589,522,535,43,488,489,601,634,3,228,215,218,229,603,590,593,604,43,634,601,600,635,3,229,218,151,164,604,593,526,539,43,477,478,603,636,3,232,219,222,233,607,594,597,608,43,636,603,602,637,3,233,222,155,168,608,597,530,543,43,466,467,605,638,3,236,223,226,237,611,598,601,612,43,638,605,604,639,3,237,226,159,172,612,601,534,547,43,486,487,607,640,3,240,227,230,241,615,602,605,616,43,640,607,606,641,3,241,230,163,176,616,605,538,551,43,464,465,611,642,3,244,235,238,245,619,610,613,620,43,642,611,610,643,3,245,238,171,180,620,613,546,555,43,475,476,609,644,3,248,231,234,249,623,606,609,624,43,644,609,608,645,3,249,234,167,184,624,609,542,559,43,484,485,613,646,3,251,239,242,252,626,614,617,627,43,646,613,612,647,3,252,242,175,187,627,617,550,562,43,462,463,615,648,3,253,243,246,254,628,618,621,629,43,648,615,614,649,3,254,246,179,189,629,621,554,564,43,473,474,617,650,3,255,247,250,256,630,622,625,631,43,650,617,616,651,3,256,250,183,191,631,625,558,566,43,1197,749,766,1214,0,257,6,5,258,632,412,411,633,43,1198,750,767,1215,0,259,10,9,260,634,416,415,635,43,909,911,719,717,0,261,262,263,264,636,637,638,639,43,1199,751,769,1217,0,265,16,15,266,640,422,421,641,43,1200,752,770,1218,0,267,20,19,268,642,426,425,643,43,1201,753,771,1219,0,269,24,23,270,644,430,429,645,43,1202,754,772,1220,0,271,28,27,272,646,434,433,647,43,1203,755,773,1221,0,273,32,31,274,648,438,437,649,43,1204,756,774,1222,0,275,36,35,276,650,442,441,651,43,1205,757,775,1223,0,277,40,39,278,652,446,445,653,43,1206,758,776,1224,0,279,44,43,280,654,450,449,655,43,1207,759,777,1225,0,281,48,47,282,656,454,453,657,43,1208,760,778,1226,0,283,52,51,284,658,458,457,659,43,1209,761,779,1227,0,285,56,55,286,660,462,461,661,43,1210,762,748,1196,0,287,59,2,288,662,465,408,663,43,1211,763,749,1197,0,289,61,6,257,664,467,412,632,43,1212,764,750,1198,0,290,63,10,259,665,469,416,634,43,908,926,734,716,0,291,292,293,294,666,667,668,669,43,910,927,735,718,0,295,296,297,298,670,671,672,673,43,911,928,736,719,0,262,299,300,263,637,674,675,638,43,912,929,737,720,0,301,302,303,304,676,677,678,679,43,913,930,738,721,0,305,306,307,308,680,681,682,683,43,914,931,739,722,0,309,310,311,312,684,685,686,687,43,915,932,740,723,0,313,314,315,316,688,689,690,691,43,916,933,741,724,0,317,318,319,320,692,693,694,695,43,917,934,742,725,0,321,322,323,324,696,697,698,699,43,919,935,743,727,0,325,326,327,328,700,701,702,703,43,918,936,744,726,0,329,330,331,332,704,705,706,707,43,920,937,745,728,0,333,334,335,336,708,709,710,711,43,921,938,746,729,0,337,338,339,340,712,713,714,715,43,922,939,747,730,0,341,342,343,344,716,717,718,719,43,483,482,693,692,3,194,193,345,346,569,568,491,720,43,474,473,702,701,3,247,255,347,348,622,630,488,481,43,690,691,676,677,3,349,350,351,352,721,722,722,721,43,463,462,713,712,3,243,253,353,354,618,628,490,483,43,701,702,665,666,3,348,347,355,356,481,488,488,481,43,485,484,691,690,3,239,251,350,349,614,626,722,721,43,712,713,654,655,3,354,353,357,358,483,490,490,483,43,476,475,700,699,3,231,248,359,360,606,623,482,503,43,692,693,674,675,3,346,345,361,362,720,491,491,720,43,465,464,711,710,3,235,244,363,364,610,619,310,477,43,703,704,663,664,3,365,366,367,368,723,495,495,723,43,487,486,689,688,3,227,240,369,370,602,615,479,480,43,714,715,652,653,3,371,372,373,374,489,499,499,489,43,467,466,709,708,3,223,236,375,376,598,611,478,471,43,694,695,672,673,3,377,378,379,380,497,724,496,497,43,478,477,698,697,3,219,232,381,382,594,607,473,474,43,715,684,683,652,3,372,383,384,373,499,498,498,499,43,489,488,687,686,3,215,228,385,386,590,603,475,476,43,705,706,661,662,3,387,388,389,390,494,500,500,494,43,469,468,707,706,3,211,224,391,388,586,599,472,500,43,696,697,670,671,3,392,382,393,394,501,474,474,501,43,480,479,696,695,3,207,220,392,378,582,595,501,724,43,685,686,681,682,3,395,386,396,397,502,476,476,502,43,491,490,685,684,3,205,216,395,383,580,591,502,498,43,707,708,659,660,3,391,376,398,399,472,471,471,472,43,471,470,705,704,3,201,212,387,366,576,587,494,495,43,698,699,668,669,3,381,360,400,401,473,503,503,473,43,482,481,694,693,3,193,208,377,345,568,583,497,491,43,687,688,679,680,3,385,370,402,403,475,480,480,475,43,473,472,703,702,3,255,202,365,347,630,577,723,488,43,709,710,657,658,3,375,364,404,405,478,477,477,478,43,462,461,714,713,3,253,198,371,353,628,573,489,490,43,689,690,677,678,3,369,349,352,406,479,721,721,479,43,484,483,692,691,3,251,194,346,350,626,569,720,722,43,700,701,666,667,3,359,348,356,407,482,481,481,482,43,475,474,701,700,3,248,247,348,359,623,622,481,482,43,711,712,655,656,3,363,354,358,408,310,483,483,310,43,464,463,712,711,3,244,243,354,363,619,618,483,310,43,691,692,675,676,3,350,346,362,351,722,720,720,722,43,486,485,690,689,3,240,239,349,369,615,614,721,479,43,702,703,664,665,3,347,365,368,355,488,723,723,488,43,466,465,710,709,3,236,235,364,375,611,610,477,478,43,713,714,653,654,3,353,371,374,357,490,489,489,490,43,477,476,699,698,3,232,231,360,381,607,606,503,473,43,693,694,673,674,3,345,377,380,361,491,497,497,491,43,488,487,688,687,3,228,227,370,385,603,602,480,475,43,704,705,662,663,3,366,387,390,367,495,494,494,495,43,468,467,708,707,3,224,223,376,391,599,598,471,472,43,695,696,671,672,3,378,392,394,379,724,501,501,496,43,479,478,697,696,3,220,219,382,392,595,594,474,501,43,684,685,682,683,3,383,395,397,384,498,502,502,498,43,490,489,686,685,3,216,215,386,395,591,590,476,502,43,706,707,660,661,3,388,391,399,389,500,472,472,500,43,470,469,706,705,3,212,211,388,387,587,586,500,494,43,697,698,669,670,3,382,381,401,393,474,473,473,474,43,481,480,695,694,3,208,207,378,377,583,582,724,497,43,686,687,680,681,3,386,385,403,396,476,475,475,476,43,460,491,684,715,3,197,205,383,372,572,580,498,499,43,708,709,658,659,3,376,375,405,398,471,478,478,471,43,472,471,704,703,3,202,201,366,365,577,576,495,723,43,688,689,678,679,3,370,369,406,402,480,479,479,480,43,461,460,715,714,3,198,197,372,371,573,572,499,489,43,699,700,667,668,3,360,359,407,400,503,482,482,503,43,1196,748,765,1213,0,288,2,1,409,663,408,407,725,43,710,711,656,657,3,364,363,408,404,477,310,310,477,43,515,516,781,780,0,3,60,66,65,409,466,472,471,43,493,494,783,782,0,7,62,70,69,413,468,474,473,43,504,505,785,784,0,11,64,74,73,417,470,476,475,43,513,514,787,786,0,17,4,78,77,423,410,478,477,43,502,503,789,788,0,21,12,82,81,427,418,480,479,43,522,523,791,790,0,25,14,86,85,431,420,482,481,43,511,512,793,792,0,29,18,90,89,435,424,310,483,43,500,501,795,794,0,33,22,94,93,439,428,485,484,43,520,521,797,796,0,37,26,98,97,443,432,488,487,43,509,510,799,798,0,41,30,102,101,447,436,490,489,43,498,499,801,800,0,45,34,106,105,451,440,492,491,43,518,519,803,802,0,49,38,110,109,455,444,495,494,43,496,497,805,804,0,53,46,114,113,459,452,497,496,43,507,508,807,806,0,57,42,118,117,463,448,499,498,43,516,517,808,781,0,60,50,121,66,466,456,500,472,43,494,495,809,783,0,62,54,123,70,468,460,501,474,43,505,506,810,785,0,64,58,125,74,470,464,502,476,43,514,515,780,787,0,4,3,65,78,410,409,471,478,43,492,493,782,811,0,8,7,69,127,414,413,473,503,43,503,504,784,789,0,12,11,73,82,418,417,475,480,43,523,492,811,791,0,14,8,127,86,420,414,503,482,43,512,513,786,793,0,18,17,77,90,424,423,477,310,43,501,502,788,795,0,22,21,81,94,428,427,479,485,43,521,522,790,797,0,26,25,85,98,432,431,481,488,43,510,511,792,799,0,30,29,89,102,436,435,483,490,43,499,500,794,801,0,34,33,93,106,440,439,484,492,43,519,520,796,803,0,38,37,97,110,444,443,487,495,43,508,509,798,807,0,42,41,101,118,448,447,489,499,43,497,498,800,805,0,46,45,105,114,452,451,491,497,43,517,518,802,808,0,50,49,109,121,456,455,494,500,43,495,496,804,809,0,54,53,113,123,460,459,496,501,43,506,507,806,810,0,58,57,117,125,464,463,498,502,43,835,836,868,867,4,0,0,0,0,720,722,726,727,43,813,814,846,845,4,0,0,0,0,489,490,728,729,43,824,825,857,856,4,0,0,0,0,723,488,730,731,43,833,834,866,865,4,0,0,0,0,497,491,732,733,43,822,823,855,854,4,0,0,0,0,494,495,734,735,43,842,843,875,874,4,0,0,0,0,502,498,736,737,43,831,832,864,863,4,0,0,0,0,501,496,738,739,43,820,821,853,852,4,0,0,0,0,472,500,740,741,43,840,841,873,872,4,0,0,0,0,742,476,743,744,43,829,830,862,861,4,0,0,0,0,473,474,745,746,43,818,819,851,850,4,0,0,0,0,478,471,747,748,43,838,839,871,870,4,0,0,0,0,479,480,749,750,43,816,817,849,848,4,0,0,0,0,310,477,751,752,43,827,828,860,859,4,0,0,0,0,482,503,753,754,43,836,837,869,868,4,0,0,0,0,722,721,755,726,43,814,815,847,846,4,0,0,0,0,490,483,756,728,43,825,826,858,857,4,0,0,0,0,488,481,757,730,43,834,835,867,866,4,0,0,0,0,491,720,727,732,43,812,813,845,844,4,0,0,0,0,499,489,729,758,43,823,824,856,855,4,0,0,0,0,495,723,731,734,43,843,812,844,875,4,0,0,0,0,498,499,758,736,43,832,833,865,864,4,0,0,0,0,496,497,733,738,43,821,822,854,853,4,0,0,0,0,500,494,735,740,43,841,842,874,873,4,0,0,0,0,476,502,737,743,43,830,831,863,862,4,0,0,0,0,474,501,739,745,43,819,820,852,851,4,0,0,0,0,471,472,741,747,43,839,840,872,871,4,0,0,0,0,480,742,744,749,43,828,829,861,860,4,0,0,0,0,503,473,746,753,43,817,818,850,849,4,0,0,0,0,477,478,748,751,43,837,838,870,869,4,0,0,0,0,721,479,750,755,43,815,816,848,847,4,0,0,0,0,483,310,752,756,43,826,827,859,858,4,0,0,0,0,481,482,754,757,43,5248,5249,901,900,4,0,0,0,0,759,760,761,762,43,5250,5251,879,878,4,0,0,0,0,763,764,765,766,43,5252,5253,890,889,4,0,0,0,0,767,768,769,770,43,5254,5255,899,898,4,0,0,0,0,771,772,773,774,43,5256,5257,877,876,4,0,0,0,0,775,776,777,778,43,5258,5259,888,887,4,0,0,0,0,779,780,781,782,43,5260,5256,876,907,4,0,0,0,0,783,775,778,784,43,5261,5262,897,896,4,0,0,0,0,785,786,787,788,43,5263,5264,886,885,4,0,0,0,0,789,790,791,792,43,5265,5266,906,905,4,0,0,0,0,793,794,795,796,43,5267,5268,895,894,4,0,0,0,0,797,798,799,800,43,5269,5270,884,883,4,0,0,0,0,801,802,803,804,43,5271,5272,904,903,4,0,0,0,0,805,806,807,808,43,5273,5274,893,892,4,0,0,0,0,809,810,811,812,43,5275,5276,882,881,4,0,0,0,0,813,814,815,816,43,5249,5277,902,901,4,0,0,0,0,760,817,818,761,43,5251,5278,880,879,4,0,0,0,0,764,819,820,765,43,5253,5279,891,890,4,0,0,0,0,768,821,822,769,43,5255,5248,900,899,4,0,0,0,0,772,759,762,773,43,5257,5250,878,877,4,0,0,0,0,776,763,766,777,43,5259,5252,889,888,4,0,0,0,0,780,767,770,781,43,5262,5254,898,897,4,0,0,0,0,786,771,774,787,43,5264,5258,887,886,4,0,0,0,0,790,779,782,791,43,5266,5260,907,906,4,0,0,0,0,794,783,784,795,43,5268,5261,896,895,4,0,0,0,0,798,785,788,799,43,5270,5263,885,884,4,0,0,0,0,802,789,792,803,43,5272,5265,905,904,4,0,0,0,0,806,793,796,807,43,5274,5267,894,893,4,0,0,0,0,810,797,800,811,43,5276,5269,883,882,4,0,0,0,0,814,801,804,815,43,5277,5271,903,902,4,0,0,0,0,817,805,808,818,43,5278,5275,881,880,4,0,0,0,0,819,813,816,820,43,5279,5273,892,891,4,0,0,0,0,821,809,812,822,43,885,886,5482,5481,4,0,0,0,0,792,791,823,824,43,896,897,5493,5492,4,0,0,0,0,788,787,825,826,43,907,876,5472,5503,4,0,0,0,0,784,778,827,828,43,887,888,5484,5483,4,0,0,0,0,782,781,829,830,43,876,877,5473,5472,4,0,0,0,0,778,777,831,827,43,898,899,5495,5494,4,0,0,0,0,774,773,832,833,43,889,890,5486,5485,4,0,0,0,0,770,769,834,835,43,878,879,5475,5474,4,0,0,0,0,766,765,836,837,43,900,901,5497,5496,4,0,0,0,0,762,761,838,839,43,891,892,5488,5487,4,0,0,0,0,822,812,840,841,43,880,881,5477,5476,4,0,0,0,0,820,816,842,843,43,902,903,5499,5498,4,0,0,0,0,818,808,844,845,43,882,883,5479,5478,4,0,0,0,0,815,804,846,847,43,893,894,5490,5489,4,0,0,0,0,811,800,848,849,43,904,905,5501,5500,4,0,0,0,0,807,796,850,851,43,884,885,5481,5480,4,0,0,0,0,803,792,824,852,43,895,896,5492,5491,4,0,0,0,0,799,788,826,853,43,906,907,5503,5502,4,0,0,0,0,795,784,828,854,43,886,887,5483,5482,4,0,0,0,0,791,782,830,823,43,897,898,5494,5493,4,0,0,0,0,787,774,833,825,43,888,889,5485,5484,4,0,0,0,0,781,770,835,829,43,877,878,5474,5473,4,0,0,0,0,777,766,837,831,43,899,900,5496,5495,4,0,0,0,0,773,762,839,832,43,890,891,5487,5486,4,0,0,0,0,769,822,841,834,43,879,880,5476,5475,4,0,0,0,0,765,820,843,836,43,901,902,5498,5497,4,0,0,0,0,761,818,845,838,43,881,882,5478,5477,4,0,0,0,0,816,815,847,842,43,892,893,5489,5488,4,0,0,0,0,812,811,849,840,43,903,904,5500,5499,4,0,0,0,0,808,807,851,844,43,883,884,5480,5479,4,0,0,0,0,804,803,852,846,43,894,895,5491,5490,4,0,0,0,0,800,799,853,848,43,905,906,5502,5501,4,0,0,0,0,796,795,854,850,43,732,924,909,717,0,410,411,261,264,855,856,636,639,43,733,925,910,718,0,412,413,295,298,857,858,670,673,43,1229,1231,911,909,0,414,415,262,261,859,859,637,636,43,734,926,912,720,0,293,292,301,304,668,667,676,679,43,735,927,913,721,0,297,296,305,308,672,671,680,683,43,736,928,914,722,0,300,299,309,312,675,674,684,687,43,737,929,915,723,0,303,302,313,316,678,677,688,691,43,738,930,916,724,0,307,306,317,320,682,681,692,695,43,739,931,917,725,0,311,310,321,324,686,685,696,699,43,740,932,918,726,0,315,314,329,332,690,689,704,707,43,741,933,919,727,0,319,318,325,328,694,693,700,703,43,742,934,920,728,0,323,322,333,336,698,697,708,711,43,743,935,921,729,0,327,326,337,340,702,701,712,715,43,744,936,922,730,0,331,330,341,344,706,705,716,719,43,745,937,923,731,0,335,334,416,417,710,709,860,861,43,746,938,924,732,0,339,338,411,410,714,713,856,855,43,747,939,925,733,0,343,342,413,412,718,717,858,857,43,1228,1246,926,908,0,418,419,292,291,859,859,667,666,43,1230,1247,927,910,0,420,421,296,295,859,859,671,670,43,1231,1248,928,911,0,415,422,299,262,859,859,674,637,43,1232,1249,929,912,0,423,424,302,301,859,859,677,676,43,1233,1250,930,913,0,425,426,306,305,859,859,681,680,43,1234,1251,931,914,0,427,428,310,309,859,859,685,684,43,1235,1252,932,915,0,429,430,314,313,859,859,689,688,43,1236,1253,933,916,0,431,432,318,317,859,859,693,692,43,1237,1254,934,917,0,433,434,322,321,859,859,697,696,43,1239,1255,935,919,0,435,436,326,325,859,859,701,700,43,1238,1256,936,918,0,437,438,330,329,859,859,705,704,43,1240,1257,937,920,0,439,440,334,333,859,859,709,708,43,1241,1258,938,921,0,441,442,338,337,859,859,713,712,43,1242,1259,939,922,0,443,444,342,341,859,859,717,716,43,731,923,908,716,0,417,416,291,294,861,860,666,669,43,1244,941,958,1229,0,445,446,447,414,859,862,863,859,43,1245,942,959,1230,0,448,449,450,420,859,864,865,859,43,1246,943,961,1232,0,419,451,452,423,859,866,867,859,43,1247,944,962,1233,0,421,453,454,425,859,868,869,859,43,1248,945,963,1234,0,422,455,456,427,859,870,871,859,43,1249,946,964,1235,0,424,457,458,429,859,872,873,859,43,1250,947,965,1236,0,426,459,460,431,859,874,875,859,43,1251,948,966,1237,0,428,461,462,433,859,876,877,859,43,1252,949,967,1238,0,430,463,464,437,859,878,879,859,43,1253,950,968,1239,0,432,465,466,435,859,880,881,859,43,1254,951,969,1240,0,434,467,468,439,859,882,883,859,43,1255,952,970,1241,0,436,469,470,441,859,884,885,859,43,1256,953,971,1242,0,438,471,472,443,859,886,887,859,43,1257,954,940,1243,0,440,473,474,475,859,888,889,859,43,1258,955,941,1244,0,442,476,446,445,859,890,862,859,43,1259,956,942,1245,0,444,477,449,448,859,891,864,859,43,1243,940,957,1228,0,475,474,478,418,859,889,892,859,43,990,992,960,958,0,479,480,481,447,893,894,895,863,43,989,975,943,957,0,482,483,451,478,896,897,866,892,43,991,976,944,959,0,484,485,453,450,898,899,868,865,43,992,977,945,960,0,480,486,455,481,894,900,870,895,43,993,978,946,961,0,487,488,457,452,901,902,872,867,43,994,979,947,962,0,489,490,459,454,903,904,874,869,43,995,980,948,963,0,491,492,461,456,905,906,876,871,43,996,981,949,964,0,493,494,463,458,907,908,878,873,43,997,982,950,965,0,495,496,465,460,909,910,880,875,43,998,983,951,966,0,497,498,467,462,911,912,882,877,43,1e3,984,952,968,0,499,500,469,466,913,914,884,881,43,999,985,953,967,0,501,502,471,464,915,916,886,879,43,1001,986,954,969,0,503,504,473,468,917,918,888,883,43,1002,987,955,970,0,505,506,476,470,919,920,890,885,43,1003,988,956,971,0,507,508,477,472,921,922,891,887,43,941,973,990,958,0,446,509,479,447,862,923,893,863,43,942,974,991,959,0,449,510,484,450,864,924,898,865,43,943,975,993,961,0,451,483,487,452,866,897,901,867,43,944,976,994,962,0,453,485,489,454,868,899,903,869,43,945,977,995,963,0,455,486,491,456,870,900,905,871,43,946,978,996,964,0,457,488,493,458,872,902,907,873,43,947,979,997,965,0,459,490,495,460,874,904,909,875,43,948,980,998,966,0,461,492,497,462,876,906,911,877,43,949,981,999,967,0,463,494,501,464,878,908,915,879,43,950,982,1e3,968,0,465,496,499,466,880,910,913,881,43,951,983,1001,969,0,467,498,503,468,882,912,917,883,43,952,984,1002,970,0,469,500,505,470,884,914,919,885,43,953,985,1003,971,0,471,502,507,472,886,916,921,887,43,954,986,972,940,0,473,504,511,474,888,918,925,889,43,955,987,973,941,0,476,506,509,446,890,920,923,862,43,956,988,974,942,0,477,508,510,449,891,922,924,864,43,940,972,989,957,0,474,511,482,478,889,925,896,892,43,1261,1263,992,990,0,512,513,480,479,859,859,894,893,43,1260,1278,975,989,0,514,515,483,482,859,859,897,896,43,1262,1279,976,991,0,516,517,485,484,859,859,899,898,43,1263,1280,977,992,0,513,518,486,480,859,859,900,894,43,1264,1281,978,993,0,519,520,488,487,859,859,902,901,43,1265,1282,979,994,0,521,522,490,489,859,859,904,903,43,1266,1283,980,995,0,523,524,492,491,859,859,906,905,43,1267,1284,981,996,0,525,526,494,493,926,859,908,907,43,1268,1285,982,997,0,527,528,496,495,859,859,910,909,43,1269,1286,983,998,0,529,530,498,497,859,859,912,911,43,1271,1287,984,1e3,0,531,532,500,499,859,859,914,913,43,1270,1288,985,999,0,533,534,502,501,859,859,916,915,43,1272,1289,986,1001,0,535,536,504,503,859,859,918,917,43,1273,1290,987,1002,0,537,538,506,505,859,859,920,919,43,1274,1291,988,1003,0,539,540,508,507,859,859,922,921,43,1276,1005,1022,1261,0,541,542,543,512,859,927,928,859,43,1277,1006,1023,1262,0,544,545,546,516,859,929,930,859,43,1278,1007,1025,1264,0,515,547,548,519,859,931,932,859,43,1279,1008,1026,1265,0,517,549,550,521,859,933,934,859,43,1280,1009,1027,1266,0,518,551,552,523,859,935,936,859,43,1281,1010,1028,1267,0,520,553,554,525,859,937,938,926,43,1282,1011,1029,1268,0,522,555,556,527,859,939,940,859,43,1283,1012,1030,1269,0,524,557,558,529,859,941,942,859,43,1284,1013,1031,1270,0,526,559,560,533,859,943,944,859,43,1285,1014,1032,1271,0,528,561,562,531,859,945,946,859,43,1286,1015,1033,1272,0,530,563,564,535,859,947,948,859,43,1287,1016,1034,1273,0,532,565,566,537,859,949,950,859,43,1288,1017,1035,1274,0,534,567,568,539,859,951,952,859,43,1289,1018,1004,1275,0,536,569,570,571,859,953,954,859,43,1290,1019,1005,1276,0,538,572,542,541,859,955,927,859,43,1291,1020,1006,1277,0,540,573,545,544,859,956,929,859,43,1275,1004,1021,1260,0,571,570,574,514,859,954,957,859,43,1054,1056,1024,1022,0,575,576,577,543,958,959,960,928,43,1053,1039,1007,1021,0,578,579,547,574,961,962,931,957,43,1055,1040,1008,1023,0,580,581,549,546,963,964,933,930,43,1056,1041,1009,1024,0,576,582,551,577,959,965,935,960,43,1057,1042,1010,1025,0,583,584,553,548,966,967,937,932,43,1058,1043,1011,1026,0,585,586,555,550,968,969,939,934,43,1059,1044,1012,1027,0,587,588,557,552,970,971,941,936,43,1060,1045,1013,1028,0,589,590,559,554,972,973,943,938,43,1061,1046,1014,1029,0,591,592,561,556,974,975,945,940,43,1062,1047,1015,1030,0,593,594,563,558,976,977,947,942,43,1064,1048,1016,1032,0,595,596,565,562,978,979,949,946,43,1063,1049,1017,1031,0,597,598,567,560,980,981,951,944,43,1065,1050,1018,1033,0,599,600,569,564,982,983,953,948,43,1066,1051,1019,1034,0,601,602,572,566,984,985,955,950,43,1067,1052,1020,1035,0,603,604,573,568,986,987,956,952,43,1005,1037,1054,1022,0,542,605,575,543,927,988,958,928,43,1006,1038,1055,1023,0,545,606,580,546,929,989,963,930,43,1007,1039,1057,1025,0,547,579,583,548,931,962,966,932,43,1008,1040,1058,1026,0,549,581,585,550,933,964,968,934,43,1009,1041,1059,1027,0,551,582,587,552,935,965,970,936,43,1010,1042,1060,1028,0,553,584,589,554,937,967,972,938,43,1011,1043,1061,1029,0,555,586,591,556,939,969,974,940,43,1012,1044,1062,1030,0,557,588,593,558,941,971,976,942,43,1013,1045,1063,1031,0,559,590,597,560,943,973,980,944,43,1014,1046,1064,1032,0,561,592,595,562,945,975,978,946,43,1015,1047,1065,1033,0,563,594,599,564,947,977,982,948,43,1016,1048,1066,1034,0,565,596,601,566,949,979,984,950,43,1017,1049,1067,1035,0,567,598,603,568,951,981,986,952,43,1018,1050,1036,1004,0,569,600,607,570,953,983,990,954,43,1019,1051,1037,1005,0,572,602,605,542,955,985,988,927,43,1020,1052,1038,1006,0,573,604,606,545,956,987,989,929,43,1004,1036,1053,1021,0,570,607,578,574,954,990,961,957,43,1293,1295,1056,1054,0,608,609,576,575,859,859,959,958,43,1292,1310,1039,1053,0,610,611,579,578,859,859,962,961,43,1294,1311,1040,1055,0,612,613,581,580,859,859,964,963,43,1295,1312,1041,1056,0,609,614,582,576,859,859,965,959,43,1296,1313,1042,1057,0,615,616,584,583,859,859,967,966,43,1297,1314,1043,1058,0,617,618,586,585,859,859,969,968,43,1298,1315,1044,1059,0,619,620,588,587,859,859,971,970,43,1299,1316,1045,1060,0,621,622,590,589,859,859,973,972,43,1300,1317,1046,1061,0,623,624,592,591,859,859,975,974,43,1301,1318,1047,1062,0,625,626,594,593,859,859,977,976,43,1303,1319,1048,1064,0,627,628,596,595,859,859,979,978,43,1302,1320,1049,1063,0,629,630,598,597,859,859,981,980,43,1304,1321,1050,1065,0,631,632,600,599,859,859,983,982,43,1305,1322,1051,1066,0,633,634,602,601,859,859,985,984,43,1306,1323,1052,1067,0,635,636,604,603,859,859,987,986,43,1308,1069,1086,1293,0,637,638,639,608,859,991,992,859,43,1309,1070,1087,1294,0,640,641,642,612,859,993,994,859,43,1310,1071,1089,1296,0,611,643,644,615,859,995,996,859,43,1311,1072,1090,1297,0,613,645,646,617,859,997,998,859,43,1312,1073,1091,1298,0,614,647,648,619,859,999,1e3,859,43,1313,1074,1092,1299,0,616,649,650,621,859,1001,1002,859,43,1314,1075,1093,1300,0,618,651,652,623,859,1003,1004,859,43,1315,1076,1094,1301,0,620,653,654,625,859,1005,1006,859,43,1316,1077,1095,1302,0,622,655,656,629,859,1007,1008,859,43,1317,1078,1096,1303,0,624,657,658,627,859,1009,1010,859,43,1318,1079,1097,1304,0,626,659,660,631,859,1011,1012,859,43,1319,1080,1098,1305,0,628,661,662,633,859,1013,1014,859,43,1320,1081,1099,1306,0,630,663,664,635,859,1015,1016,859,43,1321,1082,1068,1307,0,632,665,666,667,859,1017,1018,859,43,1322,1083,1069,1308,0,634,668,638,637,859,1019,991,859,43,1323,1084,1070,1309,0,636,669,641,640,859,1020,993,859,43,1307,1068,1085,1292,0,667,666,670,610,859,1018,1021,859,43,1118,1120,1088,1086,0,671,672,673,639,1022,1023,1024,992,43,1117,1103,1071,1085,0,674,675,643,670,1025,1026,995,1021,43,1119,1104,1072,1087,0,676,677,645,642,1027,1028,997,994,43,1120,1105,1073,1088,0,672,678,647,673,1023,1029,999,1024,43,1121,1106,1074,1089,0,679,680,649,644,1030,1031,1001,996,43,1122,1107,1075,1090,0,681,682,651,646,1032,1033,1003,998,43,1123,1108,1076,1091,0,683,684,653,648,1034,1035,1005,1e3,43,1124,1109,1077,1092,0,685,686,655,650,1036,1037,1007,1002,43,1125,1110,1078,1093,0,687,688,657,652,1038,1039,1009,1004,43,1126,1111,1079,1094,0,689,690,659,654,1040,1041,1011,1006,43,1128,1112,1080,1096,0,691,692,661,658,1042,1043,1013,1010,43,1127,1113,1081,1095,0,693,694,663,656,1044,1045,1015,1008,43,1129,1114,1082,1097,0,695,696,665,660,1046,1047,1017,1012,43,1130,1115,1083,1098,0,697,698,668,662,1048,1049,1019,1014,43,1131,1116,1084,1099,0,699,700,669,664,1050,1051,1020,1016,43,1069,1101,1118,1086,0,638,701,671,639,991,1052,1022,992,43,1070,1102,1119,1087,0,641,702,676,642,993,1053,1027,994,43,1071,1103,1121,1089,0,643,675,679,644,995,1026,1030,996,43,1072,1104,1122,1090,0,645,677,681,646,997,1028,1032,998,43,1073,1105,1123,1091,0,647,678,683,648,999,1029,1034,1e3,43,1074,1106,1124,1092,0,649,680,685,650,1001,1031,1036,1002,43,1075,1107,1125,1093,0,651,682,687,652,1003,1033,1038,1004,43,1076,1108,1126,1094,0,653,684,689,654,1005,1035,1040,1006,43,1077,1109,1127,1095,0,655,686,693,656,1007,1037,1044,1008,43,1078,1110,1128,1096,0,657,688,691,658,1009,1039,1042,1010,43,1079,1111,1129,1097,0,659,690,695,660,1011,1041,1046,1012,43,1080,1112,1130,1098,0,661,692,697,662,1013,1043,1048,1014,43,1081,1113,1131,1099,0,663,694,699,664,1015,1045,1050,1016,43,1082,1114,1100,1068,0,665,696,703,666,1017,1047,1054,1018,43,1083,1115,1101,1069,0,668,698,701,638,1019,1049,1052,991,43,1084,1116,1102,1070,0,669,700,702,641,1020,1051,1053,993,43,1068,1100,1117,1085,0,666,703,674,670,1018,1054,1025,1021,43,1325,1327,1120,1118,0,704,705,672,671,859,859,1023,1022,43,1324,1342,1103,1117,0,706,707,675,674,859,859,1026,1025,43,1326,1343,1104,1119,0,708,709,677,676,859,859,1028,1027,43,1327,1344,1105,1120,0,705,710,678,672,859,859,1029,1023,43,1328,1345,1106,1121,0,711,712,680,679,859,859,1031,1030,43,1329,1346,1107,1122,0,713,714,682,681,859,859,1033,1032,43,1330,1347,1108,1123,0,715,716,684,683,859,859,1035,1034,43,1331,1348,1109,1124,0,717,718,686,685,859,859,1037,1036,43,1332,1349,1110,1125,0,719,720,688,687,859,859,1039,1038,43,1333,1350,1111,1126,0,721,722,690,689,859,859,1041,1040,43,1335,1351,1112,1128,0,723,724,692,691,859,859,1043,1042,43,1334,1352,1113,1127,0,725,726,694,693,859,859,1045,1044,43,1336,1353,1114,1129,0,727,728,696,695,859,859,1047,1046,43,1337,1354,1115,1130,0,729,730,698,697,859,859,1049,1048,43,1338,1355,1116,1131,0,731,732,700,699,859,859,1051,1050,43,1340,1133,1150,1325,0,733,734,735,704,859,1055,1056,859,43,1341,1134,1151,1326,0,736,737,738,708,859,1057,1058,859,43,1342,1135,1153,1328,0,707,739,740,711,859,1059,1060,859,43,1343,1136,1154,1329,0,709,741,742,713,859,1061,1062,859,43,1344,1137,1155,1330,0,710,743,744,715,859,1063,1064,859,43,1345,1138,1156,1331,0,712,745,746,717,859,1065,1066,859,43,1346,1139,1157,1332,0,714,747,748,719,859,1067,1068,859,43,1347,1140,1158,1333,0,716,749,750,721,859,1069,1070,859,43,1348,1141,1159,1334,0,718,751,752,725,859,1071,1072,859,43,1349,1142,1160,1335,0,720,753,754,723,859,1073,1074,859,43,1350,1143,1161,1336,0,722,755,756,727,859,1075,1076,859,43,1351,1144,1162,1337,0,724,757,758,729,859,1077,1078,859,43,1352,1145,1163,1338,0,726,759,760,731,859,1079,1080,859,43,1353,1146,1132,1339,0,728,761,762,763,859,1081,1082,859,43,1354,1147,1133,1340,0,730,764,734,733,859,1083,1055,859,43,1355,1148,1134,1341,0,732,765,737,736,859,1084,1057,859,43,1339,1132,1149,1324,0,763,762,766,706,859,1082,1085,859,43,1182,1184,1152,1150,0,767,768,769,735,1086,1087,1088,1056,43,1181,1167,1135,1149,0,770,771,739,766,1089,1090,1059,1085,43,1183,1168,1136,1151,0,772,773,741,738,1091,1092,1061,1058,43,1184,1169,1137,1152,0,768,774,743,769,1087,1093,1063,1088,43,1185,1170,1138,1153,0,775,776,745,740,1094,1095,1065,1060,43,1186,1171,1139,1154,0,777,778,747,742,1096,1097,1067,1062,43,1187,1172,1140,1155,0,779,780,749,744,1098,1099,1069,1064,43,1188,1173,1141,1156,0,781,782,751,746,1100,1101,1071,1066,43,1189,1174,1142,1157,0,783,784,753,748,1102,1103,1073,1068,43,1190,1175,1143,1158,0,785,786,755,750,1104,1105,1075,1070,43,1192,1176,1144,1160,0,787,788,757,754,1106,1107,1077,1074,43,1191,1177,1145,1159,0,789,790,759,752,1108,1109,1079,1072,43,1193,1178,1146,1161,0,791,792,761,756,1110,1111,1081,1076,43,1194,1179,1147,1162,0,793,794,764,758,1112,1113,1083,1078,43,1195,1180,1148,1163,0,795,796,765,760,1114,1115,1084,1080,43,1133,1165,1182,1150,0,734,797,767,735,1055,1116,1086,1056,43,1134,1166,1183,1151,0,737,798,772,738,1057,1117,1091,1058,43,1135,1167,1185,1153,0,739,771,775,740,1059,1090,1094,1060,43,1136,1168,1186,1154,0,741,773,777,742,1061,1092,1096,1062,43,1137,1169,1187,1155,0,743,774,779,744,1063,1093,1098,1064,43,1138,1170,1188,1156,0,745,776,781,746,1065,1095,1100,1066,43,1139,1171,1189,1157,0,747,778,783,748,1067,1097,1102,1068,43,1140,1172,1190,1158,0,749,780,785,750,1069,1099,1104,1070,43,1141,1173,1191,1159,0,751,782,789,752,1071,1101,1108,1072,43,1142,1174,1192,1160,0,753,784,787,754,1073,1103,1106,1074,43,1143,1175,1193,1161,0,755,786,791,756,1075,1105,1110,1076,43,1144,1176,1194,1162,0,757,788,793,758,1077,1107,1112,1078,43,1145,1177,1195,1163,0,759,790,795,760,1079,1109,1114,1080,43,1146,1178,1164,1132,0,761,792,799,762,1081,1111,1118,1082,43,1147,1179,1165,1133,0,764,794,797,734,1083,1113,1116,1055,43,1148,1180,1166,1134,0,765,796,798,737,1084,1115,1117,1057,43,1132,1164,1181,1149,0,762,799,770,766,1082,1118,1089,1085,43,1357,1359,1184,1182,0,800,801,768,767,859,859,1087,1086,43,1356,1374,1167,1181,0,802,803,771,770,859,859,1090,1089,43,1358,1375,1168,1183,0,804,805,773,772,859,859,1092,1091,43,1359,1376,1169,1184,0,801,806,774,768,859,859,1093,1087,43,1360,1377,1170,1185,0,807,808,776,775,859,859,1095,1094,43,1361,1378,1171,1186,0,809,810,778,777,859,859,1097,1096,43,1362,1379,1172,1187,0,811,812,780,779,859,859,1099,1098,43,1363,1380,1173,1188,0,813,814,782,781,859,859,1101,1100,43,1364,1381,1174,1189,0,815,816,784,783,859,859,1103,1102,43,1365,1382,1175,1190,0,817,818,786,785,859,859,1105,1104,43,1367,1383,1176,1192,0,819,820,788,787,859,859,1107,1106,43,1366,1384,1177,1191,0,821,822,790,789,859,859,1109,1108,43,1368,1385,1178,1193,0,823,824,792,791,859,859,1111,1110,43,1369,1386,1179,1194,0,825,826,794,793,859,859,1113,1112,43,1370,1387,1180,1195,0,827,828,796,795,859,859,1115,1114,43,1372,1197,1214,1357,0,829,257,258,800,859,632,633,859,43,1373,1198,1215,1358,0,830,259,260,804,859,634,635,859,43,1374,1199,1217,1360,0,803,265,266,807,859,640,641,859,43,1375,1200,1218,1361,0,805,267,268,809,859,642,643,859,43,1376,1201,1219,1362,0,806,269,270,811,859,644,645,859,43,1377,1202,1220,1363,0,808,271,272,813,859,646,647,859,43,1378,1203,1221,1364,0,810,273,274,815,859,648,649,859,43,1379,1204,1222,1365,0,812,275,276,817,859,650,651,859,43,1380,1205,1223,1366,0,814,277,278,821,859,652,653,859,43,1381,1206,1224,1367,0,816,279,280,819,859,654,655,859,43,1382,1207,1225,1368,0,818,281,282,823,859,656,657,859,43,1383,1208,1226,1369,0,820,283,284,825,859,658,659,859,43,1384,1209,1227,1370,0,822,285,286,827,859,660,661,859,43,1385,1210,1196,1371,0,824,287,288,831,859,662,663,859,43,1386,1211,1197,1372,0,826,289,257,829,859,664,632,859,43,1387,1212,1198,1373,0,828,290,259,830,859,665,634,859,43,1371,1196,1213,1356,0,831,288,409,802,859,663,725,859,43,766,768,1216,1214,0,5,13,832,258,411,419,1119,633,43,765,751,1199,1213,0,1,16,265,409,407,422,640,725,43,767,752,1200,1215,0,9,20,267,260,415,426,642,635,43,768,753,1201,1216,0,13,24,269,832,419,430,644,1119,43,769,754,1202,1217,0,15,28,271,266,421,434,646,641,43,770,755,1203,1218,0,19,32,273,268,425,438,648,643,43,771,756,1204,1219,0,23,36,275,270,429,442,650,645,43,772,757,1205,1220,0,27,40,277,272,433,446,652,647,43,773,758,1206,1221,0,31,44,279,274,437,450,654,649,43,774,759,1207,1222,0,35,48,281,276,441,454,656,651,43,776,760,1208,1224,0,43,52,283,280,449,458,658,655,43,775,761,1209,1223,0,39,56,285,278,445,462,660,653,43,777,762,1210,1225,0,47,59,287,282,453,465,662,657,43,778,763,1211,1226,0,51,61,289,284,457,467,664,659,43,779,764,1212,1227,0,55,63,290,286,461,469,665,661,43,958,960,1231,1229,0,447,481,415,414,863,895,859,859,43,957,943,1246,1228,0,478,451,419,418,892,866,859,859,43,959,944,1247,1230,0,450,453,421,420,865,868,859,859,43,960,945,1248,1231,0,481,455,422,415,895,870,859,859,43,961,946,1249,1232,0,452,457,424,423,867,872,859,859,43,962,947,1250,1233,0,454,459,426,425,869,874,859,859,43,963,948,1251,1234,0,456,461,428,427,871,876,859,859,43,964,949,1252,1235,0,458,463,430,429,873,878,859,859,43,965,950,1253,1236,0,460,465,432,431,875,880,859,859,43,966,951,1254,1237,0,462,467,434,433,877,882,859,859,43,968,952,1255,1239,0,466,469,436,435,881,884,859,859,43,967,953,1256,1238,0,464,471,438,437,879,886,859,859,43,969,954,1257,1240,0,468,473,440,439,883,888,859,859,43,970,955,1258,1241,0,470,476,442,441,885,890,859,859,43,971,956,1259,1242,0,472,477,444,443,887,891,859,859,43,924,1244,1229,909,0,411,445,414,261,856,859,859,636,43,925,1245,1230,910,0,413,448,420,295,858,859,859,670,43,926,1246,1232,912,0,292,419,423,301,667,859,859,676,43,927,1247,1233,913,0,296,421,425,305,671,859,859,680,43,928,1248,1234,914,0,299,422,427,309,674,859,859,684,43,929,1249,1235,915,0,302,424,429,313,677,859,859,688,43,930,1250,1236,916,0,306,426,431,317,681,859,859,692,43,931,1251,1237,917,0,310,428,433,321,685,859,859,696,43,932,1252,1238,918,0,314,430,437,329,689,859,859,704,43,933,1253,1239,919,0,318,432,435,325,693,859,859,700,43,934,1254,1240,920,0,322,434,439,333,697,859,859,708,43,935,1255,1241,921,0,326,436,441,337,701,859,859,712,43,936,1256,1242,922,0,330,438,443,341,705,859,859,716,43,937,1257,1243,923,0,334,440,475,416,709,859,859,860,43,938,1258,1244,924,0,338,442,445,411,713,859,859,856,43,939,1259,1245,925,0,342,444,448,413,717,859,859,858,43,923,1243,1228,908,0,416,475,418,291,860,859,859,666,43,1022,1024,1263,1261,0,543,577,513,512,928,960,859,859,43,1021,1007,1278,1260,0,574,547,515,514,957,931,859,859,43,1023,1008,1279,1262,0,546,549,517,516,930,933,859,859,43,1024,1009,1280,1263,0,577,551,518,513,960,935,859,859,43,1025,1010,1281,1264,0,548,553,520,519,932,937,859,859,43,1026,1011,1282,1265,0,550,555,522,521,934,939,859,859,43,1027,1012,1283,1266,0,552,557,524,523,936,941,859,859,43,1028,1013,1284,1267,0,554,559,526,525,938,943,859,926,43,1029,1014,1285,1268,0,556,561,528,527,940,945,859,859,43,1030,1015,1286,1269,0,558,563,530,529,942,947,859,859,43,1032,1016,1287,1271,0,562,565,532,531,946,949,859,859,43,1031,1017,1288,1270,0,560,567,534,533,944,951,859,859,43,1033,1018,1289,1272,0,564,569,536,535,948,953,859,859,43,1034,1019,1290,1273,0,566,572,538,537,950,955,859,859,43,1035,1020,1291,1274,0,568,573,540,539,952,956,859,859,43,973,1276,1261,990,0,509,541,512,479,923,859,859,893,43,974,1277,1262,991,0,510,544,516,484,924,859,859,898,43,975,1278,1264,993,0,483,515,519,487,897,859,859,901,43,976,1279,1265,994,0,485,517,521,489,899,859,859,903,43,977,1280,1266,995,0,486,518,523,491,900,859,859,905,43,978,1281,1267,996,0,488,520,525,493,902,859,926,907,43,979,1282,1268,997,0,490,522,527,495,904,859,859,909,43,980,1283,1269,998,0,492,524,529,497,906,859,859,911,43,981,1284,1270,999,0,494,526,533,501,908,859,859,915,43,982,1285,1271,1e3,0,496,528,531,499,910,859,859,913,43,983,1286,1272,1001,0,498,530,535,503,912,859,859,917,43,984,1287,1273,1002,0,500,532,537,505,914,859,859,919,43,985,1288,1274,1003,0,502,534,539,507,916,859,859,921,43,986,1289,1275,972,0,504,536,571,511,918,859,859,925,43,987,1290,1276,973,0,506,538,541,509,920,859,859,923,43,988,1291,1277,974,0,508,540,544,510,922,859,859,924,43,972,1275,1260,989,0,511,571,514,482,925,859,859,896,43,1086,1088,1295,1293,0,639,673,609,608,992,1024,859,859,43,1085,1071,1310,1292,0,670,643,611,610,1021,995,859,859,43,1087,1072,1311,1294,0,642,645,613,612,994,997,859,859,43,1088,1073,1312,1295,0,673,647,614,609,1024,999,859,859,43,1089,1074,1313,1296,0,644,649,616,615,996,1001,859,859,43,1090,1075,1314,1297,0,646,651,618,617,998,1003,859,859,43,1091,1076,1315,1298,0,648,653,620,619,1ee3,3001,2997,1,0,0,0,0,1788,52,53,49,43,2998,3002,3e3,2996,1,0,0,0,0,1363,54,52,1788,43,2999,3003,3002,2998,1,0,0,0,0,51,55,54,1363,43,3e3,3004,3005,3001,1,0,0,0,0,52,56,56,53,43,3002,3006,3004,3ee3,1887,1866,43,3668,3787,3786,3690,1,0,0,0,0,1490,1544,2e3,1987,43,3667,3788,3787,3668,1,0,0,0,0,1979,337,1544,1490,43,3669,3789,3788,3667,1,0,0,0,0,1980,338,337,1979,43,3754,3790,3789,3669,1,0,0,0,0,1535,1545,338,1980,43,3755,3791,3790,3754,1,0,0,0,0,317,317,1545,1535,43,3756,3792,3791,3755,1,0,0,0,0,318,318,317,317,43,3757,3793,3792,3756,1,0,0,0,0,183,183,318,318,43,3758,3794,3793,3757,1,0,0,0,0,1530,299,183,183,43,3759,3795,3794,3758,1,0,0,0,0,319,319,299,1530,43,3760,3796,3795,3759,1,0,0,0,0,301,1531,319,319,43,3761,3797,3796,3760,1,0,0,0,0,302,302,1531,301,43,3762,3798,3797,3761,1,0,0,0,0,1536,340,302,302,43,3763,3799,3798,3762,1,0,0,0,0,304,143,340,1536,43,3764,3800,3799,3763,1,0,0,0,0,1532,1547,143,304,43,3765,3801,3800,3764,1,0,0,0,0,341,306,1547,1532,43,3766,3802,3801,3765,1,0,0,0,0,307,342,306,341,43,3767,3803,3802,3766,1,0,0,0,0,308,308,342,307,43,3768,3804,3803,3767,1,0,0,0,0,321,2001,308,308,43,3769,3805,3804,3768,1,0,0,0,0,1533,1746,2001,321,43,3770,3806,3805,3769,1,0,0,0,0,1534,1888,1746,1533,43,3771,3807,3806,3770,1,0,0,0,0,311,346,1888,1534,43,3772,3808,3807,3771,1,0,0,0,0,312,1889,346,311,43,3773,3809,3808,3772,1,0,0,0,0,323,348,1889,312,43,3776,3810,3735,3483,1,0,0,0,0,1538,349,298,1796,43,3777,3811,3810,3776,1,0,0,0,0,1999,350,349,1538,43,3778,3812,3811,3777,1,0,0,0,0,328,1748,350,1999,43,3779,3813,3812,3778,1,0,0,0,0,742,352,1748,328,43,3780,3814,3813,3779,1,0,0,0,0,1540,353,352,742,43,3781,3815,3814,3780,1,0,0,0,0,266,1892,353,1540,43,3782,3816,3815,3781,1,0,0,0,0,331,2002,1892,266,43,3783,3817,3816,3782,1,0,0,0,0,1542,1893,2002,331,43,3784,3818,3817,3783,1,0,0,0,0,1744,1750,1893,1542,43,3785,3819,3818,3784,1,0,0,0,0,1887,1894,1750,1744,43,3786,3820,3819,3785,1,0,0,0,0,2e3,1559,1894,1887,43,3787,3821,3820,3786,1,0,0,0,0,1544,1560,1559,2e3,43,3788,3822,3821,3787,1,0,0,0,0,337,1753,1560,1544,43,3789,3823,3822,3788,1,0,0,0,0,338,1562,1753,337,43,3790,3824,3823,3789,1,0,0,0,0,1545,1563,1562,338,43,3791,3825,3824,3790,1,0,0,0,0,317,1895,1563,1545,43,3792,3826,3825,3791,1,0,0,0,0,318,365,1895,317,43,3793,3827,3826,3792,1,0,0,0,0,183,366,365,318,43,3794,3828,3827,3793,1,0,0,0,0,299,367,366,183,43,3795,3829,3828,3794,1,0,0,0,0,319,1754,367,299,43,3796,3830,3829,3795,1,0,0,0,0,1531,369,1754,319,43,3797,3831,3830,3796,1,0,0,0,0,302,1566,369,1531,43,3798,3832,3831,3797,1,0,0,0,0,340,1755,1566,302,43,3799,3833,3832,3798,1,0,0,0,0,143,2003,1755,340,43,3800,3834,3833,3799,1,0,0,0,0,1547,1897,2003,143,43,3801,3835,3834,3800,1,0,0,0,0,306,374,1897,1547,43,3802,3836,3835,3801,1,0,0,0,0,342,1757,374,306,43,3803,3837,3836,3802,1,0,0,0,0,308,1571,1757,342,43,3804,3838,3837,3803,1,0,0,0,0,2001,1758,1571,308,43,3805,3839,3838,3804,1,0,0,0,0,1746,378,1758,2001,43,3810,3840,3753,3735,1,0,0,0,0,349,379,1883,298,43,3811,3841,3840,3810,1,0,0,0,0,350,2004,379,349,43,3812,3842,3841,3811,1,0,0,0,0,1748,381,2004,350,43,3813,3843,3842,3812,1,0,0,0,0,352,1575,381,1748,43,3814,3844,3843,3813,1,0,0,0,0,353,2005,1575,352,43,3815,3845,3844,3814,1,0,0,0,0,1892,2006,2005,353,43,3816,3846,3845,3815,1,0,0,0,0,2002,1761,2006,1892,43,3817,3847,3846,3816,1,0,0,0,0,1893,1900,1761,2002,43,3818,3848,3847,3817,1,0,0,0,0,1750,1577,1900,1893,43,3819,3849,3848,3818,1,0,0,0,0,1894,1578,1577,1750,43,3820,3850,3849,3819,1,0,0,0,0,1559,2007,1578,1894,43,3821,3851,3850,3820,1,0,0,0,0,1560,390,2007,1559,43,3822,3852,3851,3821,1,0,0,0,0,1753,2008,390,1560,43,3823,3853,3852,3822,1,0,0,0,0,1562,392,2008,1753,43,3824,3854,3853,3823,1,0,0,0,0,1563,1902,392,1562,43,3825,3855,3854,3824,1,0,0,0,0,1895,1903,1902,1563,43,3840,3856,3775,3753,1,0,0,0,0,379,395,1885,1883,43,3841,3857,3856,3840,1,0,0,0,0,2004,1584,395,379,43,3842,3858,3857,3841,1,0,0,0,0,381,1585,1584,2004,43,3843,3859,3858,3842,1,0,0,0,0,1575,2009,1585,381,43,3844,3860,3859,3843,1,0,0,0,0,2005,2010,2009,1575,43,3845,3861,3860,3844,1,0,0,0,0,2006,2011,2010,2005,43,3846,3862,3861,3845,1,0,0,0,0,1761,2012,2011,2006,43,3847,3863,3862,3846,1,0,0,0,0,1900,1769,2012,1761,43,3848,3864,3863,3847,1,0,0,0,0,1577,1589,1769,1900,43,3849,3865,3864,3848,1,0,0,0,0,1578,1904,1589,1577,43,3850,3866,3865,3849,1,0,0,0,0,2007,2013,1904,1578,43,3851,3867,3866,3850,1,0,0,0,0,390,2014,2013,2007,42,3868,3869,3870,1,0,0,0,1343,1,2,42,3868,3871,3869,1,0,0,0,1343,3,1,42,3868,3872,3871,1,0,0,0,1343,1906,3,42,3868,3873,3872,1,0,0,0,1343,2015,1906,42,3873,3874,3872,1,0,0,0,2015,2016,1906,42,3873,3875,3874,1,0,0,0,2015,7,2016,42,3873,3876,3875,1,0,0,0,2015,8,7,42,3873,3877,3876,1,0,0,0,2015,9,8,42,3873,3878,3877,1,0,0,0,2015,10,9,42,3873,3879,3878,1,0,0,0,2015,11,10,42,3873,3880,3879,1,0,0,0,2015,12,11,42,3880,3881,3879,1,0,0,0,12,1599,11,42,3880,3882,3881,1,0,0,0,12,1600,1599,42,3880,3883,3882,1,0,0,0,12,15,1600,42,3880,3884,3883,1,0,0,0,12,2017,15,42,3880,3885,3884,1,0,0,0,12,1911,2017,42,3880,3886,3885,1,0,0,0,12,18,1911,42,3880,3887,3886,1,0,0,0,12,1777,18,42,3887,3888,3886,1,0,0,0,1777,20,18,42,3887,3889,3888,1,0,0,0,1777,1347,20,42,3887,3890,3889,1,0,0,0,1777,1604,1347,43,3868,3891,3892,3873,1,0,0,0,0,1343,23,24,2015,43,3873,3892,3893,3880,1,0,0,0,0,2015,24,25,12,43,3880,3893,3894,3887,1,0,0,0,0,12,25,26,1777,42,3891,3893,3892,1,0,0,0,23,25,24,42,3891,3894,3893,1,0,0,0,23,26,25,42,3870,3895,3868,1,0,0,0,2,27,1343,42,3895,3896,3868,1,0,0,0,27,1349,1343,42,3896,3897,3868,1,0,0,0,1349,1778,1343,42,3897,3898,3868,1,0,0,0,1778,1606,1343,42,3897,3899,3898,1,0,0,0,1778,1913,1606,42,3899,3900,3898,1,0,0,0,1913,1780,1606,42,3900,3901,3898,1,0,0,0,1780,1607,1606,42,3901,3902,3898,1,0,0,0,1607,2018,1606,42,3902,3903,3898,1,0,0,0,2018,1354,1606,42,3903,3904,3898,1,0,0,0,1354,36,1606,42,3904,3905,3898,1,0,0,0,36,1783,1606,42,3904,3906,3905,1,0,0,0,36,2019,1783,42,3906,3907,3905,1,0,0,0,2019,1784,1783,42,3907,3908,3905,1,0,0,0,1784,2020,1783,42,3908,3909,3905,1,0,0,0,2020,2021,1783,42,3909,3910,3905,1,0,0,0,2021,1360,1783,42,3910,3911,3905,1,0,0,0,1360,1787,1783,42,3911,3887,3905,1,0,0,0,1787,1777,1783,42,3911,3912,3887,1,0,0,0,1787,44,1777,42,3912,3913,3887,1,0,0,0,44,45,1777,42,3913,3890,3887,1,0,0,0,45,1604,1777,43,3898,3914,3891,3868,1,0,0,0,0,1606,46,23,1343,43,3905,3915,3914,3898,1,0,0,0,0,1783,47,46,1606,43,3887,3894,3915,3905,1,0,0,0,0,1777,26,47,1783,42,3914,3915,3891,1,0,0,0,46,47,23,42,3915,3894,3891,1,0,0,0,47,26,23,43,3869,3916,3917,3870,1,0,0,0,0,1,1362,1614,2,43,3871,3918,3916,3869,1,0,0,0,0,3,50,1362,1,43,3872,3919,3918,3871,1,0,0,0,0,1906,51,50,3,43,3916,3920,3921,3917,1,0,0,0,0,1362,2022,2023,1614,43,3918,3922,3920,3916,1,0,0,0,0,50,54,2022,1362,43,3919,3923,3922,3918,1,0,0,0,0,51,1915,54,50,43,3920,3924,3925,3921,1,0,0,0,0,2022,56,56,2023,43,3922,3926,3924,3920,1,0,0,0,0,54,56,56,2022,42,3923,3926,3922,1,0,0,0,1915,56,54,43,3924,3927,3928,3925,1,0,0,0,0,56,57,58,56,43,3926,3929,3927,3924,1,0,0,0,0,56,57,57,56,43,3923,3930,3929,3926,1,0,0,0,0,1915,59,57,56,42,3927,3931,3928,1,0,0,0,57,60,58,43,3929,3932,3931,3927,1,0,0,0,0,57,1789,60,57,43,3930,3933,3932,3929,1,0,0,0,0,59,1617,1789,57,43,3931,3934,3935,3928,1,0,0,0,0,60,63,64,58,43,3932,3936,3934,3931,1,0,0,0,0,1789,65,63,60,43,3933,3937,3936,3932,1,0,0,0,0,1617,1620,65,1789,43,3934,3938,3939,3935,1,0,0,0,0,63,1371,1792,64,43,3936,3940,3938,3934,1,0,0,0,0,65,1623,1371,63,43,3937,3941,3940,3936,1,0,0,0,0,1620,2024,1623,65,43,3938,3942,3943,3939,1,0,0,0,0,1371,71,2025,1792,43,3940,3944,3942,3938,1,0,0,0,0,1623,73,71,1371,43,3941,3945,3944,3940,1,0,0,0,0,2024,2026,73,1623,43,3870,3917,3946,3895,1,0,0,0,0,2,1614,1377,27,43,3895,3946,3947,3896,1,0,0,0,0,27,1377,76,1349,43,3896,3947,3948,3897,1,0,0,0,0,1349,76,77,1778,43,3917,3921,3949,3946,1,0,0,0,0,1614,2023,1629,1377,43,3946,3949,3950,3947,1,0,0,0,0,1377,1629,79,76,43,3947,3950,3951,3948,1,0,0,0,0,76,79,1800,77,43,3921,3925,3952,3949,1,0,0,0,0,2023,56,56,1629,43,3949,3952,3953,3950,1,0,0,0,0,1629,56,56,79,42,3950,3953,3951,1,0,0,0,79,56,1800,43,3925,3928,3954,3952,1,0,0,0,0,56,58,57,56,43,3952,3954,3955,3953,1,0,0,0,0,56,57,57,56,43,3953,3955,3956,3951,1,0,0,0,0,56,57,81,1800,42,3928,3957,3954,1,0,0,0,58,82,57,43,3954,3957,3958,3955,1,0,0,0,0,57,82,83,57,43,3955,3958,3959,3956,1,0,0,0,0,57,83,1631,81,43,3928,3935,3960,3957,1,0,0,0,0,58,64,2027,82,43,3957,3960,3961,3958,1,0,0,0,0,82,2027,86,83,43,3958,3961,3962,3959,1,0,0,0,0,83,86,1632,1631,43,3935,3939,3963,3960,1,0,0,0,0,64,1792,1386,2027,43,3960,3963,3964,3961,1,0,0,0,0,2027,1386,1803,86,43,3961,3964,3965,3962,1,0,0,0,0,86,1803,2028,1632,43,3939,3943,3966,3963,1,0,0,0,0,1792,2025,1926,1386,43,3963,3966,3967,3964,1,0,0,0,0,1386,1926,2029,1803,43,3964,3967,3968,3965,1,0,0,0,0,1803,2029,2030,2028,43,3900,3969,3970,3901,1,0,0,0,0,1780,2031,95,1607,43,3899,3971,3969,3900,1,0,0,0,0,1913,96,2031,1780,43,3897,3948,3971,3899,1,0,0,0,0,1778,77,96,1913,43,3969,3972,3973,3970,1,0,0,0,0,2031,1394,98,95,43,3971,3974,3972,3969,1,0,0,0,0,96,99,1394,2031,43,3948,3951,3974,3971,1,0,0,0,0,77,1800,99,96,43,3972,3975,3976,3973,1,0,0,0,0,1394,101,101,98,43,3974,3977,3975,3972,1,0,0,0,0,99,101,101,1394,42,3951,3977,3974,1,0,0,0,1800,101,99,43,3975,3978,3979,3976,1,0,0,0,0,101,2032,1639,101,43,3977,3980,3978,3975,1,0,0,0,0,101,104,2032,101,43,3951,3956,3980,3977,1,0,0,0,0,1800,81,104,101,42,3978,3981,3979,1,0,0,0,2032,1640,1639,43,3980,3982,3981,3978,1,0,0,0,0,104,106,1640,2032,43,3956,3959,3982,3980,1,0,0,0,0,81,1631,106,104,43,3981,3983,3984,3979,1,0,0,0,0,1640,1642,1398,1639,43,3982,3985,3983,3981,1,0,0,0,0,106,2033,1642,1640,43,3959,3962,3985,3982,1,0,0,0,0,1631,1632,2033,106,43,3983,3986,3987,3984,1,0,0,0,0,1642,1645,2034,1398,43,3985,3988,3986,3983,1,0,0,0,0,2033,2035,1645,1642,43,3962,3965,3988,3985,1,0,0,0,0,1632,2028,2035,2033,43,3986,3989,3990,3987,1,0,0,0,0,1645,1646,2036,2034,43,3988,3991,3989,3986,1,0,0,0,0,2035,2037,1646,1645,43,3965,3968,3991,3988,1,0,0,0,0,2028,2030,2037,2035,43,3901,3970,3992,3902,1,0,0,0,0,1607,95,1405,2018,43,3902,3992,3993,3903,1,0,0,0,0,2018,1405,117,1354,43,3903,3993,3994,3904,1,0,0,0,0,1354,117,118,36,43,3970,3973,3995,3992,1,0,0,0,0,95,98,119,1405,43,3992,3995,3996,3993,1,0,0,0,0,1405,119,120,117,43,3993,3996,3997,3994,1,0,0,0,0,117,120,121,118,43,3973,3976,3998,3995,1,0,0,0,0,98,101,100,119,43,3995,3998,3999,3996,1,0,0,0,0,119,100,100,120,42,3996,3999,3997,1,0,0,0,120,100,121,43,3976,3979,4e3,3998,1,0,0,0,0,101,1639,122,100,43,3998,4e3,4001,3999,1,0,0,0,0,100,122,122,100,43,3999,4001,4002,3997,1,0,0,0,0,100,122,123,121,42,3979,4003,4e3,1,0,0,0,1639,2038,122,43,4ee3,4998,4995,1,0,0,0,0,1678,193,2117,188,43,4974,4977,5e3,4997,1,0,0,0,0,170,2181,193,1678,43,4998,5001,5002,4999,1,0,0,0,0,2117,194,1965,2118,43,5e3,5003,5001,4998,1,0,0,0,0,193,1843,194,2117,43,4977,4980,5003,5e3,1,0,0,0,0,2181,2183,1843,193,43,4810,4982,5004,4809,1,0,0,0,0,22,178,197,1347,43,4809,5004,5005,4808,1,0,0,0,0,1347,197,1460,20,43,4808,5005,5006,4806,1,0,0,0,0,20,1460,199,18,43,4982,4985,5007,5004,1,0,0,0,0,178,1835,1686,197,43,5004,5007,5008,5005,1,0,0,0,0,197,1686,201,1460,43,5005,5008,5009,5006,1,0,0,0,0,1460,201,202,199,43,4985,4988,5010,5007,1,0,0,0,0,1835,183,183,1686,43,5007,5010,5011,5008,1,0,0,0,0,1686,183,183,201,42,5008,5011,5009,1,0,0,0,201,183,202,43,4988,4991,5012,5010,1,0,0,0,0,183,185,184,183,43,5010,5012,5013,5011,1,0,0,0,0,183,184,184,183,43,5011,5013,5014,5009,1,0,0,0,0,183,184,203,202,42,4991,5015,5012,1,0,0,0,185,204,184,43,5012,5015,5016,5013,1,0,0,0,0,184,204,205,184,43,5013,5016,5017,5014,1,0,0,0,0,184,205,1689,203,43,4991,4996,5018,5015,1,0,0,0,0,185,189,207,204,43,5015,5018,5019,5016,1,0,0,0,0,204,207,1691,205,43,5016,5019,5020,5017,1,0,0,0,0,205,1691,1967,1689,43,4996,4999,5021,5018,1,0,0,0,0,189,2118,2185,207,43,5018,5021,5022,5019,1,0,0,0,0,207,2185,2186,1691,43,5019,5022,5023,5020,1,0,0,0,0,1691,2186,2187,1967,43,4999,5002,5024,5021,1,0,0,0,0,2118,1965,1970,2185,43,5021,5024,5025,5022,1,0,0,0,0,2185,1970,1850,2186,43,5022,5025,5026,5023,1,0,0,0,0,2186,1850,2188,2187,43,4804,5027,5028,4803,1,0,0,0,0,1346,2124,1476,15,43,4805,5029,5027,4804,1,0,0,0,0,1911,218,2124,1346,43,4806,5006,5029,4805,1,0,0,0,0,18,199,218,1911,43,5027,5030,5031,5028,1,0,0,0,0,2124,1852,1853,1476,43,5029,5032,5030,5027,1,0,0,0,0,218,1854,1852,2124,43,5006,5009,5032,5029,1,0,0,0,0,199,202,1854,218,43,5030,5033,5034,5031,1,0,0,0,0,1852,222,223,1853,43,5032,5035,5033,5030,1,0,0,0,0,1854,222,222,1852,42,5009,5035,5032,1,0,0,0,202,222,1854,43,5033,5036,5037,5034,1,0,0,0,0,222,224,1855,223,43,5035,5038,5036,5033,1,0,0,0,0,222,224,224,222,43,5009,5014,5038,5035,1,0,0,0,0,202,203,224,222,42,5036,5039,5037,1,0,0,0,224,226,1855,43,5038,5040,5039,5036,1,0,0,0,0,224,1482,226,224,43,5014,5017,5040,5038,1,0,0,0,0,203,1689,1482,224,43,5039,5041,5042,5037,1,0,0,0,0,226,1975,1484,1855,43,5040,5043,5041,5039,1,0,0,0,0,1482,1701,1975,226,43,5017,5020,5043,5040,1,0,0,0,0,1689,1967,1701,1482,43,5041,5044,5045,5042,1,0,0,0,0,1975,2189,2059,1484,43,5043,5046,5044,5041,1,0,0,0,0,1701,2190,2189,1975,43,5020,5023,5046,5043,1,0,0,0,0,1967,2187,2190,1701,43,5044,5047,5048,5045,1,0,0,0,0,2189,2191,2062,2059,43,5046,5049,5047,5044,1,0,0,0,0,2190,2192,2191,2189,43,5023,5026,5049,5046,1,0,0,0,0,2187,2188,2192,2190,43,4803,5028,5050,4802,1,0,0,0,0,15,1476,1706,14,43,4802,5050,5051,4801,1,0,0,0,0,14,1706,238,13,43,4801,5051,5052,4799,1,0,0,0,0,13,238,1494,11,43,5028,5031,5053,5050,1,0,0,0,0,1476,1853,240,1706,43,5050,5053,5054,5051,1,0,0,0,0,1706,240,1981,238,43,5051,5054,5055,5052,1,0,0,0,0,238,1981,242,1494,43,5031,5034,5056,5053,1,0,0,0,0,1853,223,223,240,43,5053,5056,5057,5054,1,0,0,0,0,240,223,222,1981,42,5054,5057,5055,1,0,0,0,1981,222,242,43,5034,5037,5058,5056,1,0,0,0,0,223,1855,245,223,43,5056,5058,5059,5057,1,0,0,0,0,223,245,224,222,43,5057,5059,5060,5055,1,0,0,0,0,222,224,246,242,42,5037,5061,5058,1,0,0,0,1855,2193,245,43,5058,5061,5062,5059,1,0,0,0,0,245,2193,1495,224,43,5059,5062,5063,5060,1,0,0,0,0,224,1495,249,246,43,5037,5042,5064,5061,1,0,0,0,0,1855,1484,250,2193,43,5061,5064,5065,5062,1,0,0,0,0,2193,250,1496,1495,43,5062,5065,5066,5063,1,0,0,0,0,1495,1496,252,249,43,5042,5045,5067,5064,1,0,0,0,0,1484,2059,2194,250,43,5064,5067,5068,5065,1,0,0,0,0,250,2194,2195,1496,43,5065,5068,5069,5066,1,0,0,0,0,1496,2195,2129,252,43,5045,5048,5070,5067,1,0,0,0,0,2059,2062,2196,2194,43,5067,5070,5071,5068,1,0,0,0,0,2194,2196,2197,2195,43,5068,5071,5072,5069,1,0,0,0,0,2195,2197,2131,2129,43,4797,5073,5074,4796,1,0,0,0,0,2158,1503,2132,8,43,4798,5075,5073,4797,1,0,0,0,0,1597,1505,1503,2158,43,4799,5052,5075,4798,1,0,0,0,0,11,1494,1505,1597,43,5073,5076,5077,5074,1,0,0,0,0,1503,2198,1507,2132,43,5075,5078,5076,5073,1,0,0,0,0,1505,264,2198,1503,43,5052,5055,5078,5075,1,0,0,0,0,1494,242,264,1505,43,5076,5079,5080,5077,1,0,0,0,0,2198,265,266,1507,43,5078,5081,5079,5076,1,0,0,0,0,264,266,265,2198,42,5055,5081,5078,1,0,0,0,242,266,264,43,5079,5082,5083,5080,1,0,0,0,0,265,1719,268,266,43,5081,5084,5082,5079,1,0,0,0,0,266,286,1719,265,43,5055,5060,5084,5081,1,0,0,0,0,242,246,286,266,42,5082,5085,5083,1,0,0,0,1719,1720,268,43,5084,5086,5085,5082,1,0,0,0,0,286,1721,1720,1719,43,5060,5063,5086,5084,1,0,0,0,0,246,249,1721,286,43,5085,5087,5088,5083,1,0,0,0,0,1720,1510,1722,268,43,5086,5089,5087,5085,1,0,0,0,0,1721,1723,1510,1720,43,5063,5066,5089,5086,1,0,0,0,0,249,252,1723,1721,43,5087,5090,5091,5088,1,0,0,0,0,1510,2066,1870,1722,43,5089,5092,5090,5087,1,0,0,0,0,1723,2199,2066,1510,43,5066,5069,5092,5089,1,0,0,0,0,252,2129,2199,1723,43,5090,5093,5094,5091,1,0,0,0,0,2066,2200,1873,1870,43,5092,5095,5093,5090,1,0,0,0,0,2199,2201,2200,2066,43,5069,5072,5095,5092,1,0,0,0,0,2129,2131,2201,2199,43,4796,5074,5096,4795,1,0,0,0,0,8,2132,1518,7,43,4795,5096,5097,4794,1,0,0,0,0,7,1518,282,6,43,4794,5097,4839,4792,1,0,0,0,0,6,282,51,2157,43,5074,5077,5098,5096,1,0,0,0,0,2132,1507,1520,1518,43,5096,5098,5099,5097,1,0,0,0,0,1518,1520,1730,282,43,5097,5099,4843,4839,1,0,0,0,0,282,1730,55,51,43,5077,5080,5100,5098,1,0,0,0,0,1507,266,266,1520,43,5098,5100,5101,5099,1,0,0,0,0,1520,266,266,1730,42,5099,5101,4843,1,0,0,0,1730,266,55,43,5080,5083,5102,5100,1,0,0,0,0,266,268,286,266,43,5100,5102,5103,5101,1,0,0,0,0,266,286,286,266,43,5101,5103,4850,4843,1,0,0,0,0,266,286,59,55,42,5083,5104,5102,1,0,0,0,268,287,286,43,5102,5104,5105,5103,1,0,0,0,0,286,287,1733,286,43,5103,5105,4853,4850,1,0,0,0,0,286,1733,2160,59,43,5083,5088,5106,5104,1,0,0,0,0,268,1722,1996,287,43,5104,5106,5107,5105,1,0,0,0,0,287,1996,1734,1733,43,5105,5107,4857,4853,1,0,0,0,0,1733,1734,1790,2160,43,5088,5091,5108,5106,1,0,0,0,0,1722,1870,2202,1996,43,5106,5108,5109,5107,1,0,0,0,0,1996,2202,2203,1734,43,5107,5109,4861,4857,1,0,0,0,0,1734,2203,70,1790,43,5091,5094,5110,5108,1,0,0,0,0,1870,1873,2204,2202,43,5108,5110,5111,5109,1,0,0,0,0,2202,2204,2073,2203,43,5109,5111,4865,4861,1,0,0,0,0,2203,2073,2094,70,42,4888,5112,4911,1,0,0,0,2164,2143,2171,43,4887,5113,5112,4888,1,0,0,0,0,1390,313,2143,2164,43,4886,5114,5113,4887,1,0,0,0,0,1926,314,313,1390,43,4863,5115,5114,4886,1,0,0,0,0,1796,298,314,1926,42,5001,5116,5002,1,0,0,0,194,299,1965,43,5003,5117,5116,5001,1,0,0,0,0,1843,300,299,194,43,4980,5118,5117,5003,1,0,0,0,0,2183,301,300,1843,43,4979,5119,5118,4980,1,0,0,0,0,2182,302,301,2183,43,4978,5120,5119,4979,1,0,0,0,0,1445,1536,302,2182,43,4956,5121,5120,4978,1,0,0,0,0,1431,143,1536,1445,43,4955,5122,5121,4956,1,0,0,0,0,1430,1547,143,1431,43,4957,5123,5122,4955,1,0,0,0,0,156,306,1547,1430,43,4934,5124,5123,4957,1,0,0,0,0,2175,342,306,156,43,4933,5125,5124,4934,1,0,0,0,0,134,1549,342,2175,43,4932,5126,5125,4933,1,0,0,0,0,1415,309,1549,134,43,4910,5127,5126,4932,1,0,0,0,0,2036,101,309,1415,43,4909,5128,5127,4910,1,0,0,0,0,2170,310,101,2036,43,4911,5129,5128,4909,1,0,0,0,0,2171,311,310,2170,43,5112,5130,5129,4911,1,0,0,0,0,2143,1740,311,2171,43,5113,5131,5130,5112,1,0,0,0,0,313,296,1740,2143,43,5114,5132,5131,5113,1,0,0,0,0,314,314,296,313,43,5115,5133,5132,5114,1,0,0,0,0,298,1883,314,314,42,5026,5134,5049,1,0,0,0,2188,1535,2192,43,5025,5135,5134,5026,1,0,0,0,0,1850,317,1535,2188,43,5024,5136,5135,5025,1,0,0,0,0,1970,318,317,1850,43,5002,5137,5136,5024,1,0,0,0,0,1965,339,318,1970,43,5116,5138,5137,5002,1,0,0,0,0,299,1530,339,1965,43,5117,5139,5138,5116,1,0,0,0,0,300,319,1530,299,43,5118,5140,5139,5117,1,0,0,0,0,301,301,319,300,43,5119,5141,5140,5118,1,0,0,0,0,302,302,301,301,43,5120,5142,5141,5119,1,0,0,0,0,1536,1536,302,302,43,5121,5143,5142,5120,1,0,0,0,0,143,143,1536,1536,43,5122,5144,5143,5121,1,0,0,0,0,1547,1547,143,143,43,5123,5145,5144,5122,1,0,0,0,0,306,306,1547,1547,43,5124,5146,5145,5123,1,0,0,0,0,342,342,306,306,43,5125,5147,5146,5124,1,0,0,0,0,1549,1549,342,342,43,5126,5148,5147,5125,1,0,0,0,0,309,321,1549,1549,43,5127,5149,5148,5126,1,0,0,0,0,101,101,321,309,43,5128,5150,5149,5127,1,0,0,0,0,310,2144,101,101,43,5129,5151,5150,5128,1,0,0,0,0,311,311,2144,310,43,5130,5152,5151,5129,1,0,0,0,0,1740,1740,311,311,43,5131,5153,5152,5130,1,0,0,0,0,296,1742,1740,1740,43,5132,5154,5153,5131,1,0,0,0,0,314,1537,1742,296,43,5133,5155,5154,5132,1,0,0,0,0,1883,1885,1537,314,42,4862,5156,4863,1,0,0,0,1625,1538,1796,43,4864,5157,5156,4862,1,0,0,0,0,2093,1999,1538,1625,43,4865,5158,5157,4864,1,0,0,0,0,2094,1539,1999,2093,43,5111,5159,5158,4865,1,0,0,0,0,2073,742,1539,2094,43,5110,5160,5159,5111,1,0,0,0,0,2204,330,742,2073,43,5094,5161,5160,5110,1,0,0,0,0,1873,266,330,2204,43,5093,5162,5161,5094,1,0,0,0,0,2200,2075,266,1873,43,5095,5163,5162,5093,1,0,0,0,0,2201,332,2075,2200,43,5072,5164,5163,5095,1,0,0,0,0,2131,1744,332,2201,43,5071,5165,5164,5072,1,0,0,0,0,2197,334,1744,2131,43,5070,5166,5165,5071,1,0,0,0,0,2196,2205,334,2197,43,5048,5167,5166,5070,1,0,0,0,0,2062,1544,2205,2196,43,5047,5168,5167,5048,1,0,0,0,0,2191,337,1544,2062,43,5049,5169,5168,5047,1,0,0,0,0,2192,338,337,2191,43,5134,5170,5169,5049,1,0,0,0,0,1535,1545,338,2192,43,5135,5171,5170,5134,1,0,0,0,0,317,317,1545,1535,43,5136,5172,5171,5135,1,0,0,0,0,318,318,317,317,43,5137,5173,5172,5136,1,0,0,0,0,339,339,318,318,43,5138,5174,5173,5137,1,0,0,0,0,1530,299,339,339,43,5139,5175,5174,5138,1,0,0,0,0,319,300,299,1530,43,5140,5176,5175,5139,1,0,0,0,0,301,301,300,319,43,5141,5177,5176,5140,1,0,0,0,0,302,302,301,301,43,5142,5178,5177,5141,1,0,0,0,0,1536,340,302,302,43,5143,5179,5178,5142,1,0,0,0,0,143,143,340,1536,43,5144,5180,5179,5143,1,0,0,0,0,1547,1547,143,143,43,5145,5181,5180,5144,1,0,0,0,0,306,306,1547,1547,43,5146,5182,5181,5145,1,0,0,0,0,342,342,306,306,43,5147,5183,5182,5146,1,0,0,0,0,1549,1549,342,342,43,5148,5184,5183,5147,1,0,0,0,0,321,2206,1549,1549,43,5149,5185,5184,5148,1,0,0,0,0,101,2207,2206,321,43,5150,5186,5185,5149,1,0,0,0,0,2144,1550,2207,101,43,5151,5187,5186,5150,1,0,0,0,0,311,346,1550,2144,43,5152,5188,5187,5151,1,0,0,0,0,1740,347,346,311,43,5153,5189,5188,5152,1,0,0,0,0,1742,348,347,1740,43,5156,5190,5115,4863,1,0,0,0,0,1538,349,298,1796,43,5157,5191,5190,5156,1,0,0,0,0,1999,1890,349,1538,43,5158,5192,5191,5157,1,0,0,0,0,1539,1748,1890,1999,43,5159,5193,5192,5158,1,0,0,0,0,742,352,1748,1539,43,5160,5194,5193,5159,1,0,0,0,0,330,353,352,742,43,5161,5195,5194,5160,1,0,0,0,0,266,1892,353,330,43,5162,5196,5195,5161,1,0,0,0,0,2075,355,1892,266,43,5163,5197,5196,5162,1,0,0,0,0,332,1893,355,2075,43,5164,5198,5197,5163,1,0,0,0,0,1744,2148,1893,332,43,5165,5199,5198,5164,1,0,0,0,0,334,2208,2148,1744,43,5166,5200,5199,5165,1,0,0,0,0,2205,359,2208,334,43,5167,5201,5200,5166,1,0,0,0,0,1544,1560,359,2205,43,5168,5202,5201,5167,1,0,0,0,0,337,1561,1560,1544,43,5169,5203,5202,5168,1,0,0,0,0,338,1562,1561,337,43,5170,5204,5203,5169,1,0,0,0,0,1545,1563,1562,338,43,5171,5205,5204,5170,1,0,0,0,0,317,2209,1563,1545,43,5172,5206,5205,5171,1,0,0,0,0,318,365,2209,317,43,5173,5207,5206,5172,1,0,0,0,0,339,366,365,318,43,5174,5208,5207,5173,1,0,0,0,0,299,1564,366,339,43,5175,5209,5208,5174,1,0,0,0,0,300,1754,1564,299,43,5176,5210,5209,5175,1,0,0,0,0,301,2081,1754,300,43,5177,5211,5210,5176,1,0,0,0,0,302,1566,2081,301,43,5178,5212,5211,5177,1,0,0,0,0,340,2150,1566,302,43,5179,5213,5212,5178,1,0,0,0,0,143,2151,2150,340,43,5180,5214,5213,5179,1,0,0,0,0,1547,1568,2151,143,43,5181,5215,5214,5180,1,0,0,0,0,306,374,1568,1547,43,5182,5216,5215,5181,1,0,0,0,0,342,1757,374,306,43,5183,5217,5216,5182,1,0,0,0,0,1549,2153,1757,342,43,5184,5218,5217,5183,1,0,0,0,0,2206,2210,2153,1549,43,5185,5219,5218,5184,1,0,0,0,0,2207,2211,2210,2206,43,5190,5220,5133,5115,1,0,0,0,0,349,379,1883,298,43,5191,5221,5220,5190,1,0,0,0,0,1890,380,379,349,43,5192,5222,5221,5191,1,0,0,0,0,1748,381,380,1890,43,5193,5223,5222,5192,1,0,0,0,0,352,2084,381,1748,43,5194,5224,5223,5193,1,0,0,0,0,353,383,2084,352,43,5195,5225,5224,5194,1,0,0,0,0,1892,1898,383,353,43,5196,5226,5225,5195,1,0,0,0,0,355,1899,1898,1892,43,5197,5227,5226,5196,1,0,0,0,0,1893,1900,1899,355,43,5198,5228,5227,5197,1,0,0,0,0,2148,1577,1900,1893,43,5199,5229,5228,5198,1,0,0,0,0,2208,1578,1577,2148,43,5200,5230,5229,5199,1,0,0,0,0,359,1579,1578,2208,43,5201,5231,5230,5200,1,0,0,0,0,1560,2212,1579,359,43,5202,5232,5231,5201,1,0,0,0,0,1561,2213,2212,1560,43,5203,5233,5232,5202,1,0,0,0,0,1562,2214,2213,1561,43,5204,5234,5233,5203,1,0,0,0,0,1563,1902,2214,1562,43,5205,5235,5234,5204,1,0,0,0,0,2209,2156,1902,1563,43,5220,5236,5155,5133,1,0,0,0,0,379,395,1885,1883,43,5221,5237,5236,5220,1,0,0,0,0,380,396,395,379,43,5222,5238,5237,5221,1,0,0,0,0,381,397,396,380,43,5223,5239,5238,5222,1,0,0,0,0,2084,1766,397,381,43,5224,5240,5239,5223,1,0,0,0,0,383,1587,1766,2084,43,5225,5241,5240,5224,1,0,0,0,0,1898,1767,1587,383,43,5226,5242,5241,5225,1,0,0,0,0,1899,2215,1767,1898,43,5227,5243,5242,5226,1,0,0,0,0,1900,1769,2215,1899,43,5228,5244,5243,5227,1,0,0,0,0,1577,2216,1769,1900,43,5229,5245,5244,5228,1,0,0,0,0,1578,1590,2216,1577,43,5230,5246,5245,5229,1,0,0,0,0,1579,1591,1590,1578,43,5231,5247,5246,5230,1,0,0,0,0,2212,2014,1591,1579,43,868,869,5249,5248,4,0,0,0,0,726,755,760,759,43,846,847,5251,5250,4,0,0,0,0,728,756,764,763,43,857,858,5253,5252,4,0,0,0,0,730,757,768,767,43,866,867,5255,5254,4,0,0,0,0,732,727,772,771,43,844,845,5257,5256,4,0,0,0,0,758,729,776,775,43,855,856,5259,5258,4,0,0,0,0,734,731,780,779,43,875,844,5256,5260,4,0,0,0,0,736,758,775,783,43,864,865,5262,5261,4,0,0,0,0,738,733,786,785,43,853,854,5264,5263,4,0,0,0,0,740,735,790,789,43,873,874,5266,5265,4,0,0,0,0,743,737,794,793,43,862,863,5268,5267,4,0,0,0,0,745,739,798,797,43,851,852,5270,5269,4,0,0,0,0,747,741,802,801,43,871,872,5272,5271,4,0,0,0,0,749,744,806,805,43,860,861,5274,5273,4,0,0,0,0,753,746,810,809,43,849,850,5276,5275,4,0,0,0,0,751,748,814,813,43,869,870,5277,5249,4,0,0,0,0,755,750,817,760,43,847,848,5278,5251,4,0,0,0,0,756,752,819,764,43,858,859,5279,5253,4,0,0,0,0,757,754,821,768,43,867,868,5248,5255,4,0,0,0,0,727,726,759,772,43,845,846,5250,5257,4,0,0,0,0,729,728,763,776,43,856,857,5252,5259,4,0,0,0,0,731,730,767,780,43,865,866,5254,5262,4,0,0,0,0,733,732,771,786,43,854,855,5258,5264,4,0,0,0,0,735,734,779,790,43,874,875,5260,5266,4,0,0,0,0,737,736,783,794,43,863,864,5261,5268,4,0,0,0,0,739,738,785,798,43,852,853,5263,5270,4,0,0,0,0,741,740,789,802,43,872,873,5265,5272,4,0,0,0,0,744,743,793,806,43,861,862,5267,5274,4,0,0,0,0,746,745,797,810,43,850,851,5269,5276,4,0,0,0,0,748,747,801,814,43,870,871,5271,5277,4,0,0,0,0,750,749,805,817,43,848,849,5275,5278,4,0,0,0,0,752,751,813,819,43,859,860,5273,5279,4,0,0,0,0,754,753,809,821,43,587,583,5307,5311,3,192,186,186,192,567,561,502,476,43,568,562,5286,5292,3,153,142,142,153,528,517,482,481,43,573,574,5298,5297,3,166,165,165,166,541,540,723,495,43,585,579,5303,5309,3,188,178,178,188,563,553,500,472,43,564,556,5280,5288,3,145,132,132,145,520,507,478,477,43,569,570,5294,5293,3,158,157,157,158,533,532,483,490,43,582,577,5301,5306,3,181,174,174,181,556,549,497,496,43,559,586,5310,5283,3,135,190,190,135,510,565,474,473,43,565,566,5290,5289,3,150,149,149,150,525,524,479,721,43,578,571,5295,5302,3,173,162,162,173,548,537,720,491,43,562,558,5282,5286,3,142,136,136,142,517,511,503,482,43,583,584,5308,5307,3,186,185,185,186,561,560,498,502,43,574,567,5291,5298,3,165,154,154,165,540,529,488,723,43,558,559,5283,5282,3,136,135,135,136,511,510,473,503,43,579,580,5304,5303,3,178,177,177,178,553,552,494,500,43,570,563,5287,5294,3,157,146,146,157,532,521,310,483,43,575,576,5300,5299,3,170,169,169,170,545,544,489,499,43,586,581,5305,5310,3,190,182,182,190,565,557,501,474,43,566,560,5284,5290,3,149,140,140,149,524,515,480,479,43,571,572,5296,5295,3,162,161,161,162,537,536,722,720,43,584,575,5299,5308,3,185,170,170,185,560,545,499,498,43,561,587,5311,5285,3,139,192,192,139,514,567,476,475,43,567,568,5292,5291,3,154,153,153,154,529,528,481,488,43,580,573,5297,5304,3,177,166,166,177,552,541,495,494,43,563,564,5288,5287,3,146,145,145,146,521,520,477,310,43,557,585,5309,5281,3,131,188,188,131,506,563,472,471,43,576,569,5293,5300,3,169,158,158,169,544,533,490,489,43,560,561,5285,5284,3,140,139,139,140,515,514,475,480,43,581,582,5306,5305,3,182,181,181,182,557,556,496,501,43,572,565,5289,5296,3,161,150,150,161,536,525,721,722,43,556,557,5281,5280,3,132,131,131,132,507,506,471,478,43,577,578,5302,5301,3,174,173,173,174,549,548,491,497,43,5309,5303,5335,5341,3,188,178,178,188,472,500,500,472,43,5288,5280,5312,5320,3,145,132,132,145,477,478,478,477,43,5293,5294,5326,5325,3,158,157,157,158,490,483,483,490,43,5306,5301,5333,5338,3,181,174,174,181,496,497,497,496,43,5283,5310,5342,5315,3,135,190,190,135,473,474,474,473,43,5289,5290,5322,5321,3,150,149,149,150,721,479,479,721,43,5302,5295,5327,5334,3,173,162,162,173,491,720,720,491,43,5286,5282,5314,5318,3,142,136,136,142,482,503,503,482,43,5307,5308,5340,5339,3,186,185,185,186,502,498,498,502,43,5298,5291,5323,5330,3,165,154,154,165,723,488,488,723,43,5282,5283,5315,5314,3,136,135,135,136,503,473,473,503,43,5303,5304,5336,5335,3,178,177,177,178,500,494,494,500,43,5294,5287,5319,5326,3,157,146,146,157,483,310,310,483,43,5299,5300,5332,5331,3,170,169,169,170,499,489,489,499,43,5310,5305,5337,5342,3,190,182,182,190,474,501,501,474,43,5290,5284,5316,5322,3,149,140,140,149,479,480,480,479,43,5295,5296,5328,5327,3,162,161,161,162,720,722,722,720,43,5308,5299,5331,5340,3,185,170,170,185,498,499,499,498,43,5285,5311,5343,5317,3,139,192,192,139,475,476,476,475,43,5291,5292,5324,5323,3,154,153,153,154,488,481,481,488,43,5304,5297,5329,5336,3,177,166,166,177,494,495,495,494,43,5287,5288,5320,5319,3,146,145,145,146,310,477,477,310,43,5281,5309,5341,5313,3,131,188,188,131,471,472,472,471,43,5300,5293,5325,5332,3,169,158,158,169,489,490,490,489,43,5284,5285,5317,5316,3,140,139,139,140,480,475,475,480,43,5305,5306,5338,5337,3,182,181,181,182,501,496,496,501,43,5296,5289,5321,5328,3,161,150,150,161,722,721,721,722,43,5280,5281,5313,5312,3,132,131,131,132,478,471,471,478,43,5301,5302,5334,5333,3,174,173,173,174,497,491,491,497,43,5311,5307,5339,5343,3,192,186,186,192,476,502,502,476,43,5292,5286,5318,5324,3,153,142,142,153,481,482,482,481,43,5297,5298,5330,5329,3,166,165,165,166,495,723,723,495,43,5440,5441,5369,5352,0,320,319,319,320,859,859,2217,1223,43,5442,5443,5347,5345,0,264,263,263,264,859,859,1210,1211,43,5444,5445,5358,5372,0,331,344,344,331,859,859,1244,1197,43,5446,5447,5367,5350,0,312,311,311,312,859,859,1214,1216,43,5448,5442,5345,5360,0,410,264,264,410,859,859,1211,2218,43,5449,5450,5356,5370,0,323,336,336,323,859,859,1174,1218,43,5451,5452,5365,5348,0,304,303,303,304,926,859,1201,1202,43,5453,5454,5354,5368,0,315,332,332,315,859,859,1196,1227,43,5455,5456,5374,5357,0,340,339,339,340,859,859,1176,1177,43,5457,5458,5363,5346,0,298,297,297,298,859,859,1240,1171,43,5459,5440,5352,5366,0,307,320,320,307,859,859,1223,1190,43,5454,5444,5372,5354,0,332,331,331,332,859,859,1197,1196,43,5460,5461,5361,5375,0,343,412,412,343,859,859,1172,2219,43,5462,5446,5350,5364,0,300,312,312,300,859,859,1216,1217,43,5463,5449,5370,5353,0,324,323,323,324,859,859,1218,1213,43,5464,5451,5348,5362,0,293,304,304,293,859,926,1202,1185,43,5465,5466,5359,5373,0,335,417,417,335,859,859,1222,1175,43,5467,5453,5368,5351,0,316,315,315,316,859,859,1227,1248,43,5461,5457,5346,5361,0,412,298,298,412,859,859,1171,1172,43,5468,5455,5357,5371,0,327,340,340,327,859,859,1177,1206,43,5469,5459,5366,5349,0,308,307,307,308,859,859,1190,1181,43,5466,5470,5344,5359,0,417,294,294,417,859,859,1252,1222,43,5441,5471,5355,5369,0,319,328,328,319,859,859,1205,2217,43,5445,5460,5375,5358,0,344,343,343,344,859,859,2219,1244,43,5443,5462,5364,5347,0,263,300,300,263,859,859,1217,1210,43,5447,5463,5353,5367,0,311,324,324,311,859,859,1213,1214,43,5450,5465,5373,5356,0,336,335,335,336,859,859,1175,1174,43,5470,5464,5362,5344,0,294,293,293,294,859,859,1185,1252,43,5452,5467,5351,5365,0,303,316,316,303,859,859,1248,1201,43,5471,5468,5371,5355,0,328,327,327,328,859,859,1206,1205,43,5456,5448,5360,5374,0,339,410,410,339,859,859,2218,1176,43,5458,5469,5349,5363,0,297,308,308,297,859,859,1181,1240,43,5349,5366,5398,5381,0,308,307,307,308,1181,1190,472,500,43,5359,5344,5376,5391,0,417,294,294,417,1222,1252,491,720,43,5369,5355,5387,5401,0,319,328,328,319,2217,1205,477,478,43,5358,5375,5407,5390,0,344,343,343,344,1244,2219,488,481,43,5347,5364,5396,5379,0,263,300,300,263,1210,1217,502,498,43,5367,5353,5385,5399,0,311,324,324,311,1214,1213,480,742,43,5356,5373,5405,5388,0,336,335,335,336,1174,1175,722,721,43,5344,5362,5394,5376,0,294,293,293,294,1252,1185,497,491,43,5365,5351,5383,5397,0,303,316,316,303,1201,1248,474,501,43,5355,5371,5403,5387,0,328,327,327,328,1205,1206,310,477,43,5374,5360,5392,5406,0,339,410,410,339,1176,2218,489,490,43,5363,5349,5381,5395,0,297,308,308,297,1240,1181,500,494,43,5352,5369,5401,5384,0,320,319,319,320,1223,2217,478,471,43,5345,5347,5379,5377,0,264,263,263,264,1211,1210,498,499,43,5372,5358,5390,5404,0,331,344,344,331,1197,1244,481,482,43,5350,5367,5399,5382,0,312,311,311,312,1216,1214,742,476,43,5360,5345,5377,5392,0,410,264,264,410,2218,1211,499,489,43,5370,5356,5388,5402,0,323,336,336,323,1218,1174,721,479,43,5348,5365,5397,5380,0,304,303,303,304,1202,1201,501,496,43,5368,5354,5386,5400,0,315,332,332,315,1227,1196,503,473,43,5357,5374,5406,5389,0,340,339,339,340,1177,1176,490,483,43,5346,5363,5395,5378,0,298,297,297,298,1171,1240,494,495,43,5366,5352,5384,5398,0,307,320,320,307,1190,1223,471,472,43,5354,5372,5404,5386,0,332,331,331,332,1196,1197,482,503,43,5375,5361,5393,5407,0,343,412,412,343,2219,1172,723,488,43,5364,5350,5382,5396,0,300,312,312,300,1217,1216,476,502,43,5353,5370,5402,5385,0,324,323,323,324,1213,1218,479,480,43,5362,5348,5380,5394,0,293,304,304,293,1185,1202,496,497,43,5373,5359,5391,5405,0,335,417,417,335,1175,1222,720,722,43,5351,5368,5400,5383,0,316,315,315,316,1248,1227,473,474,43,5361,5346,5378,5393,0,412,298,298,412,1172,1171,495,723,43,5371,5357,5389,5403,0,327,340,340,327,1206,1177,483,310,43,5383,5400,5432,5415,0,316,315,315,316,474,473,473,474,43,5393,5378,5410,5425,0,412,298,298,412,723,495,495,723,43,5403,5389,5421,5435,0,327,340,340,327,310,483,483,310,43,5381,5398,5430,5413,0,308,307,307,308,500,472,472,500,43,5391,5376,5408,5423,0,417,294,294,417,720,491,491,720,43,5401,5387,5419,5433,0,319,328,328,319,478,477,477,478,43,5390,5407,5439,5422,0,344,343,343,344,481,488,488,481,43,5379,5396,5428,5411,0,263,300,300,263,498,502,502,498,43,5399,5385,5417,5431,0,311,324,324,311,742,480,480,475,43,5388,5405,5437,5420,0,336,335,335,336,721,722,722,721,43,5376,5394,5426,5408,0,294,293,293,294,491,497,497,491,43,5397,5383,5415,5429,0,303,316,316,303,501,474,474,501,43,5387,5403,5435,5419,0,328,327,327,328,477,310,310,477,43,5406,5392,5424,5438,0,339,410,410,339,490,489,489,490,43,5395,5381,5413,5427,0,297,308,308,297,494,500,500,494,43,5384,5401,5433,5416,0,320,319,319,320,471,478,478,471,43,5377,5379,5411,5409,0,264,263,263,264,499,498,498,499,43,5404,5390,5422,5436,0,331,344,344,331,482,481,481,482,43,5382,5399,5431,5414,0,312,311,311,312,476,742,475,476,43,5392,5377,5409,5424,0,410,264,264,410,489,499,499,489,43,5402,5388,5420,5434,0,323,336,336,323,479,721,721,479,43,5380,5397,5429,5412,0,304,303,303,304,496,501,501,496,43,5400,5386,5418,5432,0,315,332,332,315,473,503,503,473,43,5389,5406,5438,5421,0,340,339,339,340,483,490,490,483,43,5378,5395,5427,5410,0,298,297,297,298,495,494,494,495,43,5398,5384,5416,5430,0,307,320,320,307,472,471,471,472,43,5386,5404,5436,5418,0,332,331,331,332,503,482,482,503,43,5407,5393,5425,5439,0,343,412,412,343,488,723,723,488,43,5396,5382,5414,5428,0,300,312,312,300,502,476,476,502,43,5385,5402,5434,5417,0,324,323,323,324,480,479,479,480,43,5394,5380,5412,5426,0,293,304,304,293,497,496,496,497,43,5405,5391,5423,5437,0,335,417,417,335,722,720,720,722,43,724,741,5441,5440,0,320,319,319,320,695,694,859,859,43,717,719,5443,5442,0,264,263,263,264,639,638,859,859,43,744,730,5445,5444,0,331,344,344,331,706,719,859,859,43,722,739,5447,5446,0,312,311,311,312,687,686,859,859,43,732,717,5442,5448,0,410,264,264,410,855,639,859,859,43,742,728,5450,5449,0,323,336,336,323,698,711,859,859,43,720,737,5452,5451,0,304,303,303,304,679,678,859,926,43,740,726,5454,5453,0,315,332,332,315,690,707,859,859,43,729,746,5456,5455,0,340,339,339,340,715,714,859,859,43,718,735,5458,5457,0,298,297,297,298,673,672,859,859,43,738,724,5440,5459,0,307,320,320,307,682,695,859,859,43,726,744,5444,5454,0,332,331,331,332,707,706,859,859,43,747,733,5461,5460,0,343,412,412,343,718,857,859,859,43,736,722,5446,5462,0,300,312,312,300,675,687,859,859,43,725,742,5449,5463,0,324,323,323,324,699,698,859,859,43,734,720,5451,5464,0,293,304,304,293,668,679,926,859,43,745,731,5466,5465,0,335,417,417,335,710,861,859,859,43,723,740,5453,5467,0,316,315,315,316,691,690,859,859,43,733,718,5457,5461,0,412,298,298,412,857,673,859,859,43,743,729,5455,5468,0,327,340,340,327,702,715,859,859,43,721,738,5459,5469,0,308,307,307,308,683,682,859,859,43,731,716,5470,5466,0,417,294,294,417,861,669,859,859,43,741,727,5471,5441,0,319,328,328,319,694,703,859,859,43,730,747,5460,5445,0,344,343,343,344,719,718,859,859,43,719,736,5462,5443,0,263,300,300,263,638,675,859,859,43,739,725,5463,5447,0,311,324,324,311,686,699,859,859,43,728,745,5465,5450,0,336,335,335,336,711,710,859,859,43,716,734,5464,5470,0,294,293,293,294,669,668,859,859,43,737,723,5467,5452,0,303,316,316,303,678,691,859,859,43,727,743,5468,5471,0,328,327,327,328,703,702,859,859,43,746,732,5448,5456,0,339,410,410,339,714,855,859,859,43,735,721,5469,5458,0,297,308,308,297,672,683,859,859,42,5498,5499,5504,4,0,0,0,845,844,859,42,5476,5477,5504,4,0,0,0,843,842,859,42,5487,5488,5504,4,0,0,0,841,840,859,42,5496,5497,5504,4,0,0,0,839,838,859,42,5474,5475,5504,4,0,0,0,837,836,859,42,5485,5486,5504,4,0,0,0,835,834,859,42,5494,5495,5504,4,0,0,0,833,832,859,42,5472,5473,5504,4,0,0,0,827,831,859,42,5483,5484,5504,4,0,0,0,830,829,859,42,5503,5472,5504,4,0,0,0,828,827,859,42,5492,5493,5504,4,0,0,0,826,825,859,42,5481,5482,5504,4,0,0,0,824,823,859,42,5501,5502,5504,4,0,0,0,850,854,859,42,5490,5491,5504,4,0,0,0,848,853,859,42,5479,5480,5504,4,0,0,0,846,852,859,42,5499,5500,5504,4,0,0,0,844,851,859,42,5488,5489,5504,4,0,0,0,840,849,859,42,5477,5478,5504,4,0,0,0,842,847,859,42,5497,5498,5504,4,0,0,0,838,845,859,42,5475,5476,5504,4,0,0,0,836,843,859,42,5486,5487,5504,4,0,0,0,834,841,859,42,5495,5496,5504,4,0,0,0,832,839,859,42,5473,5474,5504,4,0,0,0,831,837,859,42,5484,5485,5504,4,0,0,0,829,835,859,42,5493,5494,5504,4,0,0,0,825,833,859,42,5482,5483,5504,4,0,0,0,823,830,859,42,5502,5503,5504,4,0,0,0,854,828,859,42,5491,5492,5504,4,0,0,0,853,826,859,42,5480,5481,5504,4,0,0,0,852,824,859,42,5500,5501,5504,4,0,0,0,851,850,859,42,5489,5490,5504,4,0,0,0,849,848,859,42,5478,5479,5504,4,0,0,0,847,846,859,43,1538,1521,5548,5556,2,0,0,0,0,1173,1225,721,722,43,5556,5548,5547,5555,2,0,0,0,0,722,721,721,722,43,1528,1542,5515,5538,2,0,0,0,0,1183,1182,494,500,43,5538,5515,5516,5537,2,0,0,0,0,500,494,494,500,43,1527,1541,5534,5505,2,0,0,0,0,1208,1170,491,497,43,5505,5534,5533,5506,2,0,0,0,0,497,491,491,497,43,1519,1517,5510,5517,2,0,0,0,0,1342,1340,503,482,43,5517,5510,5509,5518,2,0,0,0,0,482,503,503,482,43,1545,1528,5538,5563,2,0,0,0,0,1195,1183,500,472,43,5563,5538,5537,5564,2,0,0,0,0,472,500,500,472,43,1520,1534,5519,5526,2,0,0,0,0,1188,1187,477,2144,43,5526,5519,5520,5525,2,0,0,0,0,2144,477,477,310,43,1542,1525,5512,5515,2,0,0,0,0,1182,1207,495,494,43,5515,5512,5511,5516,2,0,0,0,0,494,495,495,494,43,1521,1535,5514,5548,2,0,0,0,0,1225,1179,479,721,43,5548,5514,5513,5547,2,0,0,0,0,721,479,479,721,43,1529,1543,5532,5558,2,0,0,0,0,1199,1198,496,501,43,5558,5532,5531,5557,2,0,0,0,0,501,496,496,501,43,1522,1536,5528,5561,2,0,0,0,0,1339,1338,481,488,43,5561,5528,5527,5562,2,0,0,0,0,488,481,481,488,43,1530,1544,5536,5567,2,0,0,0,0,1336,1221,498,502,43,5567,5536,5535,5568,2,0,0,0,0,502,498,498,502,43,1541,1524,5565,5534,2,0,0,0,0,1170,1169,720,491,43,5534,5565,5566,5533,2,0,0,0,0,491,720,720,491,43,1516,1531,5521,5546,2,0,0,0,0,1186,1229,471,478,43,5546,5521,5522,5545,2,0,0,0,0,478,471,471,478,43,1540,1523,5550,5551,2,0,0,0,0,1212,1204,490,489,43,5551,5550,5549,5552,2,0,0,0,0,489,490,490,489,43,1531,1545,5563,5521,2,0,0,0,0,1229,1195,472,471,43,5521,5563,5564,5522,2,0,0,0,0,471,472,472,471,43,1517,1532,5543,5510,2,0,0,0,0,1340,1192,473,503,43,5510,5543,5544,5509,2,0,0,0,0,503,473,473,503,43,1547,1530,5567,5542,2,0,0,0,0,1337,1336,502,476,43,5542,5567,5568,5541,2,0,0,0,0,476,502,502,476,43,1534,1516,5546,5519,2,0,0,0,0,1187,1186,478,477,43,5519,5546,5545,5520,2,0,0,0,0,477,478,478,477,43,1535,1518,5560,5514,2,0,0,0,0,1179,1178,480,479,43,5514,5560,5559,5513,2,0,0,0,0,479,480,480,479,43,1539,1522,5561,5530,2,0,0,0,0,1335,1339,488,723,43,5530,5561,5562,5529,2,0,0,0,0,723,488,488,487,43,1537,1520,5526,5507,2,0,0,0,0,1189,1188,2144,483,43,5507,5526,5525,5508,2,0,0,0,0,483,2144,310,483,43,1544,1526,5554,5536,2,0,0,0,0,1221,1220,499,498,43,5536,5554,5553,5535,2,0,0,0,0,498,499,499,498,43,1518,1533,5524,5560,2,0,0,0,0,1178,1194,742,480,43,5560,5524,5523,5559,2,0,0,0,0,480,742,475,480,43,1533,1547,5542,5524,2,0,0,0,0,1194,1337,476,742,43,5524,5542,5541,5523,2,0,0,0,0,742,476,476,475,43,1532,1546,5540,5543,2,0,0,0,0,1192,1191,474,473,43,5543,5540,5539,5544,2,0,0,0,0,473,474,474,473,43,1536,1519,5517,5528,2,0,0,0,0,1338,1342,482,481,43,5528,5517,5518,5527,2,0,0,0,0,481,482,482,481,43,1524,1538,5556,5565,2,0,0,0,0,1169,1173,722,720,43,5565,5556,5555,5566,2,0,0,0,0,720,722,722,720,43,1543,1527,5505,5532,2,0,0,0,0,1198,1208,497,496,43,5532,5505,5506,5531,2,0,0,0,0,496,497,497,496,43,1546,1529,5558,5540,2,0,0,0,0,1191,1199,501,474,43,5540,5558,5557,5539,2,0,0,0,0,474,501,501,474,43,1526,1540,5551,5554,2,0,0,0,0,1220,1212,489,499,43,5554,5551,5552,5553,2,0,0,0,0,499,489,489,499,43,1525,1539,5530,5512,2,0,0,0,0,1207,1335,723,495,43,5512,5530,5529,5511,2,0,0,0,0,495,723,487,495,43,1523,1537,5507,5550,2,0,0,0,0,1204,1189,483,490,43,5550,5507,5508,5549,2,0,0,0,0,490,483,483,490,43,2002,2019,5570,5587,2,0,0,0,0,2220,2221,1168,1168,43,5587,5570,5569,5588,2,0,0,0,0,1168,1168,1168,1168,43,2019,2005,5578,5570,2,0,0,0,0,2221,2222,1168,1168,43,5570,5578,5577,5569,2,0,0,0,0,1168,1168,1168,1168,43,2008,2025,5626,5598,2,0,0,0,0,2223,2224,1168,1168,43,5598,5626,5625,5597,2,0,0,0,0,1168,1168,1168,1168,43,2015,2001,5627,5580,2,0,0,0,0,2225,2226,1168,1168,43,5580,5627,5628,5579,2,0,0,0,0,1168,1168,1168,1168,43,2009,2027,5592,5602,2,0,0,0,0,2227,2228,1168,1168,43,5602,5592,5591,5601,2,0,0,0,0,1168,1168,1168,1168,43,2006,2023,5617,5576,2,0,0,0,0,2229,2230,1168,1168,43,5576,5617,5618,5575,2,0,0,0,0,1168,1168,1168,1168,43,2011,1997,5574,5611,2,0,0,0,0,2231,2232,1168,1168,43,5611,5574,5573,5612,2,0,0,0,0,1168,1168,1168,1168,43,2025,2010,5593,5626,2,0,0,0,0,2224,2233,2234,1168,43,5626,5593,5594,5625,2,0,0,0,0,1168,2234,1168,1168,43,1998,2015,5580,5603,2,0,0,0,0,2235,2225,1168,1168,43,5603,5580,5579,5604,2,0,0,0,0,1168,1168,1168,1168,43,2014,2e3,5605,5620,2,0,0,0,0,2236,2237,1168,1168,43,5620,5605,5606,5619,2,0,0,0,0,1168,1168,1168,1168,43,2020,2006,5576,5595,2,0,0,0,0,2238,2229,1168,1168,43,5595,5576,5575,5596,2,0,0,0,0,1168,1168,1168,1168,43,2001,2018,5608,5627,2,0,0,0,0,2226,2239,1168,1168,43,5627,5608,5607,5628,2,0,0,0,0,1168,1168,1168,1168,43,2016,2002,5587,5615,2,0,0,0,0,2240,2220,1168,1168,43,5615,5587,5588,5616,2,0,0,0,0,1168,1168,1168,1168,43,1997,2014,5620,5574,2,0,0,0,0,2232,2236,1168,1168,43,5574,5620,5619,5573,2,0,0,0,0,1168,1168,1168,1168,43,2003,2020,5595,5632,2,0,0,0,0,2241,2238,1168,1168,43,5632,5595,5596,5631,2,0,0,0,0,1168,1168,1168,1168,43,1999,2017,5600,5585,2,0,0,0,0,2242,2243,1168,1168,43,5585,5600,5599,5586,2,0,0,0,0,1168,1168,1168,1168,43,2022,2008,5598,5623,2,0,0,0,0,2244,2223,1168,1168,43,5623,5598,5597,5624,2,0,0,0,0,1168,1168,1168,1168,43,2012,1998,5603,5610,2,0,0,0,0,2245,2235,1168,1168,43,5610,5603,5604,5609,2,0,0,0,0,1168,1168,1168,1168,43,2005,2022,5623,5578,2,0,0,0,0,2222,2244,1168,1168,43,5578,5623,5624,5577,2,0,0,0,0,1168,1168,1168,1168,43,2018,2004,5582,5608,2,0,0,0,0,2239,2246,1168,1168,43,5608,5582,5581,5607,2,0,0,0,0,1168,1168,1168,1168,43,2013,1999,5585,5590,2,0,0,0,0,2247,2242,1168,1168,43,5590,5585,5586,5589,2,0,0,0,0,1168,1168,1168,1168,43,1996,2013,5590,5630,2,0,0,0,0,2248,2247,1168,1168,43,5630,5590,5589,5629,2,0,0,0,0,1168,1168,1168,1168,43,2021,2007,5572,5613,2,0,0,0,0,2249,2250,1168,1168,43,5613,5572,5571,5614,2,0,0,0,0,1168,1168,1168,1168,43,2026,2011,5611,5621,2,0,0,0,0,2251,2231,1168,1168,43,5621,5611,5612,5622,2,0,0,0,0,1168,1168,1168,1168,43,2004,2021,5613,5582,2,0,0,0,0,2246,2249,1168,1168,43,5582,5613,5614,5581,2,0,0,0,0,1168,1168,1168,1168,43,2007,2024,5584,5572,2,0,0,0,0,2250,2252,1168,1168,43,5572,5584,5583,5571,2,0,0,0,0,1168,1168,1168,1168,43,2017,2003,5632,5600,2,0,0,0,0,2243,2241,1168,1168,43,5600,5632,5631,5599,2,0,0,0,0,1168,1168,1168,1168,43,2010,1996,5630,5593,2,0,0,0,0,2233,2248,1168,2234,43,5593,5630,5629,5594,2,0,0,0,0,2234,1168,1168,1168,43,2e3,2016,5615,5605,2,0,0,0,0,2237,2240,1168,1168,43,5605,5615,5616,5606,2,0,0,0,0,1168,1168,1168,1168,43,2024,2026,5621,5584,2,0,0,0,0,2252,2251,1168,1168,43,5584,5621,5622,5583,2,0,0,0,0,1168,1168,1168,1168,43,2027,2012,5610,5592,2,0,0,0,0,2228,2245,1168,1168,43,5592,5610,5609,5591,2,0,0,0,0,1168,1168,1168,1168,43,2023,2009,5602,5617,2,0,0,0,0,2230,2227,1168,1168,43,5617,5602,5601,5618,2,0,0,0,0,1168,1168,1168,1168,43,2013,5661,5644,1999,2,0,0,0,0,2247,481,482,2242,43,5661,5662,5643,5644,2,0,0,0,0,481,481,482,482,43,2019,5669,5688,2005,2,0,0,0,0,2221,471,472,2222,43,5669,5670,5687,5688,2,0,0,0,0,471,471,472,472,43,2003,5695,5654,2020,2,0,0,0,0,2241,473,474,2238,43,5695,5696,5653,5654,2,0,0,0,0,473,473,474,474,43,2025,5640,5678,2010,2,0,0,0,0,2224,495,723,2233,43,5640,5639,5677,5678,2,0,0,0,0,495,495,723,723,43,2008,5668,5640,2025,2,0,0,0,0,2223,494,495,2224,43,5668,5667,5639,5640,2,0,0,0,0,494,494,495,495,43,2014,5682,5656,2e3,2,0,0,0,0,2236,483,310,2237,43,5682,5681,5655,5656,2,0,0,0,0,483,483,310,310,43,2021,5675,5658,2007,2,0,0,0,0,2249,476,502,2250,43,5675,5676,5657,5658,2,0,0,0,0,476,476,502,502,43,2004,5652,5675,2021,2,0,0,0,0,2246,475,476,2249,43,5652,5651,5676,5675,2,0,0,0,0,475,742,476,476,43,2027,5650,5665,2012,2,0,0,0,0,2228,491,720,2245,43,5650,5649,5666,5665,2,0,0,0,0,491,491,720,720,43,1996,5690,5661,2013,2,0,0,0,0,2248,488,481,2247,43,5690,5689,5662,5661,2,0,0,0,0,488,488,481,481,43,2010,5678,5690,1996,2,0,0,0,0,2233,723,488,2248,43,5678,5677,5689,5690,2,0,0,0,0,723,723,488,488,43,2001,5691,5674,2018,2,0,0,0,0,2226,479,480,2239,43,5691,5692,5673,5674,2,0,0,0,0,479,479,480,480,43,2022,5636,5668,2008,2,0,0,0,0,2244,500,494,2223,43,5636,5635,5667,5668,2,0,0,0,0,500,500,494,494,43,1997,5642,5682,2014,2,0,0,0,0,2232,490,483,2236,43,5642,5641,5681,5682,2,0,0,0,0,490,490,483,483,43,2002,5646,5669,2019,2,0,0,0,0,2220,478,471,2221,43,5646,5645,5670,5669,2,0,0,0,0,478,478,471,471,43,2007,5658,5683,2024,2,0,0,0,0,2250,502,498,2252,43,5658,5657,5684,5683,2,0,0,0,0,502,502,498,498,43,2012,5665,5633,1998,2,0,0,0,0,2245,720,722,2235,43,5665,5666,5634,5633,2,0,0,0,0,720,720,722,722,43,2009,5671,5650,2027,2,0,0,0,0,2227,497,491,2228,43,5671,5672,5649,5650,2,0,0,0,0,497,497,491,491,43,2024,5683,5680,2026,2,0,0,0,0,2252,498,499,2251,43,5683,5684,5679,5680,2,0,0,0,0,498,498,499,499,43,2020,5654,5685,2006,2,0,0,0,0,2238,474,501,2229,43,5654,5653,5686,5685,2,0,0,0,0,474,474,501,501,43,2005,5688,5636,2022,2,0,0,0,0,2222,472,500,2244,43,5688,5687,5635,5636,2,0,0,0,0,472,472,500,500,43,2017,5648,5695,2003,2,0,0,0,0,2243,503,473,2241,43,5648,5647,5696,5695,2,0,0,0,0,503,503,473,473,43,2018,5674,5652,2004,2,0,0,0,0,2239,480,475,2246,43,5674,5673,5651,5652,2,0,0,0,0,480,480,742,475,43,2015,5638,5691,2001,2,0,0,0,0,2225,721,479,2226,43,5638,5637,5692,5691,2,0,0,0,0,721,721,479,479,43,1998,5633,5638,2015,2,0,0,0,0,2235,722,721,2225,43,5633,5634,5637,5638,2,0,0,0,0,722,722,721,721,43,2e3,5656,5693,2016,2,0,0,0,0,2237,310,477,2240,43,5656,5655,5694,5693,2,0,0,0,0,310,310,477,477,43,2026,5680,5663,2011,2,0,0,0,0,2251,499,489,2231,43,5680,5679,5664,5663,2,0,0,0,0,499,499,489,489,43,2011,5663,5642,1997,2,0,0,0,0,2231,489,490,2232,43,5663,5664,5641,5642,2,0,0,0,0,489,489,490,490,43,2023,5660,5671,2009,2,0,0,0,0,2230,496,497,2227,43,5660,5659,5672,5671,2,0,0,0,0,496,496,497,497,43,1999,5644,5648,2017,2,0,0,0,0,2242,482,503,2243,43,5644,5643,5647,5648,2,0,0,0,0,482,482,503,503,43,2016,5693,5646,2002,2,0,0,0,0,2240,477,478,2220,43,5693,5694,5645,5646,2,0,0,0,0,477,477,478,478,43,2006,5685,5660,2023,2,0,0,0,0,2229,501,496,2230,43,5685,5686,5659,5660,2,0,0,0,0,501,501,496,496],normals:[.614002,0,.78927,.979308,.0472121,.196661,.958861,0,.283822,.992615,.0487075,.110904,.995666,.0464492,.0804773,.614032,.683523,.394604,.992615,.071688,.0976287,.979308,.146702,.139225,.958861,.245766,.141881,.979308,.193945,.0574358,.992615,.120426,.013245,.995666,.0929289,0,.614032,.683523,-.394604,.992615,.120426,-.013245,.979308,.193945,-.0574358,.958861,.245766,-.141881,.979308,.146733,-.139225,.992615,.0716575,-.0976287,.995666,.0464797,-.0804773,.614032,0,-.789239,.992615,.0487075,-.110904,.979308,.0472121,-.196631,.958861,0,-.283792,.609973,0,.792383,.609973,.686239,.396191,.609973,.686239,-.396191,.609973,0,-.792383,.979308,-.0472121,.196661,.992615,-.0487075,.110904,.995666,-.0464492,.0804773,.614002,-.683523,.394635,.992615,-.0716575,.0976592,.979308,-.146733,.139256,.958861,-.245796,.141911,.979308,-.193915,.0574358,.992615,-.120365,.013245,.995666,-.0929594,0,.614002,-.683523,-.394665,.992615,-.120365,-.013245,.979308,-.193945,-.0574358,.958861,-.245766,-.141942,.979308,-.146733,-.139256,.992615,-.0716269,-.0976287,.995666,-.0464797,-.0804773,.992615,-.0487075,-.110904,.979308,-.0472121,-.196661,.609973,-.686239,.396191,.609973,-.686239,-.396191,.837336,-.0949126,-.538377,.837336,0,-.546648,.837306,-.186956,-.513718,.837306,-.273354,-.473464,.251045,-.0967742,-.963103,.252968,0,-.967467,.248207,-.186865,-.950499,.122013,-.496261,-.859523,0,0,-1,-.707083,0,-.707083,-.0278024,0,-.999603,-.609973,-.396191,-.686239,-.727256,-.119175,-.675924,-.727256,-.234748,-.644948,-.727256,-.343181,-.594378,-.687979,-.126011,-.714652,-.687979,0,-.7257,-.687979,-.248177,-.681936,-.688009,-.362835,-.628468,-.86343,-.0875576,-.49678,-.86343,0,-.50444,-.86343,-.172552,-.473983,-.86343,-.252205,-.436842,-.232063,-.16892,-.957915,-.232063,0,-.972686,-.232063,-.332713,-.913999,-.232063,-.486343,-.842341,.837336,.0949126,-.538377,.837306,.186956,-.513718,.837306,.273354,-.473464,.251045,.0967742,-.963103,.248207,.186865,-.950499,.122013,.496261,-.859523,-.609973,.396191,-.686239,-.727256,.119175,-.675924,-.727256,.234718,-.644948,-.727256,.343181,-.594378,-.687979,.126011,-.714652,-.687979,.248177,-.681936,-.687979,.362865,-.628437,-.86343,.0875576,-.49675,-.86346,.172521,-.473952,-.86343,.252205,-.436811,-.232093,.168889,-.957915,-.232093,.332652,-.913999,-.232093,.486251,-.842402,.837306,.418806,-.35139,.837306,.473434,-.273354,.837306,.351421,-.418806,.251015,.785699,-.565386,.252907,.837855,-.483718,.248207,.729698,-.637074,0,.865993,-.499985,0,.866024,-.499985,-.707114,.612323,-.353557,-.0278024,.865688,-.499771,-.707083,.612354,-.353526,-.727287,.525712,-.441176,-.727226,.441176,-.525773,-.687979,.555925,-.466445,-.687979,.628468,-.362804,-.688009,.466475,-.555895,-.863399,.386425,-.324259,-.863399,.436903,-.252235,-.86346,.324198,-.386364,-.232032,.74514,-.625202,-.232032,.842372,-.486343,-.232093,.625202,-.745109,.837306,.513718,-.186987,.837306,.538377,-.0949126,.837306,.546678,0,.251015,.882473,-.397717,.248207,.916593,-.313395,.122013,.992523,0,-.707083,.612354,-.353557,-.609973,.792383,0,-.727287,.644917,-.234718,-.727256,.675924,-.119144,-.727226,.686361,0,-.687979,.681936,-.248177,-.687979,.714652,-.12598,-.687979,.7257,0,-.863521,.473861,-.172491,-.863491,.496658,-.0875576,-.86346,.504379,0,-.232185,.913999,-.332682,-.232185,.957884,-.168889,-.232124,.972655,0,.837306,.513718,.186956,.837306,.473434,.273354,.837306,.538377,.0949126,.251015,.882473,.397717,.252937,.837855,.483718,.248207,.916593,.313395,0,.865993,.499985,0,.866024,.499985,-.707083,.612354,.353557,-.0278024,.865658,.499802,-.727256,.644948,.234748,-.727256,.675924,.119144,-.687979,.681936,.248207,-.687979,.628468,.362865,-.687979,.714652,.12598,-.863521,.473861,.172491,-.863399,.436903,.252235,-.863491,.496628,.0875576,-.232215,.913968,.332682,-.232002,.842372,.486343,-.232215,.957854,.168889,.837306,.418806,.351421,.837306,.351421,.418806,.837306,.273354,.473464,.251015,.785668,.565386,.248207,.729698,.637074,.121982,.496261,.859523,-.707083,.612354,.353526,-.609973,.396191,.686239,-.727256,.525773,.441176,-.727226,.441176,.525773,-.727256,.34315,.594378,-.687979,.555895,.466475,-.688009,.466445,.555895,-.687979,.362835,.628468,-.863369,.386486,.32429,-.86343,.324229,.386425,-.86343,.252205,.436872,-.231941,.74514,.625233,-.232032,.625202,.74514,-.232063,.486343,.842341,.837306,.0949126,.538377,.837306,0,.546678,.837306,.186987,.513718,.251045,.0967742,.963103,.252907,0,.967467,.248207,.186865,.950499,0,0,1,-.707083,0,.707083,-.0278024,0,.999603,-.727256,.119175,.675924,-.727256,.234718,.644948,-.687979,.126011,.714652,-.687979,0,.7257,-.687979,.248177,.681936,-.86346,.0875881,.496719,-.86343,0,.50441,-.86343,.172521,.473983,-.232093,.168889,.957884,-.232093,0,.972686,-.232093,.332652,.914029,.837306,-.0949126,.538377,.837306,-.186956,.513718,.837306,-.273354,.473464,.251045,-.0967742,.963103,.248207,-.186865,.950499,.122013,-.496261,.859523,-.609973,-.396191,.686239,-.727256,-.119175,.675924,-.727256,-.234748,.644948,-.727256,-.343181,.594378,-.687979,-.126011,.714652,-.687979,-.248177,.681936,-.688009,-.362835,.628468,-.86343,-.0875576,.49678,-.86343,-.172521,.474013,-.86343,-.252205,.436872,-.232063,-.168889,.957915,-.232063,-.332682,.914029,-.232032,-.486373,.842341,.837275,-.418806,.351421,.837275,-.473495,.273354,.837306,-.351421,.418806,.250984,-.785668,.565386,.252876,-.837855,.483718,.248207,-.729728,.637074,0,-.866024,.499985,0,-.865993,.499985,-.707083,-.612354,.353526,-.0278024,-.865658,.499802,-.727256,-.525773,.441176,-.727256,-.441176,.525773,-.687979,-.555895,.466475,-.688009,-.628437,.362865,-.687979,-.466475,.555895,-.863399,-.386456,.324259,-.86346,-.436811,.252174,-.863399,-.324259,.386456,-.232002,-.74514,.625233,-.232124,-.842372,.486312,-.232002,-.625233,.74514,.837306,-.513749,.186956,.837306,-.538377,.0949126,.837306,-.546678,0,.251015,-.882473,.397717,.248207,-.916593,.313395,.122013,-.992523,0,0,-.865993,.500015,-.707114,-.612323,.353557,-.707083,-.612354,.353557,-.609973,-.792383,0,-.727256,-.644917,.234748,-.727256,-.675893,.119175,-.727256,-.686361,0,-.687979,-.681936,.248207,-.687979,-.714652,.12598,-.687979,-.7257,0,-.86346,-.473922,.172491,-.86343,-.49675,.0875881,-.863399,-.504471,0,-.232154,-.913999,.332682,-.232063,-.957884,.16892,-.232032,-.972686,0,.837275,-.513749,-.186987,.837275,-.473495,-.273354,.837306,-.538377,-.0949126,.250984,-.882473,-.397717,.252846,-.837855,-.483718,.248207,-.916593,-.313395,0,-.865993,-.499985,0,-.866024,-.499985,-.707083,-.612354,-.353557,-.0278024,-.865658,-.499802,-.707114,-.612354,-.353557,-.727256,-.644948,-.234718,-.727256,-.675924,-.119175,-.687979,-.681936,-.248177,-.688009,-.628468,-.362835,-.687979,-.714652,-.12598,-.86346,-.473983,-.172491,-.86346,-.436811,-.252144,-.86343,-.49675,-.0875881,-.232124,-.913999,-.332652,-.232093,-.842402,-.486282,-.232063,-.957884,-.16895,.837306,-.418806,-.351421,.837306,-.351421,-.418806,.250984,-.785699,-.565386,.248207,-.729728,-.637074,0,-.866024,-.499954,-.707083,-.612354,-.353526,-.727256,-.525773,-.441176,-.727256,-.441176,-.525773,-.687979,-.555895,-.466475,-.687979,-.466475,-.555895,-.86343,-.386395,-.324229,-.86343,-.324198,-.386425,-.232063,-.74514,-.625202,-.232063,-.625202,-.745109,0,.499893,-.866054,0,.34199,-.939665,0,.17365,-.984802,-.00222785,-.00219733,-.999969,0,.17362,.984802,0,.34199,.939665,0,.500015,.865993,0,.64275,.766045,0,.766015,.642781,0,.866024,.499954,0,.939695,.34199,0,.984802,.17362,0,.999969,0,0,.984802,-.17365,0,.939665,-.34199,0,.766015,-.642781,0,.64275,-.766045,0,.499985,-.865993,0,.342021,-.939665,0,.17362,-.984802,-.00244148,-.00723289,-.999969,0,-.500015,.865993,0,-.342021,.939665,0,-.17362,.984802,0,.34199,.939695,-305185e-10,.984802,-.17365,0,.939665,-.342021,0,.499985,-.866024,0,.367565,-.92996,0,.169561,-.985504,0,-.0146794,-.999878,0,-.17365,-.984802,0,-.342021,-.939665,0,-.499985,-.866024,0,-.64275,-.766045,0,-.766045,-.642781,0,-.939665,-.342021,0,-.984771,-.173681,0,-.999969,0,0,-.984771,.173681,0,-.939665,.342021,0,-.866024,.499924,0,-.766045,.64275,0,-.64275,.766045,0,0,.999969,0,.766045,.642781,0,.984802,.17365,0,1,0,305185e-10,.984802,-.17365,0,.87933,-.47615,0,.763329,-.645955,0,.639576,-.7687,0,.496414,-.868068,0,.42259,-.906308,-.00912503,-.177892,-.983978,-.0184637,-.345378,-.938261,-.0278024,-.502335,-.864223,-.03708,-.644032,-.764061,-.0463271,-.766198,-.640919,-.0555437,-.865108,-.498459,-.0646992,-.937742,-.341166,-.0737938,-.981994,-.173772,-.0828272,-.996551,-.00125126,-.0917692,-.980956,.171056,-.10065,-.935789,.33784,-.1095,-.862484,.494064,-.118229,-.763207,.635212,-.126835,-.641102,.756859,-.13535,-.499985,.855373,-.095645,-.36845,.92468,0,-.16953,.985504,0,.00412,.999969,0,.177709,.984069,0,.345866,.938261,0,.503586,.863918,0,.645955,.763359,0,.7687,.639576,0,.868099,.496353,0,.941099,.338084,0,.985504,.169561,305185e-10,.999969,-.00415052,61037e-9,.984069,-.17774,305185e-10,.938261,-.345897,0,.906247,-.422681,-.00958281,-.18775,-.982147,-.018952,-.354808,-.934721,-.0283212,-.511032,-.859066,-.0376904,-.651723,-.7575,-.047029,-.772668,-.633045,-.0563372,-.870113,-.489578,-.0656148,-.94113,-.331523,-.0748619,-.983642,-.16364,-.084048,-.996399,.00897244,-.0932035,-.979003,.181127,-.102268,-.932066,.347453,-.145451,-.868801,.473281,-.237068,-.746727,.621418,-.254158,-.625721,.737449,-.270974,-.487075,.830226,-.277932,-.416272,.865688,0,-.197485,-.980285,0,-.364818,-.931059,0,-.520981,-.853542,0,-.661367,-.750053,0,-.78164,-.623676,0,-.878109,-.478408,0,-.947844,-.318644,0,-.9888,-.149113,-305185e-10,-.999664,.0249336,-61037e-9,-.980132,.198279,-305185e-10,-.930754,.365612,0,-.897244,.441481,.784783,.591052,-.186346,.784783,.616047,-.0674459,.500778,.860408,-.0942106,.500778,.825495,-.260262,.784783,-.0539872,.617359,.784783,-.173406,.594958,.500778,-.242195,.830988,.500748,-.0754112,.86227,.784783,-.483322,-.38789,.784783,-.398358,-.474746,.500778,-.556352,-.663045,.500778,-.675039,-.541765,.784783,.0674459,.616047,.500748,.0942106,.860408,.784783,.474746,-.398358,.784783,.543321,-.298074,.500748,.758873,-.416303,.500748,.663045,-.556352,.784783,-.594958,-.173406,.784783,-.549699,-.286142,.500778,-.767754,-.39967,.500778,-.830988,-.242195,.784783,.298074,.543321,.784783,.186346,.591052,.500778,.260262,.825495,.500778,.416303,.758843,.784783,.286142,-.549699,.784783,.38789,-.483322,.500778,.541765,-.675039,.500778,.39967,-.767754,.784783,-.616047,.0674459,.784783,-.617359,-.0539872,.500778,-.86227,-.0754112,.500778,-.860408,.0942106,.784783,.483322,.38789,.784783,.398358,.474746,.500778,.556352,.663045,.500748,.675039,.541765,.784783,.0539872,-.617359,.784783,.173406,-.594958,.500748,.242195,-.830988,.500748,.0754112,-.86227,.784783,-.543321,.298074,.784783,-.591052,.186346,.500778,-.825495,.260262,.500778,-.758843,.416303,.784783,.594958,.173406,.784783,.549699,.286142,.500778,.767754,.39967,.500748,.830988,.242195,.784783,-.38789,.483322,.784783,-.474746,.398358,.500748,-.663045,.556352,.500778,-.541765,.675039,.784783,-.186346,-.591052,.784783,-.0674459,-.616047,.500778,-.0942106,-.860408,.500748,-.260262,-.825495,.784783,.617389,.0539872,.500748,.86227,.0754112,.784783,-.286142,.549699,.500778,-.39967,.767754,.784783,-.298074,-.543321,.500778,-.416303,-.758873,0,.994049,-.10886,0,.996185,.0871303,0,-.279824,.960021,0,-.461745,.88699,0,-.642781,-.766015,0,-.480972,-.876705,0,.876705,-.480972,0,.953703,-.300699,0,-.88699,-.461745,0,-.77987,-.625904,0,.300699,.953703,0,.10886,.994049,0,.625904,-.77987,0,.967071,.254463,0,-.927976,-.3726,0,-.81634,-.577532,0,.642781,.766045,0,.480972,.876705,0,.279824,-.960021,0,.461745,-.88699,0,-.953703,.300699,0,-.978576,.205786,0,-.904233,.427015,0,.88699,.461745,0,.77987,.625904,0,-.766015,.642781,0,-.876705,.480972,0,-.10886,-.994049,0,.0871303,-.996185,0,.960021,.279824,0,-.625904,.77987,0,-.300699,-.953703,0,-.0871303,.996185,.936613,.334086,-.105319,.936613,.348216,-.0381176,.403851,.90936,-.0995819,.403851,.872463,-.275063,.936613,-.0305185,.348979,.936613,-.0980255,.336314,.403851,-.255989,.878262,.403851,-.0797143,.911313,.936613,-.273202,-.219275,.936613,-.225166,-.268349,.403851,-.588,-.700766,.403851,-.713431,-.572588,.936613,.0381176,.348247,.403851,.0995819,.90936,.936613,.268349,-.225166,.936613,.307138,-.168493,.403851,.802026,-.439985,.403851,.700766,-.588,.936613,-.336314,-.0980255,.936613,-.310739,-.161748,.403851,-.811426,-.422407,.403851,-.878262,-.255989,.936613,.168493,.307138,.936613,.105319,.334086,.403851,.275063,.872463,.403851,.439985,.802026,.936613,.161748,-.310739,.936613,.219275,-.273202,.403851,.572588,-.713431,.403851,.422407,-.811426,.936613,-.348216,.0381176,.936613,-.348979,-.0305185,.403851,-.911313,-.0797143,.403851,-.90936,.0995819,.936613,.273202,.219275,.936613,.225166,.268349,.403851,.588,.700766,.403851,.713431,.572588,.936613,.0305185,-.348979,.936613,.0980255,-.336314,.403851,.255989,-.878262,.403851,.0797143,-.911313,.936613,-.307138,.168493,.936613,-.334086,.105319,.403851,-.872463,.275063,.403851,-.802026,.439985,.936613,.336314,.0980255,.936613,.310739,.161748,.403851,.811426,.422407,.403851,.878262,.255989,.936613,-.219275,.273202,.936613,-.268349,.225166,.403851,-.700766,.588,.403851,-.572588,.713431,.936613,-.105319,-.334086,.936613,-.0381176,-.348247,.403851,-.0995819,-.90936,.403851,-.275063,-.872463,.936613,.348979,.0305185,.403851,.911313,.0797143,.936613,-.161748,.310739,.403851,-.422407,.811426,.936613,-.168493,-.307138,.403851,-.439985,-.802026,.385998,-.879788,.277383,.385998,-.91699,.100406,.920682,-.387951,.0424818,.920682,-.372204,.117344,.385968,.0803858,-.918973,.385968,.258126,-.885617,.920682,.109195,-.374676,.920682,.0339976,-.388775,.385968,.719413,.57741,.385998,.592944,.706656,.920682,.250862,.298959,.920682,.304361,.24427,.385968,-.100406,-.91699,.920682,-.0424818,-.387951,.385968,-.706656,.592944,.385968,-.808771,.443709,.920682,-.342143,.187719,.920682,-.298959,.250862,.385968,.885617,.258126,.385968,.818262,.425947,.920682,.346171,.180181,.920682,.374676,.109195,.385968,-.443709,-.808771,.385968,-.277383,-.879788,.920682,-.117344,-.372204,.920682,-.187719,-.342143,.385968,-.425947,.818262,.385968,-.57741,.719413,.920682,-.24427,.304361,.920682,-.180212,.346171,.385998,.91699,-.100406,.385968,.918973,.0803858,.920682,.388775,.0339976,.920682,.387951,-.0424818,.385968,-.719413,-.57741,.385968,-.592944,-.706656,.920682,-.250862,-.298959,.920682,-.304361,-.24427,.385968,-.0803858,.918973,.385968,-.258126,.885617,.920682,-.109195,.374676,.920682,-.0339976,.388775,.385968,.808771,-.443709,.385998,.879788,-.277383,.920682,.372204,-.117344,.920682,.342143,-.187719,.385998,-.885617,-.258126,.385968,-.818262,-.425947,.920682,-.346171,-.180181,.920682,-.374676,-.109195,.385968,.57741,-.719413,.385968,.706656,-.592944,.920682,.298959,-.250862,.920682,.24427,-.304361,.385968,.277383,.879788,.385968,.100406,.91699,.920682,.0424818,.387951,.920682,.117344,.372204,.385998,-.918973,-.0803858,.920682,-.388775,-.0339976,.385968,.425947,-.818262,.920682,.180212,-.346171,.385968,.443709,.808771,.920682,.187719,.342143,.934263,-.099765,.342326,.934263,-.0310678,.355205,.934263,-.229194,-.273141,.934263,-.278054,-.223182,.847468,-.0462661,.528794,.847468,.0577715,.527665,.87521,.0526444,.48085,.87521,-.0421461,.481887,.934263,.312601,-.171484,.934263,.273141,-.229194,.934263,-.316263,-.164647,.934263,-.342326,-.099765,.934263,.107212,.340068,.934263,.171484,.312601,.934263,.223182,-.278085,.934263,.164647,-.316263,.934263,-.355205,-.0310678,.934263,-.354442,.038789,.934263,.229194,.273141,.934263,.278085,.223182,.934263,.099765,-.342326,.934263,.0310678,-.355205,.934263,-.340068,.107212,.934263,-.312601,.171484,.934263,.316263,.164647,.934263,.342326,.099765,.934263,-.273141,.229194,.934263,-.223182,.278085,.934263,-.038789,-.354442,.934263,-.107212,-.340068,.934263,.355205,.0310678,.934263,.354442,-.038789,.934263,-.164647,.316263,.934263,-.171484,-.312601,.847468,.506241,-.159612,.847468,.465377,-.255318,.87521,.424085,-.232643,.87521,.461318,-.145451,.847468,-.413984,-.332255,.847468,-.47084,-.245094,.87521,-.42906,-.223334,.87521,-.377239,-.302774,.847468,.159612,.506241,.87521,.145451,.461318,.847468,.406629,-.341197,.847468,.332255,-.413984,.87521,.302744,-.377239,.87521,.370556,-.310923,.847468,-.509629,-.148534,.847468,-.528794,-.0462355,.87521,-.481887,-.0421461,.87521,-.4644,-.13535,.847468,.255318,.465377,.847468,.341197,.406629,.87521,.310923,.370556,.87521,.232643,.424085,.847468,.245094,-.47084,.847468,.148534,-.509629,.87521,.13535,-.4644,.87521,.223334,-.42906,.847468,-.527665,.0577715,.847468,-.506241,.159612,.87521,-.461318,.145451,.87521,-.48085,.0526444,.847468,.413984,.332255,.847468,.47084,.245094,.87521,.42906,.223334,.87521,.377239,.302774,.847468,-.465377,.255318,.847468,-.406629,.341197,.87521,-.370556,.310923,.87521,-.424085,.232643,.847468,.0462355,-.528794,.847468,-.0577715,-.527665,.87521,-.0526444,-.48085,.87521,.0421461,-.481887,.847468,.509598,.148534,.847468,.528794,.0462355,.87521,.481887,.0421461,.87521,.4644,.13535,.847468,-.332255,.413984,.847468,-.245094,.47084,.87521,-.223334,.42906,.87521,-.302744,.377239,.847468,-.159612,-.506241,.847468,-.255318,-.465377,.87521,-.232643,-.424085,.87521,-.145451,-.461318,0,-.994049,.10886,0,-.960021,-.279824,0,-.996185,-.0871303,0,.642781,.766015,0,-.766045,.642781,.934263,.340068,-.107212,.478957,-.874477,-.0765099,.478957,-.872616,.0955535,.478957,.405316,-.778649,.478957,.245643,-.842738,.478957,.422224,.769616,.478957,.564257,.672445,.478957,-.837184,.263955,.478957,-.769616,.422224,.478957,.684591,.549455,.478957,.778649,.405316,.478957,-.0955535,-.872616,.478957,-.263955,-.837184,.478957,-.672445,.564257,.478957,-.549455,.684591,.478957,.842738,.245643,.478957,.874477,.0764794,0,-.642781,-.766045,.478957,-.422224,-.769616,.478957,-.564257,-.672445,.478957,-.405316,.778649,.478957,-.245643,.842738,.478957,.872616,-.0955535,.478957,.837184,-.263955,.478957,-.684591,-.549455,.478957,-.778649,-.405316,.478957,.769616,-.422224,.478957,.672445,-.564257,.478957,-.0764794,.874477,.478957,.0955535,.872616,.478957,-.842738,-.245643,.478957,.549455,-.684591,.478957,.263955,.837184,.478957,.0764794,-.874477,.890591,-.453017,-.039613,.890591,-.436598,-.127232,.978088,-.199805,-.0582293,.978088,-.207343,-.018128,.890591,.209967,-.403363,.890591,.284646,-.354656,.978088,.130284,-.162328,.978088,.0961028,-.184606,.890591,.218726,.398694,.890591,.136723,.433699,.978088,.0625629,.198492,.978088,.100101,.18247,.890591,-.433699,.136723,.890591,-.45204,.049501,.978088,-.206885,.0226447,.978088,-.198492,.0625629,.890591,.039613,-.453017,.890591,.127232,-.436598,.978088,.0582293,-.199805,.978088,.018128,-.207343,.890591,.354656,.284646,.890591,.292306,.348369,.978088,.133793,.159429,.978088,.162328,.130253,.890591,-.049501,-.45204,.978088,-.0226447,-.206885,.890591,-.348369,.292306,.890591,-.398694,.218726,.978088,-.18247,.100101,.978088,-.159429,.133763,.890591,.436598,.127232,.890591,.403363,.209967,.978088,.184606,.0961028,.978088,.199805,.0582293,.890591,-.218726,-.398694,.890591,-.136723,-.433699,.978088,-.0625629,-.198492,.978088,-.100101,-.18247,.890591,-.209967,.403363,.890591,-.284646,.354656,.978088,-.130253,.162328,.978088,-.0961028,.184606,.890591,.45204,-.049501,.890591,.453017,.039613,.978088,.207343,.018128,.978088,.206885,-.0226447,.890591,-.354656,-.284646,.890591,-.292306,-.348369,.978088,-.133793,-.159429,.978088,-.162328,-.130284,.890591,-.039613,.453017,.890591,-.127232,.436598,.978088,-.0582293,.199805,.978088,-.018128,.207343,.890591,.398694,-.218726,.890591,.433699,-.136723,.978088,.198492,-.0625629,.978088,.18247,-.100101,.890591,-.403363,-.209967,.978088,-.184606,-.0961028,.890591,.348369,-.292306,.978088,.159429,-.133763,.890591,.049501,.45204,.978088,.0226447,.206885,.999969,.00119022,61037e-8,.999969,.0013123,366222e-9,.999969,-.00119022,640889e-9,.999969,-.00103763,854518e-9,.999969,122074e-9,-.00134281,.999969,-122074e-9,-.00134281,.999969,854518e-9,.00103763,.999969,.00103763,854518e-9,.999969,366222e-9,-.0013123,.999969,-.00134281,122074e-9,.999969,-.00128178,396741e-9,.999969,396741e-9,.00128178,.999969,640889e-9,.00119022,.999969,854518e-9,-.00106815,.999969,61037e-8,-.00119022,.999969,-.0013123,-366222e-9,.999969,-.00134281,-915555e-10,.999969,-122074e-9,.00134281,.999969,122074e-9,.00134281,.999969,.00119022,-640889e-9,.999969,.00103763,-854518e-9,.999969,-.00106815,-854518e-9,.999969,-.00119022,-61037e-8,.999969,.00134281,-122074e-9,.999969,.00128178,-396741e-9,.999969,-61037e-8,.00119022,.999969,-366222e-9,.0013123,.999969,-640889e-9,-.00119022,.999969,-854518e-9,-.00103763,.999969,.00134281,915555e-10,.999969,-854518e-9,.00106815,.999969,-396741e-9,-.00128178,.87521,-.13535,.4644,.847468,-.148534,.509629,.87521,-.310923,-.370556,.847468,-.341197,-.406629,1,0,0,.847468,.527665,-.0577715,.87521,.48085,-.0526444,.953093,-.0846583,.290475,.953093,-.026368,.301431,.953093,-.194494,-.231788,.953093,-.235969,-.189398,.953093,.265267,-.145543,.953093,.231788,-.194494,.953093,-.26838,-.139714,.953093,-.290475,-.0846583,.953093,.0909757,.288583,.953093,.145543,.265267,.953093,.189398,-.235969,.953093,.139714,-.26838,.953093,-.301431,-.026368,.953093,-.30079,.0329295,.953093,.194494,.231788,.953093,.235969,.189398,.953093,.0846583,-.290475,.953093,.026368,-.301431,.953093,-.288583,.0909757,.953093,-.265267,.145543,.953093,.26838,.139714,.953093,.290475,.0846583,.953093,-.231788,.194494,.953093,-.189398,.235969,.953093,-.0329295,-.30079,.953093,-.0909757,-.288583,.953093,.301431,.026368,.953093,.30079,-.0329295,.953093,-.139714,.26838,.953093,-.145543,-.265267,.953093,.288583,-.0909757,.940947,-.0294809,.33726,.940947,.0368358,.336528,.953093,.0329295,.30079,.940947,.322855,-.101779,.940947,.296793,-.162816,.940947,-.264016,-.21189,.940947,-.300272,-.156316,.940947,.101779,.322855,.940947,.259316,-.217597,.940947,.21189,-.264016,.940947,-.325022,-.0947295,.940916,-.33726,-.0294809,.940947,.162816,.296793,.940947,.217597,.259346,.940947,.156316,-.300272,.940947,.0947295,-.325022,.940916,-.336528,.0368358,.940947,-.322855,.101779,.940947,.264016,.21189,.940947,.300272,.156316,.940947,-.296793,.162816,.940947,-.259316,.217597,.940947,.0294809,-.33726,.940947,-.0368358,-.336528,.940916,.325022,.0947295,.940916,.33726,.0294809,.940947,-.21189,.264016,.940947,-.156316,.300272,.940947,-.101779,-.322855,.940947,-.162816,-.296793,.940947,-.0947295,.325022,.940947,-.217597,-.259346,.940916,.336528,-.0368358,.999969,0,0,.954527,-.0833766,.286111,.954527,-.0259713,.296884,.954527,-.191565,-.228309,.954527,-.232429,-.186529,.954527,.261299,-.143345,.954527,.228309,-.191565,.954527,-.264351,-.137608,.954527,-.286111,-.0833766,.954527,.0896023,.284219,.954527,.143345,.261269,.954527,.186529,-.232429,.954527,.137608,-.264351,.954527,-.296884,-.0259713,.954527,-.296243,.0324412,.954527,.191565,.228309,.954527,.232429,.186529,.954527,.0833766,-.286111,.954527,.0259713,-.296884,.954527,-.284219,.0896023,.954527,-.261269,.143345,.954527,.264351,.137608,.954527,.286111,.0833766,.954527,-.228309,.191565,.954527,-.186529,.232429,.954527,-.0324412,-.296243,.954527,-.0896023,-.284219,.954527,.296884,.0259713,.954527,.296243,-.0324412,.954527,-.137608,.264351,.954527,-.143345,-.261299,.954527,.284219,-.0896023,.942717,-.0290536,.332316,.942717,.0362865,.331584,.954527,.0324412,.296243,.942717,.318125,-.100284,.942717,.292459,-.160436,.942717,-.26014,-.208777,.942717,-.295877,-.154027,.942717,.100284,.318125,.942717,.255531,-.214423,.942717,.208777,-.26014,.942717,-.320231,-.0933256,.942717,-.332316,-.0290536,.942717,.160436,.292459,.942717,.214423,.255531,.942717,.154027,-.295877,.942717,.0933256,-.320231,.942717,-.331584,.0362865,.942717,-.318125,.100284,.942717,.26014,.208777,.942717,.295877,.154027,.942717,-.292459,.160436,.942717,-.255531,.214423,.942717,.0290536,-.332316,.942717,-.0362865,-.331584,.942717,.320261,.0933256,.942717,.332286,.0290536,.942717,-.208777,.26014,.942717,-.154027,.295877,.942717,-.100284,-.318125,.942717,-.160436,-.292459,.942717,-.0933256,.320231,.942717,-.214423,-.255531,.942717,.331584,-.0362865,.954985,-.0830103,.284768,.954985,-.0258492,.295511,.954985,-.19068,-.227241,.954985,-.23133,-.185675,.954985,.260048,-.142674,.954985,.227241,-.19068,.954985,-.2631,-.136967,.954985,-.284768,-.0830103,.954985,.0891751,.282907,.954985,.142674,.260079,.954985,.185675,-.23133,.954985,.136967,-.263131,.954985,-.295511,-.0258492,.954985,-.29487,.0322886,.954985,.19068,.227241,.954985,.23133,.185675,.954985,.0830103,-.284768,.954985,.0258492,-.295511,.954985,-.282907,.0891751,.954985,-.260048,.142674,.954985,.263131,.136967,.954985,.284768,.0830103,.954985,-.227241,.19068,.954985,-.185675,.23133,.954985,-.0322886,-.29487,.954985,-.0891751,-.282907,.954985,.295511,.0258492,.954985,.29487,-.0322886,.954985,-.136967,.263131,.954985,-.142674,-.260079,.954985,.282907,-.0891751,.943236,-.0289315,.33079,.943236,.0361339,.330088,.954985,.0322886,.29487,.943236,.316691,-.099826,.943236,.291116,-.159703,.943236,-.25895,-.207831,.943236,-.294534,-.153325,.943236,.099826,.316691,.943236,.254372,-.213446,.943236,.207831,-.25895,.943236,-.318796,-.0928983,.943236,-.33079,-.0289315,.943236,.159703,.291116,.943236,.213446,.254372,.943236,.153325,-.294534,.943236,.0928983,-.318796,.943236,-.330088,.0361339,.943236,-.316691,.099826,.943236,.25895,.207831,.943236,.294534,.153325,.943236,-.291116,.159703,.943236,-.254372,.213446,.943236,.0289315,-.33079,.943236,-.0361339,-.330088,.943236,.318796,.0928983,.943236,.33079,.0289315,.943236,-.207831,.25895,.943236,-.153325,.294534,.943236,-.099826,-.316691,.943236,-.159703,-.291116,.943236,-.0928983,.318796,.943236,-.213446,-.254372,.943236,.330088,-.0361339,.953887,-.0839564,.288095,.953887,-.0261544,.298959,.953887,-.192877,-.229896,.953887,-.234046,-.187841,.953887,.2631,-.144322,.953887,.229896,-.192877,.953887,-.266182,-.138554,.953887,-.288095,-.0839564,.953887,.0902432,.286203,.953887,.144322,.2631,.953887,.187841,-.234046,.953887,.138554,-.266182,.953887,-.298959,-.0261544,.953887,-.298318,.0326548,.953887,.192877,.229896,.953887,.234046,.187841,.953887,.0839564,-.288095,.953887,.0261544,-.298959,.953887,-.286203,.0902432,.953887,-.2631,.144322,.953887,.266182,.138554,.953887,.288095,.0839564,.953887,-.229896,.192877,.953887,-.187841,.234046,.953887,-.0326548,-.298318,.953887,-.0902432,-.286203,.953887,.298959,.0261544,.953887,.298318,-.0326548,.953887,-.138554,.266182,.953887,-.144322,-.2631,.953887,.286203,-.0902432,.941893,-.0292673,.334544,.941893,.0365612,.333842,.953887,.0326548,.298318,.941893,.320292,-.100986,.941893,.294443,-.161534,.941893,-.26191,-.210211,.941893,-.297891,-.155065,.941893,.100986,.320292,.941893,.257271,-.215857,.941893,.210211,-.26191,.941893,-.322428,-.0939665,.941893,-.334544,-.0292673,.941893,.161534,.294443,.941893,.215857,.257271,.941893,.155065,-.297891,.941893,.0939665,-.322428,.941893,-.333842,.0365612,.941893,-.320292,.100986,.941893,.26191,.210211,.941893,.297891,.155065,.941893,-.294443,.161534,.941893,-.257271,.215857,.941893,.0292673,-.334544,.941893,-.0365612,-.333842,.941893,.322428,.0939665,.941893,.334544,.0292673,.941893,-.210211,.26191,.941893,-.155065,.297891,.941893,-.100986,-.320292,.941893,-.161534,-.294443,.941893,-.0939665,.322428,.941893,-.215857,-.257271,.941893,.333842,-.0365612,.934263,.038789,.354442,.72982,.606342,.315653,.72982,.533128,.427869,.72985,-.523667,.439406,.72982,-.599322,.328806,.707083,-.00769066,-.707053,.72982,.0595721,-.68099,0,-.0108951,-.999939,.72985,.68099,.0595721,.72985,.65627,.19129,.72982,-.315653,.606342,.72982,-.427869,.533128,.72982,-.328806,-.599322,.72982,-.205542,-.651967,.72982,.651967,-.205542,.72982,.679525,-.0744041,.72982,-.0595721,.68099,.72982,-.19129,.65627,.707083,-.505417,-.494491,.72982,-.439406,-.523667,0,-.714774,-.699332,.707083,.00769066,.707053,0,.0108951,.999939,.72985,.523667,-.439406,.72985,.599322,-.328806,.72982,-.65627,-.19129,.72982,-.606342,-.315653,.72982,.328776,.599322,.72982,.205542,.651967,.72982,.315653,-.606342,.72982,.427869,-.533128,.707083,-.707053,.00769066,.72982,-.68099,-.0595721,0,-.999939,.0108951,.707083,.505417,.494491,.72982,.439406,.523667,0,.714774,.699332,.72982,.19129,-.65627,.72982,-.651967,.205542,.707083,-.494491,.505417,0,-.699332,.714774,.72982,-.0744041,-.679525,.707083,.707053,-.00769066,0,.999939,-.0108951,.72982,-.533128,-.427869,.72982,.0744041,.679525,.707083,.494491,-.505417,0,.699332,-.714774,.72982,-.679525,.0744041,-1,0,0,-.68569,-.723533,.079226,-.68569,-.694174,.218879,.68569,.567644,.45558,.68569,.467849,.557573,-.68569,-.725089,-.0634175,.68569,-.698782,-.203681,.68569,-.725089,-.0634175,.68569,.33607,-.645619,.68569,.45558,-.567644,-.68569,-.567644,-.45558,-.68569,-.645619,-.33607,.68569,.645619,.3361,.68569,.698782,.203681,-.68569,.645619,.3361,-.68569,.698782,.203681,.68569,-.694174,.218848,.68569,-.638142,.350078,-.68569,.694174,-.218848,-.68569,.638142,-.350078,-.68569,.557573,-.467849,-.68569,.45558,-.567644,.68569,.725089,.0634175,-.68569,-.33607,.645619,-.68569,-.203681,.698782,.68569,.350078,.638142,-.68569,-.467849,-.557573,-.68569,.725089,.0634175,.68569,-.0634175,.725089,.68569,.079226,.723533,-.68569,-.557573,.467849,-.68569,-.45558,.567644,.72982,.523667,-.439406,.68569,-.45558,.567644,.68569,-.557573,.467849,.72982,.599322,-.328806,-.68569,.33607,-.645619,.68569,.638142,-.350078,.68569,.557573,-.467849,-.68569,.567644,.45558,-.68569,-.638142,.350078,.68569,.218848,.694174,.68569,-.079226,-.723533,.68569,.0634175,-.725089,-.68569,.203681,-.698782,.68569,-.567644,-.45558,.68569,-.467849,-.557573,.72982,.328806,.599322,.68569,-.350078,-.638142,.68569,-.218879,-.694174,.68569,-.645619,-.3361,.72982,.68099,.0595721,-.68569,.0634175,-.725089,-.68569,-.079226,-.723533,.68569,-.723533,.079226,.68569,.723533,-.079226,.68569,.694174,-.218848,-.68569,-.698782,-.203681,.68569,.203681,-.698782,.68569,-.203681,.698782,.72982,.65627,.19129,-.68569,.723533,-.079226,.72982,-.523667,.439406,.613025,-.246498,-.750603,.68569,.3361,-.645619,.613025,.697104,-.371715,.683981,.724296,.0867336,.613025,.356426,-.705069,.68569,.694174,-.218879,.613025,.755791,.230079,.683981,.450819,.573504,.613025,.750603,-.246498,.68569,.645619,.33607,.613025,.371715,.697104,.683981,-.0867336,.724296,.613025,.705069,.356426,.68569,.218879,.694174,.613025,-.230079,.755791,.683981,-.573504,.450819,.613025,.246498,.750603,.68569,-.3361,.645619,.613025,-.697104,.371715,.683981,-.724296,-.0867336,.613025,-.356426,.705069,.68569,-.694174,.218879,.613025,-.755791,-.230079,.683981,-.450819,-.573504,.613025,-.750603,.246498,.613025,-.371715,-.697104,.683981,.0867336,-.724296,.613025,-.705069,-.356426,.613025,.230079,-.755791,.683981,.573504,-.450819,.835292,.476608,-.274056,.683981,.438185,-.583209,.835292,.482467,.263588,.835292,.143223,-.530808,.683981,-.102512,-.722251,.835292,.527543,-.154759,.835292,-.274026,-.476608,.683981,-.583209,-.438185,.835292,.263588,-.482467,.835292,-.530808,-.143223,.683981,-.722251,.102512,.835292,-.154759,-.527543,.835292,-.476608,.274026,.683981,-.438185,.583209,.835292,-.482467,-.263588,.835292,-.143223,.530808,.683981,.102512,.722251,.835292,-.527543,.154759,.835292,.274026,.476608,.683981,.583209,.438185,.835292,-.263588,.482467,.835292,.530808,.143223,.683981,.722251,-.102512,.835292,.154759,.527543,0,-.950041,.312021,0,.882382,-.470504,0,.959532,-.281503,0,.260506,-.965453,0,-.786157,.617969,0,-.479415,.87756,0,-.260506,.965453,0,.140538,.990051,0,-.140538,-.990051,0,.451155,-.892422,0,.470504,.882382,0,-.281503,-.959532,0,-.965453,-.260506,0,.965453,.260506,0,.990051,-.140538,0,-.990051,.140538,0,-.892422,-.451155,0,.992889,.1189,0,-.882382,.470504,0,-.959532,.281503,0,-.451155,.892422,0,-.1189,.992889,0,-.470504,-.882382,0,.281503,.959532,0,.892422,.451155,0,-.992889,-.1189,0,.866909,-.498459,0,.600665,-.799463,0,.1189,-.992889,0,-.498459,-.866909,0,-.799463,-.600665,0,.87756,.479415,0,-.866909,.498459,0,-.600696,.799463,0,.617969,.786157,0,.956633,.291208,0,.479415,-.87756,0,.498459,.866909,0,.799463,.600696,0,-.312021,-.950041,0,-.291208,.956633,0,-.87756,-.479415,0,-.956633,-.291208,0,.312021,.950072,0,.291208,-.956633,0,.950041,-.312021,0,-.617969,-.786157,0,.786157,-.617969,0,.600696,-.799463,0,-.600665,.799463,-.68569,.467849,.557573,-.68569,-.218848,-.694174,-.68569,-.350078,-.638142,-.68569,.218848,.694174,-.68569,.350078,.638142,-.68569,-.0634175,.725089,.68569,-.33607,.645619,-.68569,.079226,.723533,.614032,0,.78927,.958861,0,.283792,.992615,.0487075,.110874,.979308,.146702,-.139225,.979308,.0472121,-.196661,.979308,-.0472121,.196692,.992615,-.0487075,.110874,.995666,-.0464492,.0805078,.992615,-.071688,.0976592,.958861,-.245827,.141911,.979308,-.193884,.0574358,.992615,-.120426,.013245,.614002,-.683523,-.394635,.992615,-.120426,-.013245,.979308,-.193915,-.0574358,.958861,-.245796,-.141911,.979308,-.146764,-.139256,.992615,-.0716575,-.0976287,.995666,-.0464797,-.0805078,.837306,-.0949126,-.538377,.837306,-.186987,-.513718,.122013,-.496261,-.859554,-.727287,-.119205,-.675863,-.727317,-.234748,-.644887,-.727317,-.34312,-.594348,-.68804,-.126011,-.714621,-.68807,-.248146,-.681875,-.68807,-.362774,-.628437,-.86343,-.0875881,-.49678,-.863399,-.172552,-.474013,-.863399,-.252235,-.436872,-.232032,-.168889,-.957915,-.232032,-.332713,-.913999,-.232032,-.486343,-.842372,.837306,.0949126,-.538377,.837306,.186987,-.513718,.121982,.496261,-.859523,-.727226,.119175,-.675924,-.727256,.234748,-.644948,-.727226,.343181,-.594409,-.687979,.126041,-.714682,-.687979,.248207,-.681936,-.687979,.362835,-.628498,-.86346,.0875881,-.496719,-.86343,.172552,-.473983,-.86343,.252205,-.436842,-.232093,.168859,-.957915,-.232063,.332713,-.913999,-.232063,.486404,-.842311,.837306,.418806,-.351421,.837306,.473464,-.273354,.251015,.785668,-.565386,-.727226,.525773,-.441176,-.727195,.441206,-.525803,-.687979,.555925,-.466475,-.687979,.628468,-.362835,-.687948,.466475,-.555925,-.86346,.386395,-.324198,-.86343,.436842,-.252205,-.232093,.745109,-.625202,-.232093,.842341,-.486343,-.232124,.625202,-.745109,.837306,.513749,-.186987,-.727256,.644917,-.234748,-.727226,.675924,-.119175,-.727195,.686422,0,-.688009,.681906,-.248207,-.687948,.714682,-.126011,-.687948,.72573,0,-.863491,.473922,-.17246,-.86346,.496719,-.0875576,-.86343,.50444,0,-.232154,.913999,-.332682,-.232124,.957884,-.168889,-.232063,.972686,0,.837306,.513749,.186987,.837306,.473464,.273324,.252876,.837855,.483718,-.0278024,.865688,.499771,-.727226,.644948,.234748,-.727226,.675924,.119175,-.687979,.681906,.248207,-.687979,.628468,.362835,-.687948,.714682,.126011,-.863491,.473891,.17246,-.86343,.436811,.252235,-.86346,.496719,.0875576,-.232185,.913999,.332682,-.232093,.842341,.486343,-.232124,.957884,.168889,.837275,.418806,.351421,.250984,.785668,.565386,.248177,.729698,.637074,0,.865993,.500015,-.609973,.396191,.686209,-.727226,.525803,.441176,-.727195,.441206,.525803,-.727226,.343181,.594409,-.687948,.466475,.555925,-.86343,.386395,.324229,-.86346,.324229,.386364,-.86343,.252205,.436842,-.232063,.745109,.625202,-.232093,.625202,.745109,-.232063,.486343,.842372,.837306,.0949126,.538408,.837306,0,.546709,.837306,.186956,.513718,.251015,.0967742,.963103,-.0278329,0,.999603,-.727226,.119175,.675924,-.727226,.234748,.644948,-.688009,0,.725669,-.687979,.248207,.681936,-.86343,.172521,.474013,-.232093,.168859,.957915,-.232063,.332652,.914029,.837306,-.186987,.513718,.251045,-.0968047,.963103,.122013,-.496261,.859554,-.727287,-.119205,.675893,-.727317,-.234748,.644887,-.727287,-.34312,.594348,-.68804,-.126011,.714621,-.68807,-.248146,.681875,-.68807,-.362774,.628437,-.86343,-.0875881,.49678,-.863399,-.172521,.474044,-.863399,-.252205,.436872,-.232063,-.16892,.957915,-.232002,-.332682,.914029,-.232032,-.486404,.842341,.837306,-.418806,.351421,.837306,-.473464,.273354,.837306,-.351421,.418775,.251015,-.785699,.565355,.252876,-.837855,.483749,-.707083,-.612384,.353526,-.727226,-.525773,.441176,-.727256,-.441145,.525773,-.687979,-.555895,.466445,-.688009,-.628468,.362835,-.688009,-.466445,.555895,-.863399,-.386425,.324259,-.86343,-.436842,.252205,-.863399,-.324259,.386425,-.232032,-.745109,.625233,-.232063,-.842372,.486343,-.232032,-.625233,.745109,.837275,-.513749,.186987,.837306,-.538408,.0949126,.837306,-.546709,0,-.727256,-.675924,.119175,-.687979,-.714652,.126011,-.86343,-.474013,.172521,-.863399,-.496811,.0875881,-.863369,-.504501,0,-.232063,-.914029,.332652,-.232002,-.957915,.168889,-.231971,-.972716,0,.837306,-.513718,-.186987,.837306,-.473464,-.273354,.837306,-.538408,-.0949126,.251015,-.882473,-.397717,.252907,-.837855,-.483749,-.0278024,-.865688,-.499802,-.727256,-.644948,-.234748,-.687979,-.681936,-.248207,-.687979,-.714652,-.126011,-.863399,-.474044,-.172521,-.86343,-.436842,-.252235,-.863399,-.496841,-.0875881,-.232002,-.914029,-.332682,-.232063,-.842372,-.486343,-.231971,-.957915,-.168889,.837306,-.418806,-.35139,.837306,-.351421,-.418775,.251015,-.785699,-.565355,-.707083,-.612384,-.353526,-.727256,-.441145,-.525742,-.687979,-.555895,-.466445,-.688009,-.466445,-.555895,-.86343,-.386395,-.324259,-.86343,-.324229,-.386425,-.232063,-.745109,-.625233,-.232063,-.625202,-.74514,0,.500076,-.865963,0,.173589,.984802,0,.499985,.865993,0,.939665,.342051,0,.866024,-.499954,0,.766045,-.64275,0,-.500046,.865963,0,.766045,.64275,0,.16953,-.985504,0,-.17362,-.984802,0,-.499985,-.865993,0,-.766015,-.642781,0,-.865993,-.500015,0,-.984802,-.17365,305185e-10,-1,0,0,-.866024,.499954,0,-.499985,.866024,0,-.34199,.939665,0,.939665,.342021,305185e-10,1,0,0,.984802,-.17362,0,.763359,-.645924,-.0277718,-.502335,-.864193,-.0370495,-.644063,-.764061,-.0463271,-.766167,-.640919,-.0555742,-.865078,-.49852,-.0647298,-.937742,-.341166,-.0738243,-.981994,-.173742,-.0827967,-.996551,-.00125126,-.0917692,-.980956,.171026,-.100681,-.935789,.337809,-.10947,-.862453,.494095,-.118198,-.763237,.635182,-.126804,-.641133,.756859,-.135319,-.499985,.855373,0,.177679,.984069,0,.503555,.863918,0,.645924,.76339,0,.868068,.496384,0,.941099,.338115,305185e-10,.985504,.16953,61037e-9,.999969,-.00412,0,.984069,-.177709,-61037e-9,.938231,-.345958,-61037e-9,.906247,-.422712,-.0283517,-.511032,-.859066,-.0376904,-.651753,-.757469,-.0748924,-.983642,-.16364,-.0840785,-.996399,.00897244,-.093173,-.979034,.181097,-.102237,-.932096,.347453,-.254128,-.625721,.737449,-.270943,-.487075,.830256,-.277932,-.416303,.865688,0,-.197455,-.980285,0,-.364788,-.931059,0,-.521012,-.853542,-305185e-10,-.661367,-.750023,0,-.78164,-.623707,0,-.947874,-.318613,0,-.999664,.0249336,0,-.980132,.198248,0,-.930754,.365581,.979308,.0472121,.196692,.995666,.0464797,.0805078,.614032,.683493,.394635,.992615,.0716575,.0976592,.958861,.245735,.141881,.992615,.120396,.013245,.995666,.0929594,0,.992615,.120396,-.013245,.979308,.193915,-.0574358,.992615,.071688,-.0976592,.995666,.0464797,-.0805078,.614002,0,-.78927,.958861,0,-.283822,.995666,-.0464797,.0805078,.614032,-.683493,.394635,.958861,-.245766,.141911,.979308,-.193945,.0574358,.614032,-.683523,-.394635,.958861,-.245766,-.141911,.979308,-.146702,-.139256,.992615,-.0717185,-.0976592,.992615,-.0487075,-.110874,.837306,0,-.546678,.252937,0,-.967467,-.727256,-.119205,-.675924,-.727256,-.34315,-.594409,-.687979,-.126041,-.714652,-.687979,-.248207,-.681906,-.687979,-.362835,-.628468,-.86343,-.0875881,-.49675,-.86346,0,-.504349,-.86343,-.172552,-.474013,-.863399,-.252266,-.436872,-.232093,-.168889,-.957884,-.232154,0,-.972655,-.232032,-.332682,-.914029,-.232002,-.486373,-.842372,.251015,.0967742,-.963103,.122013,.496261,-.859554,-.727256,.34315,-.594378,-.687979,.362835,-.628468,-.86343,.172521,-.474013,-.863399,.252235,-.436872,-.232154,.168859,-.957884,-.232032,.486435,-.842311,.251015,.785699,-.565355,.252876,.837855,-.483718,-.0278024,.865658,-.499802,-.727256,.525773,-.441176,-.727256,.441176,-.525773,-.687979,.555895,-.466475,-.687979,.628468,-.362865,-.687979,.466445,-.555925,-.86346,.386364,-.324198,-.232124,.745109,-.625202,.837275,.513749,-.186987,.837306,.538408,-.0949126,0,.865993,-.500015,-.727226,.644978,-.234748,-.727256,.675893,-.119144,-.687979,.714682,-.12598,-.688009,.725669,0,-.86346,.473952,-.172491,-.232124,.913999,-.332682,.837306,.473464,.273354,.252876,.837855,.483749,-.707053,.612415,.353526,-.727195,.645009,.234748,-.727256,.675924,.119175,-.687979,.714682,.126011,-.863491,.473922,.172491,-.863399,.436872,.252235,-.232124,.913999,.332682,-.232032,.842372,.486343,-.727256,.441176,.525773,-.688009,.555895,.466475,-.687979,.466445,.555925,-.863399,.386425,.324259,-.86346,.324198,.386395,-.232002,.745109,.625233,-.232093,.625202,.74514,-.232093,.486343,.842341,.837306,.186987,.513749,.252876,0,.967467,-.687979,.126011,.714682,-.688009,0,.7257,-.688009,.248207,.681906,-.86343,.0875881,.49678,-.863399,0,.504471,-.232063,.168859,.957915,-.232032,0,.972686,-.232063,.332682,.914029,.837306,-.0949126,.538408,.837306,-.186956,.513749,.251015,-.0967742,.963103,.121982,-.496261,.859554,-.727226,-.234748,.644948,-.727256,-.34315,.594409,-.687979,-.126011,.714682,-.688009,-.248207,.681906,-.687979,-.362835,.628468,-.863399,-.0875881,.496811,-.86343,-.252235,.436842,-.232032,-.168889,.957915,-.232063,-.332682,.913999,-.232063,-.486435,.842311,.837275,-.473464,.273354,.250984,-.785699,.565386,-.687979,-.628437,.362865,-.687979,-.466445,.555925,-.86343,-.386425,.324259,-.86343,-.324229,.386425,-.232093,-.842372,.486343,-.232063,-.625233,.745109,.837306,-.513749,.186987,.121982,-.992523,0,-.707053,-.612384,.353526,-.727226,-.644978,.234748,-.687979,-.681906,.248207,-.86343,-.474013,.172491,-.863369,-.496841,.0875881,-.863369,-.504562,0,-.232063,-.914029,.332682,-.231971,-.957915,.16892,-.23191,-.972716,0,.837306,-.513749,-.186987,.252907,-.837855,-.483718,-.707053,-.612415,-.353526,-.727195,-.645009,-.234718,-.727256,-.675924,-.119144,-.688009,-.628437,-.362865,-.687979,-.714682,-.12598,-.86343,-.474044,-.172491,-.86346,-.436811,-.252174,-.863399,-.496811,-.0876186,-.232063,-.914029,-.332682,-.232093,-.842372,-.486312,-.232002,-.957915,-.16892,.248207,-.729698,-.637074,-.707114,-.612354,-.353526,-.727256,-.525742,-.441176,-.727256,-.441145,-.525773,-.687979,-.466445,-.555925,-.86346,-.386364,-.324229,-.863399,-.324259,-.386425,-.232124,-.745109,-.625233,-.232032,-.625233,-.745109,-.00222785,-.00222785,-.999969,0,.500015,-.865993,0,-.500076,.865963,0,.367565,-.929991,0,-.500015,-.865993,0,-1,0,0,-.499985,.865993,0,.87936,-.47615,-.0184942,-.345347,-.938261,-.0278024,-.502335,-.864193,-.0555437,-.865108,-.498489,-.0828578,-.996551,-.00125126,-.0917997,-.980956,.171026,-.10065,-.935789,.337809,-.118198,-.763207,.635212,0,.345897,.938261,0,.76867,.639607,0,.941069,.338115,0,.999969,-.00412,0,.938231,-.345927,0,.906278,-.422651,-.0189825,-.354778,-.934751,-.0656453,-.94116,-.331492,-.0748924,-.983673,-.16361,-.237098,-.746727,.621418,-.270974,-.487045,.830256,0,-.364788,-.931089,0,-.661367,-.750023,0,-.878109,-.478439,0,-.947874,-.318583,0,-.9888,-.149052,0,-.999664,.0249031,.614063,.683493,.394604,.958892,.245735,.141881,.992615,.120365,.013245,.614063,.683493,-.394604,.958892,.245735,-.141881,.995666,.0464492,-.0804773,.614032,0,-.78927,.995666,-.0464797,.0804773,.992615,-.071688,.0976287,.979308,-.146733,.139225,.979308,-.193945,.0574053,.995666,-.0929289,0,.614032,-.683493,-.394635,.979308,-.193915,-.0574053,.979308,-.146733,-.139225,.992615,-.071688,-.0976287,.995666,-.0464492,-.0804773,.837336,-.0949126,-.538347,-.727256,-.234718,-.644948,-.687979,-.362804,-.628468,-.86346,-.0875881,-.496719,-.86346,0,-.504379,-.86346,-.172521,-.473952,-.86343,-.252205,-.436811,-.232124,-.168889,-.957884,-.232124,0,-.972655,-.232093,-.332682,-.913999,-.232093,-.486343,-.842372,.837336,.0949126,-.538347,.122013,.496231,-.859554,-.727256,.34315,-.594409,-.86346,.0875881,-.496689,-.86343,.172521,-.473983,-.863399,.252205,-.436872,-.232154,.168889,-.957884,-.232124,.332713,-.913999,-.232063,.486373,-.842341,-.688009,.466445,-.555925,-.86343,.386395,-.324229,-.863399,.436872,-.252235,-.86343,.324229,-.386395,-.232063,.74514,-.625202,-.727226,.644978,-.234718,-.727256,.675924,-.119175,-.687979,.714682,-.126011,-.86343,.473983,-.172521,-.86343,.49675,-.0875881,-.863399,.50444,0,-.232093,.913999,-.332713,-.232093,.957884,-.168889,.837275,.513749,.186987,-.688009,.681936,.248177,-.86346,.473983,.172521,-.86343,.49675,.0875576,-.232093,.913999,.332682,-.232093,.957884,.168889,.121982,.496261,.859554,-.707114,.612354,.353557,-.727256,.525742,.441176,-.863399,.386456,.324259,-.86343,.324259,.386425,-.863399,.252235,.436872,-.232032,.74514,.625233,-.232032,.486373,.842341,.252937,0,.967467,-.727256,.119144,.675924,-.687979,.12598,.714682,-.86346,.0875881,.496689,-.863491,0,.504318,-.86343,.172552,.474013,-.232154,.168859,.957884,-.232185,0,.972655,-.232093,.332682,.913999,.837306,-.186987,.513749,-.687979,-.248207,.681906,-.86346,-.0875576,.496689,-.86346,-.172521,.473952,-.86343,-.252205,.436842,-.232124,-.168889,.957884,-.232093,-.332682,.913999,-.232093,-.486343,.842341,.251015,-.785668,.565386,.252907,-.837855,.483749,.248207,-.729698,.637074,-.0278024,-.865688,.499802,-.727256,-.441145,.525803,-.687979,-.628468,.362835,-.86346,-.386364,.324198,-.863491,-.43675,.252144,-.232124,-.745079,.625233,-.232185,-.842341,.486343,-.232063,-.625202,.74514,-.727287,-.644917,.234748,-.86346,-.473952,.172491,-.86343,-.49678,.0875881,-.232032,-.957915,.168889,-.232002,-.972686,0,-.727226,-.675924,-.119175,-.86346,-.473952,-.172491,-.863491,-.436781,-.252144,-.86343,-.49678,-.0875881,-.232124,-.913999,-.332682,-.232185,-.842341,-.486312,-.232032,-.957915,-.168889,.251015,-.785699,-.565386,-.863491,-.386303,-.324168,-.86346,-.324198,-.386395,-.232185,-.745109,-.625202,-.232124,-.625202,-.745109,-305185e-10,.500015,-.865993,-305185e-10,.342021,-.939665,-305185e-10,.34199,.939695,-.00244148,-.00720237,-.999969,0,-.342051,.939665,0,-.0146489,-.999878,0,-.766045,-.64275,0,-.984802,.17365,0,.763359,-.645955,0,.496384,-.868068,-.0184637,-.345347,-.938261,-.0463271,-.766198,-.640889,-.0555437,-.865078,-.498489,-.0738243,-.981994,-.173711,-.0917997,-.980956,.170995,-.0956145,-.36845,.92468,305185e-10,.645894,.76339,0,.941069,.338145,-.0563372,-.870083,-.489608,-.0656148,-.94116,-.331492,-.0748924,-.983673,-.163579,-.145451,-.868801,.473312,-.270943,-.487045,.830256,-.277902,-.416272,.865688,0,-.980132,.198279,0,-.897244,.441511,.995666,.0464797,.0804773,.992615,.0716269,.0976287,.979308,.146733,.139225,.979308,.193915,.0574053,.979308,.193915,-.0574053,.992615,.071688,-.0976287,.614032,-.683523,.394635,.992615,-.0716575,.0976287,.992615,-.120396,.013245,.122013,-.496231,-.859554,-.688009,-.126011,-.714652,-.86343,-.0875576,-.49675,-.86343,-.172521,-.474013,-.232063,-.332652,-.914029,-.232063,-.486312,-.842372,.837306,.0949431,-.538377,-.727256,.234718,-.644978,-.687979,.12598,-.714652,-.688009,.248146,-.681936,-.687979,.362804,-.628498,-.232124,.168889,-.957884,-.232093,.332652,-.914029,-.232093,.486312,-.842372,-.0278024,.865688,-.499802,-.727226,.441145,-.525773,-.86346,.436781,-.252174,-.86346,.324229,-.386334,-.232124,.745109,-.625172,-.232154,.842341,-.486343,-.707114,.612293,-.353557,-.727287,.644917,-.234748,-.727256,.675893,-.119175,-.863491,.473922,-.172491,-.86343,.50441,0,-.232185,.913968,-.332713,-.232093,.972686,0,.248238,.916593,.313395,-.707053,.612384,.353526,-.727256,.675893,.119144,-.687979,.628437,.362865,-.687979,.714682,.12598,-.86346,.436811,.252174,-.863491,.496689,.0875576,-.232124,.842341,.486312,-.232154,.957884,.168889,.251015,.785699,.565386,-.727226,.441145,.525773,-.727256,.34315,.594409,-.688009,.466445,.555925,-.687979,.362804,.628498,-.86343,.386456,.324229,-.86343,.324229,.386395,-.232032,.74514,.625202,-.232063,.625202,.74514,-.232093,.486343,.842372,-.688009,.248177,.681936,-.86346,0,.504349,-.86343,.172491,.473983,-.232124,.168859,.957884,-.232124,0,.972655,.122013,-.496231,.859554,-.687979,-.362804,.628468,-.86343,-.0875576,.49675,-.86343,-.172521,.473983,-.232093,-.168889,.957884,-.232063,-.486404,.842341,.837275,-.418836,.351421,.252846,-.837855,.483749,-.727256,-.525773,.441145,-.687979,-.555925,.466445,-.863399,-.386425,.32429,-.86343,-.436842,.252235,-.863399,-.324259,.386486,-.232002,-.745109,.625263,-.232002,-.625202,.74514,.248207,-.916593,.313364,-.727226,-.644978,.234718,-.727256,-.675924,.119144,-.687979,-.681936,.248177,-.86343,-.473983,.172521,-.863399,-.504501,0,-.232093,-.914029,.332652,.837275,-.473464,-.273354,.252876,-.837855,-.483749,.248207,-.916593,-.313364,-.86343,-.474013,-.172521,-.86343,-.436842,-.252205,-.863399,-.496811,-.0875881,-.232032,-.957915,-.16892,-.727256,-.525803,-.441145,-.687979,-.555925,-.466445,0,.499954,-.866024,0,.34199,-.939695,0,-.34199,-.939665,0,-.939695,.34199,0,.939665,-.342051,-.0646992,-.937773,-.341136,305185e-10,.868068,.496414,-.018952,-.354778,-.934721,-.0470595,-.772668,-.633045,-.0563677,-.870113,-.489608,-.102268,-.932096,.347423,-.237098,-.746696,.621418,0,-.661397,-.750023,-305185e-10,-.78161,-.623707,-61037e-9,-.878109,-.478439,-305185e-10,-.947874,-.318552,0,-.930784,.365551,0,-.897275,.44142,.614032,.683523,.394635,.992615,.0716575,.0976287,.979308,.146672,-.139225,.979308,-.193915,.0574053,.992615,-.120396,-.013245,.958861,-.245766,-.141881,.979308,-.146702,-.139225,.251015,-.0967742,-.963103,.252907,0,-.967467,-.86346,-.252205,-.436811,-.232093,0,-.972686,-.232124,-.486343,-.842341,-.688009,.126011,-.714652,-.86346,.252174,-.436811,-.232093,.332713,-.913999,-.232124,.486435,-.84228,.837306,.418775,-.351421,-.707083,.612384,-.353526,-.688009,.466445,-.555895,-.86343,.436872,-.252174,-.863491,.324168,-.386334,-.232093,.842372,-.486312,-.232154,.625172,-.745109,-.727226,.644948,-.234748,-.687979,.681906,-.248207,-.863491,.504318,0,-.232154,.913999,-.332652,-.232215,.957884,-.168889,-.232185,.972655,0,.252907,.837855,.483718,-.707144,.612293,.353557,-.727287,.644887,.234748,-.863521,.473861,.17246,-.86343,.436811,.252205,-.863521,.496628,.0875576,-.232124,.842341,.486343,-.232246,.957854,.168889,-.727256,.343181,.594378,-.86343,.386425,.324259,-.232063,.745109,.625233,-.727256,.234748,.644948,-.863491,0,.504349,-.86346,-.0875576,.49675,-.232032,-.332713,.914029,-.86346,-.436781,.252174,-.863399,-.324229,.386456,-.232063,-.745109,.625233,-.232154,-.842341,.486343,-.232032,-.625202,.74514,-.232124,-.913999,.332682,-.232032,-.957915,.16892,-.86343,-.474013,-.172491,-.863399,-.49678,-.0875881,-.232093,-.913999,-.332682,-.232124,-.842372,-.486312,-.86346,-.386364,-.324198,-.86346,-.324198,-.386364,-.232124,-.745109,-.625202,-.232154,-.625202,-.745109,0,-.173589,.984802,0,-.939665,-.342051,0,.342021,.939665,0,.42259,-.906278,-.0646992,-.937742,-.341197,-.100681,-.935789,.33784,0,.345927,.938231,0,.503616,.863918,0,.645894,.76339,0,.868099,.496384,-.0376904,-.651723,-.757469,0,-.9888,-.149083,.979308,.146672,.139225,.958861,.245796,.141881,.614032,.683493,-.394604,.992615,.120365,-.013245,.979308,-.146702,.139225,.837336,0,-.546678,-.863491,0,-.504318,-.232063,-.332682,-.914029,-.232093,-.486312,-.842372,-.688009,.248177,-.681936,-.232093,.332682,-.913999,-.232124,.486373,-.842341,.837306,.418775,-.35139,.837306,.35139,-.418806,-.707053,.612384,-.353526,-.727226,.525803,-.441176,-.86346,.386364,-.324168,-.232154,.745109,-.625202,-.232185,.625172,-.745109,-.688009,.7257,0,-.86346,.496689,-.0875271,-.232154,.957884,-.168889,.837306,.513718,.186987,.837306,.473434,.273324,-.687979,.681936,.248177,-.86343,.436842,.252205,-.232185,.957884,.168859,.837306,.418806,.35139,.251015,.785668,.565355,-.707114,.612323,.353557,-.86343,.386425,.324229,-.86343,.0875881,.49675,-.86346,0,.504379,-.232124,0,.972686,-.727256,-.234718,.644948,-.687979,-.12598,.714682,-.863399,-.252235,.436872,-.232032,-.332713,.913999,.837306,-.418775,.351421,.837306,-.473434,.273354,-.863399,-.32429,.386456,-.232032,-.74514,.625233,-.232002,-.625233,.745109,-.863369,-.504532,0,-.232002,-.957915,.16892,-.231941,-.972716,0,.837306,-.473434,-.273354,-.86346,-.436811,-.252205,-.863369,-.496841,-.0875881,-.232063,-.913999,-.332713,-.232093,-.842341,-.486343,-.231971,-.957915,-.16895,.251015,-.785668,-.565386,-.727226,-.525803,-.441145,-.86343,-.324229,-.386395,-.232093,-.745109,-.625233,-.232063,-.625233,-.745109,0,.500046,-.865993,0,.766045,-.642781,0,-.499954,-.866024,0,.422559,-.906308,-.0278024,-.502304,-.864223,-.0828578,-.996551,-.00122074,-.135319,-.499954,.855373,0,.7687,.639607,0,.868068,.496414,0,.999969,-.00408948,0,.984069,-.177679,0,.938261,-.345897,-.0563372,-.870113,-.489608,-.277902,-.416272,.865719,.995666,.0464492,.0805078,.979308,.193976,.0574358,.992615,-.0717185,-.0976287,-.727226,-.34315,-.594409,-.687979,-.248207,-.681936,.121982,.496261,-.859554,-.86343,.252174,-.436842,-.232093,.486343,-.842341,.837306,.473434,-.273324,-.687979,.628437,-.362865,-.863491,.386364,-.324168,-.86343,.436842,-.252174,-.863491,.324137,-.386303,-.232154,.74514,-.625172,-.232215,.625172,-.745109,.837306,.513749,-.186956,-.86346,.473952,-.17246,-.86346,.504349,0,-.232154,.972655,0,.837306,.513749,.186956,-.863491,.473891,.172491,-.86343,.436842,.252235,.251015,.785699,.565355,-.86346,.324198,.386364,-.86346,.252174,.436811,-.232124,.625172,.745109,-.232124,.486343,.842341,.837306,.186956,.513749,-.86343,-.0875881,.49675,-.86343,-.172491,.473983,-.86346,-.252174,.436811,-.232124,-.486373,.842311,-.86343,-.386395,.324229,-.86346,-.324198,.386395,-.232093,-.745109,.625233,-.232124,-.625202,.745109,-.727256,-.644948,.234748,-.86346,-.473983,.172491,-.863369,-.496872,.0875881,-.232093,-.913999,.332682,-.231971,-.957915,.168889,.251015,-.882473,-.397748,-.863369,-.496872,-.0875881,-.232063,-.913999,-.332682,-.231971,-.957915,-.16892,-.863491,-.386334,-.324168,-.863491,-.324168,-.386364,-.232215,-.745109,-.625202,0,-.939665,.342051,0,.939695,-.34199,0,.87936,-.476119,-.0917997,-.980956,.171056,-.0956145,-.36845,.924711,0,.938261,-.345866,0,.906278,-.42262,-.145451,-.868801,.473251,-.237098,-.746727,.621387,-.254128,-.625751,.737449,0,-.947874,-.318552,0,-.999664,.0248726,.68569,.694205,-.218879,.68569,.20365,-.698782,.68569,.350108,.638142,-.72982,.651967,-.205542,-.72982,.679525,-.0744041,-.72982,.68099,.0595721,-.72982,.606342,.315653,-.72982,.533128,.427869,-.72982,-.65627,-.19129,-.72982,-.606342,-.315653,-.72982,-.599322,.328806,-.72982,-.651967,.205542,-.72982,-.427869,.533128,-.72982,-.523667,.439406,-.72982,.19129,-.65627,-.72982,.315653,-.606342,-.72982,.439406,.523667,-.999969,0,0,-.72982,-.68099,-.0595721,-.72982,.427869,-.533128,-.72982,.523667,-.439406,-.72982,-.315653,.606342,-.72982,-.533128,-.427869,-.72982,.599322,-.328806,-.72982,-.19129,.65627,-.72982,.0744041,.679525,-.72982,-.0595721,.68099,-.72982,.65627,.19129,-.72982,-.679525,.0744041,-.72982,-.439406,-.523667,-.72982,.205542,.651967,-.72982,.328806,.599322,-.72982,-.328806,-.599322,-.72982,-.205542,-.651967,-.72982,.0595721,-.68099,-.72982,-.0744041,-.679525],uvs:[[0,0,.59587,.490635,.595946,.508635,.593871,.508436,.593801,.490837,.477619,.588099,.460791,.581326,.46181,.579491,.478238,.586102,.445466,.427706,.46055,.417735,.461524,.419588,.44677,.429325,.495367,.591598,.495579,.589512,.585498,.456289,.59242,.472944,.590422,.473545,.583659,.457264,.422509,.455165,.432633,.44031,.434229,.441647,.424365,.456235,.531219,.587911,.513499,.591574,.51329,.589483,.530607,.585912,.562789,.42844,.575555,.441222,.573934,.442541,.561459,.430044,.411051,.490448,.414085,.472094,.416131,.472748,.413167,.490588,.562861,.570844,.547911,.580974,.54692,.579128,.561534,.569234,.531125,.411311,.54783,.418281,.546832,.420121,.530505,.413305,.414966,.52658,.411215,.508737,.413301,.508507,.416961,.525964,.585579,.54303,.575628,.558082,.574011,.556756,.58374,.542048,.432369,.558509,.422032,.543422,.423878,.542425,.433982,.55717,.495242,.407526,.513386,.407609,.513164,.409694,.495428,.40961,.59251,.526364,.590509,.525757,.445428,.571365,.446767,.569733,.477389,.410871,.47798,.412887,.590353,.508103,.587116,.524734,.58058,.522825,.583583,.507517,.463514,.576355,.449028,.566948,.453314,.561534,.466739,.570273,.463176,.42273,.478987,.416306,.480982,.422862,.466396,.428748,.587033,.474569,.590293,.491185,.583549,.491913,.580538,.476593,.436941,.443913,.448981,.432069,.453252,.437305,.442034,.448159,.512931,.585942,.495927,.585976,.496531,.579177,.512187,.579146,.571188,.444781,.580543,.458922,.574576,.462163,.565948,.449133,.419505,.473864,.427294,.457931,.433061,.461189,.424169,.475313,.545236,.576001,.529564,.582525,.527511,.576032,.541953,.570022,.545144,.423243,.559207,.432768,.55492,.438047,.541953,.429276,.416853,.508118,.416786,.490871,.423377,.491397,.423684,.507322,.571266,.554513,.559283,.566507,.554911,.5613,.565956,.550246,.427015,.540721,.420354,.52491,.426869,.522823,.433021,.537383,.512792,.413232,.529458,.416688,.527503,.423214,.512139,.42004,.580622,.540389,.574598,.537248,.436718,.554886,.441933,.550437,.495751,.413144,.496431,.419936,.479268,.582711,.481182,.576173,.907034,.460211,.90692,.538987,.883215,.536691,.883383,.462542,.388153,.891836,.313392,.861929,.324599,.840298,.39483,.868546,.246343,.180956,.314038,.137313,.325183,.158901,.26154,.199931,.467116,.906156,.469094,.882014,.861993,.309846,.891718,.382917,.868836,.389786,.840946,.320968,.142808,.304247,.1886,.237432,.207374,.253163,.164271,.315915,.625085,.888148,.547104,.904764,.544359,.880722,.617766,.865288,.763236,.187434,.818522,.243965,.799906,.259011,.747928,.205745,.0950232,.458558,.111335,.378996,.134814,.386241,.119375,.46099,.763414,.811837,.698001,.856601,.686383,.835554,.74804,.79357,.624981,.111316,.697853,.142782,.686292,.163833,.617741,.134159,.110978,.61935,.0950555,.539754,.119503,.537326,.134197,.612221,.86203,.689328,.818628,.755261,.79998,.740259,.840959,.67828,.187907,.761268,.142384,.694167,.164109,.682376,.206641,.745593,.467421,.0934044,.54719,.0947716,.544492,.118749,.469447,.117408,.891653,.616297,.868765,.609469,.245778,.81778,.261097,.79868,.388752,.107879,.395459,.131215,.948708,.456056,.948641,.542956,.924238,.540692,.92434,.458541,.376473,.932982,.293739,.900114,.305178,.877742,.383244,.908889,.219505,.147452,.294384,.0992665,.305927,.121501,.235247,.167026,.463763,.948692,.46566,.923804,.899061,.290211,.931902,.37078,.90842,.377929,.877407,.301742,.104885,.283661,.155518,.209765,.174906,.225912,.127103,.295661,.638096,.928422,.552076,.947021,.549102,.922314,.630423,.904884,.790195,.155143,.851201,.217481,.832125,.233009,.774467,.174063,.0520011,.454315,.0699635,.366297,.0941861,.373674,.0771836,.456741,.790587,.843973,.718536,.893536,.706471,.871967,.774646,.825217,.637728,.0710359,.718137,.105759,.70632,.127434,.63032,.0946116,.0696804,.632154,.051987,.544127,.0771809,.54151,.0938286,.624604,.899195,.708727,.851468,.781535,.832226,.766219,.877432,.697434,.154905,.789014,.104465,.714887,.126623,.702709,.174176,.772731,.463845,.0510668,.551902,.0526074,.549196,.0772724,.465986,.0758294,.931883,.628206,.908344,.621297,.218912,.851472,.23458,.831722,.376937,.0668389,.383894,.0908301,.432628,.634206,.460322,.645477,.432537,.364859,.40757,.381281,.420512,.78027,.476756,.791086,.469515,.876941,.39625,.863647,.649389,.455724,.638083,.428282,.38625,.402292,.369458,.427115,.519496,.651001,.548706,.645024,.621669,.403537,.600744,.382432,.357829,.454884,.351883,.484399,.57614,.633486,.600772,.616834,.576103,.365769,.548663,.3542,.351879,.51445,.357811,.54391,.621669,.59573,.63816,.571046,.36939,.571639,.386206,.596545,.51947,.348165,.489621,.347932,.64944,.54359,.655188,.514447,.407539,.617673,.46029,.353636,.793494,.471221,.782782,.415564,.86403,.391222,.878401,.463024,.319062,.271735,.277668,.311984,.211308,.256468,.264734,.20393,.534318,.790687,.543796,.875676,.761103,.363106,.729994,.315561,.795994,.262164,.836509,.323301,.245277,.359957,.222515,.413301,.139736,.387769,.168783,.31838,.590358,.778684,.642998,.75646,.683953,.83113,.616239,.860469,.689931,.275165,.642966,.242907,.683859,.168249,.744696,.209595,.211189,.470254,.21092,.528327,.124635,.536827,.124499,.461514,.690007,.724179,.730098,.683771,.796071,.737103,.744812,.789714,.222538,.585215,.244749,.638816,.168635,.679924,.139123,.610712,.590391,.2207,.534487,.20869,.54392,.123781,.616208,.138967,.761259,.636199,.782999,.583672,.863961,.60803,.836526,.675942,.27741,.686726,.318526,.727529,.264315,.794679,.21059,.742307,.477173,.208178,.420618,.218468,.396863,.136113,.469865,.122463,.96204,.454713,.961981,.544209,.373157,.0537165,.462697,.0375134,.911094,.714913,.944739,.631991,.98017,.642495,.943884,.732024,.210336,.86227,.144347,.797927,.362836,.017466,.459636,999263e-10,.186614,.89206,.115147,.822507,.553403,.0391271,.641802,.058143,.998825,.451084,.998764,.547737,.0923259,.721542,.0564538,.636273,.288092,.0870861,.210902,.136715,.187224,.106991,.270819,.0534032,.861978,.789911,.799302,.854239,.287468,.912356,.372758,.946178,.362465,.982614,.270112,.946145,.0381991,.545547,.0382068,.452971,.944738,.366888,.910914,.283918,.943647,.266633,.980164,.356232,.724613,.0939226,.798814,.144805,.462725,.962309,.459825,.9999,.725125,.905328,.642289,.941304,.144924,.200913,.0927246,.27707,.0591711,.25878,.115727,.176382,.0567136,.362244,.861636,.209009,.82266,.116346,.890474,.185712,.553699,.960527,.653826,.976859,.558147,.997801,100922e-9,.449183,.0201322,.350962,.653137,.0225996,.742564,.0613175,.823309,.882587,.743265,.937879,.0198928,.64759,999263e-10,.5494,.890933,.813053,.55765,.00194356,.0587625,.739876,.655155,.484821,.326972,.835762,.367147,.759084,.327513,.163445,.367085,.240138,.421576,.77663,.477106,.787267,.793725,.527749,.878231,.536192,.789768,.471586,.779118,.416663,.321449,.274704,.280658,.314484,.533899,.786838,.757782,.36486,.727015,.317973,.248642,.361787,.226253,.414456,.589221,.775074,.641151,.753083,.687518,.278055,.641121,.24628,.215009,.470638,.214816,.527942,.687592,.721287,.727117,.681356,.226208,.584091,.248189,.636958,.589256,.224303,.534063,.212526,.757934,.634442,.779325,.582572,.280357,.684276,.320979,.72449,.477499,.211959,.421702,.222197,.368917,.755662,.37067,.752279,.422634,.77301,.368874,.243545,.370642,.246915,.323824,.277655,.775511,.417744,.75448,.366604,.283602,.316943,.251988,.363606,.533488,.78305,.588092,.771486,.724082,.320348,.68512,.28093,.229931,.415591,.218806,.471019,.639334,.749758,.685192,.71841,.639305,.249601,.588127,.227885,.218649,.527564,.229856,.582974,.724183,.678979,.754629,.632696,.251574,.635129,.283286,.681841,.533647,.216302,.477824,.215719,.775709,.58149,.786219,.527049,.789952,.527397,.323393,.721498,.42277,.225867,.786062,.471949,.430284,.746913,.479909,.756411,.477453,.78349,.759339,.474561,.74976,.425473,.340931,.2989,.3046,.334469,.530563,.756048,.730701,.379173,.703151,.33731,.276077,.376676,.256114,.423659,.579983,.745649,.626381,.726028,.66786,.301639,.626357,.273308,.246095,.473767,.245967,.524873,.667922,.69769,.703245,.662008,.256087,.574958,.275709,.622104,.580017,.253684,.530696,.243252,.730839,.620115,.749958,.573759,.304356,.664342,.340598,.700205,.480183,.242769,.430384,.252008,.383281,.728066,.383289,.271074,.759427,.524493,.431318,.743393,.480245,.752741,.755731,.474915,.746253,.426526,.343242,.301766,.30746,.336852,.530169,.752369,.727489,.380872,.700301,.339621,.279326,.37844,.259683,.424759,.57889,.742158,.624618,.722795,.665529,.304437,.624595,.276538,.249782,.474135,.249686,.524505,.66559,.69489,.700393,.659695,.259629,.573875,.278995,.620331,.578923,.257169,.530296,.246922,.727624,.618413,.746443,.572708,.307202,.661979,.342942,.697305,.480503,.246423,.431426,.255569,.384992,.724785,.386692,.721524,.432347,.739893,.385006,.274347,.386713,.2776,.345539,.304614,.742768,.427573,.724296,.382561,.310302,.33922,.282558,.380194,.529778,.748713,.577804,.738687,.697469,.341917,.663212,.307219,.263228,.425852,.253447,.474502,.622867,.719582,.663271,.692105,.622844,.279747,.577835,.260634,.253382,.52414,.26315,.572798,.697558,.657396,.724426,.616721,.282259,.618568,.310031,.65963,.529898,.250569,.480822,.250056,.742951,.571663,.752186,.523809,.755796,.52415,.345271,.694423,.432461,.259107,.752143,.475266,.440088,.71362,.483052,.721873,.48058,.749093,.725229,.477916,.716878,.435363,.362776,.325966,.331363,.356762,.526884,.72159,.700342,.39524,.676435,.358995,.306638,.393279,.289609,.433995,.569679,.712661,.609874,.69571,.645845,.328098,.609848,.303595,.280896,.477273,.280782,.521448,.645894,.671214,.676511,.640312,.289512,.564752,.306478,.605514,.569697,.286629,.526971,.277662,.700425,.604026,.716945,.563884,.331223,.642054,.36255,.673077,.483237,.277284,.440142,.285316,.399425,.697232,.399434,.301889,.725319,.521241,.441021,.710461,.483356,.71858,.721985,.478235,.713728,.436312,.364851,.328536,.333928,.358899,.526535,.71829,.697457,.396768,.673877,.361072,.309558,.394856,.292806,.434974,.568702,.709525,.608296,.692806,.643752,.330614,.608269,.306497,.2842,.477605,.284114,.521119,.643801,.668696,.673951,.638234,.292688,.563781,.309423,.603926,.568718,.289761,.526616,.280956,.697536,.602498,.713793,.562936,.333776,.639938,.364654,.67048,.483528,.280564,.44108,.288508,.400965,.694291,.402496,.691369,.441949,.70732,.400977,.304824,.402512,.307741,.366914,.331092,.710596,.437255,.694588,.398289,.336477,.361022,.312461,.396423,.526188,.715009,.567731,.706407,.671341,.36313,.641664,.333123,.295984,.435946,.287484,.477935,.606726,.689918,.64172,.666192,.606699,.309381,.567745,.292875,.287425,.520792,.295844,.562816,.671406,.636168,.694664,.600978,.31235,.602348,.336315,.637833,.526263,.284231,.483818,.283825,.710659,.561995,.718807,.520614,.722053,.520926,.366744,.6679,.442013,.291679,.718758,.478554,.449716,.681092,.486153,.688135,.483659,.715307,.691839,.481208,.684723,.445057,.384133,.35235,.357536,.378498,.523336,.687935,.670654,.410985,.650326,.380207,.336643,.409462,.322139,.443962,.559651,.680401,.593778,.666058,.62432,.353998,.593748,.333222,.314795,.480679,.314716,.518114,.624375,.645297,.650405,.619095,.322125,.554803,.336497,.589346,.559646,.318858,.523375,.311297,.670667,.588268,.684708,.554217,.357463,.62032,.383997,.646636,.486287,.311067,.449775,.317908,.415243,.667151,.415201,.331844,.691932,.518026,.450708,.677752,.486479,.684652,.688401,.481548,.681386,.446064,.386331,.355064,.36025,.380752,.522971,.684443,.667599,.412606,.647618,.382409,.339727,.411126,.32552,.444997,.558621,.677081,.59211,.662981,.622108,.356664,.592079,.336296,.318286,.481027,.318236,.517765,.622163,.642628,.647696,.616894,.325479,.553778,.339609,.587669,.558614,.322174,.523006,.314782,.66761,.586651,.681373,.553208,.360162,.618085,.386223,.643894,.4866,.314535,.450764,.32128,.416877,.664044,.4185,.660956,.451695,.674432,.416833,.334952,.418456,.33804,.388518,.357763,.678068,.447066,.664561,.414219,.362948,.382992,.342793,.41278,.522609,.680971,.557598,.673781,.644927,.384599,.619907,.359316,.328882,.446026,.321756,.481373,.590452,.659923,.619963,.639975,.590421,.339352,.557588,.325471,.321734,.517418,.328813,.552758,.645003,.614707,.664569,.585042,.342702,.586002,.362845,.615863,.522639,.318248,.486912,.317983,.678056,.552206,.685034,.517355,.688473,.517689,.388436,.641168,.451747,.324632,.684982,.481887,.458649,.651072,.489056,.656995,.486805,.681189,.660928,.484251,.654998,.454029,.403888,.376733,.381699,.398515,.520102,.656868,.643212,.425556,.626216,.399831,.364288,.424331,.35215,.453148,.550426,.650595,.578939,.638655,.604455,.377953,.578902,.360602,.346032,.48382,.345983,.51504,.604484,.621312,.626211,.599437,.352193,.545631,.364175,.574449,.550392,.348633,.520089,.342308,.643292,.573779,.655057,.545279,.381678,.600287,.403801,.622269,.489081,.34211,.458611,.347978,.429879,.639413,.429798,.359656,.660995,.515003,.459489,.648263,.489336,.654063,.65803,.484537,.652185,.454879,.405736,.379016,.383982,.400409,.519798,.653926,.640638,.426924,.623936,.401689,.366883,.425729,.354998,.454019,.549562,.647799,.577535,.636063,.602592,.380201,.577498,.363193,.34897,.484111,.348941,.514744,.602621,.619064,.623933,.597579,.355014,.544767,.36679,.573039,.549524,.351428,.519778,.345246,.640716,.572407,.65224,.544432,.383951,.598408,.405676,.619964,.489352,.345033,.459453,.350815,.431259,.636801,.431172,.362267,.658082,.514723,.489616,.651152]]}},VBzb:function(e,t){e.exports="/media/CodersCodeAPI.png"},W2nU:function(e,t){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function i(e){if(u===setTimeout)return setTimeout(e,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(e,0);try{return u(e,0)}catch(t){try{return u.call(null,e,0)}catch(t){return u.call(this,e,0)}}}function a(e){if(h===clearTimeout)return clearTimeout(e);if((h===r||!h)&&clearTimeout)return h=clearTimeout,clearTimeout(e);try{return h(e)}catch(t){try{return h.call(null,e)}catch(t){return h.call(this,e)}}}function o(){m&&d&&(m=!1,d.length?f=d.concat(f):v=-1,f.length&&s())}function s(){if(!m){var e=i(o);m=!0;for(var t=f.length;t;){for(d=f,f=[];++v<t;)d&&d[v].run();v=-1,t=f.length}d=null,m=!1,a(e)}}function l(e,t){this.fun=e,this.array=t}function c(){}var u,h,p=e.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:n}catch(e){u=n}try{h="function"==typeof clearTimeout?clearTimeout:r}catch(e){h=r}}();var d,f=[],m=!1,v=-1;p.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];f.push(new l(e,t)),1!==f.length||m||i(s)},l.prototype.run=function(){this.fun.apply(null,this.array)},p.title="browser",p.browser=!0,p.env={},p.argv=[],p.version="",p.versions={},p.on=c,p.addListener=c,p.once=c,p.off=c,p.removeListener=c,p.removeAllListeners=c,p.emit=c,p.prependListener=c,p.prependOnceListener=c,p.listeners=function(e){return[]},p.binding=function(e){throw new Error("process.binding is not supported")},p.cwd=function(){return"/"},p.chdir=function(e){throw new Error("process.chdir is not supported")},p.umask=function(){return 0}},XmWM:function(e,t,n){"use strict";function r(e){this.defaults=e,this.interceptors={request:new o,response:new o}}var i=n("KCLY"),a=n("cGG2"),o=n("fuGk"),s=n("xLtR");r.prototype.request=function(e){"string"==typeof e&&(e=a.merge({url:arguments[0]},arguments[1])),e=a.merge(i,this.defaults,{method:"get"},e),e.method=e.method.toLowerCase();var t=[s,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)n=n.then(t.shift(),t.shift());return n},a.forEach(["delete","get","head","options"],function(e){r.prototype[e]=function(t,n){return this.request(a.merge(n||{},{method:e,url:t}))}}),a.forEach(["post","put","patch"],function(e){r.prototype[e]=function(t,n,r){return this.request(a.merge(r||{},{method:e,url:t,data:n}))}}),e.exports=r},Xxa5:function(e,t,n){e.exports=n("jyFz")},cGG2:function(e,t,n){"use strict";function r(e){return"[object Array]"===M.call(e)}function i(e){return"[object ArrayBuffer]"===M.call(e)}function a(e){return"undefined"!=typeof FormData&&e instanceof FormData}function o(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer}function s(e){return"string"==typeof e}function l(e){return"number"==typeof e}function c(e){return void 0===e}function u(e){return null!==e&&"object"==typeof e}function h(e){return"[object Date]"===M.call(e)}function p(e){return"[object File]"===M.call(e)}function d(e){return"[object Blob]"===M.call(e)}function f(e){return"[object Function]"===M.call(e)}function m(e){return u(e)&&f(e.pipe)}function v(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams}function g(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}function y(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)}function b(e,t){if(null!==e&&void 0!==e)if("object"!=typeof e&&(e=[e]),r(e))for(var n=0,i=e.length;n<i;n++)t.call(null,e[n],n,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.call(null,e[a],a,e)}function x(){function e(e,n){"object"==typeof t[n]&&"object"==typeof e?t[n]=x(t[n],e):t[n]=e}for(var t={},n=0,r=arguments.length;n<r;n++)b(arguments[n],e);return t}function w(e,t,n){return b(t,function(t,r){e[r]=n&&"function"==typeof t?_(t,n):t}),e}var _=n("JP+z"),E=n("Re3r"),M=Object.prototype.toString;e.exports={isArray:r,isArrayBuffer:i,isBuffer:E,isFormData:a,isArrayBufferView:o,isString:s,isNumber:l,isObject:u,isUndefined:c,isDate:h,isFile:p,isBlob:d,isFunction:f,isStream:m,isURLSearchParams:v,isStandardBrowserEnv:y,forEach:b,merge:x,extend:w,trim:g}},cWxy:function(e,t,n){"use strict";function r(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var n=this;e(function(e){n.reason||(n.reason=new i(e),t(n.reason))})}var i=n("dVOP");r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.source=function(){var e;return{token:new r(function(t){e=t}),cancel:e}},e.exports=r},cilB:function(e,t){},czSA:function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),i={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=i},dIwP:function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},dVJ4:function(e,t){e.exports="/media/mypicture.jpg"},dVOP:function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},"e6+Q":function(e,t,n){"use strict";function r(e){return function(){return e}}var i=function(){};i.thatReturns=r,i.thatReturnsFalse=r(!1),i.thatReturnsTrue=r(!0),i.thatReturnsNull=r(null),i.thatReturnsThis=function(){return this},i.thatReturnsArgument=function(e){return e},e.exports=i},f2RQ:function(e,t,n){"use strict";function r(e){var t=e?e.ownerDocument||e:document,n=t.defaultView||window;return!(!e||!("function"==typeof n.Node?e instanceof n.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}e.exports=r},fuGk:function(e,t,n){"use strict";function r(){this.handlers=[]}var i=n("cGG2");r.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},r.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},r.prototype.forEach=function(e){i.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=r},gzqE:function(e,t){e.exports="/media/arrow.svg"},"hBB+":function(e,t){},"hY+r":function(e,t){e.exports="/media/In-White-128px-TM.png"},jyFz:function(e,t,n){var r=function(){return this}()||Function("return this")(),i=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime")>=0,a=i&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,e.exports=n("SldL"),i)r.regeneratorRuntime=a;else try{delete r.regeneratorRuntime}catch(e){r.regeneratorRuntime=void 0}},m4df:function(e,t){e.exports="/media/earth_atmos_4096.jpg"},mgLR:function(e,t){e.exports="/media/GitHub-Mark-120px-plus.png"},mtWM:function(e,t,n){e.exports=n("tIFN")},"o+pC":function(e,t,n){"use strict";var r=n("e6+Q"),i={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};e.exports=i},o7mC:function(e,t){e.exports="/media/FloorsCheckerboard_S_Normal.jpg"},oJlt:function(e,t,n){"use strict";var r=n("cGG2"),i=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,a,o={};return e?(r.forEach(e.split("\n"),function(e){if(a=e.indexOf(":"),t=r.trim(e.substr(0,a)).toLowerCase(),n=r.trim(e.substr(a+1)),t){if(o[t]&&i.indexOf(t)>=0)return;o[t]="set-cookie"===t?(o[t]?o[t]:[]).concat([n]):o[t]?o[t]+", "+n:n}}),o):o}},oiRW:function(e,t){e.exports="/media/flying home.mp3"},p1b6:function(e,t,n){"use strict";var r=n("cGG2");e.exports=r.isStandardBrowserEnv()?function(){return{write:function(e,t,n,i,a,o){var s=[];s.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),r.isString(i)&&s.push("path="+i),r.isString(a)&&s.push("domain="+a),!0===o&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}()},pBtG:function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},pxG4:function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},qRfI:function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},qbJb:function(e,t){e.exports="/media/CodersCodeClient.png"},sd8b:function(e,t){e.exports="/media/closeIcon.png"},sgb3:function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!==e&&t!==t}function i(e,t){if(r(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(var o=0;o<n.length;o++)if(!a.call(t,n[o])||!r(e[n[o]],t[n[o]]))return!1;return!0}var a=Object.prototype.hasOwnProperty;e.exports=i},"sjB+":function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function h(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function p(){}function d(e,t){this.x=e||0,this.y=t||0}function f(e,t,n,r,i,a,o,s,l,c){Object.defineProperty(this,"id",{value:Vs++}),this.uuid=Hs.generateUUID(),this.name="",this.image=void 0!==e?e:f.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:f.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:qo,this.wrapT=void 0!==r?r:qo,this.magFilter=void 0!==i?i:Qo,this.minFilter=void 0!==a?a:es,this.anisotropy=void 0!==l?l:1,this.format=void 0!==o?o:ms,this.type=void 0!==s?s:ts,this.offset=new d(0,0),this.repeat=new d(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==c?c:Ns,this.version=0,this.onUpdate=null}function m(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1}function v(e,t,n){this.uuid=Hs.generateUUID(),this.width=e,this.height=t,this.scissor=new m(0,0,e,t),this.scissorTest=!1,this.viewport=new m(0,0,e,t),n=n||{},void 0===n.minFilter&&(n.minFilter=Qo),this.texture=new f(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0===n.stencilBuffer||n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function g(e,t,n){v.call(this,e,t,n),this.activeCubeFace=0,this.activeMipMapLevel=0}function y(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==r?r:1}function b(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}function x(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function w(e,t,n,r,i,a,o,s,l,c,u,h){f.call(this,null,a,o,s,l,c,r,i,u,h),this.image={data:e,width:t,height:n},this.magFilter=void 0!==l?l:Zo,this.minFilter=void 0!==c?c:Zo,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function _(e,t,n,r,i,a,o,s,l,c){e=void 0!==e?e:[],t=void 0!==t?t:zo,f.call(this,e,t,n,r,i,a,o,s,l,c),this.flipY=!1}function E(){this.seq=[],this.map={}}function M(e,t,n){var r=e[0];if(r<=0||r>0)return e;var i=t*n,a=qs[i];if(void 0===a&&(a=new Float32Array(i),qs[i]=a),0!==t){r.toArray(a,0);for(var o=1,s=0;o!==t;++o)s+=n,e[o].toArray(a,s)}return a}function T(e,t){var n=Ys[t];void 0===n&&(n=new Int32Array(t),Ys[t]=n);for(var r=0;r!==t;++r)n[r]=e.allocTextureUnit();return n}function S(e,t){e.uniform1f(this.addr,t)}function A(e,t){e.uniform1i(this.addr,t)}function C(e,t){void 0===t.x?e.uniform2fv(this.addr,t):e.uniform2f(this.addr,t.x,t.y)}function P(e,t){void 0!==t.x?e.uniform3f(this.addr,t.x,t.y,t.z):void 0!==t.r?e.uniform3f(this.addr,t.r,t.g,t.b):e.uniform3fv(this.addr,t)}function L(e,t){void 0===t.x?e.uniform4fv(this.addr,t):e.uniform4f(this.addr,t.x,t.y,t.z,t.w)}function R(e,t){e.uniformMatrix2fv(this.addr,!1,t.elements||t)}function O(e,t){void 0===t.elements?e.uniformMatrix3fv(this.addr,!1,t):(Ks.set(t.elements),e.uniformMatrix3fv(this.addr,!1,Ks))}function I(e,t){void 0===t.elements?e.uniformMatrix4fv(this.addr,!1,t):(Zs.set(t.elements),e.uniformMatrix4fv(this.addr,!1,Zs))}function N(e,t,n){var r=n.allocTextureUnit();e.uniform1i(this.addr,r),n.setTexture2D(t||Ws,r)}function k(e,t,n){var r=n.allocTextureUnit();e.uniform1i(this.addr,r),n.setTextureCube(t||Xs,r)}function D(e,t){e.uniform2iv(this.addr,t)}function U(e,t){e.uniform3iv(this.addr,t)}function F(e,t){e.uniform4iv(this.addr,t)}function z(e){switch(e){case 5126:return S;case 35664:return C;case 35665:return P;case 35666:return L;case 35674:return R;case 35675:return O;case 35676:return I;case 35678:case 36198:return N;case 35680:return k;case 5124:case 35670:return A;case 35667:case 35671:return D;case 35668:case 35672:return U;case 35669:case 35673:return F}}function B(e,t){e.uniform1fv(this.addr,t)}function j(e,t){e.uniform1iv(this.addr,t)}function G(e,t){e.uniform2fv(this.addr,M(t,this.size,2))}function H(e,t){e.uniform3fv(this.addr,M(t,this.size,3))}function V(e,t){e.uniform4fv(this.addr,M(t,this.size,4))}function W(e,t){e.uniformMatrix2fv(this.addr,!1,M(t,this.size,4))}function X(e,t){e.uniformMatrix3fv(this.addr,!1,M(t,this.size,9))}function q(e,t){e.uniformMatrix4fv(this.addr,!1,M(t,this.size,16))}function Y(e,t,n){var r=t.length,i=T(n,r);e.uniform1iv(this.addr,i);for(var a=0;a!==r;++a)n.setTexture2D(t[a]||Ws,i[a])}function Z(e,t,n){var r=t.length,i=T(n,r);e.uniform1iv(this.addr,i);for(var a=0;a!==r;++a)n.setTextureCube(t[a]||Xs,i[a])}function K(e){switch(e){case 5126:return B;case 35664:return G;case 35665:return H;case 35666:return V;case 35674:return W;case 35675:return X;case 35676:return q;case 35678:return Y;case 35680:return Z;case 5124:case 35670:return j;case 35667:case 35671:return D;case 35668:case 35672:return U;case 35669:case 35673:return F}}function J(e,t,n){this.id=e,this.addr=n,this.setValue=z(t.type)}function Q(e,t,n){this.id=e,this.addr=n,this.size=t.size,this.setValue=K(t.type)}function $(e){this.id=e,E.call(this)}function ee(e,t){e.seq.push(t),e.map[t.id]=t}function te(e,t,n){var r=e.name,i=r.length;for(Js.lastIndex=0;;){var a=Js.exec(r),o=Js.lastIndex,s=a[1],l="]"===a[2],c=a[3];if(l&&(s|=0),void 0===c||"["===c&&o+2===i){ee(n,void 0===c?new J(s,e,t):new Q(s,e,t));break}var u=n.map,h=u[s];void 0===h&&(h=new $(s),ee(n,h)),n=h}}function ne(e,t,n){E.call(this),this.renderer=n;for(var r=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),i=0;i<r;++i){var a=e.getActiveUniform(t,i),o=a.name;te(a,e.getUniformLocation(t,o),this)}}function re(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}function ie(e,t){this.min=void 0!==e?e:new d(1/0,1/0),this.max=void 0!==t?t:new d(-1/0,-1/0)}function ae(e,t){function n(){var e=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),t=new Uint16Array([0,1,2,0,2,3]);i=p.createBuffer(),a=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,i),p.bufferData(p.ARRAY_BUFFER,e,p.STATIC_DRAW),p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,a),p.bufferData(p.ELEMENT_ARRAY_BUFFER,t,p.STATIC_DRAW),u=p.createTexture(),h=p.createTexture(),f.bindTexture(p.TEXTURE_2D,u),p.texImage2D(p.TEXTURE_2D,0,p.RGB,16,16,0,p.RGB,p.UNSIGNED_BYTE,null),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST),f.bindTexture(p.TEXTURE_2D,h),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,16,16,0,p.RGBA,p.UNSIGNED_BYTE,null),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST),o={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},s=r(o),l={vertex:p.getAttribLocation(s,"position"),uv:p.getAttribLocation(s,"uv")},c={renderType:p.getUniformLocation(s,"renderType"),map:p.getUniformLocation(s,"map"),occlusionMap:p.getUniformLocation(s,"occlusionMap"),opacity:p.getUniformLocation(s,"opacity"),color:p.getUniformLocation(s,"color"),scale:p.getUniformLocation(s,"scale"),rotation:p.getUniformLocation(s,"rotation"),screenPosition:p.getUniformLocation(s,"screenPosition")}}function r(t){var n=p.createProgram(),r=p.createShader(p.FRAGMENT_SHADER),i=p.createShader(p.VERTEX_SHADER),a="precision "+e.getPrecision()+" float;\n";return p.shaderSource(r,a+t.fragmentShader),p.shaderSource(i,a+t.vertexShader),p.compileShader(r),p.compileShader(i),p.attachShader(n,r),p.attachShader(n,i),p.linkProgram(n),n}var i,a,o,s,l,c,u,h,p=e.context,f=e.state;this.render=function(r,o,m){if(0!==t.length){var v=new b,g=m.w/m.z,y=.5*m.z,x=.5*m.w,w=16/m.w,_=new d(w*g,w),E=new b(1,1,0),M=new d(1,1),T=new ie;T.min.set(m.x,m.y),T.max.set(m.x+(m.z-16),m.y+(m.w-16)),void 0===s&&n(),p.useProgram(s),f.initAttributes(),f.enableAttribute(l.vertex),f.enableAttribute(l.uv),f.disableUnusedAttributes(),p.uniform1i(c.occlusionMap,0),p.uniform1i(c.map,1),p.bindBuffer(p.ARRAY_BUFFER,i),p.vertexAttribPointer(l.vertex,2,p.FLOAT,!1,16,0),p.vertexAttribPointer(l.uv,2,p.FLOAT,!1,16,8),p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,a),f.disable(p.CULL_FACE),f.buffers.depth.setMask(!1);for(var S=0,A=t.length;S<A;S++){w=16/m.w,_.set(w*g,w);var C=t[S];if(v.set(C.matrixWorld.elements[12],C.matrixWorld.elements[13],C.matrixWorld.elements[14]),v.applyMatrix4(o.matrixWorldInverse),v.applyMatrix4(o.projectionMatrix),E.copy(v),M.x=m.x+E.x*y+y-8,M.y=m.y+E.y*x+x-8,!0===T.containsPoint(M)){f.activeTexture(p.TEXTURE0),f.bindTexture(p.TEXTURE_2D,null),f.activeTexture(p.TEXTURE1),f.bindTexture(p.TEXTURE_2D,u),p.copyTexImage2D(p.TEXTURE_2D,0,p.RGB,M.x,M.y,16,16,0),p.uniform1i(c.renderType,0),p.uniform2f(c.scale,_.x,_.y),p.uniform3f(c.screenPosition,E.x,E.y,E.z),f.disable(p.BLEND),f.enable(p.DEPTH_TEST),p.drawElements(p.TRIANGLES,6,p.UNSIGNED_SHORT,0),f.activeTexture(p.TEXTURE0),f.bindTexture(p.TEXTURE_2D,h),p.copyTexImage2D(p.TEXTURE_2D,0,p.RGBA,M.x,M.y,16,16,0),p.uniform1i(c.renderType,1),f.disable(p.DEPTH_TEST),f.activeTexture(p.TEXTURE1),f.bindTexture(p.TEXTURE_2D,u),p.drawElements(p.TRIANGLES,6,p.UNSIGNED_SHORT,0),C.positionScreen.copy(E),C.customUpdateCallback?C.customUpdateCallback(C):C.updateLensFlares(),p.uniform1i(c.renderType,2),f.enable(p.BLEND);for(var P=0,L=C.lensFlares.length;P<L;P++){var R=C.lensFlares[P];R.opacity>.001&&R.scale>.001&&(E.x=R.x,E.y=R.y,E.z=R.z,w=R.size*R.scale/m.w,_.x=w*g,_.y=w,p.uniform3f(c.screenPosition,E.x,E.y,E.z),p.uniform2f(c.scale,_.x,_.y),p.uniform1f(c.rotation,R.rotation),p.uniform1f(c.opacity,R.opacity),p.uniform3f(c.color,R.color.r,R.color.g,R.color.b),f.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst),e.setTexture2D(R.texture,1),p.drawElements(p.TRIANGLES,6,p.UNSIGNED_SHORT,0))}}}f.enable(p.CULL_FACE),f.enable(p.DEPTH_TEST),f.buffers.depth.setMask(!0),e.resetGLState()}}}function oe(e,t){function n(){var e=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),t=new Uint16Array([0,1,2,0,2,3]);a=h.createBuffer(),o=h.createBuffer(),h.bindBuffer(h.ARRAY_BUFFER,a),h.bufferData(h.ARRAY_BUFFER,e,h.STATIC_DRAW),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,o),h.bufferData(h.ELEMENT_ARRAY_BUFFER,t,h.STATIC_DRAW),s=r(),l={position:h.getAttribLocation(s,"position"),uv:h.getAttribLocation(s,"uv")},c={uvOffset:h.getUniformLocation(s,"uvOffset"),uvScale:h.getUniformLocation(s,"uvScale"),rotation:h.getUniformLocation(s,"rotation"),scale:h.getUniformLocation(s,"scale"),color:h.getUniformLocation(s,"color"),map:h.getUniformLocation(s,"map"),opacity:h.getUniformLocation(s,"opacity"),modelViewMatrix:h.getUniformLocation(s,"modelViewMatrix"),projectionMatrix:h.getUniformLocation(s,"projectionMatrix"),fogType:h.getUniformLocation(s,"fogType"),fogDensity:h.getUniformLocation(s,"fogDensity"),fogNear:h.getUniformLocation(s,"fogNear"),fogFar:h.getUniformLocation(s,"fogFar"),fogColor:h.getUniformLocation(s,"fogColor"),alphaTest:h.getUniformLocation(s,"alphaTest")};var n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=8,n.height=8;var i=n.getContext("2d");i.fillStyle="white",i.fillRect(0,0,8,8),u=new f(n),u.needsUpdate=!0}function r(){var t=h.createProgram(),n=h.createShader(h.VERTEX_SHADER),r=h.createShader(h.FRAGMENT_SHADER);return h.shaderSource(n,["precision "+e.getPrecision()+" float;","#define SHADER_NAME SpriteMaterial","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),h.shaderSource(r,["precision "+e.getPrecision()+" float;","#define SHADER_NAME SpriteMaterial","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),h.compileShader(n),h.compileShader(r),h.attachShader(t,n),h.attachShader(t,r),h.linkProgram(t),t}function i(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:t.id-e.id}var a,o,s,l,c,u,h=e.context,p=e.state,d=new b,m=new y,v=new b;this.render=function(r,f){if(0!==t.length){void 0===s&&n(),h.useProgram(s),p.initAttributes(),p.enableAttribute(l.position),p.enableAttribute(l.uv),p.disableUnusedAttributes(),p.disable(h.CULL_FACE),p.enable(h.BLEND),h.bindBuffer(h.ARRAY_BUFFER,a),h.vertexAttribPointer(l.position,2,h.FLOAT,!1,16,0),h.vertexAttribPointer(l.uv,2,h.FLOAT,!1,16,8),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,o),h.uniformMatrix4fv(c.projectionMatrix,!1,f.projectionMatrix.elements),p.activeTexture(h.TEXTURE0),h.uniform1i(c.map,0);var g=0,y=0,b=r.fog;b?(h.uniform3f(c.fogColor,b.color.r,b.color.g,b.color.b),b.isFog?(h.uniform1f(c.fogNear,b.near),h.uniform1f(c.fogFar,b.far),h.uniform1i(c.fogType,1),g=1,y=1):b.isFogExp2&&(h.uniform1f(c.fogDensity,b.density),h.uniform1i(c.fogType,2),g=2,y=2)):(h.uniform1i(c.fogType,0),g=0,y=0);for(var x=0,w=t.length;x<w;x++){var _=t[x];_.modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,_.matrixWorld),_.z=-_.modelViewMatrix.elements[14]}t.sort(i);for(var E=[],x=0,w=t.length;x<w;x++){var _=t[x],M=_.material;if(!1!==M.visible){_.onBeforeRender(e,r,f,void 0,M,void 0),h.uniform1f(c.alphaTest,M.alphaTest),h.uniformMatrix4fv(c.modelViewMatrix,!1,_.modelViewMatrix.elements),_.matrixWorld.decompose(d,m,v),E[0]=v.x,E[1]=v.y;var T=0;r.fog&&M.fog&&(T=y),g!==T&&(h.uniform1i(c.fogType,T),g=T),null!==M.map?(h.uniform2f(c.uvOffset,M.map.offset.x,M.map.offset.y),h.uniform2f(c.uvScale,M.map.repeat.x,M.map.repeat.y)):(h.uniform2f(c.uvOffset,0,0),h.uniform2f(c.uvScale,1,1)),h.uniform1f(c.opacity,M.opacity),h.uniform3f(c.color,M.color.r,M.color.g,M.color.b),h.uniform1f(c.rotation,M.rotation),h.uniform2fv(c.scale,E),p.setBlending(M.blending,M.blendEquation,M.blendSrc,M.blendDst,M.blendEquationAlpha,M.blendSrcAlpha,M.blendDstAlpha,M.premultipliedAlpha),p.buffers.depth.setTest(M.depthTest),p.buffers.depth.setMask(M.depthWrite),M.map?e.setTexture2D(M.map,0):e.setTexture2D(u,0),h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0),_.onAfterRender(e,r,f,void 0,M,void 0)}}p.enable(h.CULL_FACE),e.resetGLState()}}}function se(){Object.defineProperty(this,"id",{value:rl++}),this.uuid=Hs.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=to,this.side=Xa,this.shading=Ka,this.vertexColors=Ja,this.opacity=1,this.transparent=!1,this.blendSrc=vo,this.blendDst=go,this.blendEquation=oo,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=So,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.needsUpdate=!0}function le(e){se.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function ce(e){se.call(this),this.type="MeshDepthMaterial",this.depthPacking=js,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(e)}function ue(e,t){this.min=void 0!==e?e:new b(1/0,1/0,1/0),this.max=void 0!==t?t:new b(-1/0,-1/0,-1/0)}function he(e,t){this.center=void 0!==e?e:new b,this.radius=void 0!==t?t:0}function pe(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function de(e,t){this.normal=void 0!==e?e:new b(1,0,0),this.constant=void 0!==t?t:0}function fe(e,t,n,r,i,a){this.planes=[void 0!==e?e:new de,void 0!==t?t:new de,void 0!==n?n:new de,void 0!==r?r:new de,void 0!==i?i:new de,void 0!==a?a:new de]}function me(e,t,n,r){function i(t,n,r,i){var a=t.geometry,o=null,s=E,l=t.customDepthMaterial;if(r&&(s=M,l=t.customDistanceMaterial),l)o=l;else{var c=!1;n.morphTargets&&(a&&a.isBufferGeometry?c=a.morphAttributes&&a.morphAttributes.position&&a.morphAttributes.position.length>0:a&&a.isGeometry&&(c=a.morphTargets&&a.morphTargets.length>0)),t.isSkinnedMesh&&!1===n.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t);var u=t.isSkinnedMesh&&n.skinning,h=0;c&&(h|=y),u&&(h|=w),o=s[h]}if(e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){var p=o.uuid,d=n.uuid,f=T[p];void 0===f&&(f={},T[p]=f);var m=f[d];void 0===m&&(m=o.clone(),f[d]=m),o=m}o.visible=n.visible,o.wireframe=n.wireframe;var v=n.side;return U.renderSingleSided&&v==Ya&&(v=Xa),U.renderReverseSided&&(v===Xa?v=qa:v===qa&&(v=Xa)),o.side=v,o.clipShadows=n.clipShadows,o.clippingPlanes=n.clippingPlanes,o.wireframeLinewidth=n.wireframeLinewidth,o.linewidth=n.linewidth,r&&void 0!==o.uniforms.lightPos&&o.uniforms.lightPos.value.copy(i),o}function a(t,r,o,s){if(!1!==t.visible){if(t.layers.test(r.layers)&&(t.isMesh||t.isLine||t.isPoints)&&t.castShadow&&(!t.frustumCulled||l.intersectsObject(t))){t.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,t.matrixWorld);var c=n.update(t),u=t.material;if(Array.isArray(u))for(var h=c.groups,p=0,d=h.length;p<d;p++){var f=h[p],m=u[f.materialIndex];if(m&&m.visible){var v=i(t,m,s,g);e.renderBufferDirect(o,null,c,v,t,f)}}else if(u.visible){var v=i(t,u,s,g);e.renderBufferDirect(o,null,c,v,t,null)}}for(var y=t.children,b=0,x=y.length;b<x;b++)a(y[b],r,o,s)}}var o=e.context,s=e.state,l=new fe,c=new x,u=t.shadows,h=new d,p=new d(r.maxTextureSize,r.maxTextureSize),f=new b,g=new b,y=1,w=2,_=1+(y|w),E=new Array(_),M=new Array(_),T={},S=[new b(1,0,0),new b(-1,0,0),new b(0,0,1),new b(0,0,-1),new b(0,1,0),new b(0,-1,0)],A=[new b(0,1,0),new b(0,1,0),new b(0,1,0),new b(0,1,0),new b(0,0,1),new b(0,0,-1)],C=[new m,new m,new m,new m,new m,new m],P=new ce;P.depthPacking=Gs,P.clipping=!0;for(var L=nl.distanceRGBA,R=el.clone(L.uniforms),O=0;O!==_;++O){var I=0!=(O&y),N=0!=(O&w),k=P.clone();k.morphTargets=I,k.skinning=N,E[O]=k;var D=new le({defines:{USE_SHADOWMAP:""},uniforms:R,vertexShader:L.vertexShader,fragmentShader:L.fragmentShader,morphTargets:I,skinning:N,clipping:!0});M[O]=D}var U=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Va,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(t,n){if(!1!==U.enabled&&(!1!==U.autoUpdate||!1!==U.needsUpdate)&&0!==u.length){s.disable(o.BLEND),s.buffers.color.setClear(1,1,1,1),s.buffers.depth.setTest(!0),s.setScissorTest(!1);for(var r,i=0,d=u.length;i<d;i++){var m=u[i],y=m.shadow,b=m&&m.isPointLight;if(void 0!==y){var x=y.camera;if(h.copy(y.mapSize),h.min(p),b){var w=h.x,_=h.y;C[0].set(2*w,_,w,_),C[1].set(0,_,w,_),C[2].set(3*w,_,w,_),C[3].set(w,_,w,_),C[4].set(3*w,0,w,_),C[5].set(w,0,w,_),h.x*=4,h.y*=2}if(null===y.map){var E={minFilter:Zo,magFilter:Zo,format:ms};y.map=new v(h.x,h.y,E),y.map.texture.name=m.name+".shadowMap",x.updateProjectionMatrix()}y.isSpotLightShadow&&y.update(m);var M=y.map,T=y.matrix;g.setFromMatrixPosition(m.matrixWorld),x.position.copy(g),b?(r=6,T.makeTranslation(-g.x,-g.y,-g.z)):(r=1,f.setFromMatrixPosition(m.target.matrixWorld),x.lookAt(f),x.updateMatrixWorld(),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(x.projectionMatrix),T.multiply(x.matrixWorldInverse)),e.setRenderTarget(M),e.clear();for(var P=0;P<r;P++){if(b){f.copy(x.position),f.add(S[P]),x.up.copy(A[P]),x.lookAt(f),x.updateMatrixWorld();var L=C[P];s.viewport(L)}c.multiplyMatrices(x.projectionMatrix,x.matrixWorldInverse),l.setFromMatrix(c),a(t,n,x,b)}}else console.warn("THREE.WebGLShadowMap:",m,"has no shadow.")}var R=e.getClearColor(),O=e.getClearAlpha();e.setClearColor(R,O),U.needsUpdate=!1}}}function ve(e){function t(t,n){var r=t.array,i=t.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,a=e.createBuffer();e.bindBuffer(n,a),e.bufferData(n,r,i),t.onUploadCallback();var o=e.FLOAT;return r instanceof Float32Array?o=e.FLOAT:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?o=e.UNSIGNED_SHORT:r instanceof Int16Array?o=e.SHORT:r instanceof Uint32Array?o=e.UNSIGNED_INT:r instanceof Int32Array?o=e.INT:r instanceof Int8Array?o=e.BYTE:r instanceof Uint8Array&&(o=e.UNSIGNED_BYTE),{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}function n(t,n,r){var i=n.array,a=n.updateRange;e.bindBuffer(r,t),!1===n.dynamic?e.bufferData(r,i,e.STATIC_DRAW):-1===a.count?e.bufferSubData(r,0,i):0===a.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(r,a.offset*i.BYTES_PER_ELEMENT,i.subarray(a.offset,a.offset+a.count)),a.count=-1)}function r(e){return e.isInterleavedBufferAttribute&&(e=e.data),o[e.uuid]}function i(t){t.isInterleavedBufferAttribute&&(t=t.data);var n=o[t.uuid];n&&(e.deleteBuffer(n.buffer),delete o[t.uuid])}function a(e,r){e.isInterleavedBufferAttribute&&(e=e.data);var i=o[e.uuid];void 0===i?o[e.uuid]=t(e,r):i.version<e.version&&(n(i.buffer,e,r),i.version=e.version)}var o={};return{get:r,remove:i,update:a}}function ge(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||ge.DefaultOrder}function ye(){this.mask=1}function be(){function e(){i.setFromEuler(r,!1)}function t(){r.setFromQuaternion(i,void 0,!1)}Object.defineProperty(this,"id",{value:il++}),this.uuid=Hs.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=be.DefaultUp.clone();var n=new b,r=new ge,i=new y,a=new b(1,1,1);r.onChange(e),i.onChange(t),Object.defineProperties(this,{position:{enumerable:!0,value:n},rotation:{enumerable:!0,value:r},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:a},modelViewMatrix:{value:new x},normalMatrix:{value:new pe}}),this.matrix=new x,this.matrixWorld=new x,this.matrixAutoUpdate=be.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ye,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function xe(){be.call(this),this.type="Camera",this.matrixWorldInverse=new x,this.projectionMatrix=new x}function we(e,t,n,r,i,a){xe.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=void 0!==i?i:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function _e(e,t,n,r){xe.call(this),this.type="PerspectiveCamera",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==r?r:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function Ee(e,t,n,r,i,a){this.a=e,this.b=t,this.c=n,this.normal=r&&r.isVector3?r:new b,this.vertexNormals=Array.isArray(r)?r:[],this.color=i&&i.isColor?i:new re,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==a?a:0}function Me(){return al++}function Te(){Object.defineProperty(this,"id",{value:Me()}),this.uuid=Hs.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function Se(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=Hs.generateUUID(),this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function Ae(e,t){Se.call(this,new Int8Array(e),t)}function Ce(e,t){Se.call(this,new Uint8Array(e),t)}function Pe(e,t){Se.call(this,new Uint8ClampedArray(e),t)}function Le(e,t){Se.call(this,new Int16Array(e),t)}function Re(e,t){Se.call(this,new Uint16Array(e),t)}function Oe(e,t){Se.call(this,new Int32Array(e),t)}function Ie(e,t){Se.call(this,new Uint32Array(e),t)}function Ne(e,t){Se.call(this,new Float32Array(e),t)}function ke(e,t){Se.call(this,new Float64Array(e),t)}function De(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Ue(e){if(0===e.length)return-1/0;for(var t=e[0],n=1,r=e.length;n<r;++n)e[n]>t&&(t=e[n]);return t}function Fe(){Object.defineProperty(this,"id",{value:Me()}),this.uuid=Hs.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}function ze(e,t,n,r,i,a){Te.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a},this.fromBufferGeometry(new Be(e,t,n,r,i,a)),this.mergeVertices()}function Be(e,t,n,r,i,a){function o(e,t,n,r,i,a,o,f,m,v,g){var y,x,w=a/m,_=o/v,E=a/2,M=o/2,T=f/2,S=m+1,A=v+1,C=0,P=0,L=new b;for(x=0;x<A;x++){var R=x*_-M;for(y=0;y<S;y++){var O=y*w-E;L[e]=O*r,L[t]=R*i,L[n]=T,c.push(L.x,L.y,L.z),L[e]=0,L[t]=0,L[n]=f>0?1:-1,u.push(L.x,L.y,L.z),h.push(y/m),h.push(1-x/v),C+=1}}for(x=0;x<v;x++)for(y=0;y<m;y++){var I=p+y+S*x,N=p+y+S*(x+1),k=p+(y+1)+S*(x+1),D=p+(y+1)+S*x;l.push(I,N,D),l.push(N,k,D),P+=6}s.addGroup(d,P,g),d+=P,p+=C}Fe.call(this),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};var s=this;r=Math.floor(r)||1,i=Math.floor(i)||1,a=Math.floor(a)||1;var l=[],c=[],u=[],h=[],p=0,d=0;o("z","y","x",-1,-1,n,t,e,a,i,0),o("z","y","x",1,-1,n,t,-e,a,i,1),o("x","z","y",1,1,e,n,t,r,a,2),o("x","z","y",1,-1,e,n,-t,r,a,3),o("x","y","z",1,-1,e,t,n,r,i,4),o("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(l),this.addAttribute("position",new Ne(c,3)),this.addAttribute("normal",new Ne(u,3)),this.addAttribute("uv",new Ne(h,2))}function je(e,t,n,r){Te.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new Ge(e,t,n,r)),this.mergeVertices()}function Ge(e,t,n,r){Fe.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var i,a,o=e/2,s=t/2,l=Math.floor(n)||1,c=Math.floor(r)||1,u=l+1,h=c+1,p=e/l,d=t/c,f=[],m=[],v=[],g=[];for(a=0;a<h;a++){var y=a*d-s;for(i=0;i<u;i++){var b=i*p-o;m.push(b,-y,0),v.push(0,0,1),g.push(i/l),g.push(1-a/c)}}for(a=0;a<c;a++)for(i=0;i<l;i++){var x=i+u*a,w=i+u*(a+1),_=i+1+u*(a+1),E=i+1+u*a;f.push(x,w,E),f.push(w,_,E)}this.setIndex(f),this.addAttribute("position",new Ne(m,3)),this.addAttribute("normal",new Ne(v,3)),this.addAttribute("uv",new Ne(g,2))}function He(e){se.call(this),this.type="MeshBasicMaterial",this.color=new re(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ro,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(e)}function Ve(e,t){this.origin=void 0!==e?e:new b,this.direction=void 0!==t?t:new b}function We(e,t){this.start=void 0!==e?e:new b,this.end=void 0!==t?t:new b}function Xe(e,t,n){this.a=void 0!==e?e:new b,this.b=void 0!==t?t:new b,this.c=void 0!==n?n:new b}function qe(e,t){be.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new Fe,this.material=void 0!==t?t:new He({color:16777215*Math.random()}),this.drawMode=Rs,this.updateMorphTargets()}function Ye(e,t,n,r){function i(t,r,i){var p=t.background;null===p?a(u,h):p&&p.isColor&&(a(p,1),i=!0),(e.autoClear||i)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),p&&p.isCubeTexture?(void 0===l&&(l=new _e,c=new qe(new Be(5,5,5),new le({uniforms:nl.cube.uniforms,vertexShader:nl.cube.vertexShader,fragmentShader:nl.cube.fragmentShader,side:qa,depthTest:!1,depthWrite:!1,fog:!1}))),l.projectionMatrix.copy(r.projectionMatrix),l.matrixWorld.extractRotation(r.matrixWorld),l.matrixWorldInverse.getInverse(l.matrixWorld),c.material.uniforms.tCube.value=p,c.modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,c.matrixWorld),n.update(c),e.renderBufferDirect(l,null,c.geometry,c.material,c,null)):p&&p.isTexture&&(void 0===o&&(o=new we(-1,1,1,-1,0,1),s=new qe(new Ge(2,2),new He({depthTest:!1,depthWrite:!1,fog:!1}))),s.material.map=p,n.update(s),e.renderBufferDirect(o,null,s.geometry,s.material,s,null))}function a(e,n){t.buffers.color.setClear(e.r,e.g,e.b,n,r)}var o,s,l,c,u=new re(0),h=0;return{getClearColor:function(){return u},setClearColor:function(e,t){u.set(e),h=void 0!==t?t:1,a(u,h)},getClearAlpha:function(){return h},setClearAlpha:function(e){h=e,a(u,h)},render:i}}function Ze(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program&&t.program&&e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ke(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Je(){function e(){a=-1,s=-1}function t(e,t,n,r,l){var c,u;n.transparent?(c=o,u=++s):(c=i,u=++a);var h=c[u];h?(h.id=e.id,h.object=e,h.geometry=t,h.material=n,h.program=n.program,h.renderOrder=e.renderOrder,h.z=r,h.group=l):(h={id:e.id,object:e,geometry:t,material:n,program:n.program,renderOrder:e.renderOrder,z:r,group:l},c.push(h))}function n(){i.length=a+1,o.length=s+1}function r(){i.sort(Ze),o.sort(Ke)}var i=[],a=-1,o=[],s=-1;return{opaque:i,transparent:o,init:e,push:t,finish:n,sort:r}}function Qe(){function e(e,t){var r=e.id+","+t.id,i=n[r];return void 0===i&&(i=new Je,n[r]=i),i}function t(){n={}}var n={};return{get:e,dispose:t}}function $e(e,t,n){function r(e){s=e}function i(e){l=e.type,c=e.bytesPerElement}function a(t,r){e.drawElements(s,r,l,t*c),n.calls++,n.vertices+=r,s===e.TRIANGLES&&(n.faces+=r/3)}function o(r,i,a){var o=t.get("ANGLE_instanced_arrays");if(null===o)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");o.drawElementsInstancedANGLE(s,a,l,i*c,r.maxInstancedCount),n.calls++,n.vertices+=a*r.maxInstancedCount,s===e.TRIANGLES&&(n.faces+=r.maxInstancedCount*a/3)}var s,l,c;this.setMode=r,this.setIndex=i,this.render=a,this.renderInstances=o}function et(e,t,n){function r(e){o=e}function i(t,r){e.drawArrays(o,t,r),n.calls++,n.vertices+=r,o===e.TRIANGLES&&(n.faces+=r/3)}function a(r,i,a){var s=t.get("ANGLE_instanced_arrays");if(null===s)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");var l=r.attributes.position;l.isInterleavedBufferAttribute?(a=l.data.count,s.drawArraysInstancedANGLE(o,0,a,r.maxInstancedCount)):s.drawArraysInstancedANGLE(o,i,a,r.maxInstancedCount),n.calls++,n.vertices+=a*r.maxInstancedCount,o===e.TRIANGLES&&(n.faces+=r.maxInstancedCount*a/3)}var o;this.setMode=r,this.render=i,this.renderInstances=a}function tt(e,t,n){function r(e){var i=e.target,a=s[i.id];null!==a.index&&t.remove(a.index);for(var o in a.attributes)t.remove(a.attributes[o]);i.removeEventListener("dispose",r),delete s[i.id];var c=l[i.id];c&&(t.remove(c),delete l[i.id]),c=l[a.id],c&&(t.remove(c),delete l[a.id]),n.geometries--}function i(e,t){var i=s[t.id];return i||(t.addEventListener("dispose",r),t.isBufferGeometry?i=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new Fe).setFromObject(e)),i=t._bufferGeometry),s[t.id]=i,n.geometries++,i)}function a(n){var r=n.index,i=n.attributes;null!==r&&t.update(r,e.ELEMENT_ARRAY_BUFFER);for(var a in i)t.update(i[a],e.ARRAY_BUFFER);var o=n.morphAttributes;for(var a in o)for(var s=o[a],l=0,c=s.length;l<c;l++)t.update(s[l],e.ARRAY_BUFFER)}function o(n){var r=l[n.id];if(r)return r;var i=[],a=n.index,o=n.attributes;if(null!==a)for(var s=a.array,c=0,u=s.length;c<u;c+=3){var h=s[c+0],p=s[c+1],d=s[c+2];i.push(h,p,p,d,d,h)}else for(var s=o.position.array,c=0,u=s.length/3-1;c<u;c+=3){var h=c+0,p=c+1,d=c+2;i.push(h,p,p,d,d,h)}return r=new(Ue(i)>65535?Ie:Re)(i,1),t.update(r,e.ELEMENT_ARRAY_BUFFER),l[n.id]=r,r}var s={},l={};return{get:i,update:a,getWireframeAttribute:o}}function nt(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new b,color:new re,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new d};break;case"SpotLight":n={position:new b,direction:new b,color:new re,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new d};break;case"PointLight":n={position:new b,color:new re,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new d};break;case"HemisphereLight":n={direction:new b,skyColor:new re,groundColor:new re};break;case"RectAreaLight":n={color:new re,position:new b,halfWidth:new b,halfHeight:new b}}return e[t.id]=n,n}}}function rt(e,t,n){function r(e){var r=n.frame,i=e.geometry,o=t.get(e,i);return a[o.id]!==r&&(i.isGeometry&&o.updateFromObject(e),t.update(o),a[o.id]=r),o}function i(){a={}}var a={};return{update:r,clear:i}}function it(e){for(var t=e.split("\n"),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}function at(e,t,n){var r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),!1===e.getShaderParameter(r,e.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==e.getShaderInfoLog(r)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t===e.VERTEX_SHADER?"vertex":"fragment",e.getShaderInfoLog(r),it(n)),r}function ot(e){switch(e){case Ns:return["Linear","( value )"];case ks:return["sRGB","( value )"];case Us:return["RGBE","( value )"];case Fs:return["RGBM","( value, 7.0 )"];case zs:return["RGBM","( value, 16.0 )"];case Bs:return["RGBD","( value, 256.0 )"];case Ds:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+e)}}function st(e,t){var n=ot(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function lt(e,t){var n=ot(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function ct(e,t){var n;switch(t){case ko:n="Linear";break;case Do:n="Reinhard";break;case Uo:n="Uncharted2";break;case Fo:n="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function ut(e,t,n){return e=e||{},[e.derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(dt).join("\n")}function ht(e){var t=[];for(var n in e){var r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}function pt(e,t,n){for(var r={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),a=0;a<i;a++){var o=e.getActiveAttrib(t,a),s=o.name;r[s]=e.getAttribLocation(t,s)}return r}function dt(e){return""!==e}function ft(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function mt(e){function t(e,t){var n=tl[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return mt(n)}var n=/^[ \t]*#include +<([\w\d.]+)>/gm;return e.replace(n,t)}function vt(e){function t(e,t,n,r){for(var i="",a=parseInt(t);a<parseInt(n);a++)i+=r.replace(/\[ i \]/g,"[ "+a+" ]");return i}var n=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;return e.replace(n,t)}function gt(e,t,n,r,i){var a=e.context,o=n.extensions,s=n.defines,l=r.vertexShader,c=r.fragmentShader,u="SHADOWMAP_TYPE_BASIC";i.shadowMapType===Va?u="SHADOWMAP_TYPE_PCF":i.shadowMapType===Wa&&(u="SHADOWMAP_TYPE_PCF_SOFT");var h="ENVMAP_TYPE_CUBE",p="ENVMAP_MODE_REFLECTION",d="ENVMAP_BLENDING_MULTIPLY";if(i.envMap){switch(n.envMap.mapping){case zo:case Bo:h="ENVMAP_TYPE_CUBE";break;case Vo:case Wo:h="ENVMAP_TYPE_CUBE_UV";break;case jo:case Go:h="ENVMAP_TYPE_EQUIREC";break;case Ho:h="ENVMAP_TYPE_SPHERE"}switch(n.envMap.mapping){case Bo:case Go:p="ENVMAP_MODE_REFRACTION"}switch(n.combine){case Ro:d="ENVMAP_BLENDING_MULTIPLY";break;case Oo:d="ENVMAP_BLENDING_MIX";break;case Io:d="ENVMAP_BLENDING_ADD"}}var f,m,v=e.gammaFactor>0?e.gammaFactor:1,g=ut(o,i,e.extensions),y=ht(s),b=a.createProgram();n.isRawShaderMaterial?(f=[y,"\n"].filter(dt).join("\n"),m=[g,y,"\n"].filter(dt).join("\n")):(f=["precision "+i.precision+" float;","precision "+i.precision+" int;","#define SHADER_NAME "+r.name,y,i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+v,"#define MAX_BONES "+i.maxBones,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+p:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+i.numClippingPlanes,i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&e.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(dt).join("\n"),m=[g,"precision "+i.precision+" float;","precision "+i.precision+" int;","#define SHADER_NAME "+r.name,y,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"","#define GAMMA_FACTOR "+v,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+h:"",i.envMap?"#define "+p:"",i.envMap?"#define "+d:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+i.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(i.numClippingPlanes-i.numClipIntersection),i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&e.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",i.envMap&&e.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",i.toneMapping!==No?"#define TONE_MAPPING":"",i.toneMapping!==No?tl.tonemapping_pars_fragment:"",i.toneMapping!==No?ct("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.outputEncoding||i.mapEncoding||i.envMapEncoding||i.emissiveMapEncoding?tl.encodings_pars_fragment:"",i.mapEncoding?st("mapTexelToLinear",i.mapEncoding):"",i.envMapEncoding?st("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMapEncoding?st("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.outputEncoding?lt("linearToOutputTexel",i.outputEncoding):"",i.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(dt).join("\n")),l=mt(l),l=ft(l,i),c=mt(c),c=ft(c,i),n.isShaderMaterial||(l=vt(l),c=vt(c));var x=f+l,w=m+c,_=at(a,a.VERTEX_SHADER,x),E=at(a,a.FRAGMENT_SHADER,w);a.attachShader(b,_),a.attachShader(b,E),void 0!==n.index0AttributeName?a.bindAttribLocation(b,0,n.index0AttributeName):!0===i.morphTargets&&a.bindAttribLocation(b,0,"position"),a.linkProgram(b);var M=a.getProgramInfoLog(b),T=a.getShaderInfoLog(_),S=a.getShaderInfoLog(E),A=!0,C=!0;!1===a.getProgramParameter(b,a.LINK_STATUS)?(A=!1,console.error("THREE.WebGLProgram: shader error: ",a.getError(),"gl.VALIDATE_STATUS",a.getProgramParameter(b,a.VALIDATE_STATUS),"gl.getProgramInfoLog",M,T,S)):""!==M?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",M):""!==T&&""!==S||(C=!1),C&&(this.diagnostics={runnable:A,material:n,programLog:M,vertexShader:{log:T,prefix:f},fragmentShader:{log:S,prefix:m}}),a.deleteShader(_),a.deleteShader(E);var P;this.getUniforms=function(){return void 0===P&&(P=new ne(a,b,e)),P};var L;return this.getAttributes=function(){return void 0===L&&(L=pt(a,b)),L},this.destroy=function(){a.deleteProgram(b),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=ol++,this.code=t,this.usedTimes=1,this.program=b,this.vertexShader=_,this.fragmentShader=E,this}function yt(e,t){function n(e){var n=e.skeleton,r=n.bones;if(t.floatVertexTextures)return 1024;var i=t.maxVertexUniforms,a=Math.floor((i-20)/4),o=Math.min(a,r.length);return o<r.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+r.length+" bones. This GPU supports "+o+"."),0):o}function r(e,t){var n;return e?e.isTexture?n=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),n=e.texture.encoding):n=Ns,n===Ns&&t&&(n=Ds),n}var i=[],a={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},o=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];this.getParameters=function(i,o,s,l,c,u){var h=a[i.type],p=u.isSkinnedMesh?n(u):0,d=e.getPrecision();null!==i.precision&&(d=t.getMaxPrecision(i.precision))!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",d,"instead.");var f=e.getRenderTarget();return{shaderID:h,precision:d,supportsVertexTextures:t.vertexTextures,outputEncoding:r(f?f.texture:null,e.gammaOutput),map:!!i.map,mapEncoding:r(i.map,e.gammaInput),envMap:!!i.envMap,envMapMode:i.envMap&&i.envMap.mapping,envMapEncoding:r(i.envMap,e.gammaInput),envMapCubeUV:!!i.envMap&&(i.envMap.mapping===Vo||i.envMap.mapping===Wo),lightMap:!!i.lightMap,aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:r(i.emissiveMap,e.gammaInput),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,combine:i.combine,vertexColors:i.vertexColors,fog:!!s,useFog:i.fog,fogExp:s&&s.isFogExp2,flatShading:i.shading===Za,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:i.skinning&&p>0,maxBones:p,useVertexTexture:t.floatVertexTextures,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numClippingPlanes:l,numClipIntersection:c,dithering:i.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.receiveShadow&&o.shadows.length>0,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:i.side===Ya,flipSided:i.side===qa,depthPacking:void 0!==i.depthPacking&&i.depthPacking}},this.getProgramCode=function(t,n){var r=[];if(n.shaderID?r.push(n.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(var i in t.defines)r.push(i),r.push(t.defines[i]);for(var a=0;a<o.length;a++)r.push(n[o[a]]);return r.push(t.onBeforeCompile.toString()),r.push(e.gammaOutput),r.join()},this.acquireProgram=function(t,n,r,a){for(var o,s=0,l=i.length;s<l;s++){var c=i[s];if(c.code===a){o=c,++o.usedTimes;break}}return void 0===o&&(o=new gt(e,a,t,n,r),i.push(o)),o},this.releaseProgram=function(e){if(0==--e.usedTimes){var t=i.indexOf(e);i[t]=i[i.length-1],i.pop(),e.destroy()}},this.programs=i}function bt(e,t,n,r,i,a,o){function s(e,t){if(e.width>t||e.height>t){var n=t/Math.max(e.width,e.height),r=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");r.width=Math.floor(e.width*n),r.height=Math.floor(e.height*n);return r.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,r.width,r.height),console.warn("THREE.WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+r.width+"x"+r.height,e),r}return e}function l(e){return Hs.isPowerOfTwo(e.width)&&Hs.isPowerOfTwo(e.height)}function c(e){if(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");t.width=Hs.nearestPowerOfTwo(e.width),t.height=Hs.nearestPowerOfTwo(e.height);return t.getContext("2d").drawImage(e,0,0,t.width,t.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}function u(e){return e.wrapS!==qo||e.wrapT!==qo||e.minFilter!==Zo&&e.minFilter!==Qo}function h(e,t){return e.generateMipmaps&&t&&e.minFilter!==Zo&&e.minFilter!==Qo}function p(t){return t===Zo||t===Ko||t===Jo?e.NEAREST:e.LINEAR}function d(e){var t=e.target;t.removeEventListener("dispose",d),m(t),o.textures--}function f(e){var t=e.target;t.removeEventListener("dispose",f),v(t),o.textures--}function m(t){var n=r.get(t);if(t.image&&n.__image__webglTextureCube)e.deleteTexture(n.__image__webglTextureCube);else{if(void 0===n.__webglInit)return;e.deleteTexture(n.__webglTexture)}r.remove(t)}function v(t){var n=r.get(t),i=r.get(t.texture);if(t){if(void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLRenderTargetCube)for(var a=0;a<6;a++)e.deleteFramebuffer(n.__webglFramebuffer[a]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[a]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer);r.remove(t.texture),r.remove(t)}}function g(t,i){var a=r.get(t);if(t.version>0&&a.__version!==t.version){var o=t.image;if(void 0===o)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",t);else{if(!1!==o.complete)return void w(a,t,i);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",t)}}n.activeTexture(e.TEXTURE0+i),n.bindTexture(e.TEXTURE_2D,a.__webglTexture)}function y(t,c){var u=r.get(t);if(6===t.image.length)if(t.version>0&&u.__version!==t.version){u.__image__webglTextureCube||(t.addEventListener("dispose",d),u.__image__webglTextureCube=e.createTexture(),o.textures++),n.activeTexture(e.TEXTURE0+c),n.bindTexture(e.TEXTURE_CUBE_MAP,u.__image__webglTextureCube),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var p=t&&t.isCompressedTexture,f=t.image[0]&&t.image[0].isDataTexture,m=[],v=0;v<6;v++)m[v]=p||f?f?t.image[v].image:t.image[v]:s(t.image[v],i.maxCubemapSize);var g=m[0],y=l(g),b=a(t.format),w=a(t.type);x(e.TEXTURE_CUBE_MAP,t,y);for(var v=0;v<6;v++)if(p)for(var _,E=m[v].mipmaps,M=0,T=E.length;M<T;M++)_=E[M],t.format!==ms&&t.format!==fs?n.getCompressedTextureFormats().indexOf(b)>-1?n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,M,b,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,M,b,_.width,_.height,0,b,w,_.data);else f?n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,b,m[v].width,m[v].height,0,b,w,m[v].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,b,b,w,m[v]);h(t,y)&&e.generateMipmap(e.TEXTURE_CUBE_MAP),u.__version=t.version,t.onUpdate&&t.onUpdate(t)}else n.activeTexture(e.TEXTURE0+c),n.bindTexture(e.TEXTURE_CUBE_MAP,u.__image__webglTextureCube)}function b(t,i){n.activeTexture(e.TEXTURE0+i),n.bindTexture(e.TEXTURE_CUBE_MAP,r.get(t).__webglTexture)}function x(n,o,s){var l;if(s?(e.texParameteri(n,e.TEXTURE_WRAP_S,a(o.wrapS)),e.texParameteri(n,e.TEXTURE_WRAP_T,a(o.wrapT)),e.texParameteri(n,e.TEXTURE_MAG_FILTER,a(o.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,a(o.minFilter))):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),o.wrapS===qo&&o.wrapT===qo||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",o),e.texParameteri(n,e.TEXTURE_MAG_FILTER,p(o.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,p(o.minFilter)),o.minFilter!==Zo&&o.minFilter!==Qo&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",o)),l=t.get("EXT_texture_filter_anisotropic")){if(o.type===ss&&null===t.get("OES_texture_float_linear"))return;if(o.type===ls&&null===t.get("OES_texture_half_float_linear"))return;(o.anisotropy>1||r.get(o).__currentAnisotropy)&&(e.texParameterf(n,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),r.get(o).__currentAnisotropy=o.anisotropy)}}function w(t,r,p){void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",d),t.__webglTexture=e.createTexture(),o.textures++),n.activeTexture(e.TEXTURE0+p),n.bindTexture(e.TEXTURE_2D,t.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment);var f=s(r.image,i.maxTextureSize);u(r)&&!1===l(f)&&(f=c(f));var m=l(f),v=a(r.format),g=a(r.type);x(e.TEXTURE_2D,r,m);var y,b=r.mipmaps;if(r.isDepthTexture){var w=e.DEPTH_COMPONENT;if(r.type===ss){if(!C)throw new Error("Float Depth Texture only supported in WebGL2.0");w=e.DEPTH_COMPONENT32F}else C&&(w=e.DEPTH_COMPONENT16);r.format===ys&&w===e.DEPTH_COMPONENT&&r.type!==is&&r.type!==os&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=is,g=a(r.type)),r.format===bs&&(w=e.DEPTH_STENCIL,r.type!==ps&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=ps,g=a(r.type))),n.texImage2D(e.TEXTURE_2D,0,w,f.width,f.height,0,v,g,null)}else if(r.isDataTexture)if(b.length>0&&m){for(var _=0,E=b.length;_<E;_++)y=b[_],n.texImage2D(e.TEXTURE_2D,_,v,y.width,y.height,0,v,g,y.data);r.generateMipmaps=!1}else n.texImage2D(e.TEXTURE_2D,0,v,f.width,f.height,0,v,g,f.data);else if(r.isCompressedTexture)for(var _=0,E=b.length;_<E;_++)y=b[_],r.format!==ms&&r.format!==fs?n.getCompressedTextureFormats().indexOf(v)>-1?n.compressedTexImage2D(e.TEXTURE_2D,_,v,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(e.TEXTURE_2D,_,v,y.width,y.height,0,v,g,y.data);else if(b.length>0&&m){for(var _=0,E=b.length;_<E;_++)y=b[_],n.texImage2D(e.TEXTURE_2D,_,v,v,g,y);r.generateMipmaps=!1}else n.texImage2D(e.TEXTURE_2D,0,v,v,g,f);h(r,m)&&e.generateMipmap(e.TEXTURE_2D),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}function _(t,i,o,s){var l=a(i.texture.format),c=a(i.texture.type);n.texImage2D(s,0,l,i.width,i.height,0,l,c,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,o,s,r.get(i.texture).__webglTexture,0),e.bindFramebuffer(e.FRAMEBUFFER,null)}function E(t,n){e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)):n.depthBuffer&&n.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,n.width,n.height),e.bindRenderbuffer(e.RENDERBUFFER,null)}function M(t,n){if(n&&n.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported!");if(e.bindFramebuffer(e.FRAMEBUFFER,t),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),g(n.depthTexture,0);var i=r.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===ys)e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,i,0);else{if(n.depthTexture.format!==bs)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,i,0)}}function T(t){var n=r.get(t),i=!0===t.isWebGLRenderTargetCube;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");M(n.__webglFramebuffer,t)}else if(i){n.__webglDepthbuffer=[];for(var a=0;a<6;a++)e.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer[a]),n.__webglDepthbuffer[a]=e.createRenderbuffer(),E(n.__webglDepthbuffer[a],t)}else e.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),E(n.__webglDepthbuffer,t);e.bindFramebuffer(e.FRAMEBUFFER,null)}function S(t){var i=r.get(t),a=r.get(t.texture);t.addEventListener("dispose",f),a.__webglTexture=e.createTexture(),o.textures++;var s=!0===t.isWebGLRenderTargetCube,c=l(t);if(s){i.__webglFramebuffer=[];for(var u=0;u<6;u++)i.__webglFramebuffer[u]=e.createFramebuffer()}else i.__webglFramebuffer=e.createFramebuffer();if(s){n.bindTexture(e.TEXTURE_CUBE_MAP,a.__webglTexture),x(e.TEXTURE_CUBE_MAP,t.texture,c);for(var u=0;u<6;u++)_(i.__webglFramebuffer[u],t,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+u);h(t.texture,c)&&e.generateMipmap(e.TEXTURE_CUBE_MAP),n.bindTexture(e.TEXTURE_CUBE_MAP,null)}else n.bindTexture(e.TEXTURE_2D,a.__webglTexture),x(e.TEXTURE_2D,t.texture,c),_(i.__webglFramebuffer,t,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),h(t.texture,c)&&e.generateMipmap(e.TEXTURE_2D),n.bindTexture(e.TEXTURE_2D,null);t.depthBuffer&&T(t)}function A(t){var i=t.texture;if(h(i,l(t))){var a=t.isWebGLRenderTargetCube?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,o=r.get(i).__webglTexture;n.bindTexture(a,o),e.generateMipmap(a),n.bindTexture(a,null)}}var C="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext;this.setTexture2D=g,this.setTextureCube=y,this.setTextureCubeDynamic=b,this.setupRenderTarget=S,this.updateRenderTargetMipmap=A}function xt(){function e(e){var t=e.uuid,n=r[t];return void 0===n&&(n={},r[t]=n),n}function t(e){delete r[e.uuid]}function n(){r={}}var r={};return{get:e,remove:t,clear:n}}function wt(e,t,n){function r(){var t=!1,n=new m,r=null,i=new m;return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,a,o,s){!0===s&&(t*=o,r*=o,a*=o),n.set(t,r,a,o),!1===i.equals(n)&&(e.clearColor(t,r,a,o),i.copy(n))},reset:function(){t=!1,r=null,i.set(0,0,0,1)}}}function i(){var t=!1,n=null,r=null,i=null;return{setTest:function(t){t?p(e.DEPTH_TEST):d(e.DEPTH_TEST)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case Eo:e.depthFunc(e.NEVER);break;case Mo:e.depthFunc(e.ALWAYS);break;case To:e.depthFunc(e.LESS);break;case So:e.depthFunc(e.LEQUAL);break;case Ao:e.depthFunc(e.EQUAL);break;case Co:e.depthFunc(e.GEQUAL);break;case Po:e.depthFunc(e.GREATER);break;case Lo:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}}function a(){var t=!1,n=null,r=null,i=null,a=null,o=null,s=null,l=null,c=null;return{setTest:function(t){t?p(e.STENCIL_TEST):d(e.STENCIL_TEST)},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,o){r===t&&i===n&&a===o||(e.stencilFunc(t,n,o),r=t,i=n,a=o)},setOp:function(t,n,r){o===t&&s===n&&l===r||(e.stencilOp(t,n,r),o=t,s=n,l=r)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,n=null,r=null,i=null,a=null,o=null,s=null,l=null,c=null}}}function o(t,n,r){var i=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var o=0;o<r;o++)e.texImage2D(n+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,i);return a}function s(){R.setClear(0,0,0,1),O.setClear(1),I.setClear(0),p(e.DEPTH_TEST),O.setFunc(So),y(!1),b(ja),p(e.CULL_FACE),p(e.BLEND),v(to)}function l(){for(var e=0,t=k.length;e<t;e++)k[e]=0}function c(n){if(k[n]=1,0===D[n]&&(e.enableVertexAttribArray(n),D[n]=1),0!==U[n]){t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n,0),U[n]=0}}function u(n,r){if(k[n]=1,0===D[n]&&(e.enableVertexAttribArray(n),D[n]=1),U[n]!==r){t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n,r),U[n]=r}}function h(){for(var t=0,n=D.length;t!==n;++t)D[t]!==k[t]&&(e.disableVertexAttribArray(t),D[t]=0)}function p(t){!0!==F[t]&&(e.enable(t),F[t]=!0)}function d(t){!1!==F[t]&&(e.disable(t),F[t]=!1)}function f(){if(null===z&&(z=[],t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")||t.get("WEBGL_compressed_texture_etc1")))for(var n=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),r=0;r<n.length;r++)z.push(n[r]);return z}function v(t,r,i,a,o,s,l,c){t!==eo?p(e.BLEND):d(e.BLEND),t===ao||t===B&&c===q||(t===no?c?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):t===ro?c?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):t===io?c?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):c?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),B=t,q=c),t===ao?(o=o||r,s=s||i,l=l||a,r===j&&o===V||(e.blendEquationSeparate(n(r),n(o)),j=r,V=o),i===G&&a===H&&s===W&&l===X||(e.blendFuncSeparate(n(i),n(a),n(s),n(l)),G=i,H=a,W=s,X=l)):(j=null,G=null,H=null,V=null,W=null,X=null)}function g(t){t.side===Ya?d(e.CULL_FACE):p(e.CULL_FACE),y(t.side===qa),!0===t.transparent?v(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha):v(eo),O.setFunc(t.depthFunc),O.setTest(t.depthTest),O.setMask(t.depthWrite),R.setMask(t.colorWrite),w(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)}function y(t){Y!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),Y=t)}function b(t){t!==Ba?(p(e.CULL_FACE),t!==Z&&(t===ja?e.cullFace(e.BACK):t===Ga?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):d(e.CULL_FACE),Z=t}function x(t){t!==K&&(ne&&e.lineWidth(t),K=t)}function w(t,n,r){t?(p(e.POLYGON_OFFSET_FILL),J===n&&Q===r||(e.polygonOffset(n,r),J=n,Q=r)):d(e.POLYGON_OFFSET_FILL)}function _(){return $}function E(t){$=t,t?p(e.SCISSOR_TEST):d(e.SCISSOR_TEST)}function M(t){void 0===t&&(t=e.TEXTURE0+ee-1),re!==t&&(e.activeTexture(t),re=t)}function T(t,n){null===re&&M();var r=ie[re];void 0===r&&(r={type:void 0,texture:void 0},ie[re]=r),r.type===t&&r.texture===n||(e.bindTexture(t,n||se[t]),r.type=t,r.texture=n)}function S(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function A(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function C(t){!1===ae.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ae.copy(t))}function P(t){!1===oe.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),oe.copy(t))}function L(){for(var t=0;t<D.length;t++)1===D[t]&&(e.disableVertexAttribArray(t),D[t]=0);F={},z=null,re=null,ie={},B=null,Y=null,Z=null,R.reset(),O.reset(),I.reset()}var R=new r,O=new i,I=new a,N=e.getParameter(e.MAX_VERTEX_ATTRIBS),k=new Uint8Array(N),D=new Uint8Array(N),U=new Uint8Array(N),F={},z=null,B=null,j=null,G=null,H=null,V=null,W=null,X=null,q=!1,Y=null,Z=null,K=null,J=null,Q=null,$=null,ee=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),te=parseFloat(/^WebGL\ ([0-9])/.exec(e.getParameter(e.VERSION))[1]),ne=parseFloat(te)>=1,re=null,ie={},ae=new m,oe=new m,se={};return se[e.TEXTURE_2D]=o(e.TEXTURE_2D,e.TEXTURE_2D,1),se[e.TEXTURE_CUBE_MAP]=o(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),{buffers:{color:R,depth:O,stencil:I},init:s,initAttributes:l,enableAttribute:c,enableAttributeAndDivisor:u,disableUnusedAttributes:h,enable:p,disable:d,getCompressedTextureFormats:f,setBlending:v,setMaterial:g,setFlipSided:y,setCullFace:b,setLineWidth:x,setPolygonOffset:w,getScissorTest:_,setScissorTest:E,activeTexture:M,bindTexture:T,compressedTexImage2D:S,texImage2D:A,scissor:C,viewport:P,reset:L}}function _t(e,t,n){function r(){if(void 0!==a)return a;var n=t.get("EXT_texture_filter_anisotropic");return a=null!==n?e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var a,o=void 0!==n.precision?n.precision:"highp",s=i(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var l=!0===n.logarithmicDepthBuffer&&!!t.get("EXT_frag_depth"),c=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),u=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),d=e.getParameter(e.MAX_VERTEX_ATTRIBS),f=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),m=e.getParameter(e.MAX_VARYING_VECTORS),v=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),g=u>0,y=!!t.get("OES_texture_float");return{getMaxAnisotropy:r,getMaxPrecision:i,precision:o,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:u,maxTextureSize:h,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:v,vertexTextures:g,floatFragmentTextures:y,floatVertexTextures:g&&y}}function Et(e){_e.call(this),this.cameras=e||[]}function Mt(e){function t(){if(r.isPresenting){var t=r.getEyeParameters("left"),i=t.renderWidth,a=t.renderHeight;p=e.getPixelRatio(),h=e.getSize(),e.setDrawingBufferSize(2*i,a,1)}else n.enabled&&e.setDrawingBufferSize(h.width,h.height,p)}var n=this,r=null,i=null;"VRFrameData"in window&&(i=new window.VRFrameData);var a=new x,o=new x,s=new x,l=new _e;l.bounds=new m(0,0,.5,1),l.layers.enable(1);var c=new _e;c.bounds=new m(.5,0,.5,1),c.layers.enable(2);var u=new Et([l,c]);u.layers.enable(1),u.layers.enable(2);var h,p;window.addEventListener("vrdisplaypresentchange",t,!1),this.enabled=!1,this.standing=!1,this.getDevice=function(){return r},this.setDevice=function(e){void 0!==e&&(r=e)},this.getCamera=function(e){if(null===r)return e;r.depthNear=e.near,r.depthFar=e.far,r.getFrameData(i);var t=i.pose;null!==t.position?e.position.fromArray(t.position):e.position.set(0,0,0),null!==t.orientation&&e.quaternion.fromArray(t.orientation),e.updateMatrixWorld();var n=r.stageParameters;if(this.standing&&n&&(o.fromArray(n.sittingToStandingTransform),s.getInverse(o),e.matrixWorld.multiply(o),e.matrixWorldInverse.multiply(s)),!1===r.isPresenting)return e;u.matrixWorld.copy(e.matrixWorld),u.matrixWorldInverse.copy(e.matrixWorldInverse),l.matrixWorldInverse.fromArray(i.leftViewMatrix),c.matrixWorldInverse.fromArray(i.rightViewMatrix),this.standing&&n&&(l.matrixWorldInverse.multiply(s),c.matrixWorldInverse.multiply(s));var h=e.parent;null!==h&&(a.getInverse(h.matrixWorld),l.matrixWorldInverse.multiply(a),c.matrixWorldInverse.multiply(a)),l.matrixWorld.getInverse(l.matrixWorldInverse),c.matrixWorld.getInverse(c.matrixWorldInverse),l.projectionMatrix.fromArray(i.leftProjectionMatrix),c.projectionMatrix.fromArray(i.rightProjectionMatrix),u.projectionMatrix.copy(l.projectionMatrix);var p=r.getLayers();if(p.length){var d=p[0];null!==d.leftBounds&&4===d.leftBounds.length&&l.bounds.fromArray(d.leftBounds),null!==d.rightBounds&&4===d.rightBounds.length&&c.bounds.fromArray(d.rightBounds)}return u},this.getStandingMatrix=function(){return o},this.submitFrame=function(){r&&r.isPresenting&&r.submitFrame()}}function Tt(e){var t={};return{get:function(n){if(void 0!==t[n])return t[n];var r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":r=e.getExtension("WEBGL_compressed_texture_etc1");break;default:r=e.getExtension(n)}return null===r&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=r,r}}}function St(){function e(){c.value!==r&&(c.value=r,c.needsUpdate=i>0),n.numPlanes=i,n.numIntersection=0}function t(e,t,r,i){var a=null!==e?e.length:0,o=null;if(0!==a){if(o=c.value,!0!==i||null===o){var u=r+4*a,h=t.matrixWorldInverse;l.getNormalMatrix(h),(null===o||o.length<u)&&(o=new Float32Array(u));for(var p=0,d=r;p!==a;++p,d+=4)s.copy(e[p]).applyMatrix4(h,l),s.normal.toArray(o,d),o[d+3]=s.constant}c.value=o,c.needsUpdate=!0}return n.numPlanes=a,o}var n=this,r=null,i=0,a=!1,o=!1,s=new de,l=new pe,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(e,n,o){var s=0!==e.length||n||0!==i||a;return a=n,r=t(e,o,0),i=e.length,s},this.beginShadows=function(){o=!0,t(null)},this.endShadows=function(){o=!1,e()},this.setState=function(n,s,l,u,h,p){if(!a||null===n||0===n.length||o&&!l)o?t(null):e();else{var d=o?0:i,f=4*d,m=h.clippingState||null;c.value=m,m=t(n,u,f,p);for(var v=0;v!==f;++v)m[v]=r[v];h.clippingState=m,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=d}}}function At(e){function t(){return null===J?pe:1}function n(){Ne.init(),Ne.scissor(ie.copy(de).multiplyScalar(pe)),Ne.viewport(le.copy(ye).multiplyScalar(pe))}function r(){K=null,te=null,ee="",$=-1,Ne.reset()}function i(e){e.preventDefault(),r(),n(),ke.clear(),Be.clear()}function a(e){var t=e.target;t.removeEventListener("dispose",a),o(t)}function o(e){s(e),ke.remove(e)}function s(e){var t=ke.get(e).program;e.program=void 0,void 0!==t&&je.releaseProgram(t)}function l(e,t,n){e.render(function(e){Z.renderBufferImmediate(e,t,n)})}function c(e,t){return Math.abs(t[0])-Math.abs(e[0])}function u(e,t,n,r){if(n&&n.isInstancedBufferGeometry&&null===Oe.get("ANGLE_instanced_arrays"))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===r&&(r=0),Ne.initAttributes();var i=n.attributes,a=t.getAttributes(),o=e.defaultAttributeValues;for(var s in a){var l=a[s];if(l>=0){var c=i[s];if(void 0!==c){var u=c.normalized,h=c.itemSize,p=Ue.get(c),d=p.buffer,f=p.type,m=p.bytesPerElement;if(c.isInterleavedBufferAttribute){var v=c.data,g=v.stride,y=c.offset;v&&v.isInstancedInterleavedBuffer?(Ne.enableAttributeAndDivisor(l,v.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=v.meshPerAttribute*v.count)):Ne.enableAttribute(l),Le.bindBuffer(Le.ARRAY_BUFFER,d),Le.vertexAttribPointer(l,h,f,u,g*m,(r*g+y)*m)}else c.isInstancedBufferAttribute?(Ne.enableAttributeAndDivisor(l,c.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=c.meshPerAttribute*c.count)):Ne.enableAttribute(l),Le.bindBuffer(Le.ARRAY_BUFFER,d),Le.vertexAttribPointer(l,h,f,u,0,r*h*m)}else if(void 0!==o){var b=o[s];if(void 0!==b)switch(b.length){case 2:Le.vertexAttrib2fv(l,b);break;case 3:Le.vertexAttrib3fv(l,b);break;case 4:Le.vertexAttrib4fv(l,b);break;default:Le.vertexAttrib1fv(l,b)}}}}Ne.disableUnusedAttributes()}function h(e,t,n){if(e.visible){if(e.layers.test(t.layers))if(e.isLight)V.push(e);else if(e.isSprite)e.frustumCulled&&!be.intersectsSprite(e)||q.push(e);else if(e.isLensFlare)Y.push(e);else if(e.isImmediateRenderObject)n&&Me.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ee),W.push(e,null,e.material,Me.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.update(),!e.frustumCulled||be.intersectsObject(e))){n&&Me.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ee);var r=Be.update(e),i=e.material;if(Array.isArray(i))for(var a=r.groups,o=0,s=a.length;o<s;o++){var l=a[o],c=i[l.materialIndex];c&&c.visible&&W.push(e,r,c,Me.z,l)}else i.visible&&W.push(e,r,i,Me.z,null)}for(var u=e.children,o=0,s=u.length;o<s;o++)h(u[o],t,n)}}function p(e,t,n,r){for(var i=0,a=e.length;i<a;i++){var o=e[i],s=o.object,l=o.geometry,c=void 0===r?o.material:r,u=o.group;if(n.isArrayCamera){re=n;for(var h=n.cameras,p=0,f=h.length;p<f;p++){var m=h[p];if(s.layers.test(m.layers)){var v=m.bounds,g=v.x*ue,y=v.y*he,b=v.z*ue,x=v.w*he;Z.setViewport(g,y,b,x),Z.setScissor(g,y,b,x),Z.setScissorTest(!0),d(s,t,m,l,c,u)}}}else re=null,d(s,t,n,l,c,u)}}function d(e,t,n,r,i,a){if(e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.onBeforeRender(Z,t,n,r,i,a),e.isImmediateRenderObject){Ne.setMaterial(i);var o=v(n,t.fog,i,e);ee="",l(e,o,i)}else Z.renderBufferDirect(n,t.fog,r,i,e,a);e.onAfterRender(Z,t,n,r,i,a)}function f(e,t,n){var r=ke.get(e),i=je.getParameters(e,Ae,t,xe.numPlanes,xe.numIntersection,n),o=je.getProgramCode(e,i),l=r.program,c=!0;if(void 0===l)e.addEventListener("dispose",a);else if(l.code!==o)s(e);else{if(void 0!==i.shaderID)return;c=!1}if(c){if(i.shaderID){var u=nl[i.shaderID];r.shader={name:e.type,uniforms:el.clone(u.uniforms),vertexShader:u.vertexShader,fragmentShader:u.fragmentShader}}else r.shader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.onBeforeCompile(r.shader),l=je.acquireProgram(e,r.shader,i,o),r.program=l,e.program=l}var h=l.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var p=0;p<Z.maxMorphTargets;p++)h["morphTarget"+p]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(var p=0;p<Z.maxMorphNormals;p++)h["morphNormal"+p]>=0&&e.numSupportedMorphNormals++}var d=r.shader.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(r.numClippingPlanes=xe.numPlanes,r.numIntersection=xe.numIntersection,d.clippingPlanes=xe.uniform),r.fog=t,r.lightsHash=Ae.hash,e.lights&&(d.ambientLightColor.value=Ae.ambient,d.directionalLights.value=Ae.directional,d.spotLights.value=Ae.spot,d.rectAreaLights.value=Ae.rectArea,d.pointLights.value=Ae.point,d.hemisphereLights.value=Ae.hemi,d.directionalShadowMap.value=Ae.directionalShadowMap,d.directionalShadowMatrix.value=Ae.directionalShadowMatrix,d.spotShadowMap.value=Ae.spotShadowMap,d.spotShadowMatrix.value=Ae.spotShadowMatrix,d.pointShadowMap.value=Ae.pointShadowMap,d.pointShadowMatrix.value=Ae.pointShadowMatrix);var f=r.program.getUniforms(),m=ne.seqWithValue(f.seq,d);r.uniformsList=m}function v(e,t,n,r){ce=0;var i=ke.get(n);if(we&&(_e||e!==te)){var a=e===te&&n.id===$;xe.setState(n.clippingPlanes,n.clipIntersection,n.clipShadows,e,i,a)}!1===n.needsUpdate&&(void 0===i.program?n.needsUpdate=!0:n.fog&&i.fog!==t?n.needsUpdate=!0:n.lights&&i.lightsHash!==Ae.hash?n.needsUpdate=!0:void 0===i.numClippingPlanes||i.numClippingPlanes===xe.numPlanes&&i.numIntersection===xe.numIntersection||(n.needsUpdate=!0)),n.needsUpdate&&(f(n,t,r),n.needsUpdate=!1);var o=!1,s=!1,l=!1,c=i.program,u=c.getUniforms(),h=i.shader.uniforms;if(c.id!==K&&(Le.useProgram(c.program),K=c.id,o=!0,s=!0,l=!0),n.id!==$&&($=n.id,s=!0),o||e!==te){if(u.setValue(Le,"projectionMatrix",e.projectionMatrix),Ie.logarithmicDepthBuffer&&u.setValue(Le,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),te!==(re||e)&&(te=re||e,s=!0,l=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.envMap){var p=u.map.cameraPosition;void 0!==p&&p.setValue(Le,Me.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.skinning)&&u.setValue(Le,"viewMatrix",e.matrixWorldInverse)}if(n.skinning){u.setOptional(Le,r,"bindMatrix"),u.setOptional(Le,r,"bindMatrixInverse");var d=r.skeleton;if(d){var m=d.bones;if(Ie.floatVertexTextures){if(void 0===d.boneTexture){var v=Math.sqrt(4*m.length);v=Hs.nextPowerOfTwo(Math.ceil(v)),v=Math.max(v,4);var b=new Float32Array(v*v*4);b.set(d.boneMatrices);var x=new w(b,v,v,ms,ss);d.boneMatrices=b,d.boneTexture=x,d.boneTextureSize=v}u.setValue(Le,"boneTexture",d.boneTexture),u.setValue(Le,"boneTextureSize",d.boneTextureSize)}else u.setOptional(Le,d,"boneMatrices")}}return s&&(u.setValue(Le,"toneMappingExposure",Z.toneMappingExposure),u.setValue(Le,"toneMappingWhitePoint",Z.toneMappingWhitePoint),n.lights&&R(h,l),t&&n.fog&&M(h,t),(n.isMeshBasicMaterial||n.isMeshLambertMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.isMeshNormalMaterial||n.isMeshDepthMaterial)&&g(h,n),n.isLineBasicMaterial?y(h,n):n.isLineDashedMaterial?(y(h,n),_(h,n)):n.isPointsMaterial?E(h,n):n.isMeshLambertMaterial?T(h,n):n.isMeshToonMaterial?A(h,n):n.isMeshPhongMaterial?S(h,n):n.isMeshPhysicalMaterial?P(h,n):n.isMeshStandardMaterial?C(h,n):n.isMeshDepthMaterial?n.displacementMap&&(h.displacementMap.value=n.displacementMap,h.displacementScale.value=n.displacementScale,h.displacementBias.value=n.displacementBias):n.isMeshNormalMaterial&&L(h,n),void 0!==h.ltcMat&&(h.ltcMat.value=$s.LTC_MAT_TEXTURE),void 0!==h.ltcMag&&(h.ltcMag.value=$s.LTC_MAG_TEXTURE),ne.upload(Le,i.uniformsList,h,Z)),u.setValue(Le,"modelViewMatrix",r.modelViewMatrix),u.setValue(Le,"normalMatrix",r.normalMatrix),u.setValue(Le,"modelMatrix",r.matrixWorld),c}function g(e,t){e.opacity.value=t.opacity,e.diffuse.value=t.color,t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),e.map.value=t.map,e.specularMap.value=t.specularMap,e.alphaMap.value=t.alphaMap,t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);var n;if(t.map?n=t.map:t.specularMap?n=t.specularMap:t.displacementMap?n=t.displacementMap:t.normalMap?n=t.normalMap:t.bumpMap?n=t.bumpMap:t.roughnessMap?n=t.roughnessMap:t.metalnessMap?n=t.metalnessMap:t.alphaMap?n=t.alphaMap:t.emissiveMap&&(n=t.emissiveMap),void 0!==n){n.isWebGLRenderTarget&&(n=n.texture);var r=n.offset,i=n.repeat;e.offsetRepeat.value.set(r.x,r.y,i.x,i.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap&&t.envMap.isCubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio}function y(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function _(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function E(e,t){if(e.diffuse.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size*pe,e.scale.value=.5*he,e.map.value=t.map,null!==t.map){var n=t.map.offset,r=t.map.repeat;e.offsetRepeat.value.set(n.x,n.y,r.x,r.y)}}function M(e,t){e.fogColor.value=t.color,t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)}function T(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function S(e,t){e.specular.value=t.specular,e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function A(e,t){S(e,t),t.gradientMap&&(e.gradientMap.value=t.gradientMap)}function C(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}function P(e,t){e.clearCoat.value=t.clearCoat,e.clearCoatRoughness.value=t.clearCoatRoughness,C(e,t)}function L(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function R(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLights.needsUpdate=t,e.pointLights.needsUpdate=t,e.spotLights.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function O(e){for(var t=0,n=0,r=e.length;n<r;n++){var i=e[n];i.castShadow&&(Ae.shadows[t]=i,t++)}Ae.shadows.length=t}function I(e,t){var n,r,i,a,o,s,l,c,u=0,h=0,p=0,d=t.matrixWorldInverse,f=0,m=0,v=0,g=0,y=0;for(n=0,r=e.length;n<r;n++)if(i=e[n],o=i.color,s=i.intensity,l=i.distance,c=i.shadow&&i.shadow.map?i.shadow.map.texture:null,i.isAmbientLight)u+=o.r*s,h+=o.g*s,p+=o.b*s;else if(i.isDirectionalLight){var b=Ge.get(i);b.color.copy(i.color).multiplyScalar(i.intensity),b.direction.setFromMatrixPosition(i.matrixWorld),Me.setFromMatrixPosition(i.target.matrixWorld),b.direction.sub(Me),b.direction.transformDirection(d),b.shadow=i.castShadow,i.castShadow&&(a=i.shadow,b.shadowBias=a.bias,b.shadowRadius=a.radius,b.shadowMapSize=a.mapSize),Ae.directionalShadowMap[f]=c,Ae.directionalShadowMatrix[f]=i.shadow.matrix,Ae.directional[f]=b,f++}else if(i.isSpotLight){var b=Ge.get(i);b.position.setFromMatrixPosition(i.matrixWorld),b.position.applyMatrix4(d),b.color.copy(o).multiplyScalar(s),b.distance=l,b.direction.setFromMatrixPosition(i.matrixWorld),Me.setFromMatrixPosition(i.target.matrixWorld),b.direction.sub(Me),b.direction.transformDirection(d),b.coneCos=Math.cos(i.angle),b.penumbraCos=Math.cos(i.angle*(1-i.penumbra)),b.decay=0===i.distance?0:i.decay,b.shadow=i.castShadow,i.castShadow&&(a=i.shadow,b.shadowBias=a.bias,b.shadowRadius=a.radius,b.shadowMapSize=a.mapSize),Ae.spotShadowMap[v]=c,Ae.spotShadowMatrix[v]=i.shadow.matrix,Ae.spot[v]=b,v++}else if(i.isRectAreaLight){var b=Ge.get(i);b.color.copy(o).multiplyScalar(s/(i.width*i.height)),b.position.setFromMatrixPosition(i.matrixWorld),b.position.applyMatrix4(d),Se.identity(),Te.copy(i.matrixWorld),Te.premultiply(d),Se.extractRotation(Te),b.halfWidth.set(.5*i.width,0,0),b.halfHeight.set(0,.5*i.height,0),b.halfWidth.applyMatrix4(Se),b.halfHeight.applyMatrix4(Se),Ae.rectArea[g]=b,g++}else if(i.isPointLight){var b=Ge.get(i);b.position.setFromMatrixPosition(i.matrixWorld),b.position.applyMatrix4(d),b.color.copy(i.color).multiplyScalar(i.intensity),b.distance=i.distance,b.decay=0===i.distance?0:i.decay,b.shadow=i.castShadow,i.castShadow&&(a=i.shadow,b.shadowBias=a.bias,b.shadowRadius=a.radius,b.shadowMapSize=a.mapSize),Ae.pointShadowMap[m]=c,Ae.pointShadowMatrix[m]=i.shadow.matrix,Ae.point[m]=b,m++}else if(i.isHemisphereLight){var b=Ge.get(i);b.direction.setFromMatrixPosition(i.matrixWorld),b.direction.transformDirection(d),b.direction.normalize(),b.skyColor.copy(i.color).multiplyScalar(s),b.groundColor.copy(i.groundColor).multiplyScalar(s),Ae.hemi[y]=b,y++}Ae.ambient[0]=u,Ae.ambient[1]=h,Ae.ambient[2]=p,Ae.directional.length=f,Ae.spot.length=v,Ae.rectArea.length=g,Ae.point.length=m,Ae.hemi.length=y,Ae.hash=f+","+m+","+v+","+g+","+y+","+Ae.shadows.length}function N(){var e=ce;return e>=Ie.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+e+" texture units while this GPU supports only "+Ie.maxTextures),ce+=1,e}function k(e){var t;if(e===Xo)return Le.REPEAT;if(e===qo)return Le.CLAMP_TO_EDGE;if(e===Yo)return Le.MIRRORED_REPEAT;if(e===Zo)return Le.NEAREST;if(e===Ko)return Le.NEAREST_MIPMAP_NEAREST;if(e===Jo)return Le.NEAREST_MIPMAP_LINEAR;if(e===Qo)return Le.LINEAR;if(e===$o)return Le.LINEAR_MIPMAP_NEAREST;if(e===es)return Le.LINEAR_MIPMAP_LINEAR;if(e===ts)return Le.UNSIGNED_BYTE;if(e===cs)return Le.UNSIGNED_SHORT_4_4_4_4;if(e===us)return Le.UNSIGNED_SHORT_5_5_5_1;if(e===hs)return Le.UNSIGNED_SHORT_5_6_5;if(e===ns)return Le.BYTE;if(e===rs)return Le.SHORT;if(e===is)return Le.UNSIGNED_SHORT;if(e===as)return Le.INT;if(e===os)return Le.UNSIGNED_INT;if(e===ss)return Le.FLOAT;if(e===ls&&null!==(t=Oe.get("OES_texture_half_float")))return t.HALF_FLOAT_OES;if(e===ds)return Le.ALPHA;if(e===fs)return Le.RGB;if(e===ms)return Le.RGBA;if(e===vs)return Le.LUMINANCE;if(e===gs)return Le.LUMINANCE_ALPHA;if(e===ys)return Le.DEPTH_COMPONENT;if(e===bs)return Le.DEPTH_STENCIL;if(e===oo)return Le.FUNC_ADD;if(e===so)return Le.FUNC_SUBTRACT;if(e===lo)return Le.FUNC_REVERSE_SUBTRACT;if(e===ho)return Le.ZERO;if(e===po)return Le.ONE;if(e===fo)return Le.SRC_COLOR;if(e===mo)return Le.ONE_MINUS_SRC_COLOR;if(e===vo)return Le.SRC_ALPHA;if(e===go)return Le.ONE_MINUS_SRC_ALPHA;if(e===yo)return Le.DST_ALPHA;if(e===bo)return Le.ONE_MINUS_DST_ALPHA;if(e===xo)return Le.DST_COLOR;if(e===wo)return Le.ONE_MINUS_DST_COLOR;if(e===_o)return Le.SRC_ALPHA_SATURATE;if((e===xs||e===ws||e===_s||e===Es)&&null!==(t=Oe.get("WEBGL_compressed_texture_s3tc"))){if(e===xs)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===ws)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===_s)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Es)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((e===Ms||e===Ts||e===Ss||e===As)&&null!==(t=Oe.get("WEBGL_compressed_texture_pvrtc"))){if(e===Ms)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Ts)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Ss)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===As)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===Cs&&null!==(t=Oe.get("WEBGL_compressed_texture_etc1")))return t.COMPRESSED_RGB_ETC1_WEBGL;if((e===co||e===uo)&&null!==(t=Oe.get("EXT_blend_minmax"))){if(e===co)return t.MIN_EXT;if(e===uo)return t.MAX_EXT}return e===ps&&null!==(t=Oe.get("WEBGL_depth_texture"))?t.UNSIGNED_INT_24_8_WEBGL:0}console.log("THREE.WebGLRenderer",za),e=e||{};var D=void 0!==e.canvas?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),U=void 0!==e.context?e.context:null,F=void 0!==e.alpha&&e.alpha,z=void 0===e.depth||e.depth,B=void 0===e.stencil||e.stencil,j=void 0!==e.antialias&&e.antialias,G=void 0===e.premultipliedAlpha||e.premultipliedAlpha,H=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,V=[],W=null,X=new Float32Array(8),q=[],Y=[];this.domElement=D,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=ko,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var Z=this,K=null,J=null,Q=null,$=-1,ee="",te=null,re=null,ie=new m,se=null,le=new m,ce=0,ue=D.width,he=D.height,pe=1,de=new m(0,0,ue,he),ge=!1,ye=new m(0,0,ue,he),be=new fe,xe=new St,we=!1,_e=!1,Ee=new x,Me=new b,Te=new x,Se=new x,Ae={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},Ce={geometries:0,textures:0},Pe={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:Pe,memory:Ce,programs:null};var Le;try{var Re={alpha:F,depth:z,stencil:B,antialias:j,premultipliedAlpha:G,preserveDrawingBuffer:H};if(null===(Le=U||D.getContext("webgl",Re)||D.getContext("experimental-webgl",Re)))throw null!==D.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";void 0===Le.getShaderPrecisionFormat&&(Le.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),D.addEventListener("webglcontextlost",i,!1)}catch(e){console.error("THREE.WebGLRenderer: "+e)}var Oe=new Tt(Le);Oe.get("WEBGL_depth_texture"),Oe.get("OES_texture_float"),Oe.get("OES_texture_float_linear"),Oe.get("OES_texture_half_float"),Oe.get("OES_texture_half_float_linear"),Oe.get("OES_standard_derivatives"),Oe.get("ANGLE_instanced_arrays"),Oe.get("OES_element_index_uint")&&(Fe.MaxIndex=4294967296);var Ie=new _t(Le,Oe,e),Ne=new wt(Le,Oe,k),ke=new xt,De=new bt(Le,Oe,Ne,ke,Ie,k,Ce),Ue=new ve(Le),ze=new tt(Le,Ue,Ce),Be=new rt(Le,ze,Pe),je=new yt(this,Ie),Ge=new nt,He=new Qe,Ve=new Ye(this,Ne,Be,G),We=new Mt(this);this.info.programs=je.programs;var Xe=new et(Le,Oe,Pe),qe=new $e(Le,Oe,Pe);n(),this.context=Le,this.capabilities=Ie,this.extensions=Oe,this.properties=ke,this.renderLists=He,this.state=Ne,this.vr=We;var Ze=new me(this,Ae,Be,Ie);this.shadowMap=Ze;var Ke=new oe(this,q),Je=new ae(this,Y);this.getContext=function(){return Le},this.getContextAttributes=function(){return Le.getContextAttributes()},this.forceContextLoss=function(){var e=Oe.get("WEBGL_lose_context");e&&e.loseContext()},this.getMaxAnisotropy=function(){return Ie.getMaxAnisotropy()},this.getPrecision=function(){return Ie.precision},this.getPixelRatio=function(){return pe},this.setPixelRatio=function(e){void 0!==e&&(pe=e,this.setSize(ue,he,!1))},this.getSize=function(){return{width:ue,height:he}},this.setSize=function(e,t,n){var r=We.getDevice();if(r&&r.isPresenting)return void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");ue=e,he=t,D.width=e*pe,D.height=t*pe,!1!==n&&(D.style.width=e+"px",D.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(){return{width:ue*pe,height:he*pe}},this.setDrawingBufferSize=function(e,t,n){ue=e,he=t,pe=n,D.width=e*n,D.height=t*n,this.setViewport(0,0,e,t)},this.setViewport=function(e,t,n,r){ye.set(e,he-t-r,n,r),Ne.viewport(le.copy(ye).multiplyScalar(pe))},this.setScissor=function(e,t,n,r){de.set(e,he-t-r,n,r),Ne.scissor(ie.copy(de).multiplyScalar(pe))},this.setScissorTest=function(e){Ne.setScissorTest(ge=e)},this.getClearColor=Ve.getClearColor,this.setClearColor=Ve.setClearColor,this.getClearAlpha=Ve.getClearAlpha,this.setClearAlpha=Ve.setClearAlpha,this.clear=function(e,t,n){var r=0;(void 0===e||e)&&(r|=Le.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=Le.DEPTH_BUFFER_BIT),(void 0===n||n)&&(r|=Le.STENCIL_BUFFER_BIT),Le.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(e,t,n,r){this.setRenderTarget(e),this.clear(t,n,r)},this.resetGLState=r,this.dispose=function(){D.removeEventListener("webglcontextlost",i,!1),He.dispose()},this.renderBufferImmediate=function(e,t,n){Ne.initAttributes();var r=ke.get(e);e.hasPositions&&!r.position&&(r.position=Le.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=Le.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=Le.createBuffer()),e.hasColors&&!r.color&&(r.color=Le.createBuffer());var i=t.getAttributes();if(e.hasPositions&&(Le.bindBuffer(Le.ARRAY_BUFFER,r.position),Le.bufferData(Le.ARRAY_BUFFER,e.positionArray,Le.DYNAMIC_DRAW),Ne.enableAttribute(i.position),Le.vertexAttribPointer(i.position,3,Le.FLOAT,!1,0,0)),e.hasNormals){if(Le.bindBuffer(Le.ARRAY_BUFFER,r.normal),!n.isMeshPhongMaterial&&!n.isMeshStandardMaterial&&!n.isMeshNormalMaterial&&n.shading===Za)for(var a=0,o=3*e.count;a<o;a+=9){var s=e.normalArray,l=(s[a+0]+s[a+3]+s[a+6])/3,c=(s[a+1]+s[a+4]+s[a+7])/3,u=(s[a+2]+s[a+5]+s[a+8])/3;s[a+0]=l,s[a+1]=c,s[a+2]=u,s[a+3]=l,s[a+4]=c,s[a+5]=u,s[a+6]=l,s[a+7]=c,s[a+8]=u}Le.bufferData(Le.ARRAY_BUFFER,e.normalArray,Le.DYNAMIC_DRAW),Ne.enableAttribute(i.normal),Le.vertexAttribPointer(i.normal,3,Le.FLOAT,!1,0,0)}e.hasUvs&&n.map&&(Le.bindBuffer(Le.ARRAY_BUFFER,r.uv),Le.bufferData(Le.ARRAY_BUFFER,e.uvArray,Le.DYNAMIC_DRAW),Ne.enableAttribute(i.uv),Le.vertexAttribPointer(Ue.uv,2,Le.FLOAT,!1,0,0)),e.hasColors&&n.vertexColors!==Ja&&(Le.bindBuffer(Le.ARRAY_BUFFER,r.color),Le.bufferData(Le.ARRAY_BUFFER,e.colorArray,Le.DYNAMIC_DRAW),Ne.enableAttribute(i.color),Le.vertexAttribPointer(i.color,3,Le.FLOAT,!1,0,0)),Ne.disableUnusedAttributes(),Le.drawArrays(Le.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,n,r,i,a,o){Ne.setMaterial(i);var s=v(e,n,i,a),l=r.id+"_"+s.id+"_"+(!0===i.wireframe),h=!1;l!==ee&&(ee=l,h=!0);var p=a.morphTargetInfluences;if(void 0!==p){for(var d=[],f=0,m=p.length;f<m;f++){var g=p[f];d.push([g,f])}d.sort(c),d.length>8&&(d.length=8);for(var y=r.morphAttributes,f=0,m=d.length;f<m;f++){var g=d[f];if(X[f]=g[0],0!==g[0]){var b=g[1];!0===i.morphTargets&&y.position&&r.addAttribute("morphTarget"+f,y.position[b]),!0===i.morphNormals&&y.normal&&r.addAttribute("morphNormal"+f,y.normal[b])}else!0===i.morphTargets&&r.removeAttribute("morphTarget"+f),!0===i.morphNormals&&r.removeAttribute("morphNormal"+f)}for(var f=d.length,x=X.length;f<x;f++)X[f]=0;s.getUniforms().setValue(Le,"morphTargetInfluences",X),h=!0}var b=r.index,w=r.attributes.position,_=1;!0===i.wireframe&&(b=ze.getWireframeAttribute(r),_=2);var E,M=Xe;null!==b&&(E=Ue.get(b),M=qe,M.setIndex(E)),h&&(u(i,s,r),null!==b&&Le.bindBuffer(Le.ELEMENT_ARRAY_BUFFER,E.buffer));var T=0;null!==b?T=b.count:void 0!==w&&(T=w.count);var S=r.drawRange.start*_,A=r.drawRange.count*_,C=null!==o?o.start*_:0,P=null!==o?o.count*_:1/0,L=Math.max(S,C),R=Math.min(T,S+A,C+P)-1,O=Math.max(0,R-L+1);if(0!==O){if(a.isMesh)if(!0===i.wireframe)Ne.setLineWidth(i.wireframeLinewidth*t()),M.setMode(Le.LINES);else switch(a.drawMode){case Rs:M.setMode(Le.TRIANGLES);break;case Os:M.setMode(Le.TRIANGLE_STRIP);break;case Is:M.setMode(Le.TRIANGLE_FAN)}else if(a.isLine){var I=i.linewidth;void 0===I&&(I=1),Ne.setLineWidth(I*t()),a.isLineSegments?M.setMode(Le.LINES):a.isLineLoop?M.setMode(Le.LINE_LOOP):M.setMode(Le.LINE_STRIP)}else a.isPoints&&M.setMode(Le.POINTS);r&&r.isInstancedBufferGeometry?r.maxInstancedCount>0&&M.renderInstances(r,L,O):M.render(L,O)}},this.compile=function(e,t){V=[],e.traverse(function(e){e.isLight&&V.push(e)}),I(V,t),e.traverse(function(t){if(t.material)if(Array.isArray(t.material))for(var n=0;n<t.material.length;n++)f(t.material[n],e.fog,t);else f(t.material,e.fog,t)})},this.animate=function(e){function t(){e(),(We.getDevice()||window).requestAnimationFrame(t)}(We.getDevice()||window).requestAnimationFrame(t)},this.render=function(e,t,n,r){if(!t||!t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");ee="",$=-1,te=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),We.enabled&&(t=We.getCamera(t)),Ee.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),be.setFromMatrix(Ee),V.length=0,q.length=0,Y.length=0,_e=this.localClippingEnabled,we=xe.init(this.clippingPlanes,_e,t),W=He.get(e,t),W.init(),h(e,t,Z.sortObjects),W.finish(),!0===Z.sortObjects&&W.sort(),we&&xe.beginShadows(),O(V),Ze.render(e,t),I(V,t),we&&xe.endShadows(),Pe.frame++,Pe.calls=0,Pe.vertices=0,Pe.faces=0,Pe.points=0,void 0===n&&(n=null),this.setRenderTarget(n),Ve.render(e,t,r);var i=W.opaque,a=W.transparent;if(e.overrideMaterial){var o=e.overrideMaterial;i.length&&p(i,e,t,o),a.length&&p(a,e,t,o)}else i.length&&p(i,e,t),a.length&&p(a,e,t);Ke.render(e,t),Je.render(e,t,le),n&&De.updateRenderTargetMipmap(n),Ne.buffers.depth.setTest(!0),Ne.buffers.depth.setMask(!0),Ne.buffers.color.setMask(!0),t.isArrayCamera&&Z.setScissorTest(!1),We.enabled&&We.submitFrame()},this.setFaceCulling=function(e,t){Ne.setCullFace(e),Ne.setFlipSided(t===Ha)},this.allocTextureUnit=N,this.setTexture2D=function(){var e=!1;return function(t,n){t&&t.isWebGLRenderTarget&&(e||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),e=!0),t=t.texture),De.setTexture2D(t,n)}}(),this.setTexture=function(){var e=!1;return function(t,n){e||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),e=!0),De.setTexture2D(t,n)}}(),this.setTextureCube=function(){var e=!1;return function(t,n){t&&t.isWebGLRenderTargetCube&&(e||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),e=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?De.setTextureCube(t,n):De.setTextureCubeDynamic(t,n)}}(),this.getRenderTarget=function(){return J},this.setRenderTarget=function(e){J=e,e&&void 0===ke.get(e).__webglFramebuffer&&De.setupRenderTarget(e);var t,n=e&&e.isWebGLRenderTargetCube;if(e){var r=ke.get(e);t=n?r.__webglFramebuffer[e.activeCubeFace]:r.__webglFramebuffer,ie.copy(e.scissor),se=e.scissorTest,le.copy(e.viewport)}else t=null,ie.copy(de).multiplyScalar(pe),se=ge,le.copy(ye).multiplyScalar(pe);if(Q!==t&&(Le.bindFramebuffer(Le.FRAMEBUFFER,t),Q=t),Ne.scissor(ie),Ne.setScissorTest(se),Ne.viewport(le),n){var i=ke.get(e.texture);Le.framebufferTexture2D(Le.FRAMEBUFFER,Le.COLOR_ATTACHMENT0,Le.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,i.__webglTexture,e.activeMipMapLevel)}},this.readRenderTargetPixels=function(e,t,n,r,i,a){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");var o=ke.get(e).__webglFramebuffer;if(o){var s=!1;o!==Q&&(Le.bindFramebuffer(Le.FRAMEBUFFER,o),s=!0);try{var l=e.texture,c=l.format,u=l.type;if(c!==ms&&k(c)!==Le.getParameter(Le.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(u===ts||k(u)===Le.getParameter(Le.IMPLEMENTATION_COLOR_READ_TYPE)||u===ss&&(Oe.get("OES_texture_float")||Oe.get("WEBGL_color_buffer_float"))||u===ls&&Oe.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");Le.checkFramebufferStatus(Le.FRAMEBUFFER)===Le.FRAMEBUFFER_COMPLETE?t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&Le.readPixels(t,n,r,i,k(c),k(u),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&Le.bindFramebuffer(Le.FRAMEBUFFER,Q)}}}}function Ct(e,t){this.name="",this.color=new re(e),this.density=void 0!==t?t:25e-5}function Pt(e,t,n){this.name="",this.color=new re(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3}function Lt(){be.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function Rt(e,t,n,r,i){be.call(this),this.lensFlares=[],this.positionScreen=new b,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,n,r,i)}function Ot(e){se.call(this),this.type="SpriteMaterial",this.color=new re(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(e)}function It(e){be.call(this),this.type="Sprite",this.material=void 0!==e?e:new Ot}function Nt(){be.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function kt(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new x)}}function Dt(){be.call(this),this.type="Bone"}function Ut(e,t){qe.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new x,this.bindMatrixInverse=new x;var n=this.initBones(),r=new kt(n);this.bind(r,this.matrixWorld),this.normalizeSkinWeights()}function Ft(e){se.call(this),this.type="LineBasicMaterial",this.color=new re(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(e)}function zt(e,t,n){if(1===n)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new Bt(e,t);be.call(this),this.type="Line",this.geometry=void 0!==e?e:new Fe,this.material=void 0!==t?t:new Ft({color:16777215*Math.random()})}function Bt(e,t){zt.call(this,e,t),this.type="LineSegments"}function jt(e,t){zt.call(this,e,t),this.type="LineLoop"}function Gt(e){se.call(this),this.type="PointsMaterial",this.color=new re(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(e)}function Ht(e,t){be.call(this),this.type="Points",this.geometry=void 0!==e?e:new Fe,this.material=void 0!==t?t:new Gt({color:16777215*Math.random()})}function Vt(){be.call(this),this.type="Group"}function Wt(e,t,n,r,i,a,o,s,l){function c(){requestAnimationFrame(c),e.readyState>=e.HAVE_CURRENT_DATA&&(u.needsUpdate=!0)}f.call(this,e,t,n,r,i,a,o,s,l),this.generateMipmaps=!1;var u=this;c()}function Xt(e,t,n,r,i,a,o,s,l,c,u,h){f.call(this,null,a,o,s,l,c,r,i,u,h),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function qt(e,t,n,r,i,a,o,s,l){f.call(this,e,t,n,r,i,a,o,s,l),this.needsUpdate=!0}function Yt(e,t,n,r,i,a,o,s,l,c){if((c=void 0!==c?c:ys)!==ys&&c!==bs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===ys&&(n=is),void 0===n&&c===bs&&(n=ps),f.call(this,null,r,i,a,o,s,c,n,l),this.image={width:e,height:t},this.magFilter=void 0!==o?o:Zo,this.minFilter=void 0!==s?s:Zo,this.flipY=!1,this.generateMipmaps=!1}function Zt(e){Fe.call(this),this.type="WireframeGeometry";var t,n,r,i,a,o,s,l,c,u,h=[],p=[0,0],d={},f=["a","b","c"];if(e&&e.isGeometry){var m=e.faces;for(t=0,r=m.length;t<r;t++){var v=m[t];for(n=0;n<3;n++)s=v[f[n]],l=v[f[(n+1)%3]],p[0]=Math.min(s,l),p[1]=Math.max(s,l),c=p[0]+","+p[1],void 0===d[c]&&(d[c]={index1:p[0],index2:p[1]})}for(c in d)o=d[c],u=e.vertices[o.index1],h.push(u.x,u.y,u.z),u=e.vertices[o.index2],h.push(u.x,u.y,u.z)}else if(e&&e.isBufferGeometry){var g,y,x,w,_,E,M,T;if(u=new b,null!==e.index){for(g=e.attributes.position,y=e.index,x=e.groups,0===x.length&&(x=[{start:0,count:y.count,materialIndex:0}]),i=0,a=x.length;i<a;++i)for(w=x[i],_=w.start,E=w.count,t=_,r=_+E;t<r;t+=3)for(n=0;n<3;n++)s=y.getX(t+n),l=y.getX(t+(n+1)%3),p[0]=Math.min(s,l),p[1]=Math.max(s,l),c=p[0]+","+p[1],void 0===d[c]&&(d[c]={index1:p[0],index2:p[1]});for(c in d)o=d[c],u.fromBufferAttribute(g,o.index1),h.push(u.x,u.y,u.z),u.fromBufferAttribute(g,o.index2),h.push(u.x,u.y,u.z)}else for(g=e.attributes.position,t=0,r=g.count/3;t<r;t++)for(n=0;n<3;n++)M=3*t+n,u.fromBufferAttribute(g,M),h.push(u.x,u.y,u.z),T=3*t+(n+1)%3,u.fromBufferAttribute(g,T),h.push(u.x,u.y,u.z)}this.addAttribute("position",new Ne(h,3))}function Kt(e,t,n){Te.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new Jt(e,t,n)),this.mergeVertices()}function Jt(e,t,n){Fe.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};var r,i,a=[],o=[],s=[],l=[],c=new b,u=new b,h=new b,p=new b,d=new b,f=t+1;for(r=0;r<=n;r++){var m=r/n;for(i=0;i<=t;i++){var v=i/t;u=e(v,m,u),o.push(u.x,u.y,u.z),v-1e-5>=0?(h=e(v-1e-5,m,h),p.subVectors(u,h)):(h=e(v+1e-5,m,h),p.subVectors(h,u)),m-1e-5>=0?(h=e(v,m-1e-5,h),d.subVectors(u,h)):(h=e(v,m+1e-5,h),d.subVectors(h,u)),c.crossVectors(p,d).normalize(),s.push(c.x,c.y,c.z),l.push(v,m)}}for(r=0;r<n;r++)for(i=0;i<t;i++){var g=r*f+i,y=r*f+i+1,x=(r+1)*f+i+1,w=(r+1)*f+i;a.push(g,y,w),a.push(y,x,w)}this.setIndex(a),this.addAttribute("position",new Ne(o,3)),this.addAttribute("normal",new Ne(s,3)),this.addAttribute("uv",new Ne(l,2))}function Qt(e,t,n,r){Te.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},this.fromBufferGeometry(new $t(e,t,n,r)),this.mergeVertices()}function $t(e,t,n,r){function i(e,t,n,r){var i,a,s=Math.pow(2,r),l=[];for(i=0;i<=s;i++){l[i]=[];var c=e.clone().lerp(n,i/s),u=t.clone().lerp(n,i/s),h=s-i;for(a=0;a<=h;a++)l[i][a]=0===a&&i===s?c:c.clone().lerp(u,a/h)}for(i=0;i<s;i++)for(a=0;a<2*(s-i)-1;a++){var p=Math.floor(a/2);a%2==0?(o(l[i][p+1]),o(l[i+1][p]),o(l[i][p])):(o(l[i][p+1]),o(l[i+1][p+1]),o(l[i+1][p]))}}function a(){for(var e=0;e<f.length;e+=6){var t=f[e+0],n=f[e+2],r=f[e+4],i=Math.max(t,n,r),a=Math.min(t,n,r);i>.9&&a<.1&&(t<.2&&(f[e+0]+=1),n<.2&&(f[e+2]+=1),r<.2&&(f[e+4]+=1))}}function o(e){p.push(e.x,e.y,e.z)}function s(t,n){var r=3*t;n.x=e[r+0],n.y=e[r+1],n.z=e[r+2]}function l(){for(var e=new b,t=new b,n=new b,r=new b,i=new d,a=new d,o=new d,s=0,l=0;s<p.length;s+=9,l+=6){e.set(p[s+0],p[s+1],p[s+2]),t.set(p[s+3],p[s+4],p[s+5]),n.set(p[s+6],p[s+7],p[s+8]),i.set(f[l+0],f[l+1]),a.set(f[l+2],f[l+3]),o.set(f[l+4],f[l+5]),r.copy(e).add(t).add(n).divideScalar(3);var h=u(r);c(i,l+0,e,h),c(a,l+2,t,h),c(o,l+4,n,h)}}function c(e,t,n,r){r<0&&1===e.x&&(f[t]=e.x-1),0===n.x&&0===n.z&&(f[t]=r/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}function h(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}Fe.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},n=n||1,r=r||0;var p=[],f=[];!function(e){for(var n=new b,r=new b,a=new b,o=0;o<t.length;o+=3)s(t[o+0],n),s(t[o+1],r),s(t[o+2],a),i(n,r,a,e)}(r),function(e){for(var t=new b,n=0;n<p.length;n+=3)t.x=p[n+0],t.y=p[n+1],t.z=p[n+2],t.normalize().multiplyScalar(e),p[n+0]=t.x,p[n+1]=t.y,p[n+2]=t.z}(n),function(){for(var e=new b,t=0;t<p.length;t+=3){e.x=p[t+0],e.y=p[t+1],e.z=p[t+2];var n=u(e)/2/Math.PI+.5,r=h(e)/Math.PI+.5;f.push(n,1-r)}l(),a()}(),this.addAttribute("position",new Ne(p,3)),this.addAttribute("normal",new Ne(p.slice(),3)),this.addAttribute("uv",new Ne(f,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}function en(e,t){Te.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new tn(e,t)),this.mergeVertices()}function tn(e,t){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];$t.call(this,n,r,e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}function nn(e,t){Te.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new rn(e,t)),this.mergeVertices()}function rn(e,t){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];$t.call(this,n,r,e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}function an(e,t){Te.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new on(e,t)),this.mergeVertices()}function on(e,t){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];$t.call(this,r,i,e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}function sn(e,t){Te.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ln(e,t)),this.mergeVertices()}function ln(e,t){var n=(1+Math.sqrt(5))/2,r=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];$t.call(this,i,a,e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}function cn(e,t,n,r,i,a){Te.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},void 0!==a&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new un(e,t,n,r,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function un(e,t,n,r,i){function a(i){var a=e.getPointAt(i/t),o=l.normals[i],s=l.binormals[i];for(u=0;u<=r;u++){var c=u/r*Math.PI*2,d=Math.sin(c),f=-Math.cos(c);p.x=f*o.x+d*s.x,p.y=f*o.y+d*s.y,p.z=f*o.z+d*s.z,p.normalize(),v.push(p.x,p.y,p.z),h.x=a.x+n*p.x,h.y=a.y+n*p.y,h.z=a.z+n*p.z,m.push(h.x,h.y,h.z)}}function o(){for(u=1;u<=t;u++)for(c=1;c<=r;c++){var e=(r+1)*(u-1)+(c-1),n=(r+1)*u+(c-1),i=(r+1)*u+c,a=(r+1)*(u-1)+c;y.push(e,n,a),y.push(n,i,a)}}function s(){for(c=0;c<=t;c++)for(u=0;u<=r;u++)f.x=c/t,f.y=u/r,g.push(f.x,f.y)}Fe.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},t=t||64,n=n||1,r=r||8,i=i||!1;var l=e.computeFrenetFrames(t,i);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;var c,u,h=new b,p=new b,f=new d,m=[],v=[],g=[],y=[];!function(){for(c=0;c<t;c++)a(c);a(!1===i?t:0),s(),o()}(),this.setIndex(y),this.addAttribute("position",new Ne(m,3)),this.addAttribute("normal",new Ne(v,3)),this.addAttribute("uv",new Ne(g,2))}function hn(e,t,n,r,i,a,o){Te.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new pn(e,t,n,r,i,a)),this.mergeVertices()}function pn(e,t,n,r,i,a){function o(e,t,n,r,i){var a=Math.cos(e),o=Math.sin(e),s=n/t*e,l=Math.cos(s);i.x=r*(2+l)*.5*a,i.y=r*(2+l)*o*.5,i.z=r*Math.sin(s)*.5}Fe.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},e=e||100,t=t||40,n=Math.floor(n)||64,r=Math.floor(r)||8,i=i||2,a=a||3;var s,l,c=[],u=[],h=[],p=[],d=new b,f=new b,m=new b,v=new b,g=new b,y=new b,x=new b;for(s=0;s<=n;++s){var w=s/n*i*Math.PI*2;for(o(w,i,a,e,m),o(w+.01,i,a,e,v),y.subVectors(v,m),x.addVectors(v,m),g.crossVectors(y,x),x.crossVectors(g,y),g.normalize(),x.normalize(),l=0;l<=r;++l){var _=l/r*Math.PI*2,E=-t*Math.cos(_),M=t*Math.sin(_);d.x=m.x+(E*x.x+M*g.x),d.y=m.y+(E*x.y+M*g.y),d.z=m.z+(E*x.z+M*g.z),u.push(d.x,d.y,d.z),f.subVectors(d,m).normalize(),h.push(f.x,f.y,f.z),p.push(s/n),p.push(l/r)}}for(l=1;l<=n;l++)for(s=1;s<=r;s++){var T=(r+1)*(l-1)+(s-1),S=(r+1)*l+(s-1),A=(r+1)*l+s,C=(r+1)*(l-1)+s;c.push(T,S,C),c.push(S,A,C)}this.setIndex(c),this.addAttribute("position",new Ne(u,3)),this.addAttribute("normal",new Ne(h,3)),this.addAttribute("uv",new Ne(p,2))}function dn(e,t,n,r,i){Te.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},this.fromBufferGeometry(new fn(e,t,n,r,i)),this.mergeVertices()}function fn(e,t,n,r,i){Fe.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},e=e||100,t=t||40,n=Math.floor(n)||8,r=Math.floor(r)||6,i=i||2*Math.PI;var a,o,s=[],l=[],c=[],u=[],h=new b,p=new b,d=new b;for(a=0;a<=n;a++)for(o=0;o<=r;o++){var f=o/r*i,m=a/n*Math.PI*2;p.x=(e+t*Math.cos(m))*Math.cos(f),p.y=(e+t*Math.cos(m))*Math.sin(f),p.z=t*Math.sin(m),l.push(p.x,p.y,p.z),h.x=e*Math.cos(f),h.y=e*Math.sin(f),d.subVectors(p,h).normalize(),c.push(d.x,d.y,d.z),u.push(o/r),u.push(a/n)}for(a=1;a<=n;a++)for(o=1;o<=r;o++){var v=(r+1)*a+o-1,g=(r+1)*(a-1)+o-1,y=(r+1)*(a-1)+o,x=(r+1)*a+o;s.push(v,g,x),s.push(g,y,x)}this.setIndex(s),this.addAttribute("position",new Ne(l,3)),this.addAttribute("normal",new Ne(c,3)),this.addAttribute("uv",new Ne(u,2))}function mn(e,t){Te.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new vn(e,t)),this.mergeVertices()}function vn(e,t){void 0!==e&&(Fe.call(this),this.type="ExtrudeBufferGeometry",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),this.computeVertexNormals())}function gn(e,t){Te.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new yn(e,t)),this.mergeVertices()}function yn(e,t){t=t||{};var n=t.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Te;var r=n.generateShapes(e,t.size,t.curveSegments);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),vn.call(this,r,t),this.type="TextBufferGeometry"}function bn(e,t,n,r,i,a,o){Te.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new xn(e,t,n,r,i,a,o)),this.mergeVertices()}function xn(e,t,n,r,i,a,o){Fe.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},e=e||50,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,a=void 0!==a?a:0,o=void 0!==o?o:Math.PI;var s,l,c=a+o,u=0,h=[],p=new b,d=new b,f=[],m=[],v=[],g=[];for(l=0;l<=n;l++){var y=[],x=l/n;for(s=0;s<=t;s++){var w=s/t;p.x=-e*Math.cos(r+w*i)*Math.sin(a+x*o),p.y=e*Math.cos(a+x*o),p.z=e*Math.sin(r+w*i)*Math.sin(a+x*o),m.push(p.x,p.y,p.z),d.set(p.x,p.y,p.z).normalize(),v.push(d.x,d.y,d.z),g.push(w,1-x),y.push(u++)}h.push(y)}for(l=0;l<n;l++)for(s=0;s<t;s++){var _=h[l][s+1],E=h[l][s],M=h[l+1][s],T=h[l+1][s+1];(0!==l||a>0)&&f.push(_,E,T),(l!==n-1||c<Math.PI)&&f.push(E,M,T)}this.setIndex(f),this.addAttribute("position",new Ne(m,3)),this.addAttribute("normal",new Ne(v,3)),this.addAttribute("uv",new Ne(g,2))}function wn(e,t,n,r,i,a){Te.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new _n(e,t,n,r,i,a)),this.mergeVertices()}function _n(e,t,n,r,i,a){Fe.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},e=e||20,t=t||50,i=void 0!==i?i:0,a=void 0!==a?a:2*Math.PI,n=void 0!==n?Math.max(3,n):8,r=void 0!==r?Math.max(1,r):1;var o,s,l,c=[],u=[],h=[],p=[],f=e,m=(t-e)/r,v=new b,g=new d;for(s=0;s<=r;s++){for(l=0;l<=n;l++)o=i+l/n*a,v.x=f*Math.cos(o),v.y=f*Math.sin(o),u.push(v.x,v.y,v.z),h.push(0,0,1),g.x=(v.x/t+1)/2,g.y=(v.y/t+1)/2,p.push(g.x,g.y);f+=m}for(s=0;s<r;s++){var y=s*(n+1);for(l=0;l<n;l++){o=l+y;var x=o,w=o+n+1,_=o+n+2,E=o+1;c.push(x,w,E),c.push(w,_,E)}}this.setIndex(c),this.addAttribute("position",new Ne(u,3)),this.addAttribute("normal",new Ne(h,3)),this.addAttribute("uv",new Ne(p,2))}function En(e,t,n,r){Te.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},this.fromBufferGeometry(new Mn(e,t,n,r)),this.mergeVertices()}function Mn(e,t,n,r){Fe.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t)||12,n=n||0,r=r||2*Math.PI,r=Hs.clamp(r,0,2*Math.PI);var i,a,o,s=[],l=[],c=[],u=1/t,h=new b,p=new d;for(a=0;a<=t;a++){var f=n+a*u*r,m=Math.sin(f),v=Math.cos(f);for(o=0;o<=e.length-1;o++)h.x=e[o].x*m,h.y=e[o].y,h.z=e[o].x*v,l.push(h.x,h.y,h.z),p.x=a/t,p.y=o/(e.length-1),c.push(p.x,p.y)}for(a=0;a<t;a++)for(o=0;o<e.length-1;o++){i=o+a*e.length;var g=i,y=i+e.length,x=i+e.length+1,w=i+1;s.push(g,y,w),s.push(y,x,w)}if(this.setIndex(s),this.addAttribute("position",new Ne(l,3)),this.addAttribute("uv",new Ne(c,2)),this.computeVertexNormals(),r===2*Math.PI){var _=this.attributes.normal.array,E=new b,M=new b,T=new b;for(i=t*e.length*3,a=0,o=0;a<e.length;a++,o+=3)E.x=_[o+0],E.y=_[o+1],E.z=_[o+2],M.x=_[i+o+0],M.y=_[i+o+1],M.z=_[i+o+2],T.addVectors(E,M).normalize(),_[o+0]=_[i+o+0]=T.x,_[o+1]=_[i+o+1]=T.y,_[o+2]=_[i+o+2]=T.z}}function Tn(e,t){Te.call(this),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new Sn(e,t)),this.mergeVertices()}function Sn(e,t){function n(e){var n,s,c,u=i.length/3,h=e.extractPoints(t),p=h.shape,d=h.holes;if(!1===sl.isClockWise(p))for(p=p.reverse(),n=0,s=d.length;n<s;n++)c=d[n],!0===sl.isClockWise(c)&&(d[n]=c.reverse());var f=sl.triangulateShape(p,d);for(n=0,s=d.length;n<s;n++)c=d[n],p=p.concat(c);for(n=0,s=p.length;n<s;n++){var m=p[n];i.push(m.x,m.y,0),a.push(0,0,1),o.push(m.x,m.y)}for(n=0,s=f.length;n<s;n++){var v=f[n],g=v[0]+u,y=v[1]+u,b=v[2]+u;r.push(g,y,b),l+=3}}Fe.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;var r=[],i=[],a=[],o=[],s=0,l=0;if(!1===Array.isArray(e))n(e);else for(var c=0;c<e.length;c++)n(e[c]),this.addGroup(s,l,c),s+=l,l=0;this.setIndex(r),this.addAttribute("position",new Ne(i,3)),this.addAttribute("normal",new Ne(a,3)),this.addAttribute("uv",new Ne(o,2))}function An(e,t){Fe.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1;var n,r,i,a,o=[],s=Math.cos(Hs.DEG2RAD*t),l=[0,0],c={},u=["a","b","c"];e.isBufferGeometry?(a=new Te,a.fromBufferGeometry(e)):a=e.clone(),a.mergeVertices(),a.computeFaceNormals();for(var h=a.vertices,p=a.faces,d=0,f=p.length;d<f;d++)for(var m=p[d],v=0;v<3;v++)n=m[u[v]],r=m[u[(v+1)%3]],l[0]=Math.min(n,r),l[1]=Math.max(n,r),i=l[0]+","+l[1],void 0===c[i]?c[i]={index1:l[0],index2:l[1],face1:d,face2:void 0}:c[i].face2=d;for(i in c){var g=c[i];if(void 0===g.face2||p[g.face1].normal.dot(p[g.face2].normal)<=s){var y=h[g.index1];o.push(y.x,y.y,y.z),y=h[g.index2],o.push(y.x,y.y,y.z)}}this.addAttribute("position",new Ne(o,3))}function Cn(e,t,n,r,i,a,o,s){Te.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Pn(e,t,n,r,i,a,o,s)),this.mergeVertices()}function Pn(e,t,n,r,i,a,o,s){function l(n){var i,a,l,v=new d,x=new b,w=0,_=!0===n?e:t,E=!0===n?1:-1;for(a=m,i=1;i<=r;i++)h.push(0,g*E,0),p.push(0,E,0),f.push(.5,.5),m++;for(l=m,i=0;i<=r;i++){var M=i/r,T=M*s+o,S=Math.cos(T),A=Math.sin(T);x.x=_*A,x.y=g*E,x.z=_*S,h.push(x.x,x.y,x.z),p.push(0,E,0),v.x=.5*S+.5,v.y=.5*A*E+.5,f.push(v.x,v.y),m++}for(i=0;i<r;i++){var C=a+i,P=l+i;!0===n?u.push(P,P+1,C):u.push(P+1,P,C),w+=3}c.addGroup(y,w,!0===n?1:2),y+=w}Fe.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};var c=this;e=void 0!==e?e:20,t=void 0!==t?t:20,n=void 0!==n?n:100,r=Math.floor(r)||8,i=Math.floor(i)||1,a=void 0!==a&&a,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI;var u=[],h=[],p=[],f=[],m=0,v=[],g=n/2,y=0;!function(){var a,l,d=new b,x=new b,w=0,_=(t-e)/n;for(l=0;l<=i;l++){var E=[],M=l/i,T=M*(t-e)+e;for(a=0;a<=r;a++){var S=a/r,A=S*s+o,C=Math.sin(A),P=Math.cos(A);x.x=T*C,x.y=-M*n+g,x.z=T*P,h.push(x.x,x.y,x.z),d.set(C,_,P).normalize(),p.push(d.x,d.y,d.z),f.push(S,1-M),E.push(m++)}v.push(E)}for(a=0;a<r;a++)for(l=0;l<i;l++){var L=v[l][a],R=v[l+1][a],O=v[l+1][a+1],I=v[l][a+1];u.push(L,R,I),u.push(R,O,I),w+=6}c.addGroup(y,w,0),y+=w}(),!1===a&&(e>0&&l(!0),t>0&&l(!1)),this.setIndex(u),this.addAttribute("position",new Ne(h,3)),this.addAttribute("normal",new Ne(p,3)),this.addAttribute("uv",new Ne(f,2))}function Ln(e,t,n,r,i,a,o){Cn.call(this,0,e,t,n,r,i,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}function Rn(e,t,n,r,i,a,o){Pn.call(this,0,e,t,n,r,i,a,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}function On(e,t,n,r){Te.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new In(e,t,n,r)),this.mergeVertices()}function In(e,t,n,r){Fe.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},e=e||50,t=void 0!==t?Math.max(3,t):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var i,a,o=[],s=[],l=[],c=[],u=new b,h=new d;for(s.push(0,0,0),l.push(0,0,1),c.push(.5,.5),a=0,i=3;a<=t;a++,i+=3){var p=n+a/t*r;u.x=e*Math.cos(p),u.y=e*Math.sin(p),s.push(u.x,u.y,u.z),l.push(0,0,1),h.x=(s[i]/e+1)/2,h.y=(s[i+1]/e+1)/2,c.push(h.x,h.y)}for(i=1;i<=t;i++)o.push(i,i+1,0);this.setIndex(o),this.addAttribute("position",new Ne(s,3)),this.addAttribute("normal",new Ne(l,3)),this.addAttribute("uv",new Ne(c,2))}function Nn(e){le.call(this,{uniforms:el.merge([$s.lights,{opacity:{value:1}}]),vertexShader:tl.shadow_vert,fragmentShader:tl.shadow_frag}),this.lights=!0,this.transparent=!0,Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}}}),this.setValues(e)}function kn(e){le.call(this,e),this.type="RawShaderMaterial"}function Dn(e){se.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new re(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new re(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new d(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Un(e){Dn.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(e)}function Fn(e){se.call(this),this.type="MeshPhongMaterial",this.color=new re(16777215),this.specular=new re(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new re(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new d(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ro,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function zn(e){Fn.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(e)}function Bn(e){se.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new d(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function jn(e){se.call(this),this.type="MeshLambertMaterial",this.color=new re(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new re(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ro,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Gn(e){se.call(this),this.type="LineDashedMaterial",this.color=new re(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.lights=!1,this.setValues(e)}function Hn(e,t,n){var r=this,i=!1,a=0,o=0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===i&&void 0!==r.onStart&&r.onStart(e,a,o),i=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,o),a===o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)}}function Vn(e){this.manager=void 0!==e?e:hl}function Wn(e){this.manager=void 0!==e?e:hl,this._parser=null}function Xn(e){this.manager=void 0!==e?e:hl,this._parser=null}function qn(e){this.manager=void 0!==e?e:hl}function Yn(e){this.manager=void 0!==e?e:hl}function Zn(e){this.manager=void 0!==e?e:hl}function Kn(e,t){be.call(this),this.type="Light",this.color=new re(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0}function Jn(e,t,n){Kn.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(be.DefaultUp),this.updateMatrix(),this.groundColor=new re(t)}function Qn(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new d(512,512),this.map=null,this.matrix=new x}function $n(){Qn.call(this,new _e(50,1,.5,500))}function er(e,t,n,r,i,a){Kn.call(this,e,t),this.type="SpotLight",this.position.copy(be.DefaultUp),this.updateMatrix(),this.target=new be,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==a?a:1,this.shadow=new $n}function tr(e,t,n,r){Kn.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new Qn(new _e(90,1,.5,500))}function nr(){Qn.call(this,new we(-5,5,5,-5,.5,500))}function rr(e,t){Kn.call(this,e,t),this.type="DirectionalLight",this.position.copy(be.DefaultUp),this.updateMatrix(),this.target=new be,this.shadow=new nr}function ir(e,t){Kn.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}function ar(e,t,n,r){Kn.call(this,e,t),this.type="RectAreaLight",this.position.set(0,1,0),this.updateMatrix(),this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}function or(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n}function sr(e,t,n,r){or.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function lr(e,t,n,r){or.call(this,e,t,n,r)}function cr(e,t,n,r){or.call(this,e,t,n,r)}function ur(e,t,n,r){if(void 0===e)throw new Error("track name is undefined");if(void 0===t||0===t.length)throw new Error("no keyframes in track named "+e);this.name=e,this.times=pl.convertArray(t,this.TimeBufferType),this.values=pl.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation),this.validate(),this.optimize()}function hr(e,t,n,r){ur.call(this,e,t,n,r)}function pr(e,t,n,r){or.call(this,e,t,n,r)}function dr(e,t,n,r){ur.call(this,e,t,n,r)}function fr(e,t,n,r){ur.call(this,e,t,n,r)}function mr(e,t,n,r){ur.call(this,e,t,n,r)}function vr(e,t,n){ur.call(this,e,t,n)}function gr(e,t,n,r){ur.call(this,e,t,n,r)}function yr(e,t,n,r){ur.apply(this,arguments)}function br(e,t,n){this.name=e,this.tracks=n,this.duration=void 0!==t?t:-1,this.uuid=Hs.generateUUID(),this.duration<0&&this.resetDuration(),this.optimize()}function xr(e){this.manager=void 0!==e?e:hl,this.textures={}}function wr(e){this.manager=void 0!==e?e:hl}function _r(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}function Er(e){"boolean"==typeof e&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),e=void 0),this.manager=void 0!==e?e:hl,this.withCredentials=!1}function Mr(e){this.manager=void 0!==e?e:hl,this.texturePath=""}function Tr(e,t,n,r,i){var a=.5*(r-t),o=.5*(i-n),s=e*e;return(2*n-2*r+a+o)*(e*s)+(-3*n+3*r-2*a-o)*s+a*e+n}function Sr(e,t){var n=1-e;return n*n*t}function Ar(e,t){return 2*(1-e)*e*t}function Cr(e,t){return e*e*t}function Pr(e,t,n,r){return Sr(e,t)+Ar(e,n)+Cr(e,r)}function Lr(e,t){var n=1-e;return n*n*n*t}function Rr(e,t){var n=1-e;return 3*n*n*e*t}function Or(e,t){return 3*(1-e)*e*e*t}function Ir(e,t){return e*e*e*t}function Nr(e,t,n,r,i){return Lr(e,t)+Rr(e,n)+Or(e,r)+Ir(e,i)}function kr(){this.arcLengthDivisions=200}function Dr(e,t){kr.call(this),this.v1=e,this.v2=t}function Ur(){kr.call(this),this.curves=[],this.autoClose=!1}function Fr(e,t,n,r,i,a,o,s){kr.call(this),this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=o,this.aRotation=s||0}function zr(e){kr.call(this),this.points=void 0===e?[]:e}function Br(e,t,n,r){kr.call(this),this.v0=e,this.v1=t,this.v2=n,this.v3=r}function jr(e,t,n){kr.call(this),this.v0=e,this.v1=t,this.v2=n}function Gr(e){Ur.call(this),this.currentPoint=new d,e&&this.fromPoints(e)}function Hr(){Gr.apply(this,arguments),this.holes=[]}function Vr(){this.subPaths=[],this.currentPath=null}function Wr(e){this.data=e}function Xr(e){this.manager=void 0!==e?e:hl}function qr(e){this.manager=void 0!==e?e:hl}function Yr(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new _e,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new _e,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}function Zr(e,t,n){be.call(this),this.type="CubeCamera";var r=new _e(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new b(1,0,0)),this.add(r);var i=new _e(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new b(-1,0,0)),this.add(i);var a=new _e(90,1,e,t);a.up.set(0,0,1),a.lookAt(new b(0,1,0)),this.add(a);var o=new _e(90,1,e,t);o.up.set(0,0,-1),o.lookAt(new b(0,-1,0)),this.add(o);var s=new _e(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new b(0,0,1)),this.add(s);var l=new _e(90,1,e,t);l.up.set(0,-1,0),l.lookAt(new b(0,0,-1)),this.add(l);var c={format:fs,magFilter:Qo,minFilter:Qo};this.renderTarget=new g(n,n,c),this.renderTarget.texture.name="CubeCamera",this.updateCubeMap=function(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,c=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,n.activeCubeFace=0,e.render(t,r,n),n.activeCubeFace=1,e.render(t,i,n),n.activeCubeFace=2,e.render(t,a,n),n.activeCubeFace=3,e.render(t,o,n),n.activeCubeFace=4,e.render(t,s,n),n.texture.generateMipmaps=c,n.activeCubeFace=5,e.render(t,l,n),e.setRenderTarget(null)}}function Kr(){be.call(this),this.type="AudioListener",this.context=xl.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}function Jr(e){be.call(this),this.type="Audio",this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}function Qr(e){Jr.call(this,e),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}function $r(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}function ei(e,t,n){this.binding=e,this.valueSize=n;var r,i=Float64Array;switch(t){case"quaternion":r=this._slerp;break;case"string":case"bool":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(4*n),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}function ti(e,t,n){var r=n||ni.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}function ni(e,t,n){this.path=t,this.parsedPath=n||ni.parseTrackName(t),this.node=ni.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function ri(e){this.uuid=Hs.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var n=0,r=arguments.length;n!==r;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}}function ii(e,t,n){this._mixer=e,this._clip=t,this._localRoot=n||null;for(var r=t.tracks,i=r.length,a=new Array(i),o={endingStart:Ls,endingEnd:Ls},s=0;s!==i;++s){var l=r[s].createInterpolant(null);a[s]=l,l.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Ps,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function ai(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function oi(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}function si(){Fe.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function li(e,t,n,r){this.uuid=Hs.generateUUID(),this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}function ci(e,t){this.uuid=Hs.generateUUID(),this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function ui(e,t,n){ci.call(this,e,t),this.meshPerAttribute=n||1}function hi(e,t,n){Se.call(this,e,t),this.meshPerAttribute=n||1}function pi(e,t,n,r){this.ray=new Ve(e,t),this.near=n||0,this.far=r||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function di(e,t){return e.distance-t.distance}function fi(e,t,n,r){if(!1!==e.visible&&(e.raycast(t,n),!0===r))for(var i=e.children,a=0,o=i.length;a<o;a++)fi(i[a],t,n,!0)}function mi(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function vi(e,t,n){return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==n?n:0,this}function gi(e,t,n){return this.radius=void 0!==e?e:1,this.theta=void 0!==t?t:0,this.y=void 0!==n?n:0,this}function yi(e,t){qe.call(this,e,t),this.animationsMap={},this.animationsList=[];var n=this.geometry.morphTargets.length,r=n-1,i=n/1;this.createAnimation("__default",0,r,i),this.setAnimationWeight("__default",1)}function bi(e){be.call(this),this.material=e,this.render=function(e){}}function xi(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var i=void 0!==n?n:16711680,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);var l=new Fe,c=new Ne(2*o*3,3);l.addAttribute("position",c),Bt.call(this,l,new Ft({color:i,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function wi(e){be.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;for(var t=new Fe,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,i=1;r<32;r++,i++){var a=r/32*Math.PI*2,o=i/32*Math.PI*2;n.push(Math.cos(a),Math.sin(a),1,Math.cos(o),Math.sin(o),1)}t.addAttribute("position",new Ne(n,3));var s=new Ft({fog:!1});this.cone=new Bt(t,s),this.add(this.cone),this.update()}function _i(e){var t=[];e&&e.isBone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,_i(e.children[n]));return t}function Ei(e){for(var t=_i(e),n=new Fe,r=[],i=[],a=new re(0,0,1),o=new re(0,1,0),s=0;s<t.length;s++){var l=t[s];l.parent&&l.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(o.r,o.g,o.b))}n.addAttribute("position",new Ne(r,3)),n.addAttribute("color",new Ne(i,3));var c=new Ft({vertexColors:$a,depthTest:!1,depthWrite:!1,transparent:!0});Bt.call(this,n,c),this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.onBeforeRender()}function Mi(e,t){this.light=e,this.light.updateMatrixWorld();var n=new xn(t,4,2),r=new He({wireframe:!0,fog:!1});r.color.copy(this.light.color),qe.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1}function Ti(e){be.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new Ft({color:e.color}),n=new Fe;n.addAttribute("position",new Se(new Float32Array(15),3)),this.add(new zt(n,t)),this.update()}function Si(e,t){be.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;var n=new rn(t);n.rotateY(.5*Math.PI);var r=new He({vertexColors:$a,wireframe:!0}),i=n.getAttribute("position"),a=new Float32Array(3*i.count);n.addAttribute("color",new Se(a,3)),this.add(new qe(n,r)),this.update()}function Ai(e,t,n,r){e=e||10,t=t||10,n=new re(void 0!==n?n:4473924),r=new re(void 0!==r?r:8947848);for(var i=t/2,a=e/t,o=e/2,s=[],l=[],c=0,u=0,h=-o;c<=t;c++,h+=a){s.push(-o,0,h,o,0,h),s.push(h,0,-o,h,0,o);var p=c===i?n:r;p.toArray(l,u),u+=3,p.toArray(l,u),u+=3,p.toArray(l,u),u+=3,p.toArray(l,u),u+=3}var d=new Fe;d.addAttribute("position",new Ne(s,3)),d.addAttribute("color",new Ne(l,3));var f=new Ft({vertexColors:$a});Bt.call(this,d,f)}function Ci(e,t,n,r,i,a){e=e||10,t=t||16,n=n||8,r=r||64,i=new re(void 0!==i?i:4473924),a=new re(void 0!==a?a:8947848);var o,s,l,c,u,h,p,d=[],f=[];for(c=0;c<=t;c++)l=c/t*(2*Math.PI),o=Math.sin(l)*e,s=Math.cos(l)*e,d.push(0,0,0),d.push(o,0,s),p=1&c?i:a,f.push(p.r,p.g,p.b),f.push(p.r,p.g,p.b);for(c=0;c<=n;c++)for(p=1&c?i:a,h=e-e/n*c,u=0;u<r;u++)l=u/r*(2*Math.PI),o=Math.sin(l)*h,s=Math.cos(l)*h,d.push(o,0,s),f.push(p.r,p.g,p.b),l=(u+1)/r*(2*Math.PI),o=Math.sin(l)*h,s=Math.cos(l)*h,d.push(o,0,s),f.push(p.r,p.g,p.b);var m=new Fe;m.addAttribute("position",new Ne(d,3)),m.addAttribute("color",new Ne(f,3));var v=new Ft({vertexColors:$a});Bt.call(this,m,v)}function Pi(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var i=void 0!==n?n:16776960,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var l=new Fe,c=new Ne(2*o*3,3);l.addAttribute("position",c),Bt.call(this,l,new Ft({color:i,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function Li(e,t){be.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,void 0===t&&(t=1);var n=new Fe;n.addAttribute("position",new Ne([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var r=new Ft({fog:!1});this.add(new zt(n,r)),n=new Fe,n.addAttribute("position",new Ne([0,0,0,0,0,1],3)),this.add(new zt(n,r)),this.update()}function Ri(e){function t(e,t,r){n(e,r),n(t,r)}function n(e,t){a.push(0,0,0),o.push(t.r,t.g,t.b),void 0===s[e]&&(s[e]=[]),s[e].push(a.length/3-1)}var r=new Fe,i=new Ft({color:16777215,vertexColors:Qa}),a=[],o=[],s={},l=new re(16755200),c=new re(16711680),u=new re(43775),h=new re(16777215),p=new re(3355443);t("n1","n2",l),t("n2","n4",l),t("n4","n3",l),t("n3","n1",l),t("f1","f2",l),t("f2","f4",l),t("f4","f3",l),t("f3","f1",l),t("n1","f1",l),t("n2","f2",l),t("n3","f3",l),t("n4","f4",l),t("p","n1",c),t("p","n2",c),t("p","n3",c),t("p","n4",c),t("u1","u2",u),t("u2","u3",u),t("u3","u1",u),t("c","t",h),t("p","c",p),t("cn1","cn2",p),t("cn3","cn4",p),t("cf1","cf2",p),t("cf3","cf4",p),r.addAttribute("position",new Ne(a,3)),r.addAttribute("color",new Ne(o,3)),Bt.call(this,r,i),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}function Oi(e,t){this.object=e,void 0===t&&(t=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new Fe;i.setIndex(new Se(n,1)),i.addAttribute("position",new Se(r,3)),Bt.call(this,i,new Ft({color:t})),this.matrixAutoUpdate=!1,this.update()}function Ii(e,t,n,r,i,a){be.call(this),void 0===r&&(r=16776960),void 0===n&&(n=1),void 0===i&&(i=.2*n),void 0===a&&(a=.2*i),void 0===wl&&(wl=new Fe,wl.addAttribute("position",new Ne([0,0,0,0,1,0],3)),_l=new Pn(0,.5,1,5,1),_l.translate(0,-.5,0)),this.position.copy(t),this.line=new zt(wl,new Ft({color:r})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new qe(_l,new He({color:r})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,a)}function Ni(e){e=e||1;var t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Fe;r.addAttribute("position",new Ne(t,3)),r.addAttribute("color",new Ne(n,3));var i=new Ft({vertexColors:$a});Bt.call(this,r,i)}function ki(){function e(e,a,o,s){t=e,n=o,r=-3*e+3*a-2*o-s,i=2*e-2*a+o+s}var t=0,n=0,r=0,i=0;return{initCatmullRom:function(t,n,r,i,a){e(n,r,a*(r-t),a*(i-n))},initNonuniformCatmullRom:function(t,n,r,i,a,o,s){var l=(n-t)/a-(r-t)/(a+o)+(r-n)/o,c=(r-n)/o-(i-n)/(o+s)+(i-r)/s;l*=o,c*=o,e(n,r,l,c)},calc:function(e){var a=e*e;return t+n*e+r*a+i*(a*e)}}}function Di(e){kr.call(this),e.length<2&&console.warn("THREE.CatmullRomCurve3: Points array needs at least two entries."),this.points=e||[],this.closed=!1}function Ui(e,t,n,r){kr.call(this),this.v0=e,this.v1=t,this.v2=n,this.v3=r}function Fi(e,t,n){kr.call(this),this.v0=e,this.v1=t,this.v2=n}function zi(e,t){kr.call(this),this.v1=e,this.v2=t}function Bi(e,t,n,r,i,a){Fr.call(this,e,t,n,n,r,i,a)}function ji(e){return void 0===e&&(e=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function Gi(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Ht(e,t)}function Hi(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Gt(e)}function Vi(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Di.call(this,e),this.type="catmullrom",this.closed=!0}function Wi(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Di.call(this,e),this.type="catmullrom"}function Xi(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Di.call(this,e),this.type="catmullrom"}function qi(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function Yi(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function r(i,a){try{var o=t[i](a),s=o.value}catch(e){return void n(e)}if(!o.done)return Promise.resolve(s).then(function(e){r("next",e)},function(e){r("throw",e)});e(s)}return r("next")})}}function Zi(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ki(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function Ji(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function Qi(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function $i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function ea(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function ta(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function na(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function ra(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function ia(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function aa(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function oa(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function sa(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function r(i,a){try{var o=t[i](a),s=o.value}catch(e){return void n(e)}if(!o.done)return Promise.resolve(s).then(function(e){r("next",e)},function(e){r("throw",e)});e(s)}return r("next")})}}function la(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ca(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function ua(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function ha(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function pa(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function da(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var fa=n("GiK3"),ma=n.n(fa),va=n("O27J"),ga=n.n(va),ya=(n("cilB"),n("NfCZ")),ba=n.n(ya),xa=n("hY+r"),wa=n.n(xa),_a=n("0Bcf"),Ea=n.n(_a),Ma=n("74qc"),Ta=n.n(Ma),Sa=(n("Np8g"),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),Aa=function(e){function t(e){r(this,t);var n=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={hide:!0,arrow:!1,hello:"",particle:!0},n.helloWorld="Hello World",n.hideTitle=n.hideTitle.bind(n),n.arrowFlash=n.arrowFlash.bind(n),n.writeHello=n.writeHello.bind(n),n}return a(t,e),Sa(t,[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("scroll",this.hideTitle);var t=document.getElementById("loader");console.log(document);var n=document.getElementById("bounce1"),r=document.getElementById("bounce2"),i=document.getElementById("bounce3");t&&setTimeout(function(){setTimeout(function(){return t.classList.add("available")},500),n.classList.add("final-bounce"),r.classList.add("final-bounce"),i.classList.add("final-bounce"),document.body.classList.remove("no-scroll"),setTimeout(function(){return e.setState({hide:!1})},2e3),e.writeHello(),setTimeout(function(){return e.interval=setInterval(function(){return e.arrowFlash()},1200)},3500),setTimeout(function(){t.parentNode.removeChild(t)},2e3)},3e3)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.hideTitle),clearInterval(this.interval)}},{key:"hideTitle",value:function(){window.scrollY>0?this.state.hide||this.setState({hide:!0}):this.state.hide&&this.setState({hide:!1}),this.header.getBoundingClientRect().bottom<=20&&"Hello World"===this.state.hello&&this.setState({hello:"Hello Again"}),window.scrollY>=700&&clearInterval(this.interval)}},{key:"arrowFlash",value:function(){this.setState({arrow:!this.state.arrow})}},{key:"writeHello",value:function(){var e=this;setTimeout(function(){var t=setInterval(function(){e.setState({hello:""+e.state.hello+e.helloWorld.slice(0,1)}),e.helloWorld=e.helloWorld.slice(1),0===e.helloWorld.length&&clearInterval(t)},100)},2500)}},{key:"render",value:function(){var e=this;return ma.a.createElement("div",{className:"header",ref:function(t){return e.header=t}},ma.a.createElement(ba.a,{params:{particles:{number:{value:80},line_linked:{shadow:{enable:!1,color:"#3CA9D1",blur:5}}},interactivity:{detect_on:"window",events:{onhover:{enable:!0,mode:"repulse"}},modes:{repulse:{distance:100,duration:.4}}}},style:{position:"fixed",top:0,left:0,width:"100%",height:"100%"}}),ma.a.createElement("div",{className:"header-titles"},ma.a.createElement("h1",{className:this.state.hide?"header-title-none":"header-title"},"Full Stack"),ma.a.createElement("h1",{className:this.state.hide?"header-title-none":"header-title"},"Software Engineer/Web Developer"),ma.a.createElement("h2",{className:"header-hello"},this.state.hello)),ma.a.createElement("img",{className:this.state.arrow?"arrow":"arrow-none",alt:"down arrow",src:Ta.a}),ma.a.createElement("div",{className:"header-links"},ma.a.createElement("a",{href:"https://www.linkedin.com/in/dylanscheidt",rel:"noopener noreferrer",target:"_blank"},ma.a.createElement("img",{className:"header-icon",alt:"linkedin",src:wa.a})),ma.a.createElement("a",{href:"https://github.com/dys2",rel:"noopener noreferrer",target:"_blank"},ma.a.createElement("img",{className:"header-icon",alt:"github",src:Ea.a}))))}}]),t}(ma.a.Component),Ca=Aa,Pa=(n("txN2"),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),La=function(e){function t(e){o(this,t);var n=s(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.titleBarFix=n.titleBarFix.bind(n),n.moveToAbout=n.moveToAbout.bind(n),n.moveToPortfolio=n.moveToPortfolio.bind(n),n.moveToContact=n.moveToContact.bind(n),n}return l(t,e),Pa(t,[{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.titleBarFix)}},{key:"componentWillUnMount",value:function(){window.removeEventListener("scroll",this.titleBarFix)}},{key:"titleBarFix",value:function(){this.marker.getBoundingClientRect().top<-10?this.marker.getBoundingClientRect().top<-80?this.titlebar.className="titlebar-container-fix-fade":this.titlebar.className="titlebar-container-fix":this.titlebar.className="titlebar-container-fix-hide"}},{key:"moveToAbout",value:function(){window.scrollTo(0,window.scrollY+this.props.findAbout()[0].y+5)}},{key:"moveToPortfolio",value:function(){window.scrollTo(0,window.scrollY+this.props.findPortfolio()[0].y+5)}},{key:"moveToContact",value:function(){window.scrollTo(0,window.scrollY+this.props.findContact()[0].y+5)}},{key:"render",value:function(){var e=this;return ma.a.createElement("div",null,ma.a.createElement("div",{ref:function(t){return e.marker=t},className:"titlebar-container"},ma.a.createElement("ul",{className:"titlebar-list"},ma.a.createElement("li",{onClick:this.moveToAbout,className:"titlebar-item"},"About"),ma.a.createElement("li",{onClick:this.moveToPortfolio,className:"titlebar-item"},"Portfolio"),ma.a.createElement("li",{onClick:this.moveToContact,className:"titlebar-item"},"Contact"))),ma.a.createElement("div",{ref:function(t){return e.titlebar=t},className:"titlebar-container-fix-hide"},ma.a.createElement("ul",{className:"titlebar-list"},ma.a.createElement("li",{onClick:this.moveToAbout,className:"titlebar-item-fix"},"About"),ma.a.createElement("li",{onClick:this.moveToPortfolio,className:"titlebar-item-fix"},"Portfolio"),ma.a.createElement("li",{onClick:this.moveToContact,className:"titlebar-item-fix"},"Contact"))))}}]),t}(ma.a.Component),Ra=La,Oa=(n("SCbR"),n("dVJ4")),Ia=n.n(Oa),Na=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),ka=function(e){function t(){return c(this,t),u(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return h(t,e),Na(t,[{key:"render",value:function(){return ma.a.createElement("div",{className:"about-container"},ma.a.createElement("h1",{className:"about-title"},"aboutDylan"),ma.a.createElement("div",{className:"about-pic-container"},ma.a.createElement("img",{className:"about-pic",src:Ia.a,alt:"Dylan"})),ma.a.createElement("div",{className:"about-row"},ma.a.createElement("div",{className:"about-row-item"},ma.a.createElement("h2",{className:"about-item-title"},"I'm Dylan Scheidt, an aspiring software engineer"),ma.a.createElement("h3",{className:"about-item-subtitle-left"},"I've always had a love for all things tech.  My passion lies in building things and finding optimized solutions.")),ma.a.createElement("div",{className:"about-row-item"},ma.a.createElement("h3",{className:"about-item-title"},"What I Do"),ma.a.createElement("h4",{className:"about-item-subtitle"},"Languages"),ma.a.createElement("p",{className:"about-item-text"},"Javascript, ES6, C/C++"),ma.a.createElement("h4",{className:"about-item-subtitle"},"Front End"),ma.a.createElement("p",{className:"about-item-text"},"React, CSS3, HTML5, ThreeJS"),ma.a.createElement("h4",{className:"about-item-subtitle"},"Back End"),ma.a.createElement("p",{className:"about-item-text"},"NodeJS, MongoDB, APIs, Cloud, Deployment"),ma.a.createElement("h4",{className:"about-item-subtitle"},"Mobile"),ma.a.createElement("p",{className:"about-item-text"},"React Native"))))}}]),t}(ma.a.Component),Da=ka,Ua=n("Xxa5"),Fa=n.n(Ua);void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),void 0===Function.prototype.name&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&function(){Object.assign=function(e){if(void 0===e||null===e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1;n<arguments.length;n++){var r=arguments[n];if(void 0!==r&&null!==r)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i])}return t}}(),Object.assign(p.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var n=this._listeners,r=n[e];if(void 0!==r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners,n=t[e.type];if(void 0!==n){e.target=this;for(var r=n.slice(0),i=0,a=r.length;i<a;i++)r[i].call(this,e)}}}});var za="86",Ba=0,ja=1,Ga=2,Ha=0,Va=1,Wa=2,Xa=0,qa=1,Ya=2,Za=1,Ka=2,Ja=0,Qa=1,$a=2,eo=0,to=1,no=2,ro=3,io=4,ao=5,oo=100,so=101,lo=102,co=103,uo=104,ho=200,po=201,fo=202,mo=203,vo=204,go=205,yo=206,bo=207,xo=208,wo=209,_o=210,Eo=0,Mo=1,To=2,So=3,Ao=4,Co=5,Po=6,Lo=7,Ro=0,Oo=1,Io=2,No=0,ko=1,Do=2,Uo=3,Fo=4,zo=301,Bo=302,jo=303,Go=304,Ho=305,Vo=306,Wo=307,Xo=1e3,qo=1001,Yo=1002,Zo=1003,Ko=1004,Jo=1005,Qo=1006,$o=1007,es=1008,ts=1009,ns=1010,rs=1011,is=1012,as=1013,os=1014,ss=1015,ls=1016,cs=1017,us=1018,hs=1019,ps=1020,ds=1021,fs=1022,ms=1023,vs=1024,gs=1025,ys=1026,bs=1027,xs=2001,ws=2002,_s=2003,Es=2004,Ms=2100,Ts=2101,Ss=2102,As=2103,Cs=2151,Ps=2201,Ls=2400,Rs=0,Os=1,Is=2,Ns=3e3,ks=3001,Ds=3007,Us=3002,Fs=3004,zs=3005,Bs=3006,js=3200,Gs=3201,Hs={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),n=new Array(36),r=0;return function(){for(var i=0;i<36;i++)8===i||13===i||18===i||23===i?n[i]="-":14===i?n[i]="4":(r<=2&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,n[i]=t[19===i?3&e|8:e]);return n.join("")}}(),clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*Hs.DEG2RAD},radToDeg:function(e){return e*Hs.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}};Object.defineProperties(d.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(d.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(){var e=new d,t=new d;return function(n,r){return e.set(n,n),t.set(r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}});var Vs=0;f.DEFAULT_IMAGE=void 0,f.DEFAULT_MAPPING=300,Object.defineProperty(f.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(f.prototype,p.prototype,{constructor:f,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){if(void 0!==e.textures[this.uuid])return e.textures[this.uuid];var t={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var n=this.image;void 0===n.uuid&&(n.uuid=Hs.generateUUID()),void 0===e.images[n.uuid]&&(e.images[n.uuid]={uuid:n.uuid,url:function(e){var t;return void 0!==e.toDataURL?t=e:(t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),t.width=e.width,t.height=e.height,t.getContext("2d").drawImage(e,0,0,e.width,e.height)),t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}(n)}),t.image=n.uuid}return e.textures[this.uuid]=t,t},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(300===this.mapping){if(e.multiply(this.repeat),e.add(this.offset),e.x<0||e.x>1)switch(this.wrapS){case Xo:e.x=e.x-Math.floor(e.x);break;case qo:e.x=e.x<0?0:1;break;case Yo:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case Xo:e.y=e.y-Math.floor(e.y);break;case qo:e.y=e.y<0?0:1;break;case Yo:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}}}),Object.assign(m.prototype,{isVector4:!0,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,i,a=e.elements,o=a[0],s=a[4],l=a[8],c=a[1],u=a[5],h=a[9],p=a[2],d=a[6],f=a[10];if(Math.abs(s-c)<.01&&Math.abs(l-p)<.01&&Math.abs(h-d)<.01){if(Math.abs(s+c)<.1&&Math.abs(l+p)<.1&&Math.abs(h+d)<.1&&Math.abs(o+u+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var m=(o+1)/2,v=(u+1)/2,g=(f+1)/2,y=(s+c)/4,b=(l+p)/4,x=(h+d)/4;return m>v&&m>g?m<.01?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(m),r=y/n,i=b/n):v>g?v<.01?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(v),n=y/r,i=x/r):g<.01?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(g),n=b/i,r=x/i),this.set(n,r,i,t),this}var w=Math.sqrt((d-h)*(d-h)+(l-p)*(l-p)+(c-s)*(c-s));return Math.abs(w)<.001&&(w=1),this.x=(d-h)/w,this.y=(l-p)/w,this.z=(c-s)/w,this.w=Math.acos((o+u+f-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e,t;return function(n,r){return void 0===e&&(e=new m,t=new m),e.set(n,n,n,n),t.set(r,r,r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}}),Object.assign(v.prototype,p.prototype,{isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),g.prototype=Object.create(v.prototype),g.prototype.constructor=g,g.prototype.isWebGLRenderTargetCube=!0,Object.assign(y,{slerp:function(e,t,n,r){return n.copy(e).slerp(t,r)},slerpFlat:function(e,t,n,r,i,a,o){var s=n[r+0],l=n[r+1],c=n[r+2],u=n[r+3],h=i[a+0],p=i[a+1],d=i[a+2],f=i[a+3];if(u!==f||s!==h||l!==p||c!==d){var m=1-o,v=s*h+l*p+c*d+u*f,g=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){var b=Math.sqrt(y),x=Math.atan2(b,v*g);m=Math.sin(m*x)/b,o=Math.sin(o*x)/b}var w=o*g;if(s=s*m+h*w,l=l*m+p*w,c=c*m+d*w,u=u*m+f*w,m===1-o){var _=1/Math.sqrt(s*s+l*l+c*c+u*u);s*=_,l*=_,c*=_,u*=_}}e[t]=s,e[t+1]=l,e[t+2]=c,e[t+3]=u}}),Object.defineProperties(y.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(y.prototype,{set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,r=e._y,i=e._z,a=e.order,o=Math.cos,s=Math.sin,l=o(n/2),c=o(r/2),u=o(i/2),h=s(n/2),p=s(r/2),d=s(i/2);return"XYZ"===a?(this._x=h*c*u+l*p*d,this._y=l*p*u-h*c*d,this._z=l*c*d+h*p*u,this._w=l*c*u-h*p*d):"YXZ"===a?(this._x=h*c*u+l*p*d,this._y=l*p*u-h*c*d,this._z=l*c*d-h*p*u,this._w=l*c*u+h*p*d):"ZXY"===a?(this._x=h*c*u-l*p*d,this._y=l*p*u+h*c*d,this._z=l*c*d+h*p*u,this._w=l*c*u-h*p*d):"ZYX"===a?(this._x=h*c*u-l*p*d,this._y=l*p*u+h*c*d,this._z=l*c*d-h*p*u,this._w=l*c*u+h*p*d):"YZX"===a?(this._x=h*c*u+l*p*d,this._y=l*p*u+h*c*d,this._z=l*c*d-h*p*u,this._w=l*c*u-h*p*d):"XZY"===a&&(this._x=h*c*u-l*p*d,this._y=l*p*u-h*c*d,this._z=l*c*d+h*p*u,this._w=l*c*u+h*p*d),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,n=e.elements,r=n[0],i=n[4],a=n[8],o=n[1],s=n[5],l=n[9],c=n[2],u=n[6],h=n[10],p=r+s+h;return p>0?(t=.5/Math.sqrt(p+1),this._w=.25/t,this._x=(u-l)*t,this._y=(a-c)*t,this._z=(o-i)*t):r>s&&r>h?(t=2*Math.sqrt(1+r-s-h),this._w=(u-l)/t,this._x=.25*t,this._y=(i+o)/t,this._z=(a+c)/t):s>h?(t=2*Math.sqrt(1+s-r-h),this._w=(a-c)/t,this._x=(i+o)/t,this._y=.25*t,this._z=(l+u)/t):(t=2*Math.sqrt(1+h-r-s),this._w=(o-i)/t,this._x=(a+c)/t,this._y=(l+u)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t=new b;return function(n,r){return void 0===t&&(t=new b),e=n.dot(r)+1,e<1e-6?(e=0,Math.abs(n.x)>Math.abs(n.z)?t.set(-n.y,n.x,0):t.set(0,-n.z,n.y)):t.crossVectors(n,r),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,a=e._w,o=t._x,s=t._y,l=t._z,c=t._w;return this._x=n*c+a*o+r*l-i*s,this._y=r*c+a*s+i*o-n*l,this._z=i*c+a*l+n*s-r*o,this._w=a*c-n*o-r*s-i*l,this.onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w,o=a*e._w+n*e._x+r*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;var s=Math.sqrt(1-o*o);if(Math.abs(s)<.001)return this._w=.5*(a+this._w),this._x=.5*(n+this._x),this._y=.5*(r+this._y),this._z=.5*(i+this._z),this;var l=Math.atan2(s,o),c=Math.sin((1-t)*l)/s,u=Math.sin(t*l)/s;return this._w=a*c+this._w*u,this._x=n*c+this._x*u,this._y=r*c+this._y*u,this._z=i*c+this._z*u,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(b.prototype,{isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e=new y;return function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(e.setFromEuler(t))}}(),applyAxisAngle:function(){var e=new y;return function(t,n){return this.applyQuaternion(e.setFromAxisAngle(t,n))}}(),applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*r-o*n,c=s*n+o*t-i*r,u=s*r+i*n-a*t,h=-i*t-a*n-o*r;return this.x=l*s+h*-i+c*-o-u*-a,this.y=c*s+h*-a+u*-i-l*-o,this.z=u*s+h*-o+l*-a-c*-i,this},project:function(){var e=new x;return function(t){return e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyMatrix4(e)}}(),unproject:function(){var e=new x;return function(t){return e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyMatrix4(e)}}(),transformDirection:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e=new b,t=new b;return function(n,r){return e.set(n,n,n),t.set(r,r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},cross:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,r=this.y,i=this.z;return this.x=r*e.z-i*e.y,this.y=i*e.x-n*e.z,this.z=n*e.y-r*e.x,this},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:function(){var e=new b;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e=new b;return function(t){return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());return Math.acos(Hs.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},setFromCylindrical:function(e){return this.x=e.radius*Math.sin(e.theta),this.y=e.y,this.z=e.radius*Math.cos(e.theta),this},setFromMatrixPosition:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}}),Object.assign(x.prototype,{isMatrix4:!0,set:function(e,t,n,r,i,a,o,s,l,c,u,h,p,d,f,m){var v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=r,v[1]=i,v[5]=a,v[9]=o,v[13]=s,v[2]=l,v[6]=c,v[10]=u,v[14]=h,v[3]=p,v[7]=d,v[11]=f,v[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new x).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(){var e=new b;return function(t){var n=this.elements,r=t.elements,i=1/e.setFromMatrixColumn(t,0).length(),a=1/e.setFromMatrixColumn(t,1).length(),o=1/e.setFromMatrixColumn(t,2).length();return n[0]=r[0]*i,n[1]=r[1]*i,n[2]=r[2]*i,n[4]=r[4]*a,n[5]=r[5]*a,n[6]=r[6]*a,n[8]=r[8]*o,n[9]=r[9]*o,n[10]=r[10]*o,this}}(),makeRotationFromEuler:function(e){e&&e.isEuler||console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),l=Math.sin(r),c=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){var h=a*c,p=a*u,d=o*c,f=o*u;t[0]=s*c,t[4]=-s*u,t[8]=l,t[1]=p+d*l,t[5]=h-f*l,t[9]=-o*s,t[2]=f-h*l,t[6]=d+p*l,t[10]=a*s}else if("YXZ"===e.order){var m=s*c,v=s*u,g=l*c,y=l*u;t[0]=m+y*o,t[4]=g*o-v,t[8]=a*l,t[1]=a*u,t[5]=a*c,t[9]=-o,t[2]=v*o-g,t[6]=y+m*o,t[10]=a*s}else if("ZXY"===e.order){var m=s*c,v=s*u,g=l*c,y=l*u;t[0]=m-y*o,t[4]=-a*u,t[8]=g+v*o,t[1]=v+g*o,t[5]=a*c,t[9]=y-m*o,t[2]=-a*l,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){var h=a*c,p=a*u,d=o*c,f=o*u;t[0]=s*c,t[4]=d*l-p,t[8]=h*l+f,t[1]=s*u,t[5]=f*l+h,t[9]=p*l-d,t[2]=-l,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){var b=a*s,x=a*l,w=o*s,_=o*l;t[0]=s*c,t[4]=_-b*u,t[8]=w*u+x,t[1]=u,t[5]=a*c,t[9]=-o*c,t[2]=-l*c,t[6]=x*u+w,t[10]=b-_*u}else if("XZY"===e.order){var b=a*s,x=a*l,w=o*s,_=o*l;t[0]=s*c,t[4]=-u,t[8]=l*c,t[1]=b*u+_,t[5]=a*c,t[9]=x*u-w,t[2]=w*u-x,t[6]=o*c,t[10]=_*u+b}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){var t=this.elements,n=e._x,r=e._y,i=e._z,a=e._w,o=n+n,s=r+r,l=i+i,c=n*o,u=n*s,h=n*l,p=r*s,d=r*l,f=i*l,m=a*o,v=a*s,g=a*l;return t[0]=1-(p+f),t[4]=u-g,t[8]=h+v,t[1]=u+g,t[5]=1-(c+f),t[9]=d-m,t[2]=h-v,t[6]=d+m,t[10]=1-(c+p),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new b,t=new b,n=new b;return function(r,i,a){var o=this.elements;return n.subVectors(r,i),0===n.lengthSq()&&(n.z=1),n.normalize(),e.crossVectors(a,n),0===e.lengthSq()&&(1===Math.abs(a.z)?n.x+=1e-4:n.z+=1e-4,n.normalize(),e.crossVectors(a,n)),e.normalize(),t.crossVectors(n,e),o[0]=e.x,o[4]=t.x,o[8]=n.x,o[1]=e.y,o[5]=t.y,o[9]=n.y,o[2]=e.z,o[6]=t.z,o[10]=n.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[4],s=n[8],l=n[12],c=n[1],u=n[5],h=n[9],p=n[13],d=n[2],f=n[6],m=n[10],v=n[14],g=n[3],y=n[7],b=n[11],x=n[15],w=r[0],_=r[4],E=r[8],M=r[12],T=r[1],S=r[5],A=r[9],C=r[13],P=r[2],L=r[6],R=r[10],O=r[14],I=r[3],N=r[7],k=r[11],D=r[15];return i[0]=a*w+o*T+s*P+l*I,i[4]=a*_+o*S+s*L+l*N,i[8]=a*E+o*A+s*R+l*k,i[12]=a*M+o*C+s*O+l*D,i[1]=c*w+u*T+h*P+p*I,i[5]=c*_+u*S+h*L+p*N,i[9]=c*E+u*A+h*R+p*k,i[13]=c*M+u*C+h*O+p*D,i[2]=d*w+f*T+m*P+v*I,i[6]=d*_+f*S+m*L+v*N,i[10]=d*E+f*A+m*R+v*k,i[14]=d*M+f*C+m*O+v*D,i[3]=g*w+y*T+b*P+x*I,i[7]=g*_+y*S+b*L+x*N,i[11]=g*E+y*A+b*R+x*k,i[15]=g*M+y*C+b*O+x*D,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToBufferAttribute:function(){var e=new b;return function(t){for(var n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix4(this),t.setXYZ(n,e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],o=e[5],s=e[9],l=e[13],c=e[2],u=e[6],h=e[10],p=e[14];return e[3]*(+i*s*u-r*l*u-i*o*h+n*l*h+r*o*p-n*s*p)+e[7]*(+t*s*p-t*l*h+i*a*h-r*a*p+r*l*c-i*s*c)+e[11]*(+t*l*u-t*o*p-i*a*u+n*a*p+i*o*c-n*l*c)+e[15]*(-r*o*c-t*s*u+t*o*h+r*a*u-n*a*h+n*s*c)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var n=this.elements,r=e.elements,i=r[0],a=r[1],o=r[2],s=r[3],l=r[4],c=r[5],u=r[6],h=r[7],p=r[8],d=r[9],f=r[10],m=r[11],v=r[12],g=r[13],y=r[14],b=r[15],x=d*y*h-g*f*h+g*u*m-c*y*m-d*u*b+c*f*b,w=v*f*h-p*y*h-v*u*m+l*y*m+p*u*b-l*f*b,_=p*g*h-v*d*h+v*c*m-l*g*m-p*c*b+l*d*b,E=v*d*u-p*g*u-v*c*f+l*g*f+p*c*y-l*d*y,M=i*x+a*w+o*_+s*E;if(0===M){var T="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(!0===t)throw new Error(T);return console.warn(T),this.identity()}var S=1/M;return n[0]=x*S,n[1]=(g*f*s-d*y*s-g*o*m+a*y*m+d*o*b-a*f*b)*S,n[2]=(c*y*s-g*u*s+g*o*h-a*y*h-c*o*b+a*u*b)*S,n[3]=(d*u*s-c*f*s-d*o*h+a*f*h+c*o*m-a*u*m)*S,n[4]=w*S,n[5]=(p*y*s-v*f*s+v*o*m-i*y*m-p*o*b+i*f*b)*S,n[6]=(v*u*s-l*y*s-v*o*h+i*y*h+l*o*b-i*u*b)*S,n[7]=(l*f*s-p*u*s+p*o*h-i*f*h-l*o*m+i*u*m)*S,n[8]=_*S,n[9]=(v*d*s-p*g*s-v*a*m+i*g*m+p*a*b-i*d*b)*S,n[10]=(l*g*s-v*c*s+v*a*h-i*g*h-l*a*b+i*c*b)*S,n[11]=(p*c*s-l*d*s-p*a*h+i*d*h+l*a*m-i*c*m)*S,n[12]=E*S,n[13]=(p*g*o-v*d*o+v*a*f-i*g*f-p*a*y+i*d*y)*S,n[14]=(v*c*o-l*g*o-v*a*u+i*g*u+l*a*y-i*c*y)*S,n[15]=(l*d*o-p*c*o+p*a*u-i*d*u-l*a*f+i*c*f)*S,this},scale:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,o=e.y,s=e.z,l=i*a,c=i*o;return this.set(l*a+n,l*o-r*s,l*s+r*o,0,l*o+r*s,c*o+n,c*s-r*a,0,l*s-r*o,c*s+r*a,i*s*s+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,n){return this.makeRotationFromQuaternion(t),this.scale(n),this.setPosition(e),this},decompose:function(){var e=new b,t=new x;return function(n,r,i){var a=this.elements,o=e.set(a[0],a[1],a[2]).length(),s=e.set(a[4],a[5],a[6]).length(),l=e.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),n.x=a[12],n.y=a[13],n.z=a[14],t.copy(this);var c=1/o,u=1/s,h=1/l;return t.elements[0]*=c,t.elements[1]*=c,t.elements[2]*=c,t.elements[4]*=u,t.elements[5]*=u,t.elements[6]*=u,t.elements[8]*=h,t.elements[9]*=h,t.elements[10]*=h,r.setFromRotationMatrix(t),i.x=o,i.y=s,i.z=l,this}}(),makePerspective:function(e,t,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*i/(t-e),l=2*i/(n-r),c=(t+e)/(t-e),u=(n+r)/(n-r),h=-(a+i)/(a-i),p=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=l,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(e,t,n,r,i,a){var o=this.elements,s=1/(t-e),l=1/(n-r),c=1/(a-i),u=(t+e)*s,h=(n+r)*l,p=(a+i)*c;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}),w.prototype=Object.create(f.prototype),w.prototype.constructor=w,w.prototype.isDataTexture=!0,_.prototype=Object.create(f.prototype),_.prototype.constructor=_,_.prototype.isCubeTexture=!0,Object.defineProperty(_.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});var Ws=new f,Xs=new _,qs=[],Ys=[],Zs=new Float32Array(16),Ks=new Float32Array(9);$.prototype.setValue=function(e,t){for(var n=this.seq,r=0,i=n.length;r!==i;++r){var a=n[r];a.setValue(e,t[a.id])}};var Js=/([\w\d_]+)(\])?(\[|\.)?/g;ne.prototype.setValue=function(e,t,n){var r=this.map[t];void 0!==r&&r.setValue(e,n,this.renderer)},ne.prototype.setOptional=function(e,t,n){var r=t[n];void 0!==r&&this.setValue(e,n,r)},ne.upload=function(e,t,n,r){for(var i=0,a=t.length;i!==a;++i){var o=t[i],s=n[o.id];!1!==s.needsUpdate&&o.setValue(e,s.value,r)}},ne.seqWithValue=function(e,t){for(var n=[],r=0,i=e.length;r!==i;++r){var a=e[r];a.id in t&&n.push(a)}return n};var Qs={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(re.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(){function e(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}return function(t,n,r){if(t=Hs.euclideanModulo(t,1),n=Hs.clamp(n,0,1),r=Hs.clamp(r,0,1),0===n)this.r=this.g=this.b=r;else{var i=r<=.5?r*(1+n):r+n-r*n,a=2*r-i;this.r=e(a,i,t+1/3),this.g=e(a,i,t),this.b=e(a,i,t-1/3)}return this}}(),setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var r,i=n[1],a=n[2];switch(i){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,l=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(o,s,l)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){var c=n[1],u=c.length;if(3===u)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===u)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}if(e&&e.length>0){var c=Qs[e];void 0!==c?this.setHex(c):console.warn("THREE.Color: Unknown color "+e)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;return this.r=e*e,this.g=t*t,this.b=n*n,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t,n,r=e||{h:0,s:0,l:0},i=this.r,a=this.g,o=this.b,s=Math.max(i,a,o),l=Math.min(i,a,o),c=(l+s)/2;if(l===s)t=0,n=0;else{var u=s-l;switch(n=c<=.5?u/(s+l):u/(2-s-l),s){case i:t=(a-o)/u+(a<o?6:0);break;case a:t=(o-i)/u+2;break;case o:t=(i-a)/u+4}t/=6}return r.h=t,r.s=n,r.l=c,r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,n){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=n,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}});var $s={common:{diffuse:{value:new re(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new m(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new d(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new re(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new re(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new m(0,0,1,1)}}},el={merge:function(e){for(var t={},n=0;n<e.length;n++){var r=this.clone(e[n]);for(var i in r)t[i]=r[i]}return t},clone:function(e){var t={};for(var n in e){t[n]={};for(var r in e[n]){var i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}},tl={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n",bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",defaultnormal_vertex:"vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = asin( flipNormal * reflectVec.y ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",lights_pars:"uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",lights_template:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",map_particle_fragment:"#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",normal_flip:"#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n",normal_fragment:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",project_vertex:"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",tonemapping_pars_fragment:"#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",cube_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",distanceRGBA_frag:"uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",distanceRGBA_vert:"varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n",equirect_frag:"uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",equirect_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphysical_frag:"#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphysical_vert:"#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",shadow_frag:"uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\n}\n",shadow_vert:"#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n"},nl={basic:{uniforms:el.merge([$s.common,$s.aomap,$s.lightmap,$s.fog]),vertexShader:tl.meshbasic_vert,fragmentShader:tl.meshbasic_frag},lambert:{uniforms:el.merge([$s.common,$s.aomap,$s.lightmap,$s.emissivemap,$s.fog,$s.lights,{emissive:{value:new re(0)}}]),vertexShader:tl.meshlambert_vert,fragmentShader:tl.meshlambert_frag},phong:{uniforms:el.merge([$s.common,$s.aomap,$s.lightmap,$s.emissivemap,$s.bumpmap,$s.normalmap,$s.displacementmap,$s.gradientmap,$s.fog,$s.lights,{emissive:{value:new re(0)},specular:{value:new re(1118481)},shininess:{value:30}}]),vertexShader:tl.meshphong_vert,fragmentShader:tl.meshphong_frag},standard:{uniforms:el.merge([$s.common,$s.aomap,$s.lightmap,$s.emissivemap,$s.bumpmap,$s.normalmap,$s.displacementmap,$s.roughnessmap,$s.metalnessmap,$s.fog,$s.lights,{emissive:{value:new re(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:tl.meshphysical_vert,fragmentShader:tl.meshphysical_frag},points:{uniforms:el.merge([$s.points,$s.fog]),vertexShader:tl.points_vert,fragmentShader:tl.points_frag},dashed:{uniforms:el.merge([$s.common,$s.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:tl.linedashed_vert,fragmentShader:tl.linedashed_frag},depth:{uniforms:el.merge([$s.common,$s.displacementmap]),vertexShader:tl.depth_vert,fragmentShader:tl.depth_frag},normal:{uniforms:el.merge([$s.common,$s.bumpmap,$s.normalmap,$s.displacementmap,{opacity:{value:1}}]),vertexShader:tl.normal_vert,fragmentShader:tl.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:tl.cube_vert,fragmentShader:tl.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:tl.equirect_vert,fragmentShader:tl.equirect_frag},distanceRGBA:{uniforms:{lightPos:{value:new b}},vertexShader:tl.distanceRGBA_vert,fragmentShader:tl.distanceRGBA_frag}};nl.physical={uniforms:el.merge([nl.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:tl.meshphysical_vert,fragmentShader:tl.meshphysical_frag},Object.assign(ie.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new d;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){var t=e||new d;return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){var t=e||new d;return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return(t||new d).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new d).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new d;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});var rl=0;Object.assign(se.prototype,p.prototype,{isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n){var r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]="overdraw"===t?Number(n):n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},toJSON:function(e){function t(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}var n=void 0===e;n&&(e={textures:{},images:{}});var r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearCoat&&(r.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(r.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,r.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==to&&(r.blending=this.blending),this.shading!==Ka&&(r.shading=this.shading),this.side!==Xa&&(r.side=this.side),this.vertexColors!==Ja&&(r.vertexColors=this.vertexColors),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),r.skinning=this.skinning,r.morphTargets=this.morphTargets,r.dithering=this.dithering,n){var i=t(e.textures),a=t(e.images);i.length>0&&(r.textures=i),a.length>0&&(r.images=a)}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.lights=e.lights,this.blending=e.blending,this.side=e.side,this.shading=e.shading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.overdraw=e.overdraw,this.visible=e.visible,this.clipShadows=e.clipShadows,this.clipIntersection=e.clipIntersection;var t=e.clippingPlanes,n=null;if(null!==t){var r=t.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),le.prototype=Object.create(se.prototype),le.prototype.constructor=le,le.prototype.isShaderMaterial=!0,le.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=el.clone(e.uniforms),this.defines=e.defines,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},le.prototype.toJSON=function(e){var t=se.prototype.toJSON.call(this,e);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},ce.prototype=Object.create(se.prototype),ce.prototype.constructor=ce,ce.prototype.isMeshDepthMaterial=!0,ce.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},Object.assign(ue.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,l=e.length;s<l;s+=3){var c=e[s],u=e[s+1],h=e[s+2];c<t&&(t=c),u<n&&(n=u),h<r&&(r=h),c>i&&(i=c),u>a&&(a=u),h>o&&(o=h)}return this.min.set(t,n,r),this.max.set(i,a,o),this},setFromBufferAttribute:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,l=e.count;s<l;s++){var c=e.getX(s),u=e.getY(s),h=e.getZ(s);c<t&&(t=c),u<n&&(n=u),h<r&&(r=h),c>i&&(i=c),u>a&&(a=u),h>o&&(o=h)}return this.min.set(t,n,r),this.max.set(i,a,o),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new b;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){var t=e||new b;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){var t=e||new b;return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(){var e=new b;return function(t){var n=this;return t.updateMatrixWorld(!0),t.traverse(function(t){var r,i,a=t.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(r=0,i=o.length;r<i;r++)e.copy(o[r]),e.applyMatrix4(t.matrixWorld),n.expandByPoint(e)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(r=0,i=s.count;r<i;r++)e.fromBufferAttribute(s,r).applyMatrix4(t.matrixWorld),n.expandByPoint(e)}}),this}}(),containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return(t||new b).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(){var e=new b;return function(t){return this.clampPoint(t.center,e),e.distanceToSquared(t.center)<=t.radius*t.radius}}(),intersectsPlane:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=e.constant&&n>=e.constant},clampPoint:function(e,t){return(t||new b).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new b;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new b;return function(t){var n=t||new he;return this.getCenter(n.center),n.radius=.5*this.getSize(e).length(),n}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new b,new b,new b,new b,new b,new b,new b,new b];return function(t){return this.isEmpty()?this:(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(e),this)}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),Object.assign(he.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new ue;return function(t,n){var r=this.center;void 0!==n?r.copy(n):e.setFromPoints(t).getCenter(r);for(var i=0,a=0,o=t.length;a<o;a++)i=Math.max(i,r.distanceToSquared(t[a]));return this.radius=Math.sqrt(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(this.center.dot(e.normal)-e.constant)<=this.radius},clampPoint:function(e,t){var n=this.center.distanceToSquared(e),r=t||new b;return r.copy(e),n>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){var t=e||new ue;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}}),Object.assign(pe.prototype,{isMatrix3:!0,set:function(e,t,n,r,i,a,o,s,l){var c=this.elements;return c[0]=e,c[1]=r,c[2]=o,c[3]=t,c[4]=i,c[5]=s,c[6]=n,c[7]=a,c[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToBufferAttribute:function(){var e=new b;return function(t){for(var n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix3(this),t.setXYZ(n,e.x,e.y,e.z);return t}}(),multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[3],s=n[6],l=n[1],c=n[4],u=n[7],h=n[2],p=n[5],d=n[8],f=r[0],m=r[3],v=r[6],g=r[1],y=r[4],b=r[7],x=r[2],w=r[5],_=r[8];return i[0]=a*f+o*g+s*x,i[3]=a*m+o*y+s*w,i[6]=a*v+o*b+s*_,i[1]=l*f+c*g+u*x,i[4]=l*m+c*y+u*w,i[7]=l*v+c*b+u*_,i[2]=h*f+p*g+d*x,i[5]=h*m+p*y+d*w,i[8]=h*v+p*b+d*_,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8];return t*a*c-t*o*l-n*i*c+n*o*s+r*i*l-r*a*s},getInverse:function(e,t){e&&e.isMatrix4&&console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");var n=e.elements,r=this.elements,i=n[0],a=n[1],o=n[2],s=n[3],l=n[4],c=n[5],u=n[6],h=n[7],p=n[8],d=p*l-c*h,f=c*u-p*s,m=h*s-l*u,v=i*d+a*f+o*m;if(0===v){var g="THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";if(!0===t)throw new Error(g);return console.warn(g),this.identity()}var y=1/v;return r[0]=d*y,r[1]=(o*h-p*a)*y,r[2]=(c*a-o*l)*y,r[3]=f*y,r[4]=(p*i-o*u)*y,r[5]=(o*s-c*i)*y,r[6]=m*y,r[7]=(a*u-h*i)*y,r[8]=(l*i-a*s)*y,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var n=0;n<9;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}}),Object.assign(de.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new b,t=new b;return function(n,r,i){var a=e.subVectors(i,r).cross(t.subVectors(n,r)).normalize();return this.setFromNormalAndCoplanarPoint(a,n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e);return(t||new b).copy(this.normal).multiplyScalar(n)},intersectLine:function(){var e=new b;return function(t,n){var r=n||new b,i=t.delta(e),a=this.normal.dot(i);if(0!==a){var o=-(t.start.dot(this.normal)+this.constant)/a;if(!(o<0||o>1))return r.copy(i).multiplyScalar(o).add(t.start)}else if(0===this.distanceToPoint(t.start))return r.copy(t.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return(e||new b).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new b,t=new pe;return function(n,r){var i=this.coplanarPoint(e).applyMatrix4(n),a=r||t.getNormalMatrix(n),o=this.normal.applyMatrix3(a).normalize();return this.constant=-i.dot(o),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}),Object.assign(fe.prototype,{set:function(e,t,n,r,i,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],l=n[5],c=n[6],u=n[7],h=n[8],p=n[9],d=n[10],f=n[11],m=n[12],v=n[13],g=n[14],y=n[15];return t[0].setComponents(o-r,u-s,f-h,y-m).normalize(),t[1].setComponents(o+r,u+s,f+h,y+m).normalize(),t[2].setComponents(o+i,u+l,f+p,y+v).normalize(),t[3].setComponents(o-i,u-l,f-p,y-v).normalize(),t[4].setComponents(o-a,u-c,f-d,y-g).normalize(),t[5].setComponents(o+a,u+c,f+d,y+g).normalize(),this},intersectsObject:function(){var e=new he;return function(t){var n=t.geometry;return null===n.boundingSphere&&n.computeBoundingSphere(),e.copy(n.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSprite:function(){var e=new he;return function(t){return e.center.set(0,0,0),e.radius=.7071067811865476,e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,n=e.center,r=-e.radius,i=0;i<6;i++){if(t[i].distanceToPoint(n)<r)return!1}return!0},intersectsBox:function(){var e=new b,t=new b;return function(n){for(var r=this.planes,i=0;i<6;i++){var a=r[i];e.x=a.normal.x>0?n.min.x:n.max.x,t.x=a.normal.x>0?n.max.x:n.min.x,e.y=a.normal.y>0?n.min.y:n.max.y,t.y=a.normal.y>0?n.max.y:n.min.y,e.z=a.normal.z>0?n.min.z:n.max.z,t.z=a.normal.z>0?n.max.z:n.min.z;var o=a.distanceToPoint(e),s=a.distanceToPoint(t);if(o<0&&s<0)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}}),ge.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],ge.DefaultOrder="XYZ",Object.defineProperties(ge.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),Object.assign(ge.prototype,{isEuler:!0,set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var r=Hs.clamp,i=e.elements,a=i[0],o=i[4],s=i[8],l=i[1],c=i[5],u=i[9],h=i[2],p=i[6],d=i[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(p,c),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(s,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,a))):"ZYX"===t?(this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(p,d),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-o,c))):"YZX"===t?(this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,a)):(this._x=0,this._y=Math.atan2(s,d))):"XZY"===t?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(p,c),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-u,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==n&&this.onChangeCallback(),this},setFromQuaternion:function(){var e=new x;return function(t,n,r){return e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,n,r)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new y;return function(t){return e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new b(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(ye.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},test:function(e){return 0!=(this.mask&e.mask)}});var il=0;be.DefaultUp=new b(0,1,0),be.DefaultMatrixAutoUpdate=!0,Object.assign(be.prototype,p.prototype,{isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new y;return function(t,n){return e.setFromAxisAngle(t,n),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new b(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new b(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new b(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new b;return function(t,n){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(n)),this}}(),translateX:function(){var e=new b(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new b(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new b(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new x;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new x;return function(t){this.isCamera?e.lookAt(this.position,t,this.up):e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var n=this.children.indexOf(e);return-1!==n&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(n,1)),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n],a=i.getObjectByProperty(e,t);if(void 0!==a)return a}},getWorldPosition:function(e){var t=e||new b;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new b,t=new b;return function(n){var r=n||new y;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,r,t),r}}(),getWorldRotation:function(){var e=new y;return function(t){var n=t||new ge;return this.getWorldQuaternion(e),n.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new b,t=new y;return function(n){var r=n||new b;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,r),r}}(),getWorldDirection:function(){var e=new y;return function(t){var n=t||new b;return this.getWorldQuaternion(e),n.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)},toJSON:function(e){function t(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}function n(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}var r=void 0===e||""===e,i={};r&&(e={geometries:{},materials:{},textures:{},images:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var a={};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),a.matrix=this.matrix.toArray(),void 0!==this.geometry&&(a.geometry=t(e.geometries,this.geometry)),void 0!==this.material)if(Array.isArray(this.material)){for(var o=[],s=0,l=this.material.length;s<l;s++)o.push(t(e.materials,this.material[s]));a.material=o}else a.material=t(e.materials,this.material);if(this.children.length>0){a.children=[];for(var s=0;s<this.children.length;s++)a.children.push(this.children[s].toJSON(e).object)}if(r){var c=n(e.geometries),u=n(e.materials),h=n(e.textures),p=n(e.images);c.length>0&&(i.geometries=c),u.length>0&&(i.materials=u),h.length>0&&(i.textures=h),p.length>0&&(i.images=p)}return i.object=a,i},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone())}return this}}),xe.prototype=Object.assign(Object.create(be.prototype),{constructor:xe,isCamera:!0,copy:function(e,t){return be.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},getWorldDirection:function(){var e=new y;return function(t){var n=t||new b;return this.getWorldQuaternion(e),n.set(0,0,-1).applyQuaternion(e)}}(),updateMatrixWorld:function(e){be.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),we.prototype=Object.assign(Object.create(xe.prototype),{constructor:we,isOrthographicCamera:!0,copy:function(e,t){return xe.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,r,i,a){this.view={fullWidth:e,fullHeight:t,offsetX:n,offsetY:r,width:i,height:a},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,a=n+e,o=r+t,s=r-t;if(null!==this.view){var l=this.zoom/(this.view.width/this.view.fullWidth),c=this.zoom/(this.view.height/this.view.fullHeight),u=(this.right-this.left)/this.view.width,h=(this.top-this.bottom)/this.view.height;i+=u*(this.view.offsetX/l),a=i+u*(this.view.width/l),o-=h*(this.view.offsetY/c),s=o-h*(this.view.height/c)}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far)},toJSON:function(e){var t=be.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),_e.prototype=Object.assign(Object.create(xe.prototype),{constructor:_e,isPerspectiveCamera:!0,copy:function(e,t){return xe.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*Hs.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(.5*Hs.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*Hs.RAD2DEG*Math.atan(Math.tan(.5*Hs.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,r,i,a){this.aspect=e/t,this.view={fullWidth:e,fullHeight:t,offsetX:n,offsetY:r,width:i,height:a},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(.5*Hs.DEG2RAD*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r,a=this.view;if(null!==a){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/o,t-=a.offsetY*n/s,r*=a.width/o,n*=a.height/s}var l=this.filmOffset;0!==l&&(i+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far)},toJSON:function(e){var t=be.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}),Object.assign(Ee.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}});var al=0;Object.assign(Te.prototype,p.prototype,{isGeometry:!0,applyMatrix:function(e){for(var t=(new pe).getNormalMatrix(e),n=0,r=this.vertices.length;n<r;n++){this.vertices[n].applyMatrix4(e)}for(var n=0,r=this.faces.length;n<r;n++){var i=this.faces[n];i.normal.applyMatrix3(t).normalize();for(var a=0,o=i.vertexNormals.length;a<o;a++)i.vertexNormals[a].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var e=new x;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e=new x;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e=new x;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e=new x;return function(t,n,r){return e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e=new x;return function(t,n,r){return e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e=new be;return function(t){e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){function t(e,t,r,i){var a=void 0!==o?[u[e].clone(),u[t].clone(),u[r].clone()]:[],d=void 0!==s?[n.colors[e].clone(),n.colors[t].clone(),n.colors[r].clone()]:[],f=new Ee(e,t,r,a,d,i);n.faces.push(f),void 0!==l&&n.faceVertexUvs[0].push([h[e].clone(),h[t].clone(),h[r].clone()]),void 0!==c&&n.faceVertexUvs[1].push([p[e].clone(),p[t].clone(),p[r].clone()])}var n=this,r=null!==e.index?e.index.array:void 0,i=e.attributes,a=i.position.array,o=void 0!==i.normal?i.normal.array:void 0,s=void 0!==i.color?i.color.array:void 0,l=void 0!==i.uv?i.uv.array:void 0,c=void 0!==i.uv2?i.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var u=[],h=[],p=[],f=0,m=0;f<a.length;f+=3,m+=2)n.vertices.push(new b(a[f],a[f+1],a[f+2])),void 0!==o&&u.push(new b(o[f],o[f+1],o[f+2])),void 0!==s&&n.colors.push(new re(s[f],s[f+1],s[f+2])),void 0!==l&&h.push(new d(l[m],l[m+1])),void 0!==c&&p.push(new d(c[m],c[m+1]));var v=e.groups;if(v.length>0)for(var f=0;f<v.length;f++)for(var g=v[f],y=g.start,x=g.count,m=y,w=y+x;m<w;m+=3)void 0!==r?t(r[m],r[m+1],r[m+2],g.materialIndex):t(m,m+1,m+2,g.materialIndex);else if(void 0!==r)for(var f=0;f<r.length;f+=3)t(r[f],r[f+1],r[f+2]);else for(var f=0;f<a.length/3;f+=3)t(f,f+1,f+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.getCenter().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=0===t?1:1/t,r=new x;return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var e=new b,t=new b,n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],a=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),t.subVectors(a,o),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){void 0===e&&(e=!0);var t,n,r,i,a,o;for(o=new Array(this.vertices.length),t=0,n=this.vertices.length;t<n;t++)o[t]=new b;if(e){var s,l,c,u=new b,h=new b;for(r=0,i=this.faces.length;r<i;r++)a=this.faces[r],s=this.vertices[a.a],l=this.vertices[a.b],c=this.vertices[a.c],u.subVectors(c,l),h.subVectors(s,l),u.cross(h),o[a.a].add(u),o[a.b].add(u),o[a.c].add(u)}else for(this.computeFaceNormals(),r=0,i=this.faces.length;r<i;r++)a=this.faces[r],o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(t=0,n=this.vertices.length;t<n;t++)o[t].normalize();for(r=0,i=this.faces.length;r<i;r++){a=this.faces[r];var p=a.vertexNormals;3===p.length?(p[0].copy(o[a.a]),p[1].copy(o[a.b]),p[2].copy(o[a.c])):(p[0]=o[a.a].clone(),p[1]=o[a.b].clone(),p[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,n;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){n=this.faces[e];var r=n.vertexNormals;3===r.length?(r[0].copy(n.normal),r[1].copy(n.normal),r[2].copy(n.normal)):(r[0]=n.normal.clone(),r[1]=n.normal.clone(),r[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,n,r,i;for(n=0,r=this.faces.length;n<r;n++)for(i=this.faces[n],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var a=new Te;for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o,s,l=this.morphNormals[e].faceNormals,c=this.morphNormals[e].vertexNormals;for(n=0,r=this.faces.length;n<r;n++)o=new b,s={a:new b,b:new b,c:new b},l.push(o),c.push(s)}var u=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals();var o,s;for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],o=u.faceNormals[n],s=u.vertexNormals[n],o.copy(i.normal),s.a.copy(i.vertexNormals[0]),s.b.copy(i.vertexNormals[1]),s.c.copy(i.vertexNormals[2])}for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeLineDistances:function(){for(var e=0,t=this.vertices,n=0,r=t.length;n<r;n++)n>0&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new ue),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new he),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(!e||!e.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);var r,i=this.vertices.length,a=this.vertices,o=e.vertices,s=this.faces,l=e.faces,c=this.faceVertexUvs[0],u=e.faceVertexUvs[0],h=this.colors,p=e.colors;void 0===n&&(n=0),void 0!==t&&(r=(new pe).getNormalMatrix(t));for(var d=0,f=o.length;d<f;d++){var m=o[d],v=m.clone();void 0!==t&&v.applyMatrix4(t),a.push(v)}for(var d=0,f=p.length;d<f;d++)h.push(p[d].clone());for(d=0,f=l.length;d<f;d++){var g,y,b,x=l[d],w=x.vertexNormals,_=x.vertexColors;g=new Ee(x.a+i,x.b+i,x.c+i),g.normal.copy(x.normal),void 0!==r&&g.normal.applyMatrix3(r).normalize();for(var E=0,M=w.length;E<M;E++)y=w[E].clone(),void 0!==r&&y.applyMatrix3(r).normalize(),g.vertexNormals.push(y);g.color.copy(x.color);for(var E=0,M=_.length;E<M;E++)b=_[E],g.vertexColors.push(b.clone());g.materialIndex=x.materialIndex+n,s.push(g)}for(d=0,f=u.length;d<f;d++){var T=u[d],S=[];if(void 0!==T){for(var E=0,M=T.length;E<M;E++)S.push(T[E].clone());c.push(S)}}},mergeMesh:function(e){if(!e||!e.isMesh)return void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){var e,t,n,r,i,a,o,s,l={},c=[],u=[],h=Math.pow(10,4);for(n=0,r=this.vertices.length;n<r;n++)e=this.vertices[n],t=Math.round(e.x*h)+"_"+Math.round(e.y*h)+"_"+Math.round(e.z*h),void 0===l[t]?(l[t]=n,c.push(this.vertices[n]),u[n]=c.length-1):u[n]=u[l[t]];var p=[];for(n=0,r=this.faces.length;n<r;n++){i=this.faces[n],i.a=u[i.a],i.b=u[i.b],i.c=u[i.c],a=[i.a,i.b,i.c];for(var d=0;d<3;d++)if(a[d]===a[(d+1)%3]){p.push(n);break}}for(n=p.length-1;n>=0;n--){var f=p[n];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}var m=this.vertices.length-c.length;return this.vertices=c,m},sortFacesByMaterialIndex:function(){function e(e,t){return e.materialIndex-t.materialIndex}for(var t=this.faces,n=t.length,r=0;r<n;r++)t[r]._id=r;t.sort(e);var i,a,o=this.faceVertexUvs[0],s=this.faceVertexUvs[1];o&&o.length===n&&(i=[]),s&&s.length===n&&(a=[]);for(var r=0;r<n;r++){var l=t[r]._id;i&&i.push(o[l]),a&&a.push(s[l])}i&&(this.faceVertexUvs[0]=i),a&&(this.faceVertexUvs[1]=a)},toJSON:function(){function e(e,t,n){return n?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==p[t]?p[t]:(p[t]=h.length/3,h.push(e.x,e.y,e.z),p[t])}function n(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==f[t]?f[t]:(f[t]=d.length,d.push(e.getHex()),f[t])}function r(e){var t=e.x.toString()+e.y.toString();return void 0!==v[t]?v[t]:(v[t]=m.length/2,m.push(e.x,e.y),v[t])}var i={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),void 0!==this.parameters){var a=this.parameters;for(var o in a)void 0!==a[o]&&(i[o]=a[o]);return i}for(var s=[],l=0;l<this.vertices.length;l++){var c=this.vertices[l];s.push(c.x,c.y,c.z)}for(var u=[],h=[],p={},d=[],f={},m=[],v={},l=0;l<this.faces.length;l++){var g=this.faces[l],y=void 0!==this.faceVertexUvs[0][l],b=g.normal.length()>0,x=g.vertexNormals.length>0,w=1!==g.color.r||1!==g.color.g||1!==g.color.b,_=g.vertexColors.length>0,E=0;if(E=e(E,0,0),E=e(E,1,!0),E=e(E,2,!1),E=e(E,3,y),E=e(E,4,b),E=e(E,5,x),E=e(E,6,w),E=e(E,7,_),u.push(E),u.push(g.a,g.b,g.c),u.push(g.materialIndex),y){var M=this.faceVertexUvs[0][l];u.push(r(M[0]),r(M[1]),r(M[2]))}if(b&&u.push(t(g.normal)),x){var T=g.vertexNormals;u.push(t(T[0]),t(T[1]),t(T[2]))}if(w&&u.push(n(g.color)),_){var S=g.vertexColors;u.push(n(S[0]),n(S[1]),n(S[2]))}}return i.data={},i.data.vertices=s,i.data.normals=h,d.length>0&&(i.data.colors=d),m.length>0&&(i.data.uvs=[m]),i.data.faces=u,i},clone:function(){return(new Te).copy(this)},copy:function(e){var t,n,r,i,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var s=e.vertices;for(t=0,n=s.length;t<n;t++)this.vertices.push(s[t].clone());var l=e.colors;for(t=0,n=l.length;t<n;t++)this.colors.push(l[t].clone());var c=e.faces;for(t=0,n=c.length;t<n;t++)this.faces.push(c[t].clone());for(t=0,n=e.faceVertexUvs.length;t<n;t++){var u=e.faceVertexUvs[t];for(void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]),r=0,i=u.length;r<i;r++){var h=u[r],p=[];for(a=0,o=h.length;a<o;a++){var d=h[a];p.push(d.clone())}this.faceVertexUvs[t].push(p)}}var f=e.morphTargets;for(t=0,n=f.length;t<n;t++){var m={};if(m.name=f[t].name,void 0!==f[t].vertices)for(m.vertices=[],r=0,i=f[t].vertices.length;r<i;r++)m.vertices.push(f[t].vertices[r].clone());if(void 0!==f[t].normals)for(m.normals=[],r=0,i=f[t].normals.length;r<i;r++)m.normals.push(f[t].normals[r].clone());this.morphTargets.push(m)}var v=e.morphNormals;for(t=0,n=v.length;t<n;t++){var g={};if(void 0!==v[t].vertexNormals)for(g.vertexNormals=[],r=0,i=v[t].vertexNormals.length;r<i;r++){var y=v[t].vertexNormals[r],b={};b.a=y.a.clone(),b.b=y.b.clone(),b.c=y.c.clone(),g.vertexNormals.push(b)}if(void 0!==v[t].faceNormals)for(g.faceNormals=[],r=0,i=v[t].faceNormals.length;r<i;r++)g.faceNormals.push(v[t].faceNormals[r].clone());this.morphNormals.push(g)}var x=e.skinWeights;for(t=0,n=x.length;t<n;t++)this.skinWeights.push(x[t].clone());var w=e.skinIndices;for(t=0,n=w.length;t<n;t++)this.skinIndices.push(w[t].clone());var _=e.lineDistances;for(t=0,n=_.length;t<n;t++)this.lineDistances.push(_[t]);var E=e.boundingBox;null!==E&&(this.boundingBox=E.clone());var M=e.boundingSphere;return null!==M&&(this.boundingSphere=M.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Se.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Se.prototype,{isBufferAttribute:!0,setArray:function(e){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==e?e.length/this.itemSize:0,this.array=e},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new re),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this},copyIndicesArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];t[n++]=a.a,t[n++]=a.b,t[n++]=a.c}return this},copyVector2sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new d),t[n++]=a.x,t[n++]=a.y}return this},copyVector3sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new b),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this},copyVector4sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new m),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),Ae.prototype=Object.create(Se.prototype),Ae.prototype.constructor=Ae,Ce.prototype=Object.create(Se.prototype),Ce.prototype.constructor=Ce,Pe.prototype=Object.create(Se.prototype),Pe.prototype.constructor=Pe,Le.prototype=Object.create(Se.prototype),Le.prototype.constructor=Le,Re.prototype=Object.create(Se.prototype),Re.prototype.constructor=Re,Oe.prototype=Object.create(Se.prototype),Oe.prototype.constructor=Oe,Ie.prototype=Object.create(Se.prototype),Ie.prototype.constructor=Ie,Ne.prototype=Object.create(Se.prototype),Ne.prototype.constructor=Ne,ke.prototype=Object.create(Se.prototype),ke.prototype.constructor=ke,Object.assign(De.prototype,{computeGroups:function(e){for(var t,n=[],r=void 0,i=e.faces,a=0;a<i.length;a++){var o=i[a];o.materialIndex!==r&&(r=o.materialIndex,void 0!==t&&(t.count=3*a-t.start,n.push(t)),t={start:3*a,materialIndex:r})}void 0!==t&&(t.count=3*a-t.start,n.push(t)),this.groups=n},fromGeometry:function(e){var t,n=e.faces,r=e.vertices,i=e.faceVertexUvs,a=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,s=e.morphTargets,l=s.length;if(l>0){t=[];for(var c=0;c<l;c++)t[c]=[];this.morphTargets.position=t}var u,h=e.morphNormals,p=h.length;if(p>0){u=[];for(var c=0;c<p;c++)u[c]=[];this.morphTargets.normal=u}for(var f=e.skinIndices,m=e.skinWeights,v=f.length===r.length,g=m.length===r.length,c=0;c<n.length;c++){var y=n[c];this.vertices.push(r[y.a],r[y.b],r[y.c]);var b=y.vertexNormals;if(3===b.length)this.normals.push(b[0],b[1],b[2]);else{var x=y.normal;this.normals.push(x,x,x)}var w=y.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var _=y.color;this.colors.push(_,_,_)}if(!0===a){var E=i[0][c];void 0!==E?this.uvs.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new d,new d,new d))}if(!0===o){var E=i[1][c];void 0!==E?this.uvs2.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new d,new d,new d))}for(var M=0;M<l;M++){var T=s[M].vertices;t[M].push(T[y.a],T[y.b],T[y.c])}for(var M=0;M<p;M++){var S=h[M].vertexNormals[c];u[M].push(S.a,S.b,S.c)}v&&this.skinIndices.push(f[y.a],f[y.b],f[y.c]),g&&this.skinWeights.push(m[y.a],m[y.b],m[y.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}}),Fe.MaxIndex=65535,Object.assign(Fe.prototype,p.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(Ue(e)>65535?Ie:Re)(e,1):this.index=e},addAttribute:function(e,t){return t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(t)):(this.attributes[e]=t,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(e,new Se(arguments[1],arguments[2])))},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToBufferAttribute(t),t.needsUpdate=!0);var n=this.attributes.normal;if(void 0!==n){(new pe).getNormalMatrix(e).applyToBufferAttribute(n),n.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var e=new x;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e=new x;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e=new x;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e=new x;return function(t,n,r){return e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e=new x;return function(t,n,r){return e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e=new be;return function(t){e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.getCenter().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e.isPoints||e.isLine){var n=new Ne(3*t.vertices.length,3),r=new Ne(3*t.colors.length,3);if(this.addAttribute("position",n.copyVector3sArray(t.vertices)),this.addAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new Ne(t.lineDistances.length,1);this.addAttribute("lineDistance",i.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t=e.geometry;if(e.isMesh){var n=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(n=void 0,t.elementsNeedUpdate=!1),void 0===n)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}var r;return!0===t.verticesNeedUpdate&&(r=this.attributes.position,void 0!==r&&(r.copyVector3sArray(t.vertices),r.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(r=this.attributes.normal,void 0!==r&&(r.copyVector3sArray(t.normals),r.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(r=this.attributes.color,void 0!==r&&(r.copyColorsArray(t.colors),r.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(r=this.attributes.uv,void 0!==r&&(r.copyVector2sArray(t.uvs),r.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(r=this.attributes.lineDistance,void 0!==r&&(r.copyArray(t.lineDistances),r.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new De).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.addAttribute("position",new Se(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(3*e.normals.length);this.addAttribute("normal",new Se(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var r=new Float32Array(3*e.colors.length);this.addAttribute("color",new Se(r,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var i=new Float32Array(2*e.uvs.length);this.addAttribute("uv",new Se(i,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var a=new Float32Array(2*e.uvs2.length);this.addAttribute("uv2",new Se(a,2).copyVector2sArray(e.uvs2))}if(e.indices.length>0){var o=Ue(e.indices)>65535?Uint32Array:Uint16Array,s=new o(3*e.indices.length);this.setIndex(new Se(s,1).copyIndicesArray(e.indices))}this.groups=e.groups;for(var l in e.morphTargets){for(var c=[],u=e.morphTargets[l],h=0,p=u.length;h<p;h++){var d=u[h],f=new Ne(3*d.length,3);c.push(f.copyVector3sArray(d))}this.morphAttributes[l]=c}if(e.skinIndices.length>0){var m=new Ne(4*e.skinIndices.length,4);this.addAttribute("skinIndex",m.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var v=new Ne(4*e.skinWeights.length,4);this.addAttribute("skinWeight",v.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new ue);var e=this.attributes.position;void 0!==e?this.boundingBox.setFromBufferAttribute(e):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var e=new ue,t=new b;return function(){null===this.boundingSphere&&(this.boundingSphere=new he);var n=this.attributes.position;if(n){var r=this.boundingSphere.center;e.setFromBufferAttribute(n),e.getCenter(r);for(var i=0,a=0,o=n.count;a<o;a++)t.x=n.getX(a),t.y=n.getY(a),t.z=n.getZ(a),i=Math.max(i,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,n=this.groups;if(t.position){var r=t.position.array;if(void 0===t.normal)this.addAttribute("normal",new Se(new Float32Array(r.length),3));else for(var i=t.normal.array,a=0,o=i.length;a<o;a++)i[a]=0;var s,l,c,u=t.normal.array,h=new b,p=new b,d=new b,f=new b,m=new b;if(e){var v=e.array;0===n.length&&this.addGroup(0,v.length);for(var g=0,y=n.length;g<y;++g)for(var x=n[g],w=x.start,_=x.count,a=w,o=w+_;a<o;a+=3)s=3*v[a+0],l=3*v[a+1],c=3*v[a+2],h.fromArray(r,s),p.fromArray(r,l),d.fromArray(r,c),f.subVectors(d,p),m.subVectors(h,p),f.cross(m),u[s]+=f.x,u[s+1]+=f.y,u[s+2]+=f.z,u[l]+=f.x,u[l+1]+=f.y,u[l+2]+=f.z,u[c]+=f.x,u[c+1]+=f.y,u[c+2]+=f.z}else for(var a=0,o=r.length;a<o;a+=9)h.fromArray(r,a),p.fromArray(r,a+3),d.fromArray(r,a+6),f.subVectors(d,p),m.subVectors(h,p),f.cross(m),u[a]=f.x,u[a+1]=f.y,u[a+2]=f.z,u[a+3]=f.x,u[a+4]=f.y,u[a+5]=f.z,u[a+6]=f.x,u[a+7]=f.y,u[a+8]=f.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0);var n=this.attributes;for(var r in n)if(void 0!==e.attributes[r])for(var i=n[r],a=i.array,o=e.attributes[r],s=o.array,l=o.itemSize,c=0,u=l*t;c<s.length;c++,u++)a[u]=s[c];return this},normalizeNormals:function(){for(var e,t,n,r,i=this.attributes.normal,a=0,o=i.count;a<o;a++)e=i.getX(a),t=i.getY(a),n=i.getZ(a),r=1/Math.sqrt(e*e+t*t+n*n),i.setXYZ(a,e*r,t*r,n*r)},toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new Fe,t=this.index.array,n=this.attributes;for(var r in n){for(var i=n[r],a=i.array,o=i.itemSize,s=new a.constructor(t.length*o),l=0,c=0,u=0,h=t.length;u<h;u++){l=t[u]*o;for(var p=0;p<o;p++)s[c++]=a[l++]}e.addAttribute(r,new Se(s,o))}return e},toJSON:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var r=this.index;if(null!==r){var i=Array.prototype.slice.call(r.array);e.data.index={type:r.array.constructor.name,array:i}}var a=this.attributes;for(var n in a){var o=a[n],i=Array.prototype.slice.call(o.array);e.data.attributes[n]={itemSize:o.itemSize,type:o.array.constructor.name,array:i,normalized:o.normalized}}var s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));var l=this.boundingSphere;return null!==l&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e},clone:function(){return(new Fe).copy(this)},copy:function(e){var t,n,r;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var i=e.index;null!==i&&this.setIndex(i.clone());var a=e.attributes;for(t in a){var o=a[t];this.addAttribute(t,o.clone())}var s=e.morphAttributes;for(t in s){var l=[],c=s[t];for(n=0,r=c.length;n<r;n++)l.push(c[n].clone());this.morphAttributes[t]=l}var u=e.groups;for(n=0,r=u.length;n<r;n++){var h=u[n];this.addGroup(h.start,h.count,h.materialIndex)}var p=e.boundingBox;null!==p&&(this.boundingBox=p.clone());var d=e.boundingSphere;return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),ze.prototype=Object.create(Te.prototype),ze.prototype.constructor=ze,Be.prototype=Object.create(Fe.prototype),Be.prototype.constructor=Be,je.prototype=Object.create(Te.prototype),je.prototype.constructor=je,Ge.prototype=Object.create(Fe.prototype),Ge.prototype.constructor=Ge,He.prototype=Object.create(se.prototype),He.prototype.constructor=He,He.prototype.isMeshBasicMaterial=!0,He.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},Object.assign(Ve.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new b).copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new b;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var n=t||new b;n.subVectors(e,this.origin);var r=n.dot(this.direction);return r<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new b;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(n).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:function(){var e=new b,t=new b,n=new b;return function(r,i,a,o){e.copy(r).add(i).multiplyScalar(.5),t.copy(i).sub(r).normalize(),n.copy(this.origin).sub(e);var s,l,c,u,h=.5*r.distanceTo(i),p=-this.direction.dot(t),d=n.dot(this.direction),f=-n.dot(t),m=n.lengthSq(),v=Math.abs(1-p*p);if(v>0)if(s=p*f-d,l=p*d-f,u=h*v,s>=0)if(l>=-u)if(l<=u){var g=1/v;s*=g,l*=g,c=s*(s+p*l+2*d)+l*(p*s+l+2*f)+m}else l=h,s=Math.max(0,-(p*l+d)),c=-s*s+l*(l+2*f)+m;else l=-h,s=Math.max(0,-(p*l+d)),c=-s*s+l*(l+2*f)+m;else l<=-u?(s=Math.max(0,-(-p*h+d)),l=s>0?-h:Math.min(Math.max(-h,-f),h),c=-s*s+l*(l+2*f)+m):l<=u?(s=0,l=Math.min(Math.max(-h,-f),h),c=l*(l+2*f)+m):(s=Math.max(0,-(p*h+d)),l=s>0?h:Math.min(Math.max(-h,-f),h),c=-s*s+l*(l+2*f)+m);else l=p>0?-h:h,s=Math.max(0,-(p*l+d)),c=-s*s+l*(l+2*f)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(t).multiplyScalar(l).add(e),c}}(),intersectSphere:function(){var e=new b;return function(t,n){e.subVectors(t.center,this.origin);var r=e.dot(this.direction),i=e.dot(e)-r*r,a=t.radius*t.radius;if(i>a)return null;var o=Math.sqrt(a-i),s=r-o,l=r+o;return s<0&&l<0?null:s<0?this.at(l,n):this.at(s,n)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){var n,r,i,a,o,s,l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,r=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,r=(e.min.x-h.x)*l),c>=0?(i=(e.min.y-h.y)*c,a=(e.max.y-h.y)*c):(i=(e.max.y-h.y)*c,a=(e.min.y-h.y)*c),n>a||i>r?null:((i>n||n!==n)&&(n=i),(a<r||r!==r)&&(r=a),u>=0?(o=(e.min.z-h.z)*u,s=(e.max.z-h.z)*u):(o=(e.max.z-h.z)*u,s=(e.min.z-h.z)*u),n>s||o>r?null:((o>n||n!==n)&&(n=o),(s<r||r!==r)&&(r=s),r<0?null:this.at(n>=0?n:r,t)))},intersectsBox:function(){var e=new b;return function(t){return null!==this.intersectBox(t,e)}}(),intersectTriangle:function(){var e=new b,t=new b,n=new b,r=new b;return function(i,a,o,s,l){t.subVectors(a,i),n.subVectors(o,i),r.crossVectors(t,n);var c,u=this.direction.dot(r);if(u>0){if(s)return null;c=1}else{if(!(u<0))return null;c=-1,u=-u}e.subVectors(this.origin,i);var h=c*this.direction.dot(n.crossVectors(e,n));if(h<0)return null;var p=c*this.direction.dot(t.cross(e));if(p<0)return null;if(h+p>u)return null;var d=-c*e.dot(r);return d<0?null:this.at(d/u,l)}}(),applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}),Object.assign(We.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return(e||new b).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new b).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var n=t||new b;return this.delta(n).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new b,t=new b;return function(n,r){e.subVectors(n,this.start),t.subVectors(this.end,this.start);var i=t.dot(t),a=t.dot(e),o=a/i;return r&&(o=Hs.clamp(o,0,1)),o}}(),closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t),i=n||new b;return this.delta(i).multiplyScalar(r).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}),Object.assign(Xe,{normal:function(){var e=new b;return function(t,n,r,i){var a=i||new b;a.subVectors(r,n),e.subVectors(t,n),a.cross(e);var o=a.lengthSq();return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}}(),barycoordFromPoint:function(){var e=new b,t=new b,n=new b;return function(r,i,a,o,s){e.subVectors(o,i),t.subVectors(a,i),n.subVectors(r,i);var l=e.dot(e),c=e.dot(t),u=e.dot(n),h=t.dot(t),p=t.dot(n),d=l*h-c*c,f=s||new b;if(0===d)return f.set(-2,-1,-1);var m=1/d,v=(h*u-c*p)*m,g=(l*p-c*u)*m;return f.set(1-v-g,g,v)}}(),containsPoint:function(){var e=new b;return function(t,n,r,i){var a=Xe.barycoordFromPoint(t,n,r,i,e);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}()}),Object.assign(Xe.prototype,{set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new b,t=new b;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new b).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return Xe.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new de).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return Xe.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return Xe.containsPoint(e,this.a,this.b,this.c)},closestPointToPoint:function(){var e=new de,t=[new We,new We,new We],n=new b,r=new b;return function(i,a){var o=a||new b,s=1/0;if(e.setFromCoplanarPoints(this.a,this.b,this.c),e.projectPoint(i,n),!0===this.containsPoint(n))o.copy(n);else{t[0].set(this.a,this.b),t[1].set(this.b,this.c),t[2].set(this.c,this.a);for(var l=0;l<t.length;l++){t[l].closestPointToPoint(n,!0,r);var c=n.distanceToSquared(r);c<s&&(s=c,o.copy(r))}}return o}}(),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}),qe.prototype=Object.assign(Object.create(be.prototype),{constructor:qe,isMesh:!0,setDrawMode:function(e){this.drawMode=e},copy:function(e){return be.prototype.copy.call(this,e),this.drawMode=e.drawMode,this},updateMorphTargets:function(){var e,t,n,r=this.geometry;if(r.isBufferGeometry){var i=r.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=o.length;e<t;e++)n=o[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}else{var s=r.morphTargets;if(void 0!==s&&s.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=s.length;e<t;e++)n=s[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}},raycast:function(){function e(e,t,n,r,i,a,o){return Xe.barycoordFromPoint(e,t,n,r,v),i.multiplyScalar(v.x),a.multiplyScalar(v.y),o.multiplyScalar(v.z),i.add(a).add(o),i.clone()}function t(e,t,n,r,i,a,o){var s=e.material;if(null===(s.side===qa?n.intersectTriangle(a,i,r,!0,o):n.intersectTriangle(r,i,a,s.side!==Ya,o)))return null;y.copy(o),y.applyMatrix4(e.matrixWorld);var l=t.ray.origin.distanceTo(y);return l<t.near||l>t.far?null:{distance:l,point:y.clone(),object:e}}function n(n,r,i,a,c,u,h,d){o.fromBufferAttribute(a,u),s.fromBufferAttribute(a,h),l.fromBufferAttribute(a,d);var v=t(n,r,i,o,s,l,g);return v&&(c&&(p.fromBufferAttribute(c,u),f.fromBufferAttribute(c,h),m.fromBufferAttribute(c,d),v.uv=e(g,o,s,l,p,f,m)),v.face=new Ee(u,h,d,Xe.normal(o,s,l)),v.faceIndex=u),v}var r=new x,i=new Ve,a=new he,o=new b,s=new b,l=new b,c=new b,u=new b,h=new b,p=new d,f=new d,m=new d,v=new b,g=new b,y=new b;return function(d,v){var y=this.geometry,b=this.material,x=this.matrixWorld;if(void 0!==b&&(null===y.boundingSphere&&y.computeBoundingSphere(),a.copy(y.boundingSphere),a.applyMatrix4(x),!1!==d.ray.intersectsSphere(a)&&(r.getInverse(x),i.copy(d.ray).applyMatrix4(r),null===y.boundingBox||!1!==i.intersectsBox(y.boundingBox)))){var w;if(y.isBufferGeometry){var _,E,M,T,S,A=y.index,C=y.attributes.position,P=y.attributes.uv;if(null!==A)for(T=0,S=A.count;T<S;T+=3)_=A.getX(T),E=A.getX(T+1),M=A.getX(T+2),(w=n(this,d,i,C,P,_,E,M))&&(w.faceIndex=Math.floor(T/3),v.push(w));else for(T=0,S=C.count;T<S;T+=3)_=T,E=T+1,M=T+2,(w=n(this,d,i,C,P,_,E,M))&&(w.index=_,v.push(w))}else if(y.isGeometry){var L,R,O,I,N=Array.isArray(b),k=y.vertices,D=y.faces,U=y.faceVertexUvs[0];U.length>0&&(I=U);for(var F=0,z=D.length;F<z;F++){var B=D[F],j=N?b[B.materialIndex]:b;if(void 0!==j){if(L=k[B.a],R=k[B.b],O=k[B.c],!0===j.morphTargets){var G=y.morphTargets,H=this.morphTargetInfluences;o.set(0,0,0),s.set(0,0,0),l.set(0,0,0);for(var V=0,W=G.length;V<W;V++){var X=H[V];if(0!==X){var q=G[V].vertices;o.addScaledVector(c.subVectors(q[B.a],L),X),s.addScaledVector(u.subVectors(q[B.b],R),X),l.addScaledVector(h.subVectors(q[B.c],O),X)}}o.add(L),s.add(R),l.add(O),L=o,R=s,O=l}if(w=t(this,d,i,L,R,O,g)){if(I&&I[F]){var Y=I[F];p.copy(Y[0]),f.copy(Y[1]),m.copy(Y[2]),w.uv=e(g,L,R,O,p,f,m)}w.face=B,w.faceIndex=F,v.push(w)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var ol=0;Et.prototype=Object.assign(Object.create(_e.prototype),{constructor:Et,isArrayCamera:!0}),Ct.prototype.isFogExp2=!0,Ct.prototype.clone=function(){return new Ct(this.color.getHex(),this.density)},Ct.prototype.toJSON=function(e){return{type:"FogExp2",color:this.color.getHex(),density:this.density}},Pt.prototype.isFog=!0,Pt.prototype.clone=function(){return new Pt(this.color.getHex(),this.near,this.far)},Pt.prototype.toJSON=function(e){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}},Lt.prototype=Object.assign(Object.create(be.prototype),{constructor:Lt,copy:function(e,t){return be.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){var t=be.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}),Rt.prototype=Object.assign(Object.create(be.prototype),{constructor:Rt,isLensFlare:!0,copy:function(e){be.prototype.copy.call(this,e),this.positionScreen.copy(e.positionScreen),this.customUpdateCallback=e.customUpdateCallback;for(var t=0,n=e.lensFlares.length;t<n;t++)this.lensFlares.push(e.lensFlares[t]);return this},add:function(e,t,n,r,i,a){void 0===t&&(t=-1),void 0===n&&(n=0),void 0===a&&(a=1),void 0===i&&(i=new re(16777215)),void 0===r&&(r=to),n=Math.min(n,Math.max(0,n)),this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:0,opacity:a,color:i,blending:r})},updateLensFlares:function(){var e,t,n=this.lensFlares.length,r=2*-this.positionScreen.x,i=2*-this.positionScreen.y;for(e=0;e<n;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+i*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)}}),Ot.prototype=Object.create(se.prototype),Ot.prototype.constructor=Ot,Ot.prototype.isSpriteMaterial=!0,Ot.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this},It.prototype=Object.assign(Object.create(be.prototype),{constructor:It,isSprite:!0,raycast:function(){var e=new b,t=new b,n=new b;return function(r,i){t.setFromMatrixPosition(this.matrixWorld),r.ray.closestPointToPoint(t,e),n.setFromMatrixScale(this.matrixWorld);var a=n.x*n.y/4;if(!(t.distanceToSquared(e)>a)){var o=r.ray.origin.distanceTo(e);o<r.near||o>r.far||i.push({distance:o,point:e.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)}}),Nt.prototype=Object.assign(Object.create(be.prototype),{constructor:Nt,copy:function(e){be.prototype.copy.call(this,e,!1);for(var t=e.levels,n=0,r=t.length;n<r;n++){var i=t[n];this.addLevel(i.object.clone(),i.distance)}return this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var n=this.levels,r=0;r<n.length&&!(t<n[r].distance);r++);n.splice(r,0,{distance:t,object:e}),this.add(e)},getObjectForDistance:function(e){for(var t=this.levels,n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object},raycast:function(){var e=new b;return function(t,n){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(e);this.getObjectForDistance(r).raycast(t,n)}}(),update:function(){var e=new b,t=new b;return function(n){var r=this.levels;if(r.length>1){e.setFromMatrixPosition(n.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);r[0].object.visible=!0;for(var a=1,o=r.length;a<o&&i>=r[a].distance;a++)r[a-1].object.visible=!1,r[a].object.visible=!0;for(;a<o;a++)r[a].object.visible=!1}}}(),toJSON:function(e){var t=be.prototype.toJSON.call(this,e);t.object.levels=[];for(var n=this.levels,r=0,i=n.length;r<i;r++){var a=n[r];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}),Object.assign(kt.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new x;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){var e,t,n;for(t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){var e=new x,t=new x;return function(){for(var n=this.bones,r=this.boneInverses,i=this.boneMatrices,a=this.boneTexture,o=0,s=n.length;o<s;o++){var l=n[o]?n[o].matrixWorld:t;e.multiplyMatrices(l,r[o]),e.toArray(i,16*o)}void 0!==a&&(a.needsUpdate=!0)}}(),clone:function(){return new kt(this.bones,this.boneInverses)}}),Dt.prototype=Object.assign(Object.create(be.prototype),{constructor:Dt,isBone:!0}),Ut.prototype=Object.assign(Object.create(qe.prototype),{constructor:Ut,isSkinnedMesh:!0,initBones:function(){var e,t,n,r,i=[];if(this.geometry&&void 0!==this.geometry.bones){for(n=0,r=this.geometry.bones.length;n<r;n++)t=this.geometry.bones[n],e=new Dt,i.push(e),e.name=t.name,e.position.fromArray(t.pos),e.quaternion.fromArray(t.rotq),void 0!==t.scl&&e.scale.fromArray(t.scl);for(n=0,r=this.geometry.bones.length;n<r;n++)t=this.geometry.bones[n],-1!==t.parent&&null!==t.parent&&void 0!==i[t.parent]?i[t.parent].add(i[n]):this.add(i[n])}return this.updateMatrixWorld(!0),i},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var e,t;if(this.geometry&&this.geometry.isGeometry)for(t=0;t<this.geometry.skinWeights.length;t++){var n=this.geometry.skinWeights[t];e=1/n.lengthManhattan(),e!==1/0?n.multiplyScalar(e):n.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var r=new m,i=this.geometry.attributes.skinWeight;for(t=0;t<i.count;t++)r.x=i.getX(t),r.y=i.getY(t),r.z=i.getZ(t),r.w=i.getW(t),e=1/r.lengthManhattan(),e!==1/0?r.multiplyScalar(e):r.set(1,0,0,0),i.setXYZW(t,r.x,r.y,r.z,r.w)}},updateMatrixWorld:function(e){qe.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ft.prototype=Object.create(se.prototype),Ft.prototype.constructor=Ft,Ft.prototype.isLineBasicMaterial=!0,Ft.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this},zt.prototype=Object.assign(Object.create(be.prototype),{constructor:zt,isLine:!0,raycast:function(){var e=new x,t=new Ve,n=new he;return function(r,i){var a=r.linePrecision,o=a*a,s=this.geometry,l=this.matrixWorld;if(null===s.boundingSphere&&s.computeBoundingSphere(),n.copy(s.boundingSphere),n.applyMatrix4(l),!1!==r.ray.intersectsSphere(n)){e.getInverse(l),t.copy(r.ray).applyMatrix4(e);var c=new b,u=new b,h=new b,p=new b,d=this&&this.isLineSegments?2:1;if(s.isBufferGeometry){var f=s.index,m=s.attributes,v=m.position.array;if(null!==f)for(var g=f.array,y=0,x=g.length-1;y<x;y+=d){var w=g[y],_=g[y+1];c.fromArray(v,3*w),u.fromArray(v,3*_);var E=t.distanceSqToSegment(c,u,p,h);if(!(E>o)){p.applyMatrix4(this.matrixWorld);var M=r.ray.origin.distanceTo(p);M<r.near||M>r.far||i.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else for(var y=0,x=v.length/3-1;y<x;y+=d){c.fromArray(v,3*y),u.fromArray(v,3*y+3);var E=t.distanceSqToSegment(c,u,p,h);if(!(E>o)){p.applyMatrix4(this.matrixWorld);var M=r.ray.origin.distanceTo(p);M<r.near||M>r.far||i.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}else if(s.isGeometry)for(var T=s.vertices,S=T.length,y=0;y<S-1;y+=d){var E=t.distanceSqToSegment(T[y],T[y+1],p,h);if(!(E>o)){p.applyMatrix4(this.matrixWorld);var M=r.ray.origin.distanceTo(p);M<r.near||M>r.far||i.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Bt.prototype=Object.assign(Object.create(zt.prototype),{constructor:Bt,isLineSegments:!0}),jt.prototype=Object.assign(Object.create(zt.prototype),{constructor:jt,isLineLoop:!0}),Gt.prototype=Object.create(se.prototype),Gt.prototype.constructor=Gt,Gt.prototype.isPointsMaterial=!0,Gt.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this},Ht.prototype=Object.assign(Object.create(be.prototype),{constructor:Ht,isPoints:!0,raycast:function(){var e=new x,t=new Ve,n=new he;return function(r,i){function a(e,n){var a=t.distanceSqToPoint(e);if(a<h){var s=t.closestPointToPoint(e);s.applyMatrix4(l);var c=r.ray.origin.distanceTo(s);if(c<r.near||c>r.far)return;i.push({distance:c,distanceToRay:Math.sqrt(a),point:s.clone(),index:n,face:null,object:o})}}var o=this,s=this.geometry,l=this.matrixWorld,c=r.params.Points.threshold;if(null===s.boundingSphere&&s.computeBoundingSphere(),n.copy(s.boundingSphere),n.applyMatrix4(l),n.radius+=c,!1!==r.ray.intersectsSphere(n)){e.getInverse(l),t.copy(r.ray).applyMatrix4(e);var u=c/((this.scale.x+this.scale.y+this.scale.z)/3),h=u*u,p=new b;if(s.isBufferGeometry){var d=s.index,f=s.attributes,m=f.position.array;if(null!==d)for(var v=d.array,g=0,y=v.length;g<y;g++){var x=v[g];p.fromArray(m,3*x),a(p,x)}else for(var g=0,w=m.length/3;g<w;g++)p.fromArray(m,3*g),a(p,g)}else for(var _=s.vertices,g=0,w=_.length;g<w;g++)a(_[g],g)}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Vt.prototype=Object.assign(Object.create(be.prototype),{constructor:Vt}),Wt.prototype=Object.create(f.prototype),Wt.prototype.constructor=Wt,Xt.prototype=Object.create(f.prototype),Xt.prototype.constructor=Xt,Xt.prototype.isCompressedTexture=!0,qt.prototype=Object.create(f.prototype),qt.prototype.constructor=qt,Yt.prototype=Object.create(f.prototype),Yt.prototype.constructor=Yt,Yt.prototype.isDepthTexture=!0,Zt.prototype=Object.create(Fe.prototype),Zt.prototype.constructor=Zt,Kt.prototype=Object.create(Te.prototype),Kt.prototype.constructor=Kt,Jt.prototype=Object.create(Fe.prototype),Jt.prototype.constructor=Jt,Qt.prototype=Object.create(Te.prototype),Qt.prototype.constructor=Qt,$t.prototype=Object.create(Fe.prototype),$t.prototype.constructor=$t,en.prototype=Object.create(Te.prototype),en.prototype.constructor=en,tn.prototype=Object.create($t.prototype),tn.prototype.constructor=tn,nn.prototype=Object.create(Te.prototype),nn.prototype.constructor=nn,rn.prototype=Object.create($t.prototype),rn.prototype.constructor=rn,an.prototype=Object.create(Te.prototype),an.prototype.constructor=an,on.prototype=Object.create($t.prototype),on.prototype.constructor=on,sn.prototype=Object.create(Te.prototype),sn.prototype.constructor=sn,ln.prototype=Object.create($t.prototype),ln.prototype.constructor=ln,cn.prototype=Object.create(Te.prototype),cn.prototype.constructor=cn,un.prototype=Object.create(Fe.prototype),un.prototype.constructor=un,hn.prototype=Object.create(Te.prototype),hn.prototype.constructor=hn,pn.prototype=Object.create(Fe.prototype),pn.prototype.constructor=pn,dn.prototype=Object.create(Te.prototype),dn.prototype.constructor=dn,fn.prototype=Object.create(Fe.prototype),fn.prototype.constructor=fn;var sl={area:function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n},triangulate:function(){function e(e,t,n,r,i,a){var o,s,l,c,u,h,p,d,f;if(s=e[a[t]].x,l=e[a[t]].y,c=e[a[n]].x,u=e[a[n]].y,h=e[a[r]].x,p=e[a[r]].y,(c-s)*(p-l)-(u-l)*(h-s)<=0)return!1;var m,v,g,y,b,x,w,_,E,M,T,S,A,C,P;for(m=h-c,v=p-u,g=s-h,y=l-p,b=c-s,x=u-l,o=0;o<i;o++)if(d=e[a[o]].x,f=e[a[o]].y,!(d===s&&f===l||d===c&&f===u||d===h&&f===p)&&(w=d-s,_=f-l,E=d-c,M=f-u,T=d-h,S=f-p,P=m*M-v*E,A=b*_-x*w,C=g*S-y*T,P>=-Number.EPSILON&&C>=-Number.EPSILON&&A>=-Number.EPSILON))return!1;return!0}return function(t,n){var r=t.length;if(r<3)return null;var i,a,o,s=[],l=[],c=[];if(sl.area(t)>0)for(a=0;a<r;a++)l[a]=a;else for(a=0;a<r;a++)l[a]=r-1-a;var u=r,h=2*u;for(a=u-1;u>2;){if(h--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),n?c:s;if(i=a,u<=i&&(i=0),a=i+1,u<=a&&(a=0),o=a+1,u<=o&&(o=0),e(t,i,a,o,u,l)){var p,d,f,m,v;for(p=l[i],d=l[a],f=l[o],s.push([t[p],t[d],t[f]]),c.push([l[i],l[a],l[o]]),m=a,v=a+1;v<u;m++,v++)l[m]=l[v];u--,h=2*u}}return n?c:s}}(),triangulateShape:function(e,t){function n(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function r(e,t,n){return e.x!==t.x?e.x<t.x?e.x<=n.x&&n.x<=t.x:t.x<=n.x&&n.x<=e.x:e.y<t.y?e.y<=n.y&&n.y<=t.y:t.y<=n.y&&n.y<=e.y}function i(e,t,n,i,a){var o=t.x-e.x,s=t.y-e.y,l=i.x-n.x,c=i.y-n.y,u=e.x-n.x,h=e.y-n.y,p=s*l-o*c,d=s*u-o*h;if(Math.abs(p)>Number.EPSILON){var f;if(p>0){if(d<0||d>p)return[];if((f=c*u-l*h)<0||f>p)return[]}else{if(d>0||d<p)return[];if((f=c*u-l*h)>0||f<p)return[]}if(0===f)return!a||0!==d&&d!==p?[e]:[];if(f===p)return!a||0!==d&&d!==p?[t]:[];if(0===d)return[n];if(d===p)return[i];var m=f/p;return[{x:e.x+m*o,y:e.y+m*s}]}if(0!==d||c*u!=l*h)return[];var v=0===o&&0===s,g=0===l&&0===c;if(v&&g)return e.x!==n.x||e.y!==n.y?[]:[e];if(v)return r(n,i,e)?[e]:[];if(g)return r(e,t,n)?[n]:[];var y,b,x,w,_,E,M,T;return 0!==o?(e.x<t.x?(y=e,x=e.x,b=t,w=t.x):(y=t,x=t.x,b=e,w=e.x),n.x<i.x?(_=n,M=n.x,E=i,T=i.x):(_=i,M=i.x,E=n,T=n.x)):(e.y<t.y?(y=e,x=e.y,b=t,w=t.y):(y=t,x=t.y,b=e,w=e.y),n.y<i.y?(_=n,M=n.y,E=i,T=i.y):(_=i,M=i.y,E=n,T=n.y)),x<=M?w<M?[]:w===M?a?[]:[_]:w<=T?[_,b]:[_,E]:x>T?[]:x===T?a?[]:[y]:w<=T?[y,b]:[y,E]}function a(e,t,n,r){var i=t.x-e.x,a=t.y-e.y,o=n.x-e.x,s=n.y-e.y,l=r.x-e.x,c=r.y-e.y,u=i*s-a*o,h=i*c-a*l;if(Math.abs(u)>Number.EPSILON){var p=l*s-c*o;return u>0?h>=0&&p>=0:h>=0||p>=0}return h>0}n(e),t.forEach(n);for(var o,s,l,c,u,h,p={},d=e.concat(),f=0,m=t.length;f<m;f++)Array.prototype.push.apply(d,t[f]);for(o=0,s=d.length;o<s;o++)u=d[o].x+":"+d[o].y,void 0!==p[u]&&console.warn("THREE.ShapeUtils: Duplicate point",u,o),p[u]=o;var v=function(e,t){for(var n,r,o,s,l,c,u,h,p,d,f,m=e.concat(),v=[],g=[],y=0,b=t.length;y<b;y++)v.push(y);for(var x=0,w=2*v.length;v.length>0;){if(--w<0){console.log("Infinite Loop! Holes left:"+v.length+", Probably Hole outside Shape!");break}for(o=x;o<m.length;o++){s=m[o],r=-1;for(var y=0;y<v.length;y++)if(c=v[y],u=s.x+":"+s.y+":"+c,void 0===g[u]){n=t[c];for(var _=0;_<n.length;_++)if(l=n[_],function(e,t){var r=m.length-1,i=e-1;i<0&&(i=r);var o=e+1;o>r&&(o=0);var s=a(m[e],m[i],m[o],n[t]);if(!s)return!1;var l=n.length-1,c=t-1;c<0&&(c=l);var u=t+1;return u>l&&(u=0),!!(s=a(n[t],n[c],n[u],m[e]))}(o,_)&&!function(e,t){var n,r,a;for(n=0;n<m.length;n++)if(r=n+1,r%=m.length,a=i(e,t,m[n],m[r],!0),a.length>0)return!0;return!1}(s,l)&&!function(e,n){var r,a,o,s,l;for(r=0;r<v.length;r++)for(a=t[v[r]],o=0;o<a.length;o++)if(s=o+1,s%=a.length,l=i(e,n,a[o],a[s],!0),l.length>0)return!0;return!1}(s,l)){r=_,v.splice(y,1),h=m.slice(0,o+1),p=m.slice(o),d=n.slice(r),f=n.slice(0,r+1),m=h.concat(d).concat(f).concat(p),x=o;break}if(r>=0)break;g[u]=!0}if(r>=0)break}}return m}(e,t),g=sl.triangulate(v,!1);for(o=0,s=g.length;o<s;o++)for(c=g[o],l=0;l<3;l++)u=c[l].x+":"+c[l].y,void 0!==(h=p[u])&&(c[l]=h);return g.concat()},isClockWise:function(e){return sl.area(e)<0}};mn.prototype=Object.create(Te.prototype),mn.prototype.constructor=mn,vn.prototype=Object.create(Fe.prototype),vn.prototype.constructor=vn,vn.prototype.getArrays=function(){var e=this.getAttribute("position"),t=e?Array.prototype.slice.call(e.array):[],n=this.getAttribute("uv"),r=n?Array.prototype.slice.call(n.array):[],i=this.index;return{position:t,uv:r,index:i?Array.prototype.slice.call(i.array):[]}},vn.prototype.addShapeList=function(e,t){var n=e.length;t.arrays=this.getArrays();for(var r=0;r<n;r++){var i=e[r];this.addShape(i,t)}this.setIndex(t.arrays.index),this.addAttribute("position",new Ne(t.arrays.position,3)),this.addAttribute("uv",new Ne(t.arrays.uv,2))},vn.prototype.addShape=function(e,t){function n(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}function r(e,t,n){var r,i,a,o=e.x-t.x,s=e.y-t.y,l=n.x-e.x,c=n.y-e.y,u=o*o+s*s,h=o*c-s*l;if(Math.abs(h)>Number.EPSILON){var p=Math.sqrt(u),f=Math.sqrt(l*l+c*c),m=t.x-s/p,v=t.y+o/p,g=n.x-c/f,y=n.y+l/f,b=((g-m)*c-(y-v)*l)/(o*c-s*l);r=m+o*b-e.x,i=v+s*b-e.y;var x=r*r+i*i;if(x<=2)return new d(r,i);a=Math.sqrt(x/2)}else{var w=!1;o>Number.EPSILON?l>Number.EPSILON&&(w=!0):o<-Number.EPSILON?l<-Number.EPSILON&&(w=!0):Math.sign(s)===Math.sign(c)&&(w=!0),w?(r=-s,i=o,a=Math.sqrt(u)):(r=o,i=s,a=Math.sqrt(u/2))}return new d(r/a,i/a)}function i(e,t){var n,r;for(K=e.length;--K>=0;){n=K,r=K-1,r<0&&(r=e.length-1);var i=0,a=C+2*T;for(i=0;i<a;i++){var o=q*i,l=q*(i+1);s(t+n+o,t+r+o,t+r+l,t+n+l,e,i,a,n,r)}}}function a(e,t,n){w.push(e),w.push(t),w.push(n)}function o(e,t,n){l(e),l(t),l(n);var r=g.length/3,i=R.generateTopUV(k,g,r-3,r-2,r-1);c(i[0]),c(i[1]),c(i[2])}function s(e,t,n,r,i,a,o,s,u){l(e),l(t),l(r),l(t),l(n),l(r);var h=g.length/3,p=R.generateSideWallUV(k,g,h-6,h-3,h-2,h-1);c(p[0]),c(p[1]),c(p[3]),c(p[1]),c(p[2]),c(p[3])}function l(e){y.push(g.length/3),g.push(w[3*e+0]),g.push(w[3*e+1]),g.push(w[3*e+2])}function c(e){x.push(e.x),x.push(e.y)}var u,h,p,f,m,v=t.arrays?t.arrays:this.getArrays(),g=v.position,y=v.index,x=v.uv,w=[],_=void 0!==t.amount?t.amount:100,E=void 0!==t.bevelThickness?t.bevelThickness:6,M=void 0!==t.bevelSize?t.bevelSize:E-2,T=void 0!==t.bevelSegments?t.bevelSegments:3,S=void 0===t.bevelEnabled||t.bevelEnabled,A=void 0!==t.curveSegments?t.curveSegments:12,C=void 0!==t.steps?t.steps:1,P=t.extrudePath,L=!1,R=void 0!==t.UVGenerator?t.UVGenerator:mn.WorldUVGenerator;P&&(u=P.getSpacedPoints(C),L=!0,S=!1,h=void 0!==t.frames?t.frames:P.computeFrenetFrames(C,!1),p=new b,f=new b,m=new b),S||(T=0,E=0,M=0);var O,I,N,k=this,D=e.extractPoints(A),U=D.shape,F=D.holes;if(!sl.isClockWise(U))for(U=U.reverse(),I=0,N=F.length;I<N;I++)O=F[I],sl.isClockWise(O)&&(F[I]=O.reverse());var z=sl.triangulateShape(U,F),B=U;for(I=0,N=F.length;I<N;I++)O=F[I],U=U.concat(O);for(var j,G,H,V,W,X,q=U.length,Y=z.length,Z=[],K=0,J=B.length,Q=J-1,$=K+1;K<J;K++,Q++,$++)Q===J&&(Q=0),$===J&&($=0),Z[K]=r(B[K],B[Q],B[$]);var ee,te=[],ne=Z.concat();for(I=0,N=F.length;I<N;I++){for(O=F[I],ee=[],K=0,J=O.length,Q=J-1,$=K+1;K<J;K++,Q++,$++)Q===J&&(Q=0),$===J&&($=0),ee[K]=r(O[K],O[Q],O[$]);te.push(ee),ne=ne.concat(ee)}for(j=0;j<T;j++){for(H=j/T,V=E*Math.cos(H*Math.PI/2),G=M*Math.sin(H*Math.PI/2),K=0,J=B.length;K<J;K++)W=n(B[K],Z[K],G),a(W.x,W.y,-V);for(I=0,N=F.length;I<N;I++)for(O=F[I],ee=te[I],K=0,J=O.length;K<J;K++)W=n(O[K],ee[K],G),a(W.x,W.y,-V)}for(G=M,K=0;K<q;K++)W=S?n(U[K],ne[K],G):U[K],L?(f.copy(h.normals[0]).multiplyScalar(W.x),p.copy(h.binormals[0]).multiplyScalar(W.y),m.copy(u[0]).add(f).add(p),a(m.x,m.y,m.z)):a(W.x,W.y,0);var re;for(re=1;re<=C;re++)for(K=0;K<q;K++)W=S?n(U[K],ne[K],G):U[K],L?(f.copy(h.normals[re]).multiplyScalar(W.x),p.copy(h.binormals[re]).multiplyScalar(W.y),m.copy(u[re]).add(f).add(p),a(m.x,m.y,m.z)):a(W.x,W.y,_/C*re);for(j=T-1;j>=0;j--){for(H=j/T,V=E*Math.cos(H*Math.PI/2),G=M*Math.sin(H*Math.PI/2),K=0,J=B.length;K<J;K++)W=n(B[K],Z[K],G),a(W.x,W.y,_+V);for(I=0,N=F.length;I<N;I++)for(O=F[I],ee=te[I],K=0,J=O.length;K<J;K++)W=n(O[K],ee[K],G),L?a(W.x,W.y+u[C-1].y,u[C-1].x+V):a(W.x,W.y,_+V)}!function(){var e=g.length/3;if(S){var n=0,r=q*n;for(K=0;K<Y;K++)X=z[K],o(X[2]+r,X[1]+r,X[0]+r);for(n=C+2*T,r=q*n,K=0;K<Y;K++)X=z[K],o(X[0]+r,X[1]+r,X[2]+r)}else{for(K=0;K<Y;K++)X=z[K],o(X[2],X[1],X[0]);for(K=0;K<Y;K++)X=z[K],o(X[0]+q*C,X[1]+q*C,X[2]+q*C)}k.addGroup(e,g.length/3-e,void 0!==t.material?t.material:0)}(),function(){var e=g.length/3,n=0;for(i(B,n),n+=B.length,I=0,N=F.length;I<N;I++)O=F[I],i(O,n),n+=O.length;k.addGroup(e,g.length/3-e,void 0!==t.extrudeMaterial?t.extrudeMaterial:1)}(),t.arrays||(this.setIndex(y),this.addAttribute("position",new Ne(g,3)),this.addAttribute("uv",new Ne(t.arrays.uv,2)))},mn.WorldUVGenerator={generateTopUV:function(e,t,n,r,i){var a=t[3*n],o=t[3*n+1],s=t[3*r],l=t[3*r+1],c=t[3*i],u=t[3*i+1];return[new d(a,o),new d(s,l),new d(c,u)]},generateSideWallUV:function(e,t,n,r,i,a){var o=t[3*n],s=t[3*n+1],l=t[3*n+2],c=t[3*r],u=t[3*r+1],h=t[3*r+2],p=t[3*i],f=t[3*i+1],m=t[3*i+2],v=t[3*a],g=t[3*a+1],y=t[3*a+2];return Math.abs(s-u)<.01?[new d(o,1-l),new d(c,1-h),new d(p,1-m),new d(v,1-y)]:[new d(s,1-l),new d(u,1-h),new d(f,1-m),new d(g,1-y)]}},gn.prototype=Object.create(Te.prototype),gn.prototype.constructor=gn,yn.prototype=Object.create(vn.prototype),yn.prototype.constructor=yn,bn.prototype=Object.create(Te.prototype),bn.prototype.constructor=bn,xn.prototype=Object.create(Fe.prototype),xn.prototype.constructor=xn,wn.prototype=Object.create(Te.prototype),wn.prototype.constructor=wn,_n.prototype=Object.create(Fe.prototype),_n.prototype.constructor=_n,En.prototype=Object.create(Te.prototype),En.prototype.constructor=En,Mn.prototype=Object.create(Fe.prototype),Mn.prototype.constructor=Mn,Tn.prototype=Object.create(Te.prototype),Tn.prototype.constructor=Tn,Sn.prototype=Object.create(Fe.prototype),Sn.prototype.constructor=Sn,An.prototype=Object.create(Fe.prototype),An.prototype.constructor=An,Cn.prototype=Object.create(Te.prototype),Cn.prototype.constructor=Cn,Pn.prototype=Object.create(Fe.prototype),Pn.prototype.constructor=Pn,Ln.prototype=Object.create(Cn.prototype),Ln.prototype.constructor=Ln,Rn.prototype=Object.create(Pn.prototype),Rn.prototype.constructor=Rn,On.prototype=Object.create(Te.prototype),On.prototype.constructor=On,In.prototype=Object.create(Fe.prototype),In.prototype.constructor=In;var ll=Object.freeze({WireframeGeometry:Zt,ParametricGeometry:Kt,ParametricBufferGeometry:Jt,TetrahedronGeometry:en,TetrahedronBufferGeometry:tn,OctahedronGeometry:nn,OctahedronBufferGeometry:rn,IcosahedronGeometry:an,IcosahedronBufferGeometry:on,DodecahedronGeometry:sn,DodecahedronBufferGeometry:ln,PolyhedronGeometry:Qt,PolyhedronBufferGeometry:$t,TubeGeometry:cn,TubeBufferGeometry:un,TorusKnotGeometry:hn,TorusKnotBufferGeometry:pn,TorusGeometry:dn,TorusBufferGeometry:fn,TextGeometry:gn,TextBufferGeometry:yn,SphereGeometry:bn,SphereBufferGeometry:xn,RingGeometry:wn,RingBufferGeometry:_n,PlaneGeometry:je,PlaneBufferGeometry:Ge,LatheGeometry:En,LatheBufferGeometry:Mn,ShapeGeometry:Tn,ShapeBufferGeometry:Sn,ExtrudeGeometry:mn,ExtrudeBufferGeometry:vn,EdgesGeometry:An,ConeGeometry:Ln,ConeBufferGeometry:Rn,CylinderGeometry:Cn,CylinderBufferGeometry:Pn,CircleGeometry:On,CircleBufferGeometry:In,BoxGeometry:ze,BoxBufferGeometry:Be});Nn.prototype=Object.create(le.prototype),Nn.prototype.constructor=Nn,Nn.prototype.isShadowMaterial=!0,kn.prototype=Object.create(le.prototype),kn.prototype.constructor=kn,kn.prototype.isRawShaderMaterial=!0,Dn.prototype=Object.create(se.prototype),Dn.prototype.constructor=Dn,Dn.prototype.isMeshStandardMaterial=!0,Dn.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Un.prototype=Object.create(Dn.prototype),Un.prototype.constructor=Un,Un.prototype.isMeshPhysicalMaterial=!0,Un.prototype.copy=function(e){return Dn.prototype.copy.call(this,e),this.defines={PHYSICAL:""},this.reflectivity=e.reflectivity,this.clearCoat=e.clearCoat,this.clearCoatRoughness=e.clearCoatRoughness,this},Fn.prototype=Object.create(se.prototype),Fn.prototype.constructor=Fn,Fn.prototype.isMeshPhongMaterial=!0,Fn.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},zn.prototype=Object.create(Fn.prototype),zn.prototype.constructor=zn,zn.prototype.isMeshToonMaterial=!0,zn.prototype.copy=function(e){return Fn.prototype.copy.call(this,e),this.gradientMap=e.gradientMap,this},Bn.prototype=Object.create(se.prototype),Bn.prototype.constructor=Bn,Bn.prototype.isMeshNormalMaterial=!0,Bn.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},jn.prototype=Object.create(se.prototype),jn.prototype.constructor=jn,jn.prototype.isMeshLambertMaterial=!0,jn.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Gn.prototype=Object.create(se.prototype),Gn.prototype.constructor=Gn,Gn.prototype.isLineDashedMaterial=!0,Gn.prototype.copy=function(e){return se.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var cl=Object.freeze({ShadowMaterial:Nn,SpriteMaterial:Ot,RawShaderMaterial:kn,ShaderMaterial:le,PointsMaterial:Gt,MeshPhysicalMaterial:Un,MeshStandardMaterial:Dn,MeshPhongMaterial:Fn,MeshToonMaterial:zn,MeshNormalMaterial:Bn,MeshLambertMaterial:jn,MeshDepthMaterial:ce,MeshBasicMaterial:He,LineDashedMaterial:Gn,LineBasicMaterial:Ft,Material:se}),ul={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},hl=new Hn;Object.assign(Vn.prototype,{load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e);var i=this,a=ul.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;var o=/^data:(.*?)(;base64)?,(.*)$/,s=e.match(o);if(s){var l=s[1],c=!!s[2],u=s[3];u=window.decodeURIComponent(u),c&&(u=window.atob(u));try{var h,p=(this.responseType||"").toLowerCase();switch(p){case"arraybuffer":case"blob":h=new ArrayBuffer(u.length);for(var d=new Uint8Array(h),f=0;f<u.length;f++)d[f]=u.charCodeAt(f);"blob"===p&&(h=new Blob([h],{type:l}));break;case"document":var m=new DOMParser;h=m.parseFromString(u,l);break;case"json":h=JSON.parse(u);break;default:h=u}window.setTimeout(function(){t&&t(h),i.manager.itemEnd(e)},0)}catch(t){window.setTimeout(function(){r&&r(t),i.manager.itemEnd(e),i.manager.itemError(e)},0)}}else{var v=new XMLHttpRequest;v.open("GET",e,!0),v.addEventListener("load",function(n){var a=n.target.response;ul.add(e,a),200===this.status?(t&&t(a),i.manager.itemEnd(e)):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),t&&t(a),i.manager.itemEnd(e)):(r&&r(n),i.manager.itemEnd(e),i.manager.itemError(e))},!1),void 0!==n&&v.addEventListener("progress",function(e){n(e)},!1),v.addEventListener("error",function(t){r&&r(t),i.manager.itemEnd(e),i.manager.itemError(e)},!1),void 0!==this.responseType&&(v.responseType=this.responseType),void 0!==this.withCredentials&&(v.withCredentials=this.withCredentials),v.overrideMimeType&&v.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(var g in this.requestHeader)v.setRequestHeader(g,this.requestHeader[g]);v.send(null)}return i.manager.itemStart(e),v},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}}),Object.assign(Wn.prototype,{load:function(e,t,n,r){var i=this,a=[],o=new Xt;o.image=a;var s=new Vn(this.manager);if(s.setPath(this.path),s.setResponseType("arraybuffer"),Array.isArray(e))for(var l=0,c=0,u=e.length;c<u;++c)!function(c){s.load(e[c],function(e){var n=i._parser(e,!0);a[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},6===(l+=1)&&(1===n.mipmapCount&&(o.minFilter=Qo),o.format=n.format,o.needsUpdate=!0,t&&t(o))},n,r)}(c);else s.load(e,function(e){var n=i._parser(e,!0);if(n.isCubemap)for(var r=n.mipmaps.length/n.mipmapCount,s=0;s<r;s++){a[s]={mipmaps:[]};for(var l=0;l<n.mipmapCount;l++)a[s].mipmaps.push(n.mipmaps[s*n.mipmapCount+l]),a[s].format=n.format,a[s].width=n.width,a[s].height=n.height}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=Qo),o.format=n.format,o.needsUpdate=!0,t&&t(o)},n,r);return o},setPath:function(e){return this.path=e,this}}),Object.assign(Xn.prototype,{load:function(e,t,n,r){var i=this,a=new w,o=new Vn(this.manager);return o.setResponseType("arraybuffer"),o.load(e,function(e){var n=i._parser(e);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:qo,a.wrapT=void 0!==n.wrapT?n.wrapT:qo,a.magFilter=void 0!==n.magFilter?n.magFilter:Qo,a.minFilter=void 0!==n.minFilter?n.minFilter:es,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps),1===n.mipmapCount&&(a.minFilter=Qo),a.needsUpdate=!0,t&&t(a,n))},n,r),a}}),Object.assign(qn.prototype,{load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e);var i=this,a=ul.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");return o.addEventListener("load",function(){ul.add(e,this),t&&t(this),i.manager.itemEnd(e)},!1),o.addEventListener("error",function(t){r&&r(t),i.manager.itemEnd(e),i.manager.itemError(e)},!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(Yn.prototype,{load:function(e,t,n,r){var i=new _,a=new qn(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);for(var o=0,s=0;s<e.length;++s)!function(n){a.load(e[n],function(e){i.images[n]=e,6==++o&&(i.needsUpdate=!0,t&&t(i))},void 0,r)}(s);return i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(Zn.prototype,{load:function(e,t,n,r){var i=new qn(this.manager);i.setCrossOrigin(this.crossOrigin),i.setPath(this.path);var a=new f;return a.image=i.load(e,function(){var n=e.search(/\.(jpg|jpeg)$/)>0||0===e.search(/^data\:image\/jpeg/);a.format=n?fs:ms,a.needsUpdate=!0,void 0!==t&&t(a)},n,r),a},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Kn.prototype=Object.assign(Object.create(be.prototype),{constructor:Kn,isLight:!0,copy:function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=be.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),Jn.prototype=Object.assign(Object.create(Kn.prototype),{constructor:Jn,isHemisphereLight:!0,copy:function(e){return Kn.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(Qn.prototype,{copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),$n.prototype=Object.assign(Object.create(Qn.prototype),{constructor:$n,isSpotLightShadow:!0,update:function(e){var t=this.camera,n=2*Hs.RAD2DEG*e.angle,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&r===t.aspect&&i===t.far||(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix())}}),er.prototype=Object.assign(Object.create(Kn.prototype),{constructor:er,isSpotLight:!0,copy:function(e){return Kn.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),tr.prototype=Object.assign(Object.create(Kn.prototype),{constructor:tr,isPointLight:!0,copy:function(e){return Kn.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),nr.prototype=Object.assign(Object.create(Qn.prototype),{constructor:nr}),rr.prototype=Object.assign(Object.create(Kn.prototype),{constructor:rr,isDirectionalLight:!0,copy:function(e){return Kn.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),ir.prototype=Object.assign(Object.create(Kn.prototype),{constructor:ir,isAmbientLight:!0}),ar.prototype=Object.assign(Object.create(Kn.prototype),{constructor:ar,isRectAreaLight:!0,copy:function(e){return Kn.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){var t=Kn.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});var pl={arraySlice:function(e,t,n){return pl.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(t,n){return e[t]-e[n]}for(var n=e.length,r=new Array(n),i=0;i!==n;++i)r[i]=i;return r.sort(t),r},sortedArray:function(e,t,n){for(var r=e.length,i=new e.constructor(r),a=0,o=0;o!==r;++a)for(var s=n[a]*t,l=0;l!==t;++l)i[o++]=e[s+l];return i},flattenJSON:function(e,t,n,r){for(var i=1,a=e[0];void 0!==a&&void 0===a[r];)a=e[i++];if(void 0!==a){var o=a[r];if(void 0!==o)if(Array.isArray(o))do{o=a[r],void 0!==o&&(t.push(a.time),n.push.apply(n,o)),a=e[i++]}while(void 0!==a);else if(void 0!==o.toArray)do{o=a[r],void 0!==o&&(t.push(a.time),o.toArray(n,n.length)),a=e[i++]}while(void 0!==a);else do{o=a[r],void 0!==o&&(t.push(a.time),n.push(o)),a=e[i++]}while(void 0!==a)}}};Object.assign(or.prototype,{evaluate:function(e){var t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{var a;n:{r:if(!(e<r)){for(var o=n+2;;){if(void 0===r){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i)}if(n===o)break;if(i=r,r=t[++n],e<r)break t}a=t.length;break n}{if(e>=i)break e;var s=t[1];e<s&&(n=2,i=s);for(var o=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===o)break;if(r=i,i=t[--n-1],e>=i)break t}a=n,n=0}}for(;n<a;){var l=n+a>>>1;e<t[l]?a=l:n=l+1}if(r=t[n],void 0===(i=t[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r,a=0;a!==r;++a)t[a]=n[i+a];return t},interpolate_:function(e,t,n,r){throw new Error("call to abstract method")},intervalChanged_:function(e,t,n){}}),Object.assign(or.prototype,{beforeStart_:or.prototype.copySampleValue_,afterEnd_:or.prototype.copySampleValue_}),sr.prototype=Object.assign(Object.create(or.prototype),{constructor:sr,DefaultSettings_:{endingStart:Ls,endingEnd:Ls},intervalChanged_:function(e,t,n){var r=this.parameterPositions,i=e-2,a=e+1,o=r[i],s=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:i=e,o=2*t-n;break;case 2402:i=r.length-2,o=t+r[i]-r[i+1];break;default:i=e,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:a=e,s=2*n-t;break;case 2402:a=1,s=n+r[1]-r[0];break;default:a=e-1,s=t}var l=.5*(n-t),c=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-n),this._offsetPrev=i*c,this._offsetNext=a*c},interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,p=this._weightNext,d=(n-t)/(r-t),f=d*d,m=f*d,v=-h*m+2*h*f-h*d,g=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,b=p*m-p*f,x=0;x!==o;++x)i[x]=v*a[c+x]+g*a[l+x]+y*a[s+x]+b*a[u+x];return i}}),lr.prototype=Object.assign(Object.create(or.prototype),{constructor:lr,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=(n-t)/(r-t),u=1-c,h=0;h!==o;++h)i[h]=a[l+h]*u+a[s+h]*c;return i}}),cr.prototype=Object.assign(Object.create(or.prototype),{constructor:cr,interpolate_:function(e,t,n,r){return this.copySampleValue_(e-1)}});var dl;dl={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(e){return new cr(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new lr(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new sr(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return void console.warn("THREE.KeyframeTrackPrototype:",n)}this.createInterpolant=t},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]+=e;return this},scale:function(e){if(1!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]*=e;return this},trim:function(e,t){for(var n=this.times,r=n.length,i=0,a=r-1;i!==r&&n[i]<e;)++i;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==i||a!==r){i>=a&&(a=Math.max(a,1),i=a-1);var o=this.getValueSize();this.times=pl.arraySlice(n,i,a),this.values=pl.arraySlice(this.values,i*o,a*o)}return this},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrackPrototype: Invalid value size in track.",this),e=!1);var n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrackPrototype: Track is empty.",this),e=!1);for(var a=null,o=0;o!==i;o++){var s=n[o];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrackPrototype: Time is not a valid number.",this,o,s),e=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrackPrototype: Out of order keys.",this,o,s,a),e=!1;break}a=s}if(void 0!==r&&pl.isTypedArray(r))for(var o=0,l=r.length;o!==l;++o){var c=r[o];if(isNaN(c)){console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.",this,o,c),e=!1;break}}return e},optimize:function(){for(var e=this.times,t=this.values,n=this.getValueSize(),r=2302===this.getInterpolation(),i=1,a=e.length-1,o=1;o<a;++o){var s=!1,l=e[o];if(l!==e[o+1]&&(1!==o||l!==l[0]))if(r)s=!0;else for(var c=o*n,u=c-n,h=c+n,p=0;p!==n;++p){var d=t[c+p];if(d!==t[u+p]||d!==t[h+p]){s=!0;break}}if(s){if(o!==i){e[i]=e[o];for(var f=o*n,m=i*n,p=0;p!==n;++p)t[m+p]=t[f+p]}++i}}if(a>0){e[i]=e[a];for(var f=a*n,m=i*n,p=0;p!==n;++p)t[m+p]=t[f+p];++i}return i!==e.length&&(this.times=pl.arraySlice(e,0,i),this.values=pl.arraySlice(t,0,i*n)),this}},hr.prototype=Object.assign(Object.create(dl),{constructor:hr,ValueTypeName:"vector"}),pr.prototype=Object.assign(Object.create(or.prototype),{constructor:pr,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=(n-t)/(r-t),c=s+o;s!==c;s+=4)y.slerpFlat(i,0,a,s-o,a,s,l);return i}}),dr.prototype=Object.assign(Object.create(dl),{constructor:dr,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(e){return new pr(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),fr.prototype=Object.assign(Object.create(dl),{constructor:fr,ValueTypeName:"number"}),mr.prototype=Object.assign(Object.create(dl),{constructor:mr,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),vr.prototype=Object.assign(Object.create(dl),{constructor:vr,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),gr.prototype=Object.assign(Object.create(dl),{constructor:gr,ValueTypeName:"color"}),yr.prototype=dl,dl.constructor=yr,Object.assign(yr,{parse:function(e){if(void 0===e.type)throw new Error("track type undefined, can not parse");var t=yr._getTrackTypeForValueTypeName(e.type);if(void 0===e.times){var n=[],r=[];pl.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)},toJSON:function(e){var t,n=e.constructor;if(void 0!==n.toJSON)t=n.toJSON(e);else{t={name:e.name,times:pl.convertArray(e.times,Array),values:pl.convertArray(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(t.interpolation=r)}return t.type=e.ValueTypeName,t},_getTrackTypeForValueTypeName:function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return fr;case"vector":case"vector2":case"vector3":case"vector4":return hr;case"color":return gr;case"quaternion":return dr;case"bool":case"boolean":return vr;case"string":return mr}throw new Error("Unsupported typeName: "+e)}}),Object.assign(br,{parse:function(e){for(var t=[],n=e.tracks,r=1/(e.fps||1),i=0,a=n.length;i!==a;++i)t.push(yr.parse(n[i]).scale(r));return new br(e.name,e.duration,t)},toJSON:function(e){for(var t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t},i=0,a=n.length;i!==a;++i)t.push(yr.toJSON(n[i]));return r},CreateFromMorphTargetSequence:function(e,t,n,r){for(var i=t.length,a=[],o=0;o<i;o++){var s=[],l=[];s.push((o+i-1)%i,o,(o+1)%i),l.push(0,1,0);var c=pl.getKeyframeOrder(s);s=pl.sortedArray(s,1,c),l=pl.sortedArray(l,1,c),r||0!==s[0]||(s.push(i),l.push(l[0])),a.push(new fr(".morphTargetInfluences["+t[o].name+"]",s,l).scale(1/n))}return new br(e,-1,a)},findByName:function(e,t){var n=e;if(!Array.isArray(e)){var r=e;n=r.geometry&&r.geometry.animations||r.animations}for(var i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){for(var r={},i=/^([\w-]*?)([\d]+)$/,a=0,o=e.length;a<o;a++){var s=e[a],l=s.name.match(i);if(l&&l.length>1){var c=l[1],u=r[c];u||(r[c]=u=[]),u.push(s)}}var h=[];for(var c in r)h.push(br.CreateFromMorphTargetSequence(c,r[c],t,n));return h},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=function(e,t,n,r,i){if(0!==n.length){var a=[],o=[];pl.flattenJSON(n,a,o,r),0!==a.length&&i.push(new e(t,a,o))}},r=[],i=e.name||"default",a=e.length||-1,o=e.fps||30,s=e.hierarchy||[],l=0;l<s.length;l++){var c=s[l].keys;if(c&&0!==c.length)if(c[0].morphTargets){for(var u={},h=0;h<c.length;h++)if(c[h].morphTargets)for(var p=0;p<c[h].morphTargets.length;p++)u[c[h].morphTargets[p]]=-1;for(var d in u){for(var f=[],m=[],p=0;p!==c[h].morphTargets.length;++p){var v=c[h];f.push(v.time),m.push(v.morphTarget===d?1:0)}r.push(new fr(".morphTargetInfluence["+d+"]",f,m))}a=u.length*(o||1)}else{var g=".bones["+t[l].name+"]";n(hr,g+".position",c,"pos",r),n(dr,g+".quaternion",c,"rot",r),n(hr,g+".scale",c,"scl",r)}}return 0===r.length?null:new br(i,a,r)}}),Object.assign(br.prototype,{resetDuration:function(){for(var e=this.tracks,t=0,n=0,r=e.length;n!==r;++n){var i=this.tracks[n];t=Math.max(t,i.times[i.times.length-1])}this.duration=t},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}}),Object.assign(xr.prototype,{load:function(e,t,n,r){var i=this;new Vn(i.manager).load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},setTextures:function(e){this.textures=e},parse:function(e){function t(e){return void 0===n[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),n[e]}var n=this.textures,r=new cl[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&r.specular.setHex(e.specular),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearCoat&&(r.clearCoat=e.clearCoat),void 0!==e.clearCoatRoughness&&(r.clearCoatRoughness=e.clearCoatRoughness),void 0!==e.uniforms&&(r.uniforms=e.uniforms),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(r.vertexColors=e.vertexColors),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.shading&&(r.shading=e.shading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.side&&(r.side=e.side),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.skinning&&(r.skinning=e.skinning),void 0!==e.morphTargets&&(r.morphTargets=e.morphTargets),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=t(e.map)),void 0!==e.alphaMap&&(r.alphaMap=t(e.alphaMap),r.transparent=!0),void 0!==e.bumpMap&&(r.bumpMap=t(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=t(e.normalMap)),void 0!==e.normalScale){var i=e.normalScale;!1===Array.isArray(i)&&(i=[i,i]),r.normalScale=(new d).fromArray(i)}return void 0!==e.displacementMap&&(r.displacementMap=t(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=t(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=t(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=t(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=t(e.specularMap)),void 0!==e.envMap&&(r.envMap=t(e.envMap)),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.lightMap&&(r.lightMap=t(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=t(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=t(e.gradientMap)),r}}),Object.assign(wr.prototype,{load:function(e,t,n,r){var i=this;new Vn(i.manager).load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},parse:function(e){var t=new Fe,n=e.data.index;if(void 0!==n){var r=new fl[n.type](n.array);t.setIndex(new Se(r,1))}var i=e.data.attributes;for(var a in i){var o=i[a],r=new fl[o.type](o.array);t.addAttribute(a,new Se(r,o.itemSize,o.normalized))}var s=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==s)for(var l=0,c=s.length;l!==c;++l){var u=s[l];t.addGroup(u.start,u.count,u.materialIndex)}var h=e.data.boundingSphere;if(void 0!==h){var p=new b;void 0!==h.center&&p.fromArray(h.center),t.boundingSphere=new he(p,h.radius)}return t}});var fl={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};_r.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,n=0,r=t.length;n<r;n+=2){var i=t[n],a=t[n+1];if(i.test(e))return a}return null}},Object.assign(_r.prototype,{crossOrigin:void 0,extractUrlBase:function(e){var t=e.split("/");return 1===t.length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(e,t,n){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t,n);return r},createMaterial:function(){var e={NoBlending:eo,NormalBlending:to,AdditiveBlending:no,SubtractiveBlending:ro,MultiplyBlending:io,CustomBlending:ao},t=new re,n=new Zn,r=new xr;return function(i,a,o){function s(e,t,r,i,s){var c,u=a+e,h=_r.Handlers.get(u);null!==h?c=h.load(u):(n.setCrossOrigin(o),c=n.load(u)),void 0!==t&&(c.repeat.fromArray(t),1!==t[0]&&(c.wrapS=Xo),1!==t[1]&&(c.wrapT=Xo)),void 0!==r&&c.offset.fromArray(r),void 0!==i&&("repeat"===i[0]&&(c.wrapS=Xo),"mirror"===i[0]&&(c.wrapS=Yo),"repeat"===i[1]&&(c.wrapT=Xo),"mirror"===i[1]&&(c.wrapT=Yo)),void 0!==s&&(c.anisotropy=s);var p=Hs.generateUUID();return l[p]=c,p}var l={},c={uuid:Hs.generateUUID(),type:"MeshLambertMaterial"};for(var u in i){var h=i[u];switch(u){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":c.name=h;break;case"blending":c.blending=e[h];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",u,"is no longer supported.");break;case"colorDiffuse":c.color=t.fromArray(h).getHex();break;case"colorSpecular":c.specular=t.fromArray(h).getHex();break;case"colorEmissive":c.emissive=t.fromArray(h).getHex();break;case"specularCoef":c.shininess=h;break;case"shading":"basic"===h.toLowerCase()&&(c.type="MeshBasicMaterial"),"phong"===h.toLowerCase()&&(c.type="MeshPhongMaterial"),"standard"===h.toLowerCase()&&(c.type="MeshStandardMaterial");break;case"mapDiffuse":c.map=s(h,i.mapDiffuseRepeat,i.mapDiffuseOffset,i.mapDiffuseWrap,i.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":c.emissiveMap=s(h,i.mapEmissiveRepeat,i.mapEmissiveOffset,i.mapEmissiveWrap,i.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":c.lightMap=s(h,i.mapLightRepeat,i.mapLightOffset,i.mapLightWrap,i.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":c.aoMap=s(h,i.mapAORepeat,i.mapAOOffset,i.mapAOWrap,i.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":c.bumpMap=s(h,i.mapBumpRepeat,i.mapBumpOffset,i.mapBumpWrap,i.mapBumpAnisotropy);break;case"mapBumpScale":c.bumpScale=h;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":c.normalMap=s(h,i.mapNormalRepeat,i.mapNormalOffset,i.mapNormalWrap,i.mapNormalAnisotropy);break;case"mapNormalFactor":c.normalScale=[h,h];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":c.specularMap=s(h,i.mapSpecularRepeat,i.mapSpecularOffset,i.mapSpecularWrap,i.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":c.metalnessMap=s(h,i.mapMetalnessRepeat,i.mapMetalnessOffset,i.mapMetalnessWrap,i.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":c.roughnessMap=s(h,i.mapRoughnessRepeat,i.mapRoughnessOffset,i.mapRoughnessWrap,i.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":c.alphaMap=s(h,i.mapAlphaRepeat,i.mapAlphaOffset,i.mapAlphaWrap,i.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":c.side=qa;break;case"doubleSided":c.side=Ya;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),c.opacity=h;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":c[u]=h;break;case"vertexColors":!0===h&&(c.vertexColors=$a),"face"===h&&(c.vertexColors=Qa);break;default:console.error("THREE.Loader.createMaterial: Unsupported",u,h)}}return"MeshBasicMaterial"===c.type&&delete c.emissive,"MeshPhongMaterial"!==c.type&&delete c.specular,c.opacity<1&&(c.transparent=!0),r.setTextures(l),r.parse(c)}}()}),Object.assign(Er.prototype,{load:function(e,t,n,r){var i=this,a=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:_r.prototype.extractUrlBase(e),o=new Vn(this.manager);o.setWithCredentials(this.withCredentials),o.load(e,function(n){var r=JSON.parse(n),o=r.metadata;if(void 0!==o){var s=o.type;if(void 0!==s){if("object"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.ObjectLoader instead.");if("scene"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.SceneLoader instead.")}}var l=i.parse(r,a);t(l.geometry,l.materials)},n,r)},setTexturePath:function(e){this.texturePath=e},parse:function(){function e(e,t){function n(e,t){return e&1<<t}var r,i,a,o,s,l,c,u,h,p,f,m,v,g,y,x,w,_,E,M,T,S,A,C,P,L,R,O=e.faces,I=e.vertices,N=e.normals,k=e.colors,D=e.scale,U=0;if(void 0!==e.uvs){for(r=0;r<e.uvs.length;r++)e.uvs[r].length&&U++;for(r=0;r<U;r++)t.faceVertexUvs[r]=[]}for(o=0,s=I.length;o<s;)_=new b,_.x=I[o++]*D,_.y=I[o++]*D,_.z=I[o++]*D,t.vertices.push(_);for(o=0,s=O.length;o<s;)if(p=O[o++],f=n(p,0),m=n(p,1),v=n(p,3),g=n(p,4),y=n(p,5),x=n(p,6),w=n(p,7),f){if(M=new Ee,M.a=O[o],M.b=O[o+1],M.c=O[o+3],T=new Ee,T.a=O[o+1],T.b=O[o+2],T.c=O[o+3],o+=4,m&&(h=O[o++],M.materialIndex=h,T.materialIndex=h),a=t.faces.length,v)for(r=0;r<U;r++)for(C=e.uvs[r],t.faceVertexUvs[r][a]=[],t.faceVertexUvs[r][a+1]=[],i=0;i<4;i++)u=O[o++],L=C[2*u],R=C[2*u+1],P=new d(L,R),2!==i&&t.faceVertexUvs[r][a].push(P),0!==i&&t.faceVertexUvs[r][a+1].push(P);if(g&&(c=3*O[o++],M.normal.set(N[c++],N[c++],N[c]),T.normal.copy(M.normal)),y)for(r=0;r<4;r++)c=3*O[o++],A=new b(N[c++],N[c++],N[c]),2!==r&&M.vertexNormals.push(A),0!==r&&T.vertexNormals.push(A);if(x&&(l=O[o++],S=k[l],M.color.setHex(S),T.color.setHex(S)),w)for(r=0;r<4;r++)l=O[o++],S=k[l],2!==r&&M.vertexColors.push(new re(S)),0!==r&&T.vertexColors.push(new re(S));t.faces.push(M),t.faces.push(T)}else{if(E=new Ee,E.a=O[o++],E.b=O[o++],E.c=O[o++],m&&(h=O[o++],E.materialIndex=h),a=t.faces.length,v)for(r=0;r<U;r++)for(C=e.uvs[r],t.faceVertexUvs[r][a]=[],i=0;i<3;i++)u=O[o++],L=C[2*u],R=C[2*u+1],P=new d(L,R),t.faceVertexUvs[r][a].push(P);if(g&&(c=3*O[o++],E.normal.set(N[c++],N[c++],N[c])),y)for(r=0;r<3;r++)c=3*O[o++],A=new b(N[c++],N[c++],N[c]),E.vertexNormals.push(A);if(x&&(l=O[o++],E.color.setHex(k[l])),w)for(r=0;r<3;r++)l=O[o++],E.vertexColors.push(new re(k[l]));t.faces.push(E)}}function t(e,t){var n=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var r=0,i=e.skinWeights.length;r<i;r+=n){var a=e.skinWeights[r],o=n>1?e.skinWeights[r+1]:0,s=n>2?e.skinWeights[r+2]:0,l=n>3?e.skinWeights[r+3]:0;t.skinWeights.push(new m(a,o,s,l))}if(e.skinIndices)for(var r=0,i=e.skinIndices.length;r<i;r+=n){var c=e.skinIndices[r],u=n>1?e.skinIndices[r+1]:0,h=n>2?e.skinIndices[r+2]:0,p=n>3?e.skinIndices[r+3]:0;t.skinIndices.push(new m(c,u,h,p))}t.bones=e.bones,t.bones&&t.bones.length>0&&(t.skinWeights.length!==t.skinIndices.length||t.skinIndices.length!==t.vertices.length)&&console.warn("When skinning, number of vertices ("+t.vertices.length+"), skinIndices ("+t.skinIndices.length+"), and skinWeights ("+t.skinWeights.length+") should match.")}function n(e,t){var n=e.scale;if(void 0!==e.morphTargets)for(var r=0,i=e.morphTargets.length;r<i;r++){t.morphTargets[r]={},t.morphTargets[r].name=e.morphTargets[r].name,t.morphTargets[r].vertices=[];for(var a=t.morphTargets[r].vertices,o=e.morphTargets[r].vertices,s=0,l=o.length;s<l;s+=3){var c=new b;c.x=o[s]*n,c.y=o[s+1]*n,c.z=o[s+2]*n,a.push(c)}}if(void 0!==e.morphColors&&e.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var u=t.faces,h=e.morphColors[0].colors,r=0,i=u.length;r<i;r++)u[r].color.fromArray(h,3*r)}}function r(e,t){var n=[],r=[];void 0!==e.animation&&r.push(e.animation),void 0!==e.animations&&(e.animations.length?r=r.concat(e.animations):r.push(e.animations));for(var i=0;i<r.length;i++){var a=br.parseAnimation(r[i],t.bones);a&&n.push(a)}if(t.morphTargets){var o=br.CreateClipsFromMorphTargetSequences(t.morphTargets,10);n=n.concat(o)}n.length>0&&(t.animations=n)}return function(i,a){void 0!==i.data&&(i=i.data),void 0!==i.scale?i.scale=1/i.scale:i.scale=1;var o=new Te;return e(i,o),t(i,o),n(i,o),r(i,o),o.computeFaceNormals(),o.computeBoundingSphere(),void 0===i.materials||0===i.materials.length?{geometry:o}:{geometry:o,materials:_r.prototype.initMaterials(i.materials,a,this.crossOrigin)}}}()}),Object.assign(Mr.prototype,{load:function(e,t,n,r){""===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var i=this;new Vn(i.manager).load(e,function(n){var a=null;try{a=JSON.parse(n)}catch(t){return void 0!==r&&r(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}var o=a.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase())return void console.error("THREE.ObjectLoader: Can't load "+e+". Use THREE.JSONLoader instead.");i.parse(a,t)},n,r)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var n=this.parseGeometries(e.geometries),r=this.parseImages(e.images,function(){void 0!==t&&t(o)}),i=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,i),o=this.parseObject(e.object,n,a);return e.animations&&(o.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(o),o},parseGeometries:function(e){var t={};if(void 0!==e)for(var n=new Er,r=new wr,i=0,a=e.length;i<a;i++){var o,s=e[i];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new ll[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new ll[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new ll[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new ll[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new ll[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new ll[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"IcosahedronGeometry":case"OctahedronGeometry":case"TetrahedronGeometry":o=new ll[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new ll[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new ll[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new ll[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"LatheGeometry":case"LatheBufferGeometry":o=new ll[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"BufferGeometry":o=r.parse(s);break;case"Geometry":o=n.parse(s,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),t[s.uuid]=o}return t},parseMaterials:function(e,t){var n={};if(void 0!==e){var r=new xr;r.setTextures(t);for(var i=0,a=e.length;i<a;i++){var o=e[i];if("MultiMaterial"===o.type){for(var s=[],l=0;l<o.materials.length;l++)s.push(r.parse(o.materials[l]));n[o.uuid]=s}else n[o.uuid]=r.parse(o)}}return n},parseAnimations:function(e){for(var t=[],n=0;n<e.length;n++){var r=br.parse(e[n]);t.push(r)}return t},parseImages:function(e,t){var n=this,r={};if(void 0!==e&&e.length>0){var i=new Hn(t),a=new qn(i);a.setCrossOrigin(this.crossOrigin);for(var o=0,s=e.length;o<s;o++){var l=e[o],c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)?l.url:n.texturePath+l.url;r[l.uuid]=function(e){return n.manager.itemStart(e),a.load(e,function(){n.manager.itemEnd(e)},void 0,function(){n.manager.itemEnd(e),n.manager.itemError(e)})}(c)}}return r},parseTextures:function(e,t){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var r={};if(void 0!==e)for(var i=0,a=e.length;i<a;i++){var o=e[i];void 0===o.image&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),void 0===t[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image);var s=new f(t[o.image]);s.needsUpdate=!0,s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),void 0!==o.mapping&&(s.mapping=n(o.mapping,ml)),void 0!==o.offset&&s.offset.fromArray(o.offset),void 0!==o.repeat&&s.repeat.fromArray(o.repeat),void 0!==o.wrap&&(s.wrapS=n(o.wrap[0],vl),s.wrapT=n(o.wrap[1],vl)),void 0!==o.minFilter&&(s.minFilter=n(o.minFilter,gl)),void 0!==o.magFilter&&(s.magFilter=n(o.magFilter,gl)),void 0!==o.anisotropy&&(s.anisotropy=o.anisotropy),void 0!==o.flipY&&(s.flipY=o.flipY),r[o.uuid]=s}return r},parseObject:function(){var e=new x;return function(t,n,r){function i(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),n[e]}function a(e){if(void 0!==e){if(Array.isArray(e)){for(var t=[],n=0,i=e.length;n<i;n++){var a=e[n];void 0===r[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),t.push(r[a])}return t}return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e]}}var o;switch(t.type){case"Scene":o=new Lt,void 0!==t.background&&Number.isInteger(t.background)&&(o.background=new re(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?o.fog=new Pt(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(o.fog=new Ct(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":o=new _e(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(o.focus=t.focus),void 0!==t.zoom&&(o.zoom=t.zoom),void 0!==t.filmGauge&&(o.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(o.filmOffset=t.filmOffset),void 0!==t.view&&(o.view=Object.assign({},t.view));break;case"OrthographicCamera":o=new we(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":o=new ir(t.color,t.intensity);break;case"DirectionalLight":o=new rr(t.color,t.intensity);break;case"PointLight":o=new tr(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":o=new ar(t.color,t.intensity,t.width,t.height);break;case"SpotLight":o=new er(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":o=new Jn(t.color,t.groundColor,t.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=i(t.geometry),l=a(t.material);o=s.bones&&s.bones.length>0?new Ut(s,l):new qe(s,l);break;case"LOD":o=new Nt;break;case"Line":o=new zt(i(t.geometry),a(t.material),t.mode);break;case"LineLoop":o=new jt(i(t.geometry),a(t.material));break;case"LineSegments":o=new Bt(i(t.geometry),a(t.material));break;case"PointCloud":case"Points":o=new Ht(i(t.geometry),a(t.material));break;case"Sprite":o=new It(a(t.material));break;case"Group":o=new Vt;break;default:o=new be}if(o.uuid=t.uuid,void 0!==t.name&&(o.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(o.position,o.quaternion,o.scale)):(void 0!==t.position&&o.position.fromArray(t.position),void 0!==t.rotation&&o.rotation.fromArray(t.rotation),void 0!==t.quaternion&&o.quaternion.fromArray(t.quaternion),void 0!==t.scale&&o.scale.fromArray(t.scale)),void 0!==t.castShadow&&(o.castShadow=t.castShadow),void 0!==t.receiveShadow&&(o.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(o.shadow.bias=t.shadow.bias),void 0!==t.shadow.radius&&(o.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&o.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(o.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(o.visible=t.visible),void 0!==t.userData&&(o.userData=t.userData),void 0!==t.children)for(var c in t.children)o.add(this.parseObject(t.children[c],n,r));if("LOD"===t.type)for(var u=t.levels,h=0;h<u.length;h++){var p=u[h],c=o.getObjectByProperty("uuid",p.object);void 0!==c&&o.addLevel(c,p.distance)}return o}}()});var ml={UVMapping:300,CubeReflectionMapping:zo,CubeRefractionMapping:Bo,EquirectangularReflectionMapping:jo,EquirectangularRefractionMapping:Go,SphericalReflectionMapping:Ho,CubeUVReflectionMapping:Vo,CubeUVRefractionMapping:Wo},vl={RepeatWrapping:Xo,ClampToEdgeWrapping:qo,MirroredRepeatWrapping:Yo},gl={NearestFilter:Zo,NearestMipMapNearestFilter:Ko,NearestMipMapLinearFilter:Jo,LinearFilter:Qo,LinearMipMapNearestFilter:$o,LinearMipMapLinearFilter:es};Object.assign(kr.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},getPoints:function(e){void 0===e&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){void 0===e&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,n,r=[],i=this.getPoint(0),a=0;for(r.push(0),n=1;n<=e;n++)t=this.getPoint(n/e),a+=t.distanceTo(i),r.push(a),i=t;return this.cacheArcLengths=r,r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n,r=this.getLengths(),i=0,a=r.length;n=t||e*r[a-1];for(var o,s=0,l=a-1;s<=l;)if(i=Math.floor(s+(l-s)/2),(o=r[i]-n)<0)s=i+1;else{if(!(o>0)){l=i;break}l=i-1}if(i=l,r[i]===n)return i/(a-1);var c=r[i];return(i+(n-c)/(r[i+1]-c))/(a-1)},getTangent:function(e){var t=e-1e-4,n=e+1e-4;t<0&&(t=0),n>1&&(n=1);var r=this.getPoint(t);return this.getPoint(n).clone().sub(r).normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},computeFrenetFrames:function(e,t){var n,r,i,a=new b,o=[],s=[],l=[],c=new b,u=new x;for(n=0;n<=e;n++)r=n/e,o[n]=this.getTangentAt(r),o[n].normalize();s[0]=new b,l[0]=new b;var h=Number.MAX_VALUE,p=Math.abs(o[0].x),d=Math.abs(o[0].y),f=Math.abs(o[0].z);for(p<=h&&(h=p,a.set(1,0,0)),d<=h&&(h=d,a.set(0,1,0)),f<=h&&a.set(0,0,1),c.crossVectors(o[0],a).normalize(),s[0].crossVectors(o[0],c),l[0].crossVectors(o[0],s[0]),n=1;n<=e;n++)s[n]=s[n-1].clone(),l[n]=l[n-1].clone(),c.crossVectors(o[n-1],o[n]),c.length()>Number.EPSILON&&(c.normalize(),i=Math.acos(Hs.clamp(o[n-1].dot(o[n]),-1,1)),s[n].applyMatrix4(u.makeRotationAxis(c,i))),l[n].crossVectors(o[n],s[n]);if(!0===t)for(i=Math.acos(Hs.clamp(s[0].dot(s[e]),-1,1)),i/=e,o[0].dot(c.crossVectors(s[0],s[e]))>0&&(i=-i),n=1;n<=e;n++)s[n].applyMatrix4(u.makeRotationAxis(o[n],i*n)),l[n].crossVectors(o[n],s[n]);return{tangents:o,normals:s,binormals:l}}}),Dr.prototype=Object.create(kr.prototype),Dr.prototype.constructor=Dr,Dr.prototype.isLineCurve=!0,Dr.prototype.getPoint=function(e){if(1===e)return this.v2.clone();var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},Dr.prototype.getPointAt=function(e){return this.getPoint(e)},Dr.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},Ur.prototype=Object.assign(Object.create(kr.prototype),{constructor:Ur,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Dr(t,e))},getPoint:function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=t){var i=n[r]-t,a=this.curves[r],o=a.getLength(),s=0===o?0:1-i/o;return a.getPointAt(s)}r++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;for(var t,n=[],r=0,i=this.curves;r<i.length;r++)for(var a=i[r],o=a&&a.isEllipseCurve?2*e:a&&a.isLineCurve?1:a&&a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o),l=0;l<s.length;l++){var c=s[l];t&&t.equals(c)||(n.push(c),t=c)}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n},createPointsGeometry:function(e){var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){for(var t=new Te,n=0,r=e.length;n<r;n++){var i=e[n];t.vertices.push(new b(i.x,i.y,i.z||0))}return t}}),Fr.prototype=Object.create(kr.prototype),Fr.prototype.constructor=Fr,Fr.prototype.isEllipseCurve=!0,Fr.prototype.getPoint=function(e){for(var t=2*Math.PI,n=this.aEndAngle-this.aStartAngle,r=Math.abs(n)<Number.EPSILON;n<0;)n+=t;for(;n>t;)n-=t;n<Number.EPSILON&&(n=r?0:t),!0!==this.aClockwise||r||(n===t?n=-t:n-=t);var i=this.aStartAngle+e*n,a=this.aX+this.xRadius*Math.cos(i),o=this.aY+this.yRadius*Math.sin(i);if(0!==this.aRotation){var s=Math.cos(this.aRotation),l=Math.sin(this.aRotation),c=a-this.aX,u=o-this.aY;a=c*s-u*l+this.aX,o=c*l+u*s+this.aY}return new d(a,o)},zr.prototype=Object.create(kr.prototype),zr.prototype.constructor=zr,zr.prototype.isSplineCurve=!0,zr.prototype.getPoint=function(e){var t=this.points,n=(t.length-1)*e,r=Math.floor(n),i=n-r,a=t[0===r?r:r-1],o=t[r],s=t[r>t.length-2?t.length-1:r+1],l=t[r>t.length-3?t.length-1:r+2];return new d(Tr(i,a.x,o.x,s.x,l.x),Tr(i,a.y,o.y,s.y,l.y))},Br.prototype=Object.create(kr.prototype),Br.prototype.constructor=Br,Br.prototype.getPoint=function(e){var t=this.v0,n=this.v1,r=this.v2,i=this.v3;return new d(Nr(e,t.x,n.x,r.x,i.x),Nr(e,t.y,n.y,r.y,i.y))},jr.prototype=Object.create(kr.prototype),jr.prototype.constructor=jr,jr.prototype.getPoint=function(e){var t=this.v0,n=this.v1,r=this.v2;return new d(Pr(e,t.x,n.x,r.x),Pr(e,t.y,n.y,r.y))};var yl=Object.assign(Object.create(Ur.prototype),{fromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)},moveTo:function(e,t){this.currentPoint.set(e,t)},lineTo:function(e,t){var n=new Dr(this.currentPoint.clone(),new d(e,t));this.curves.push(n),this.currentPoint.set(e,t)},quadraticCurveTo:function(e,t,n,r){var i=new jr(this.currentPoint.clone(),new d(e,t),new d(n,r));this.curves.push(i),this.currentPoint.set(n,r)},bezierCurveTo:function(e,t,n,r,i,a){var o=new Br(this.currentPoint.clone(),new d(e,t),new d(n,r),new d(i,a));this.curves.push(o),this.currentPoint.set(i,a)},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e),n=new zr(t);this.curves.push(n),this.currentPoint.copy(e[e.length-1])},arc:function(e,t,n,r,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(e+o,t+s,n,r,i,a)},absarc:function(e,t,n,r,i,a){this.absellipse(e,t,n,n,r,i,a)},ellipse:function(e,t,n,r,i,a,o,s){var l=this.currentPoint.x,c=this.currentPoint.y;this.absellipse(e+l,t+c,n,r,i,a,o,s)},absellipse:function(e,t,n,r,i,a,o,s){var l=new Fr(e,t,n,r,i,a,o,s);if(this.curves.length>0){var c=l.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(l);var u=l.getPoint(1);this.currentPoint.copy(u)}});Gr.prototype=yl,yl.constructor=Gr,Hr.prototype=Object.assign(Object.create(yl),{constructor:Hr,getPointsHoles:function(e){for(var t=[],n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t},extractAllPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},extractPoints:function(e){return this.extractAllPoints(e)}}),Object.assign(Vr.prototype,{moveTo:function(e,t){this.currentPath=new Gr,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t)},lineTo:function(e,t){this.currentPath.lineTo(e,t)},quadraticCurveTo:function(e,t,n,r){this.currentPath.quadraticCurveTo(e,t,n,r)},bezierCurveTo:function(e,t,n,r,i,a){this.currentPath.bezierCurveTo(e,t,n,r,i,a)},splineThru:function(e){this.currentPath.splineThru(e)},toShapes:function(e,t){function n(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n],a=new Hr;a.curves=i.curves,t.push(a)}return t}var r=sl.isClockWise,i=this.subPaths;if(0===i.length)return[];if(!0===t)return n(i);var a,o,s,l=[];if(1===i.length)return o=i[0],s=new Hr,s.curves=o.curves,l.push(s),l;var c=!r(i[0].getPoints());c=e?!c:c;var u,h=[],p=[],d=[],f=0;p[f]=void 0,d[f]=[];for(var m=0,v=i.length;m<v;m++)o=i[m],u=o.getPoints(),a=r(u),a=e?!a:a,a?(!c&&p[f]&&f++,p[f]={s:new Hr,p:u},p[f].s.curves=o.curves,c&&f++,d[f]=[]):d[f].push({h:o,p:u[0]});if(!p[0])return n(i);if(p.length>1){for(var g=!1,y=[],b=0,x=p.length;b<x;b++)h[b]=[];for(var b=0,x=p.length;b<x;b++)for(var w=d[b],_=0;_<w.length;_++){for(var E=w[_],M=!0,T=0;T<p.length;T++)(function(e,t){for(var n=t.length,r=!1,i=n-1,a=0;a<n;i=a++){var o=t[i],s=t[a],l=s.x-o.x,c=s.y-o.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(o=t[a],l=-l,s=t[i],c=-c),e.y<o.y||e.y>s.y)continue;if(e.y===o.y){if(e.x===o.x)return!0}else{var u=c*(e.x-o.x)-l*(e.y-o.y);if(0===u)return!0;if(u<0)continue;r=!r}}else{if(e.y!==o.y)continue;if(s.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=s.x)return!0}}return r})(E.p,p[T].p)&&(b!==T&&y.push({froms:b,tos:T,hole:_}),M?(M=!1,h[T].push(E)):g=!0);M&&h[b].push(E)}y.length>0&&(g||(d=h))}for(var S,m=0,A=p.length;m<A;m++){s=p[m].s,l.push(s),S=d[m];for(var C=0,P=S.length;C<P;C++)s.holes.push(S[C].h)}return l}}),Object.assign(Wr.prototype,{isFont:!0,generateShapes:function(e,t,n){function r(e,t,r,a){var o=i.glyphs[e]||i.glyphs["?"];if(o){var s,l,c,u,h,p,d,f,m,v,g,y=new Vr,b=[];if(o.o)for(var x=o._cachedOutline||(o._cachedOutline=o.o.split(" ")),w=0,_=x.length;w<_;){var E=x[w++];switch(E){case"m":s=x[w++]*t+r,l=x[w++]*t+a,y.moveTo(s,l);break;case"l":s=x[w++]*t+r,l=x[w++]*t+a,y.lineTo(s,l);break;case"q":if(c=x[w++]*t+r,u=x[w++]*t+a,d=x[w++]*t+r,f=x[w++]*t+a,y.quadraticCurveTo(d,f,c,u),g=b[b.length-1]){h=g.x,p=g.y;for(var M=1;M<=n;M++){var T=M/n;Pr(T,h,d,c),Pr(T,p,f,u)}}break;case"b":if(c=x[w++]*t+r,u=x[w++]*t+a,d=x[w++]*t+r,f=x[w++]*t+a,m=x[w++]*t+r,v=x[w++]*t+a,y.bezierCurveTo(d,f,m,v,c,u),g=b[b.length-1]){h=g.x,p=g.y;for(var M=1;M<=n;M++){var T=M/n;Nr(T,h,d,m,c),Nr(T,p,f,v,u)}}}}return{offsetX:o.ha*t,path:y}}}void 0===t&&(t=100),void 0===n&&(n=4);for(var i=this.data,a=function(e){for(var n=String(e).split(""),a=t/i.resolution,o=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*a,s=0,l=0,c=[],u=0;u<n.length;u++){var h=n[u];if("\n"===h)s=0,l-=o;else{var p=r(h,a,s,l);s+=p.offsetX,c.push(p.path)}}return c}(e),o=[],s=0,l=a.length;s<l;s++)Array.prototype.push.apply(o,a[s].toShapes());return o}}),Object.assign(Xr.prototype,{load:function(e,t,n,r){var i=this;new Vn(this.manager).load(e,function(e){var n;try{n=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}var r=i.parse(n);t&&t(r)},n,r)},parse:function(e){return new Wr(e)}});var bl,xl={getContext:function(){return void 0===bl&&(bl=new(window.AudioContext||window.webkitAudioContext)),bl},setContext:function(e){bl=e}};Object.assign(qr.prototype,{load:function(e,t,n,r){var i=new Vn(this.manager);i.setResponseType("arraybuffer"),i.load(e,function(e){xl.getContext().decodeAudioData(e,function(e){t(e)})},n,r)}}),Object.assign(Yr.prototype,{update:function(){var e,t,n,r,i,a,o,s,l=new x,c=new x;return function(u){if(e!==this||t!==u.focus||n!==u.fov||r!==u.aspect*this.aspect||i!==u.near||a!==u.far||o!==u.zoom||s!==this.eyeSep){e=this,t=u.focus,n=u.fov,r=u.aspect*this.aspect,i=u.near,a=u.far,o=u.zoom;var h=u.projectionMatrix.clone();s=this.eyeSep/2;var p,d,f=s*i/t,m=i*Math.tan(Hs.DEG2RAD*n*.5)/o;c.elements[12]=-s,l.elements[12]=s,p=-m*r+f,d=m*r+f,h.elements[0]=2*i/(d-p),h.elements[8]=(d+p)/(d-p),this.cameraL.projectionMatrix.copy(h),p=-m*r-f,d=m*r-f,h.elements[0]=2*i/(d-p),h.elements[8]=(d+p)/(d-p),this.cameraR.projectionMatrix.copy(h)}this.cameraL.matrixWorld.copy(u.matrixWorld).multiply(c),this.cameraR.matrixWorld.copy(u.matrixWorld).multiply(l)}}()}),Zr.prototype=Object.create(be.prototype),Zr.prototype.constructor=Zr,Kr.prototype=Object.assign(Object.create(be.prototype),{constructor:Kr,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(e){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){this.gain.gain.value=e},updateMatrixWorld:function(){var e=new b,t=new y,n=new b,r=new b;return function(i){be.prototype.updateMatrixWorld.call(this,i);var a=this.context.listener,o=this.up;this.matrixWorld.decompose(e,t,n),r.set(0,0,-1).applyQuaternion(t),a.positionX?(a.positionX.setValueAtTime(e.x,this.context.currentTime),a.positionY.setValueAtTime(e.y,this.context.currentTime),a.positionZ.setValueAtTime(e.z,this.context.currentTime),a.forwardX.setValueAtTime(r.x,this.context.currentTime),a.forwardY.setValueAtTime(r.y,this.context.currentTime),a.forwardZ.setValueAtTime(r.z,this.context.currentTime),a.upX.setValueAtTime(o.x,this.context.currentTime),a.upY.setValueAtTime(o.y,this.context.currentTime),a.upZ.setValueAtTime(o.z,this.context.currentTime)):(a.setPosition(e.x,e.y,e.z),a.setOrientation(r.x,r.y,r.z,o.x,o.y,o.z))}}()}),Jr.prototype=Object.assign(Object.create(be.prototype),{constructor:Jr,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");var e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.onended=this.onEnded.bind(this),e.playbackRate.setValueAtTime(this.playbackRate,this.startTime),e.start(0,this.startTime),this.isPlaying=!0,this.source=e,this.connect()},pause:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this)},stop:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.source.stop(),this.startTime=0,this.isPlaying=!1,this)},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this)},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this)},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.value=e,this}}),Qr.prototype=Object.assign(Object.create(Jr.prototype),{constructor:Qr,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){this.panner.refDistance=e},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){this.panner.rolloffFactor=e},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){this.panner.distanceModel=e},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){this.panner.maxDistance=e},updateMatrixWorld:function(){var e=new b;return function(t){be.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}()}),Object.assign($r.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var e=0,t=this.getFrequencyData(),n=0;n<t.length;n++)e+=t[n];return e/t.length}}),Object.assign(ei.prototype,{accumulate:function(e,t){var n=this.buffer,r=this.valueSize,i=e*r+r,a=this.cumulativeWeight;if(0===a){for(var o=0;o!==r;++o)n[i+o]=n[o];a=t}else{a+=t;var s=t/a;this._mixBufferRegion(n,i,0,s,r)}this.cumulativeWeight=a},apply:function(e){var t=this.valueSize,n=this.buffer,r=e*t+t,i=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,i<1){var o=3*t;this._mixBufferRegion(n,r,o,1-i,t)}for(var s=t,l=t+t;s!==l;++s)if(n[s]!==n[s+t]){a.setValue(n,r);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,n=this.valueSize,r=3*n;e.getValue(t,r);for(var i=n,a=r;i!==a;++i)t[i]=t[r+i%n];this.cumulativeWeight=0},restoreOriginalState:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_select:function(e,t,n,r,i){if(r>=.5)for(var a=0;a!==i;++a)e[t+a]=e[n+a]},_slerp:function(e,t,n,r){y.slerpFlat(e,t,e,t,e,n,r)},_lerp:function(e,t,n,r,i){for(var a=1-r,o=0;o!==i;++o){var s=t+o;e[s]=e[s]*a+e[n+o]*r}}}),Object.assign(ti.prototype,{getValue:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)},setValue:function(e,t){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}),Object.assign(ni,{Composite:ti,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new ni.Composite(e,t,n):new ni(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(/[^\w-]/g,"")},parseTrackName:function(){var e=/((?:[\w-]+[\/:])*)/,t=/([\w-\.]+)?/,n=/(?:\.([\w-]+)(?:\[(.+)\])?)?/,r=/\.([\w-]+)(?:\[(.+)\])?/,i=new RegExp("^"+e.source+t.source+n.source+r.source+"$"),a=["material","materials","bones"];return function(e){var t=i.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){var o=n.nodeName.substring(r+1);-1!==a.indexOf(o)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=o)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}}(),findNode:function(e,t){if(!t||""===t||"root"===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=function(e){for(var n=0;n<e.bones.length;n++){var r=e.bones[n];if(r.name===t)return r}return null}(e.skeleton);if(n)return n}if(e.children){var r=function(e){for(var n=0;n<e.length;n++){var i=e[n];if(i.name===t||i.uuid===t)return i;var a=r(i.children);if(a)return a}return null},i=r(e.children);if(i)return i}return null}}),Object.assign(ni.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)e[t++]=n[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.node[this.propertyName]=e[t]},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++]},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){var e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,i=t.propertyIndex;if(e||(e=ni.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){var a=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(var o=0;o<e.length;o++)if(e[o].name===a){a=o;break}break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==a){if(void 0===e[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[a]}}var s=e[r];if(void 0===s){var l=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+r+" but it wasn't found.",e)}var c=this.Versioning.None;void 0!==e.needsUpdate?(c=this.Versioning.NeedsUpdate,this.targetObject=e):void 0!==e.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=e);var u=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(var o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(e.geometry.morphAttributes.position[o].name===i){i=o;break}}else{if(!e.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(var o=0;o<this.node.geometry.morphTargets.length;o++)if(e.geometry.morphTargets[o].name===i){i=o;break}}}u=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(u=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(ni.prototype,{_getValue_unbound:ni.prototype.getValue,_setValue_unbound:ni.prototype.setValue}),Object.assign(ri.prototype,{isAnimationObjectGroup:!0,add:function(e){for(var t=this._objects,n=t.length,r=this.nCachedObjects_,i=this._indicesByUUID,a=this._paths,o=this._parsedPaths,s=this._bindings,l=s.length,c=0,u=arguments.length;c!==u;++c){var h=arguments[c],p=h.uuid,d=i[p],f=void 0;if(void 0===d){d=n++,i[p]=d,t.push(h);for(var m=0,v=l;m!==v;++m)s[m].push(new ni(h,a[m],o[m]))}else if(d<r){f=t[d];var g=--r,y=t[g];i[y.uuid]=d,t[d]=y,i[p]=g,t[g]=h;for(var m=0,v=l;m!==v;++m){var b=s[m],x=b[g],w=b[d];b[d]=x,void 0===w&&(w=new ni(h,a[m],o[m])),b[g]=w}}else t[d]!==f&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=r},remove:function(e){for(var t=this._objects,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._bindings,a=i.length,o=0,s=arguments.length;o!==s;++o){var l=arguments[o],c=l.uuid,u=r[c];if(void 0!==u&&u>=n){var h=n++,p=t[h];r[p.uuid]=u,t[u]=p,r[c]=h,t[h]=l;for(var d=0,f=a;d!==f;++d){var m=i[d],v=m[h],g=m[u];m[u]=v,m[h]=g}}}this.nCachedObjects_=n},uncache:function(e){for(var t=this._objects,n=t.length,r=this.nCachedObjects_,i=this._indicesByUUID,a=this._bindings,o=a.length,s=0,l=arguments.length;s!==l;++s){var c=arguments[s],u=c.uuid,h=i[u];if(void 0!==h)if(delete i[u],h<r){var p=--r,d=t[p],f=--n,m=t[f];i[d.uuid]=h,t[h]=d,i[m.uuid]=p,t[p]=m,t.pop();for(var v=0,g=o;v!==g;++v){var y=a[v],b=y[p],x=y[f];y[h]=b,y[p]=x,y.pop()}}else{var f=--n,m=t[f];i[m.uuid]=h,t[h]=m,t.pop();for(var v=0,g=o;v!==g;++v){var y=a[v];y[h]=y[f],y.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){var n=this._bindingsIndicesByPath,r=n[e],i=this._bindings;if(void 0!==r)return i[r];var a=this._paths,o=this._parsedPaths,s=this._objects,l=s.length,c=this.nCachedObjects_,u=new Array(l);r=i.length,n[e]=r,a.push(e),o.push(t),i.push(u);for(var h=c,p=s.length;h!==p;++h){var d=s[h];u[h]=new ni(d,e,t)}return u},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){var r=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];t[e[o]]=n,a[n]=s,a.pop(),i[n]=i[o],i.pop(),r[n]=r[o],r.pop()}}}),Object.assign(ii.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var r=this._clip.duration,i=e._clip.duration,a=i/r,o=r/i;e.warp(1,a,t),this.warp(o,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,n){var r=this._mixer,i=r.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,l=a.sampleValues;return s[0]=i,s[1]=i+n,l[0]=e/o,l[1]=t/o,this},stopWarping:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,n,r){if(!this.enabled)return void this._updateWeight(e);var i=this._startTime;if(null!==i){var a=(e-i)*n;if(a<0||0===n)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);var o=this._updateTime(t),s=this._updateWeight(e);if(s>0)for(var l=this._interpolants,c=this._propertyBindings,u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(r,s)},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(null!==n){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(null!==n){t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e;if(0===e)return t;var n=this._clip.duration,r=this.loop,i=this._loopCount;if(2200===r){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=n)t=n;else{if(!(t<0))break e;t=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{var a=2202===r;if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),t>=n||t<0){var o=Math.floor(t/n);t-=n*o,i+=Math.abs(o);var s=this.repetitions-i;if(s<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?n:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(0===s){var l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(a&&1==(1&i))return this.time=t,n-t}return this.time=t,t},_setEndings:function(e,t,n){var r=this._interpolantSettings;n?(r.endingStart=2401,r.endingEnd=2401):(r.endingStart=e?this.zeroSlopeAtStart?2401:Ls:2402,r.endingEnd=t?this.zeroSlopeAtEnd?2401:Ls:2402)},_scheduleFading:function(e,t,n){var r=this._mixer,i=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=n,this}}),Object.assign(ai.prototype,p.prototype,{_bindAction:function(e,t){var n=e._localRoot||this._root,r=e._clip.tracks,i=r.length,a=e._propertyBindings,o=e._interpolants,s=n.uuid,l=this._bindingsByRootAndName,c=l[s];void 0===c&&(c={},l[s]=c);for(var u=0;u!==i;++u){var h=r[u],p=h.name,d=c[p];if(void 0!==d)a[u]=d;else{if(void 0!==(d=a[u])){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,s,p));continue}var f=t&&t._propertyBindings[u].binding.parsedPath;d=new ei(ni.create(n,p,f),h.ValueTypeName,h.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,s,p),a[u]=d}o[u].resultBuffer=d.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}for(var i=e._propertyBindings,a=0,o=i.length;a!==o;++a){var s=i[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){var r=this._actions,i=this._actionsByClip,a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{var o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e},_removeInactiveAction:function(e){var t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,l=s[s.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,s[c]=l,s.pop(),e._byClipCacheIndex=null,delete o.actionByRoot[(e._localRoot||this._root).uuid],0===s.length&&delete a[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];0==--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(e){var t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackAction:function(e){var t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_addInactiveBinding:function(e,t,n){var r=this._bindingsByRootAndName,i=r[t],a=this._bindings;void 0===i&&(i={},r[t]=i),i[n]=e,e._cacheIndex=a.length,a.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,o=a[r],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l,t[l]=s,t.pop(),delete o[i];e:{for(var c in o)break e;delete a[r]}},_lendBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return void 0===n&&(n=new lr(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t){var n=t||this._root,r=n.uuid,i="string"==typeof e?br.findByName(n,e):e,a=null!==i?i.uuid:e,o=this._actionsByClip[a],s=null;if(void 0!==o){var l=o.actionByRoot[r];if(void 0!==l)return l;s=o.knownActions[0],null===i&&(i=s._clip)}if(null===i)return null;var c=new ii(this,i,t);return this._bindAction(c,s),this._addInactiveAction(c,a,r),c},existingAction:function(e,t){var n=t||this._root,r=n.uuid,i="string"==typeof e?br.findByName(n,e):e,a=i?i.uuid:e,o=this._actionsByClip[a];return void 0!==o?o.actionByRoot[r]||null:null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==t;++i)e[i].reset();for(var i=0;i!==r;++i)n[i].useCount=0;return this},update:function(e){e*=this.timeScale;for(var t=this._actions,n=this._nActiveActions,r=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1,o=0;o!==n;++o){t[o]._update(r,e,i,a)}for(var s=this._bindings,l=this._nActiveBindings,o=0;o!==l;++o)s[o].apply(a);return this},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,n=e.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){for(var a=i.knownActions,o=0,s=a.length;o!==s;++o){var l=a[o];this._deactivateAction(l);var c=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=c,t[c]=u,t.pop(),this._removeInactiveBindingsForAction(l)}delete r[n]}},uncacheRoot:function(e){var t=e.uuid,n=this._actionsByClip;for(var r in n){var i=n[r].actionByRoot,a=i[t];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}var o=this._bindingsByRootAndName,s=o[t];if(void 0!==s)for(var l in s){var c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}},uncacheAction:function(e,t){var n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}),oi.prototype.clone=function(){return new oi(void 0===this.value.clone?this.value:this.value.clone())},si.prototype=Object.assign(Object.create(Fe.prototype),{constructor:si,isInstancedBufferGeometry:!0,addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n})},copy:function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var n=e.attributes;for(var r in n){var i=n[r];this.addAttribute(r,i.clone())}for(var a=e.groups,o=0,s=a.length;o<s;o++){var l=a[o];this.addGroup(l.start,l.count,l.materialIndex)}return this}}),Object.defineProperties(li.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(li.prototype,{isInterleavedBufferAttribute:!0,setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}}),Object.defineProperty(ci.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(ci.prototype,{isInterleavedBuffer:!0,setArray:function(e){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==e?e.length/this.stride:0,this.array=e},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}}),ui.prototype=Object.assign(Object.create(ci.prototype),{constructor:ui,isInstancedInterleavedBuffer:!0,copy:function(e){return ci.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),hi.prototype=Object.assign(Object.create(Se.prototype),{constructor:hi,isInstancedBufferAttribute:!0,copy:function(e){return Se.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),Object.assign(pi.prototype,{linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t){var n=[];return fi(e,this,n,t),n.sort(di),n},intersectObjects:function(e,t){var n=[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(var r=0,i=e.length;r<i;r++)fi(e[r],this,n,t);return n.sort(di),n}}),Object.assign(mi.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}),Object.assign(vi.prototype,{set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(Hs.clamp(e.y/this.radius,-1,1))),this}}),Object.assign(gi.prototype,{set:function(e,t,n){return this.radius=e,this.theta=t,this.y=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.radius=Math.sqrt(e.x*e.x+e.z*e.z),this.theta=Math.atan2(e.x,e.z),this.y=e.y,this}}),yi.prototype=Object.create(qe.prototype),yi.prototype.constructor=yi,yi.prototype.createAnimation=function(e,t,n,r){var i={start:t,end:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=i,this.animationsList.push(i)},yi.prototype.autoCreateAnimations=function(e){for(var t,n=/([a-z]+)_?(\d+)/i,r={},i=this.geometry,a=0,o=i.morphTargets.length;a<o;a++){var s=i.morphTargets[a],l=s.name.match(n);if(l&&l.length>1){var c=l[1];r[c]||(r[c]={start:1/0,end:-1/0});var u=r[c];a<u.start&&(u.start=a),a>u.end&&(u.end=a),t||(t=c)}}for(var c in r){var u=r[c];this.createAnimation(c,u.start,u.end,e)}this.firstAnimation=t},yi.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},yi.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},yi.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)},yi.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)},yi.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)},yi.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)},yi.prototype.getAnimationTime=function(e){var t=0,n=this.animationsMap[e];return n&&(t=n.time),t},yi.prototype.getAnimationDuration=function(e){var t=-1,n=this.animationsMap[e];return n&&(t=n.duration),t},yi.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")},yi.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},yi.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var r=this.animationsList[t];if(r.active){var i=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||r.time<0)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),r.time<0&&(r.time=0,r.directionBackwards=!1)):(r.time=r.time%r.duration,r.time<0&&(r.time+=r.duration));var a=r.start+Hs.clamp(Math.floor(r.time/i),0,r.length-1),o=r.weight;a!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*o,this.morphTargetInfluences[a]=0,r.lastFrame=r.currentFrame,r.currentFrame=a);var s=r.time%i/i;r.directionBackwards&&(s=1-s),r.currentFrame!==r.lastFrame?(this.morphTargetInfluences[r.currentFrame]=s*o,this.morphTargetInfluences[r.lastFrame]=(1-s)*o):this.morphTargetInfluences[r.currentFrame]=o}}},bi.prototype=Object.create(be.prototype),bi.prototype.constructor=bi,bi.prototype.isImmediateRenderObject=!0,xi.prototype=Object.create(Bt.prototype),xi.prototype.constructor=xi,xi.prototype.update=function(){var e=new b,t=new b,n=new pe;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var i=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var s=o.vertices,l=o.faces,c=0,u=0,h=l.length;u<h;u++)for(var p=l[u],d=0,f=p.vertexNormals.length;d<f;d++){var m=s[p[r[d]]],v=p.vertexNormals[d];e.copy(m).applyMatrix4(i),t.copy(v).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),a.setXYZ(c,e.x,e.y,e.z),c+=1,a.setXYZ(c,t.x,t.y,t.z),c+=1}else if(o&&o.isBufferGeometry)for(var g=o.attributes.position,y=o.attributes.normal,c=0,d=0,f=g.count;d<f;d++)e.set(g.getX(d),g.getY(d),g.getZ(d)).applyMatrix4(i),t.set(y.getX(d),y.getY(d),y.getZ(d)),t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),a.setXYZ(c,e.x,e.y,e.z),c+=1,a.setXYZ(c,t.x,t.y,t.z),c+=1;a.needsUpdate=!0}}(),wi.prototype=Object.create(be.prototype),wi.prototype.constructor=wi,wi.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},wi.prototype.update=function(){var e=new b,t=new b;return function(){this.light.updateMatrixWorld();var n=this.light.distance?this.light.distance:1e3,r=n*Math.tan(this.light.angle);this.cone.scale.set(r,r,n),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color)}}(),Ei.prototype=Object.create(Bt.prototype),Ei.prototype.constructor=Ei,Ei.prototype.onBeforeRender=function(){var e=new b,t=new x,n=new x;return function(){var r=this.bones,i=this.geometry,a=i.getAttribute("position");n.getInverse(this.root.matrixWorld);for(var o=0,s=0;o<r.length;o++){var l=r[o];l.parent&&l.parent.isBone&&(t.multiplyMatrices(n,l.matrixWorld),e.setFromMatrixPosition(t),a.setXYZ(s,e.x,e.y,e.z),t.multiplyMatrices(n,l.parent.matrixWorld),e.setFromMatrixPosition(t),a.setXYZ(s+1,e.x,e.y,e.z),s+=2)}i.getAttribute("position").needsUpdate=!0}}(),Mi.prototype=Object.create(qe.prototype),Mi.prototype.constructor=Mi,Mi.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Mi.prototype.update=function(){this.material.color.copy(this.light.color)},Ti.prototype=Object.create(be.prototype),Ti.prototype.constructor=Ti,Ti.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Ti.prototype.update=function(){var e=this.children[0];e.material.color.copy(this.light.color);var t=.5*this.light.width,n=.5*this.light.height,r=e.geometry.attributes.position,i=r.array;i[0]=t,i[1]=-n,i[2]=0,i[3]=t,i[4]=n,i[5]=0,i[6]=-t,i[7]=n,i[8]=0,i[9]=-t,i[10]=-n,i[11]=0,i[12]=t,i[13]=-n,i[14]=0,r.needsUpdate=!0},Si.prototype=Object.create(be.prototype),Si.prototype.constructor=Si,Si.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Si.prototype.update=function(){var e=new b,t=new re,n=new re;return function(){var r=this.children[0],i=r.geometry.getAttribute("color");t.copy(this.light.color),n.copy(this.light.groundColor);for(var a=0,o=i.count;a<o;a++){var s=a<o/2?t:n;i.setXYZ(a,s.r,s.g,s.b)}r.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),i.needsUpdate=!0}}(),Ai.prototype=Object.create(Bt.prototype),Ai.prototype.constructor=Ai,Ci.prototype=Object.create(Bt.prototype),Ci.prototype.constructor=Ci,Pi.prototype=Object.create(Bt.prototype),Pi.prototype.constructor=Pi,Pi.prototype.update=function(){var e=new b,t=new b,n=new pe;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,i=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,l=0,c=0,u=s.length;c<u;c++){var h=s[c],p=h.normal;e.copy(o[h.a]).add(o[h.b]).add(o[h.c]).divideScalar(3).applyMatrix4(r),t.copy(p).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),i.setXYZ(l,e.x,e.y,e.z),l+=1,i.setXYZ(l,t.x,t.y,t.z),l+=1}i.needsUpdate=!0}}(),Li.prototype=Object.create(be.prototype),Li.prototype.constructor=Li,Li.prototype.dispose=function(){var e=this.children[0],t=this.children[1];e.geometry.dispose(),e.material.dispose(),t.geometry.dispose(),t.material.dispose()},Li.prototype.update=function(){var e=new b,t=new b,n=new b;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(t,e);var r=this.children[0],i=this.children[1];r.lookAt(n),r.material.color.copy(this.light.color),i.lookAt(n),i.scale.z=n.length()}}(),Ri.prototype=Object.create(Bt.prototype),Ri.prototype.constructor=Ri,Ri.prototype.update=function(){function e(e,a,o,s){r.set(a,o,s).unproject(i);var l=n[e];if(void 0!==l)for(var c=t.getAttribute("position"),u=0,h=l.length;u<h;u++)c.setXYZ(l[u],r.x,r.y,r.z)}var t,n,r=new b,i=new xe;return function(){t=this.geometry,n=this.pointMap;i.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),t.getAttribute("position").needsUpdate=!0}}(),Oi.prototype=Object.create(Bt.prototype),Oi.prototype.constructor=Oi,Oi.prototype.update=function(){var e=new ue;return function(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&e.setFromObject(this.object),!e.isEmpty()){var n=e.min,r=e.max,i=this.geometry.attributes.position,a=i.array;a[0]=r.x,a[1]=r.y,a[2]=r.z,a[3]=n.x,a[4]=r.y,a[5]=r.z,a[6]=n.x,a[7]=n.y,a[8]=r.z,a[9]=r.x,a[10]=n.y,a[11]=r.z,a[12]=r.x,a[13]=r.y,a[14]=n.z,a[15]=n.x,a[16]=r.y,a[17]=n.z,a[18]=n.x,a[19]=n.y,a[20]=n.z,a[21]=r.x,a[22]=n.y,a[23]=n.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),Oi.prototype.setFromObject=function(e){return this.object=e,this.update(),this};var wl,_l;Ii.prototype=Object.create(be.prototype),Ii.prototype.constructor=Ii,Ii.prototype.setDirection=function(){var e,t=new b;return function(n){n.y>.99999?this.quaternion.set(0,0,0,1):n.y<-.99999?this.quaternion.set(1,0,0,0):(t.set(n.z,0,-n.x).normalize(),e=Math.acos(n.y),this.quaternion.setFromAxisAngle(t,e))}}(),Ii.prototype.setLength=function(e,t,n){void 0===t&&(t=.2*e),void 0===n&&(n=.2*t),this.line.scale.set(1,Math.max(0,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()},Ii.prototype.setColor=function(e){this.line.material.color.copy(e),this.cone.material.color.copy(e)},Ni.prototype=Object.create(Bt.prototype),Ni.prototype.constructor=Ni;var El=new b,Ml=new ki,Tl=new ki,Sl=new ki;Di.prototype=Object.create(kr.prototype),Di.prototype.constructor=Di,Di.prototype.getPoint=function(e){var t=this.points,n=t.length,r=(n-(this.closed?0:1))*e,i=Math.floor(r),a=r-i;this.closed?i+=i>0?0:(Math.floor(Math.abs(i)/t.length)+1)*t.length:0===a&&i===n-1&&(i=n-2,a=1);var o,s,l,c;if(this.closed||i>0?o=t[(i-1)%n]:(El.subVectors(t[0],t[1]).add(t[0]),o=El),s=t[i%n],l=t[(i+1)%n],this.closed||i+2<n?c=t[(i+2)%n]:(El.subVectors(t[n-1],t[n-2]).add(t[n-1]),c=El),void 0===this.type||"centripetal"===this.type||"chordal"===this.type){var u="chordal"===this.type?.5:.25,h=Math.pow(o.distanceToSquared(s),u),p=Math.pow(s.distanceToSquared(l),u),d=Math.pow(l.distanceToSquared(c),u);p<1e-4&&(p=1),h<1e-4&&(h=p),d<1e-4&&(d=p),Ml.initNonuniformCatmullRom(o.x,s.x,l.x,c.x,h,p,d),Tl.initNonuniformCatmullRom(o.y,s.y,l.y,c.y,h,p,d),Sl.initNonuniformCatmullRom(o.z,s.z,l.z,c.z,h,p,d)}else if("catmullrom"===this.type){var f=void 0!==this.tension?this.tension:.5;Ml.initCatmullRom(o.x,s.x,l.x,c.x,f),Tl.initCatmullRom(o.y,s.y,l.y,c.y,f),Sl.initCatmullRom(o.z,s.z,l.z,c.z,f)}return new b(Ml.calc(a),Tl.calc(a),Sl.calc(a))},Ui.prototype=Object.create(kr.prototype),Ui.prototype.constructor=Ui,Ui.prototype.getPoint=function(e){var t=this.v0,n=this.v1,r=this.v2,i=this.v3;return new b(Nr(e,t.x,n.x,r.x,i.x),Nr(e,t.y,n.y,r.y,i.y),Nr(e,t.z,n.z,r.z,i.z))},Fi.prototype=Object.create(kr.prototype),Fi.prototype.constructor=Fi,Fi.prototype.getPoint=function(e){var t=this.v0,n=this.v1,r=this.v2;return new b(Pr(e,t.x,n.x,r.x),Pr(e,t.y,n.y,r.y),Pr(e,t.z,n.z,r.z))},zi.prototype=Object.create(kr.prototype),zi.prototype.constructor=zi,zi.prototype.getPoint=function(e){if(1===e)return this.v2.clone();var t=new b;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t},Bi.prototype=Object.create(Fr.prototype),Bi.prototype.constructor=Bi;kr.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(kr.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Vi.prototype=Object.create(Di.prototype),Wi.prototype=Object.create(Di.prototype),Xi.prototype=Object.create(Di.prototype),Object.assign(Xi.prototype,{initFromArray:function(e){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(e){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(e){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),Ai.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Ei.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(ie.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(ue.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),We.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Hs.random16=function(){return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),Math.random()},Object.assign(pe.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(e,t,n){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e)},applyToVector3Array:function(e,t,n){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(x.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){var e;return function(){return void 0===e&&(e=new b),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),e.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(e,t,n){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e)},applyToVector3Array:function(e,t,n){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a)}}),de.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},y.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(Ve.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(Hr.prototype,{extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new mn(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Tn(this,e)}}),Object.assign(d.prototype,{fromAttribute:function(e,t,n){return console.error("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)}}),Object.assign(b.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.error("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)}}),Object.assign(m.prototype,{fromAttribute:function(e,t,n){return console.error("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)}}),Te.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},Object.assign(be.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)}}),Object.defineProperties(be.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(Nt.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(kt.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Object.defineProperty(kr.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),_e.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Kn.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Se.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}}),Object.assign(Fe.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addDrawCall:function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(Fe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(oi.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(se.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new re}}}),Object.defineProperties(Fn.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(le.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(At.prototype,{getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}}),Object.defineProperties(At.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=e}}}),Object.defineProperties(me.prototype,{cullFace:{get:function(){return this.renderReverseSided?Ga:ja},set:function(e){var t=e!==ja;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+t+"."),this.renderReverseSided=t}}}),Object.defineProperties(v.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Jr.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this;return(new qr).load(e,function(e){t.setBuffer(e)}),this},$r.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};var Al=n("GNr/"),Cl=n.n(Al),Pl=n("IUwE"),Ll=n.n(Pl),Rl=n("V0PE"),Ol=n.n(Rl),Il=n("o7mC"),Nl=n.n(Il),kl=n("UxSj"),Dl=n.n(kl),Ul=n("ttRH"),Fl=n.n(Ul),zl=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),Bl=n("oiRW"),jl=n("UWAp"),Gl=function(e){function t(e){Zi(this,t);var n=Ki(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.play=!1,n.music=!1,n.start=n.start.bind(n),n.onPlay=n.onPlay.bind(n),n.stop=n.stop.bind(n),n.animate=n.animate.bind(n),n.text=n.text.bind(n),n.shape=n.shape.bind(n),n.plane=n.plane.bind(n),n.speaker=n.speaker.bind(n),n.light=n.light.bind(n),n.partyText=n.partyText.bind(n),n.cycleOpacity=n.cycleOpacity.bind(n),n.changeLightColor=n.changeLightColor.bind(n),n.resize=n.resize.bind(n),n}return Ji(t,e),zl(t,[{key:"componentDidMount",value:function(){this.delta=0,this.audio=Math.random()<=.5?new Audio(Bl):new Audio(jl),this.audio.volume=.5,this.scene=new Lt,this.width=window.innerWidth,this.height=9*this.width/16,this.camera=new _e(75,this.width/this.height,10,1e3),this.renderer=new At({antialias:!0,alpha:!0});var e=new Jn(16777215,12983039,.5);this.scene.add(e),this.speaker(),this.text(),this.shape(),this.plane(),this.camera.position.z=30,this.renderer.setClearColor(16777215,0),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=Wa,this.renderer.gammaInput=!0,this.renderer.gammaOutput=!0,this.renderer.receiveShadow=!0,this.spotLight=new er(15631086,4,1e3,.9,0),this.spotLight.castShadow=!0,this.spotLight.position.setZ(-20),this.spotLight.position.setY(40),this.spotLight.position.setX(-40),this.spotLight.target.position.set(0,-100,-100),this.scene.add(this.spotLight),this.scene.add(this.spotLight.target),this.scene.fog=new Pt(15923199,1,1e3),this.upDown=!1,this.light(),this.partyText(),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.width,this.height),this.mount.appendChild(this.renderer.domElement),window.addEventListener("resize",this.resize),ul.enabled=!0,window.fake||this.start()}},{key:"componentWillUnmount",value:function(){this.stop(),window.removeEventListener("mousedown",this.onDocumentMouseDown),window.removeEventListener("touchstart",this.onDocumentTouchStart),this.mount.removeChild(this.renderer.domElement),window.removeEventListener("resize",this.resize)}},{key:"start",value:function(){this.frameId||(this.frameId=requestAnimationFrame(this.animate))}},{key:"stop",value:function(){cancelAnimationFrame(this.frameId)}},{key:"resize",value:function(){this.width=window.innerWidth,this.height=9*this.width/16,this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height)}},{key:"speaker",value:function(){function e(){return t.apply(this,arguments)}var t=Yi(Fa.a.mark(function e(){var t,n,r,i,a;return Fa.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:t=new Er,this.geo=new Te,n=t.parse(Cl.a),r=t.parse(Ll.a),i=t.parse(Ol.a),a=[].concat(qi(n.materials),qi(i.materials),qi(r.materials)),this.geo.merge(n.geometry,n.geometry.matrix),this.geo.merge(i.geometry,i.geometry.matrix,n.materials.length),this.geo.merge(r.geometry,r.geometry.matrix,n.materials.length+r.materials.length),this.speak=new qe(this.geo,new ji(a)),this.speak.rotateY(-.65),this.speak.scale.set(20,20,20),this.speak.position.setZ(-200),this.speak.position.setY(-100),this.speak.position.setX(-100),this.speak.castShadow=!0,this.scene.add(this.speak);case 17:case"end":return e.stop()}},e,this)}));return e}()},{key:"animate",value:function(e){var t=this;this.renderScene(),this.delta+=.1,this.shapeOne.rotateY(.01),this.shapeOne.rotateX(.003),this.play&&this.partyMesh.visible&&(this.partyMesh.visible=!1),this.play||!this.partyMesh||this.partyMesh.visible||(this.partyMesh.visible=!0),this.partyMesh&&this.cycleOpacity(),this.music&&this.play&&(this.renderer.setClearColor(0,1),this.lightInt||(this.lightInt=setInterval(function(){return t.changeLightColor()},460))),this.music||this.play||(this.renderer.setClearColor(16777215,0),clearInterval(this.lightInt),this.lightInt=null),window.scrollY>=this.mount.offsetTop-window.innerHeight&&window.scrollY<this.mount.offsetTop+this.mount.offsetHeight?setTimeout(function(){return t.frameId=window.requestAnimationFrame(t.animate)},1e3/30):setTimeout(function(){return t.frameId=window.requestAnimationFrame(t.animate)},2e3)}},{key:"renderScene",value:function(){this.renderer.render(this.scene,this.camera)}},{key:"onPlay",value:function(){this.play?this.audio.play():this.audio.pause()}},{key:"cycleOpacity",value:function(){this.partyMesh.position.y>=-20&&(this.positionUp=!1),this.partyMesh.position.y<=-30&&(this.positionUp=!0),this.positionUp?this.partyMesh.position.y+=.5:this.partyMesh.position.y-=.5,this.partyMesh.material.opacity>=1&&(this.upDown=!0),this.partyMesh.material.opacity<=0&&(this.upDown=!1),this.partyMesh.material.opacity>0&&this.upDown&&(this.partyMesh.material.opacity-=.1),this.partyMesh.material.opacity<1&&!this.upDown&&(this.partyMesh.material.opacity+=.1)}},{key:"light",value:function(){this.spotLightColor=new er(589568,10,1e3,.9,0),this.spotLightColor.castShadow=!0,this.spotLightColor.position.setZ(0),this.spotLightColor.position.setY(200),this.spotLightColor.position.setX(0),this.spotLightColor.target.position.set(0,-100,-200),this.scene.add(this.spotLightColor)}},{key:"changeLightColor",value:function(){var e=16777215*Math.random();this.spotLightColor.color.setHex(e)}},{key:"plane",value:function(){var e=new je(1e4,1e4,100,100),t=(new Zn).load(Nl.a);t.wrapS=Xo,t.wrapT=Xo,t.repeat.set(100,100);var n=new jn({color:16777215,map:t}),r=new qe(e,n);r.rotation.x=-90*Math.PI/180,r.position.y=-100,r.receiveShadow=!0,this.scene.add(r)}},{key:"partyText",value:function(){var e=this;(new Xr).load("fonts/gentilis_regular.typeface.json",function(t){var n=new gn("Click To Party\n(light flashes)",{font:t,size:3,height:.5,bevelEnabled:!0,curveSegments:3,bevelThickness:.1,bevelSize:.2,bevelSegments:3}),r=(new Zn).load(Dl.a);r.wrapS=Xo,r.wrapT=Xo;var i=new jn({map:r});e.partyMesh=new qe(n,i),e.partyMesh.position.y=-30,e.partyMesh.position.x=-5,e.partyMesh.position.z=-25,e.scene.add(e.partyMesh)})}},{key:"text",value:function(){var e=this;(new Xr).load("fonts/gentilis_regular.typeface.json",function(t){var n=new gn("    \"I'm not a \nbusinessman.. \n      I'm a business,\n                MAN\"",{font:t,size:7,height:.5,bevelEnabled:!0,curveSegments:3,bevelThickness:.1,bevelSize:.2,bevelSegments:3}),r=(new Zn).load(Dl.a);r.wrapS=Xo,r.wrapT=Xo;var i=new jn({wireframe:!0,wireframeLinewidth:2,map:r}),a=new qe(n,i);a.position.y=28,a.position.x=4,a.position.z=-50,e.scene.add(a),new rr(15631086,20).target=a})}},{key:"shape",value:function(){this.shapeOne=new qe(new bn(50,100,100),new jn({color:8421504,map:(new Zn).load(Fl.a),normalMap:(new Zn).load(Fl.a)})),this.shapeOne.position.z=-500,this.shapeOne.position.x=500,this.shapeOne.position.y=300,this.shapeOne.castShadow=!0,this.scene.add(this.shapeOne)}},{key:"render",value:function(){var e=this;return ma.a.createElement("div",{onClick:function(){e.play=!e.play,e.music=!e.music,e.onPlay()},style:{position:"relative",zIndex:99,width:window.innerWidth,height:9*window.innerWidth/16,cursor:"pointer"},ref:function(t){return e.mount=t}})}}]),t}(ma.a.Component),Hl=Gl,Vl=n("m4df"),Wl=n.n(Vl),Xl=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),ql=function(e){function t(e){Qi(this,t);var n=$i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.planet=n.planet.bind(n),n.animate=n.animate.bind(n),n.renderScene=n.renderScene.bind(n),n.start=n.start.bind(n),n.stop=n.stop.bind(n),n.resize=n.resize.bind(n),n}return ea(t,e),Xl(t,[{key:"componentDidMount",value:function(){this.width=window.innerWidth,this.height=9*this.width/16,this.camera=new _e(50,16/9,1,1e4),this.camera.position.z=500,this.scene=new Lt,this.renderer=new At,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setClearColor(0,1),this.renderer.setSize(this.width,this.height),this.planet(),this.scene.fog=new Pt(10254071,3624.77,9e3),this.scene.add(new ir(0)),this.scene.add(new Jn(9144023,0,.79)),this.directionalLight=new rr(16777215,0),this.directionalLight.position.set(0,1,0),this.directionalLight.castShadow=!0,this.scene.add(this.directionalLight),this.spotLight1=new er(16777215,1.01),this.spotLight1.position.set(-751.94,127.55,736.43),this.spotLight1.castShadow=!0,this.spotLight1.shadowDarkness=-.17,this.scene.add(this.spotLight1),this.spotLight2=new er(16777215,0),this.spotLight2.position.set(100,1e3,100),this.spotLight2.castShadow=!0,this.spotLight2.shadowDarkness=.2,this.scene.add(this.spotLight2);for(var e=new Te,t=0;t<5e3;t++){var n=new b;n.x=1e4*Math.random()-5e3,n.y=1e4*Math.random()-5e3,n.z=1e4*Math.random()-50,e.vertices.push(n)}var r=new Hi({size:3,sizeAttenuation:!0,transparent:!0});r.color.setHex(16777215);var i=new Gi(e,r);i.sortParticles=!0,this.scene.add(i),window.addEventListener("resize",this.resize),this.mount.appendChild(this.renderer.domElement),window.fake||this.start()}},{key:"componentWillUnmount",value:function(){this.stop(),this.mount.removeChild(this.renderer.domElement),window.removeEventListener("resize",this.resize)}},{key:"start",value:function(){this.frameId||(this.frameId=requestAnimationFrame(this.animate))}},{key:"stop",value:function(){cancelAnimationFrame(this.frameId)}},{key:"resize",value:function(){this.width=window.innerWidth,this.height=9*this.width/16,this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height)}},{key:"animate",value:function(){var e=this;this.renderScene(),this.planet.rotateY(.05),this.camera.position.z=2e3*Math.tan(2e-4*Date.now()),this.camera.lookAt(this.planet.position),window.scrollY>=this.mount.offsetTop-window.innerHeight&&window.scrollY<this.mount.offsetTop+this.mount.offsetHeight?this.frameId=window.requestAnimationFrame(this.animate):setTimeout(function(){return e.frameId=window.requestAnimationFrame(e.animate)},2e3)}},{key:"renderScene",value:function(){this.renderer.render(this.scene,this.camera)}},{key:"planet",value:function(){var e=new bn(50,100,100),t=(new Zn).load(Wl.a),n=new jn({shading:Za,map:t});this.planet=new qe(e,n),this.planet.position.y=99.22,this.scene.add(this.planet)}},{key:"render",value:function(){var e=this;return ma.a.createElement("div",{style:{position:"relative",zIndex:99,width:window.innerWidth,height:9*window.innerWidth/16},ref:function(t){return e.mount=t}})}}]),t}(ma.a.Component),Yl=ql,Zl=(n("2skk"),n("sd8b")),Kl=n.n(Zl),Jl=n("mgLR"),Ql=n.n(Jl),$l=n("t/ON"),ec=n.n($l),tc=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),nc=function(e){function t(e){ta(this,t);var n=na(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={img:1},n.swapImg=n.swapImg.bind(n),n}return ra(t,e),tc(t,[{key:"swapImg",value:function(e){var t=e.target.src;e.target.src=this.piece.src,this.piece.src=t}},{key:"render",value:function(){var e=this;return ma.a.createElement("div",{className:"piece"},ma.a.createElement("div",{className:"piece-container"},ma.a.createElement("img",{className:"close-icon",alt:"close",src:Kl.a,onClick:function(){return e.props.popDown("coders")}}),ma.a.createElement("div",{className:"piece-img-container"},ma.a.createElement("img",{className:"piece-img",alt:"portfolio piece example",ref:function(t){return e.piece=t},src:this.props.image1})),ma.a.createElement("div",{className:"small-piece-container"},ma.a.createElement("img",{className:"small-piece-img",alt:"porfolio piece example",src:this.props.image2,onClick:function(t){return e.swapImg(t)}}),ma.a.createElement("img",{className:"small-piece-img",alt:"porfolio piece example",src:this.props.image3,onClick:function(t){return e.swapImg(t)}})),ma.a.createElement("div",{className:"piece-icons"},this.props.githubClient?ma.a.createElement("a",{href:this.props.githubClient,rel:"noopener noreferrer",target:"_blank"},ma.a.createElement("img",{className:"piece-gh-icon-light",alt:"github frontend",src:Ea.a})):"",this.props.githubAPI?ma.a.createElement("a",{href:this.props.githubAPI,rel:"noopener noreferrer",target:"_blank"},ma.a.createElement("img",{className:"piece-gh-icon-dark",alt:"github backend",src:Ql.a})):"",ma.a.createElement("a",{href:this.props.pageLink,rel:"noopener noreferrer",target:"_blank"},ma.a.createElement("img",{className:"goto-icon",alt:"go to piece",src:ec.a})))))}}]),t}(ma.a.Component),rc=nc,ic=n("Hfh7"),ac=n.n(ic),oc=n("qbJb"),sc=n.n(oc),lc=n("VBzb"),cc=n.n(lc),uc=n("EpBy"),hc=n.n(uc),pc=n("N0DK"),dc=n.n(pc),fc=n("gzqE"),mc=n.n(fc),vc=(n("Khgl"),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),gc=function(e){function t(e){ia(this,t);var n=aa(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),r=window.fake?.8:window.matchMedia("screen and (max-width: 500px)").matches?.8:.48;return n.state={codersCode:!1,hideLeft:!0,hideRight:!1,currentText:"",size:r},n.scroll=n.scroll.bind(n),n.popUp=n.popUp.bind(n),n.popDown=n.popDown.bind(n),n.arrowVisibility=n.arrowVisibility.bind(n),n.resize=n.resize.bind(n),n.codersCodeText="The Coders Code",n.notAvail="N/A Yet",n.fillText=n.fillText.bind(n),n.stopText=n.stopText.bind(n),n}return oa(t,e),vc(t,[{key:"componentDidMount",value:function(){this.list.addEventListener("scroll",this.arrowVisibility),window.addEventListener("resize",this.resize)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this.resize)}},{key:"popUp",value:function(e){"coders"===e&&this.setState({codersCode:!0})}},{key:"popDown",value:function(e){"coders"===e&&this.setState({codersCode:!1})}},{key:"resize",value:function(){var e=this.state.size,t=window.fake?.8:window.matchMedia("screen and (max-width: 500px)").matches?.8:.48;this.setState({size:t}),e!==this.state.size&&(this.list.scrollLeft=0)}},{key:"arrowVisibility",value:function(){var e=window.innerWidth*this.state.size;0!==this.list.scrollLeft||this.state.hideLeft||this.setState({hideLeft:!0}),this.list.scrollLeft>0&&this.state.hideLeft&&this.setState({hideLeft:!1}),this.list.scrollLeft>=Math.floor(2*e)&&!this.state.hideRight&&this.setState({hideRight:!0}),this.list.scrollLeft<Math.floor(2*e)&&this.state.hideRight&&this.setState({hideRight:!1})}},{key:"scroll",value:function(e){var t=Math.round(window.innerWidth*this.state.size);e?this.list.scrollLeft+=t:this.list.scrollLeft-=t}},{key:"fillText",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";clearInterval(this.int),this.i||(this.i=0),0===this.state.currentText.length&&clearInterval(this.int),this.int=setInterval(function(){e.setState({currentText:e.state.currentText+t[e.i]}),e.i++,e.state.currentText.length===t.length&&clearInterval(e.int)},20)}},{key:"stopText",value:function(){var e=this;clearInterval(this.int),this.int=setInterval(function(){""===e.state.currentText||void 0===e.state.currentText||"undefined"===e.state.currentText?(clearInterval(e.int),e.setState({currentText:""})):(e.setState({currentText:e.state.currentText.slice(0,-1)}),e.i--)},20)}},{key:"unscroll",value:function(){clearInterval(this.interval)}},{key:"render",value:function(){var e=this;return ma.a.createElement("div",{className:"port-container"},ma.a.createElement("h1",{className:"about-title"},"dylansPortfolio"),ma.a.createElement("ul",{ref:function(t){return e.list=t},className:"portfolio-list"},ma.a.createElement("img",{className:this.state.hideLeft?"scroll-arrow-left-hide":"scroll-arrow-left",onClick:function(){return e.scroll(!1)},src:mc.a,alt:"go left"}),ma.a.createElement("li",{id:"coders-code-img"},ma.a.createElement("img",{className:"portfolio-img",onClick:function(){return e.popUp("coders")},src:ac.a,onMouseOver:function(){return e.fillText(e.codersCodeText)},onMouseLeave:function(){return e.stopText()},alt:"Coders Code"})),this.state.codersCode?ma.a.createElement(rc,{popDown:this.popDown,image1:ac.a,image2:sc.a,image3:cc.a,githubClient:"https://github.com/dys2/CodersCode",githubAPI:"https://github.com/dys2/CodersCodeAPI",pageLink:"http://www.thecoderscode.com/"}):"",ma.a.createElement("li",null,ma.a.createElement("img",{className:"portfolio-img",src:hc.a,alt:"Zoom To Youtube",onMouseOver:function(){return e.fillText(e.notAvail)},onMouseLeave:function(){return e.stopText()}})),ma.a.createElement("li",null,ma.a.createElement("img",{className:"portfolio-img",src:dc.a,alt:"Zoom To Youtube2",onMouseOver:function(){return e.fillText(e.notAvail)},onMouseLeave:function(){return e.stopText()}})),ma.a.createElement("img",{className:this.state.hideRight?"scroll-arrow-right-hide":"scroll-arrow-right",onClick:function(){return e.scroll(!0)},src:mc.a,alt:"go right"})),ma.a.createElement("div",{className:"piece-name-div"},ma.a.createElement("h2",{className:"piece-name",ref:function(t){return e.ccText=t}},this.state.currentText)))}}]),t}(ma.a.Component),yc=gc,bc=n("mtWM"),xc=n.n(bc),wc=function(){var e=sa(Fa.a.mark(function e(t){var n;return Fa.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,xc.a.get("https://send-email-portfolio.herokuapp.com/");case 3:return e.next=5,xc.a.post("https://send-email-portfolio.herokuapp.com/sendEmail",{msg:t});case 5:return n=e.sent,e.abrupt("return",n);case 9:return e.prev=9,e.t0=e.catch(0),e.abrupt("return",e.t0);case 12:case"end":return e.stop()}},e,this,[[0,9]])}));return function(t){return e.apply(this,arguments)}}(),_c=(n("hBB+"),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),Ec=function(e){function t(){la(this,t);var e=ca(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state={modal:!1},e.onSubmit=e.onSubmit.bind(e),e.popUp=e.popUp.bind(e),e}return ua(t,e),_c(t,[{key:"onSubmit",value:function(e){e.preventDefault();var t={to:"dys2@pitt.edu",from:e.target.elements.email.value,subject:e.target.elements.subject.value,text:e.target.elements.message.value+" \n\n message from "+e.target.elements.name.value,html:"<strong>"+e.target.elements.message.value+" \n\n message from "+e.target.elements.name.value+"</strong>"};wc(t),e.target.elements.email.value=e.target.elements.subject.value=e.target.elements.message.value=e.target.elements.name.value="",this.popUp()}},{key:"popUp",value:function(){var e=this;this.setState({modal:!0}),setTimeout(function(){return e.setState({modal:!1})},2e3)}},{key:"render",value:function(){var e=this;return ma.a.createElement("div",{className:"about-container"},ma.a.createElement("h1",{className:"about-title"},"contactForm"),ma.a.createElement("form",{className:"contact-form",onSubmit:function(t){return e.onSubmit(t)}},ma.a.createElement("ul",{name:"list",className:"contact-list"},ma.a.createElement("li",null,ma.a.createElement("p",null,"Your Name"),ma.a.createElement("input",{type:"text",name:"name",required:!0,className:"contact-text-input"})),ma.a.createElement("li",null,ma.a.createElement("p",null,"Your Email"),ma.a.createElement("input",{type:"email",name:"email",required:!0,className:"contact-text-input"})),ma.a.createElement("li",null,ma.a.createElement("p",null,"Subject"),ma.a.createElement("input",{type:"text",name:"subject",className:"contact-text-input"})),ma.a.createElement("li",null,ma.a.createElement("p",null,"Your Message"),ma.a.createElement("textarea",{type:"text",name:"message",required:!0,rows:"10",className:"contact-textarea"}))),ma.a.createElement("button",{type:"submit",className:"submit-btn"},"Submit")),ma.a.createElement("div",{className:this.state.modal?"show-modal":"hide-modal"},ma.a.createElement("p",{className:"modal-text"},"Message has been sent")))}}]),t}(ma.a.Component),Mc=Ec,Tc=(n("Ue/Q"),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),Sc=function(e){function t(){ha(this,t);var e=pa(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state={show:!1},e.findAbout=e.findAbout.bind(e),e.findPortfolio=e.findPortfolio.bind(e),e.findContact=e.findContact.bind(e),e.addComponent=e.addComponent.bind(e),e}return da(t,e),Tc(t,[{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.addComponent)}},{key:"componentWillUnMount",value:function(){window.removeEventListener("scroll",this.addComponent)}},{key:"addComponent",value:function(){window.scrollY>=700?this.setState({show:!0}):this.setState({show:!1})}},{key:"findAbout",value:function(){return Object(va.findDOMNode)(this.refs.About).getClientRects()}},{key:"findPortfolio",value:function(){return Object(va.findDOMNode)(this.refs.Portfolio).getClientRects()}},{key:"findContact",value:function(){return Object(va.findDOMNode)(this.refs.Contact).getClientRects()}},{key:"render",value:function(){return ma.a.createElement("div",{className:"App"},ma.a.createElement("div",{className:"background"}),ma.a.createElement(ba.a,{params:{particles:{number:{value:4,density:{enable:!0,value_area:2e3}},size:{value:2,random:!0},opacity:{value:.5,random:!0},color:{value:"#000000"},line_linked:{shadow:{enable:!1,color:"#4320a0",blur:5}}},interactivity:{detect_on:"window",events:{onhover:{enable:!0,mode:"bubble"},onclick:{enable:!0,mode:"repulse"}},modes:{bubble:{distance:400,size:4,duration:2,opacity:1,speed:.3},repulse:{distance:200}}}},style:{position:"fixed",top:0,left:0,width:"100%",height:"100%"}}),ma.a.createElement(ba.a,{params:{particles:{number:{value:4,density:{enable:!0,value_area:2e3}},size:{value:2,random:!0},opacity:{value:.5,random:!0},color:{value:"#4320a0"},line_linked:{shadow:{enable:!1,color:"#4320a0",blur:5}}},interactivity:{detect_on:"window",events:{onhover:{enable:!0,mode:"bubble"},onclick:{enable:!0,mode:"repulse"}},modes:{bubble:{distance:400,size:4,duration:2,opacity:1,speed:.3},repulse:{distance:200}}}},style:{position:"fixed",top:0,left:0,width:"100%",height:"100%"}}),ma.a.createElement(Ca,null),ma.a.createElement(Ra,{findAbout:this.findAbout,findPortfolio:this.findPortfolio,findContact:this.findContact}),ma.a.createElement("div",{className:"main-content"},ma.a.createElement(Da,{ref:"About"}),ma.a.createElement(Hl,null),ma.a.createElement(yc,{ref:"Portfolio"}),ma.a.createElement(Yl,null),ma.a.createElement(Mc,{ref:"Contact"})))}}]),t}(fa.Component),Ac=Sc;n("29pa");ga.a.hydrate(ma.a.createElement(Ac,null),document.getElementById("root"))},"t/ON":function(e,t){e.exports="/media/goto.png"},t8qj:function(e,t,n){"use strict";e.exports=function(e,t,n,r,i){return e.config=t,n&&(e.code=n),e.request=r,e.response=i,e}},tIFN:function(e,t,n){"use strict";function r(e){var t=new o(e),n=a(o.prototype.request,t);return i.extend(n,o.prototype,t),i.extend(n,t),n}var i=n("cGG2"),a=n("JP+z"),o=n("XmWM"),s=n("KCLY"),l=r(s);l.Axios=o,l.create=function(e){return r(i.merge(s,e))},l.Cancel=n("dVOP"),l.CancelToken=n("cWxy"),l.isCancel=n("pBtG"),l.all=function(e){return Promise.all(e)},l.spread=n("pxG4"),e.exports=l,e.exports.default=l},thJu:function(e,t,n){"use strict";function r(){this.message="String contains an invalid character"}function i(e){for(var t,n,i=String(e),o="",s=0,l=a;i.charAt(0|s)||(l="=",s%1);o+=l.charAt(63&t>>8-s%1*8)){if((n=i.charCodeAt(s+=.75))>255)throw new r;t=t<<8|n}return o}var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";r.prototype=new Error,r.prototype.code=5,r.prototype.name="InvalidCharacterError",e.exports=i},ttRH:function(e,t){e.exports="/media/moon_1024.jpg"},txN2:function(e,t){},uO0E:function(e,t,n){"use strict";function r(e){return i(e)&&3==e.nodeType}var i=n("f2RQ");e.exports=r},vttU:function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."),t.name="Invariant Violation",t.framesToPop=1,t}function i(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||C}function a(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||C}function o(){}function s(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||C}function l(e,t,n){var r,i={},a=null,o=null;if(null!=t)for(r in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(a=""+t.key),t)O.call(t,r)&&!I.hasOwnProperty(r)&&(i[r]=t[r]);var s=arguments.length-2;if(1===s)i.children=n;else if(1<s){for(var l=Array(s),c=0;c<s;c++)l[c]=arguments[c+2];i.children=l}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===i[r]&&(i[r]=s[r]);return{$$typeof:_,type:e,key:a,ref:o,props:i,_owner:R.current}}function c(e){return"object"==typeof e&&null!==e&&e.$$typeof===_}function u(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}function h(e,t,n,r){if(k.length){var i=k.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function p(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>k.length&&k.push(e)}function d(e,t,n,i){var a=typeof e;"undefined"!==a&&"boolean"!==a||(e=null);var o=!1;if(null===e)o=!0;else switch(a){case"string":case"number":o=!0;break;case"object":switch(e.$$typeof){case _:case E:case M:case T:o=!0}}if(o)return n(i,e,""===t?"."+f(e,0):t),1;if(o=0,t=""===t?".":t+":",Array.isArray(e))for(var s=0;s<e.length;s++){a=e[s];var l=t+f(a,s);o+=d(a,l,n,i)}else if(null===e||void 0===e?l=null:(l=A&&e[A]||e["@@iterator"],l="function"==typeof l?l:null),"function"==typeof l)for(e=l.call(e),s=0;!(a=e.next()).done;)a=a.value,l=t+f(a,s++),o+=d(a,l,n,i);else"object"===a&&(n=""+e,r("31","[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return o}function f(e,t){return"object"==typeof e&&null!==e&&null!=e.key?u(e.key):t.toString(36)}function m(e,t){e.func.call(e.context,t,e.count++)}function v(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?g(e,r,n,x.thatReturnsArgument):null!=e&&(c(e)&&(t=i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n,e={$$typeof:_,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function g(e,t,n,r,i){var a="";null!=n&&(a=(""+n).replace(N,"$&/")+"/"),t=h(t,a,r,i),null==e||d(e,"",v,t),p(t)}var y=n("BEQ0"),b=n("TJez"),x=n("e6+Q"),w="function"==typeof Symbol&&Symbol.for,_=w?Symbol.for("react.element"):60103,E=w?Symbol.for("react.call"):60104,M=w?Symbol.for("react.return"):60105,T=w?Symbol.for("react.portal"):60106,S=w?Symbol.for("react.fragment"):60107,A="function"==typeof Symbol&&Symbol.iterator,C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};i.prototype.isReactComponent={},i.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&r("85"),this.updater.enqueueSetState(this,e,t,"setState")},i.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},o.prototype=i.prototype;var P=a.prototype=new o;P.constructor=a,y(P,i.prototype),P.isPureReactComponent=!0;var L=s.prototype=new o;L.constructor=s,y(L,i.prototype),L.unstable_isAsyncReactComponent=!0,L.render=function(){return this.props.children};var R={current:null},O=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0},N=/\/+/g,k=[],D={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return g(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=h(null,null,t,n),null==e||d(e,"",m,t),p(t)},count:function(e){return null==e?0:d(e,"",x.thatReturnsNull,null)},toArray:function(e){var t=[];return g(e,t,null,x.thatReturnsArgument),t},only:function(e){return c(e)||r("143"),e}},Component:i,PureComponent:a,unstable_AsyncComponent:s,Fragment:S,createElement:l,cloneElement:function(e,t,n){var r=y({},e.props),i=e.key,a=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,o=R.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(l in t)O.call(t,l)&&!I.hasOwnProperty(l)&&(r[l]=void 0===t[l]&&void 0!==s?s[l]:t[l])}var l=arguments.length-2;if(1===l)r.children=n;else if(1<l){s=Array(l);for(var c=0;c<l;c++)s[c]=arguments[c+2];r.children=s}return{$$typeof:_,type:e.type,key:i,ref:a,props:r,_owner:o}},createFactory:function(e){var t=l.bind(null,e);return t.type=e,t},isValidElement:c,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:R,assign:y}},U=Object.freeze({default:D}),F=U&&D||U;e.exports=F.default?F.default:F},xLtR:function(e,t,n){"use strict";function r(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var i=n("cGG2"),a=n("TNV1"),o=n("pBtG"),s=n("KCLY"),l=n("dIwP"),c=n("qRfI");e.exports=function(e){return r(e),e.baseURL&&!l(e.url)&&(e.url=c(e.baseURL,e.url)),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=i.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),i.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]}),(e.adapter||s.adapter)(e).then(function(t){return r(e),t.data=a(t.data,t.headers,e.transformResponse),t},function(t){return o(t)||(r(e),t&&t.response&&(t.response.data=a(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}}});